{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ansible Risk Insight Documentation About Ansible Risk Insight Ansible Risk Insight (ARI) is a command-line tool for assessing quality and potential risks of the Ansible content of playbooks, roles, and collections. ARI understands the taxonomy of Ansible data structures and content types and do context analysis on task call tree across dependencies and variable tracking in static-analytics fashion. ARI can be extensible with customizable rules.","title":"home"},{"location":"#ansible-risk-insight-documentation","text":"","title":"Ansible Risk Insight Documentation"},{"location":"#about-ansible-risk-insight","text":"Ansible Risk Insight (ARI) is a command-line tool for assessing quality and potential risks of the Ansible content of playbooks, roles, and collections. ARI understands the taxonomy of Ansible data structures and content types and do context analysis on task call tree across dependencies and variable tracking in static-analytics fashion. ARI can be extensible with customizable rules.","title":"About Ansible Risk Insight"},{"location":"customize_rules/","text":"Rule definitions You can define each custom rule in a single Python class file. Each rule definition should have the following parts: [required] - rule_id is a unique identifier among rules - description explains what the rule checks for. - enabled determines whether the rule is used or not. [optional] - tags specifies one or more tags for including or excluding the rule. - severity represents the risk impact if the rule condition is matched. - result_type specifies the result type class instead of the default one. match and check methods Each rule definition should also have match and check methods: match takes the context information and returns True if the rule should check this target. When ARI is scanning a playbook, ARI updates the context by focusing on each runnable target such as Playbook, Role and Task. The current object of the context can be accessed by ctx.current , so if the rule is only for tasks, you can define a match method like the following. from dataclasses import dataclass from ansible_risk_insight.models import AnsibleRunContext, RunTargetType, ExecutableType as ActionType from ansible_risk_insight.rules.base import Rule @dataclass class NonBuiltinUseRule(Rule): rule_id: str = \"R110\" description: str = \"Non-builtin module is used\" enabled: bool = True def match(self, ctx: AnsibleRunContext) -> bool: return ctx.current.type == RunTargetType.Task check also takes the context, but it returns a RuleResult object. Normally, you can make this result object just by preparing the following 3 things. result represents if the target (e.g. task) met with the rule condition or not detail is the data shown in the result (console output / UI) target itself (e.g. task or role) Then you can call self.create_result() like below to create result object. In the example below, the rule condition is composed of 3 conditions - 1. the task invokes a module (not import/include), 2. the module was resolved and 3. the module is not \"ansbile.builtin\" one. A task has a FQCN of the resolved module as task.resovled_name , so the information is included in detail . def check(self, ctx: AnsibleRunContext): task = ctx.current result = ( task.action_type == ActionType.MODULE_TYPE and task.resolved_action and not task.resolved_action.startswith(\"ansible.builtin.\") ) detail = { \"fqcn\": task.resolved_name, } rule_result = self.create_result(result=result, detail=detail, task=task) return rule_result Define custom rule result type To customize the output format of the result data, you can define your own rule result class. A custom rule result class should have a method print : print is a method for formatting the output string of the rule result. It can access rule properties by self._rule , and it has detail as self.detail . Also it has the original file information of the task such as file name with self.file and line number of the task block with self.lines . To enable your own RuleResult, you can specify the class name in the result_type field in rules like below. from dataclasses import dataclass from ansible_risk_insight.rules.base import RuleResult @dataclass class NonBuiltinUseRuleResult(RuleResult): def print(self): output = f\"ruleID={self._rule.rule_id}, \\ description={self._rule.description}, \\ result={self.result}, \\ file={self.file}, \\ lines={self.lines}, \\ detail={self.detail}\\n\" return output @dataclass class NonBuiltinUseRule(Rule): rule_id: str = \"R110\" description: str = \"Non-builtin module is used\" enabled: bool = True risk_type: type = NonBuiltinUseRuleResult","title":"Rule definitions"},{"location":"customize_rules/#rule-definitions","text":"You can define each custom rule in a single Python class file. Each rule definition should have the following parts: [required] - rule_id is a unique identifier among rules - description explains what the rule checks for. - enabled determines whether the rule is used or not. [optional] - tags specifies one or more tags for including or excluding the rule. - severity represents the risk impact if the rule condition is matched. - result_type specifies the result type class instead of the default one.","title":"Rule definitions"},{"location":"customize_rules/#match-and-check-methods","text":"Each rule definition should also have match and check methods: match takes the context information and returns True if the rule should check this target. When ARI is scanning a playbook, ARI updates the context by focusing on each runnable target such as Playbook, Role and Task. The current object of the context can be accessed by ctx.current , so if the rule is only for tasks, you can define a match method like the following. from dataclasses import dataclass from ansible_risk_insight.models import AnsibleRunContext, RunTargetType, ExecutableType as ActionType from ansible_risk_insight.rules.base import Rule @dataclass class NonBuiltinUseRule(Rule): rule_id: str = \"R110\" description: str = \"Non-builtin module is used\" enabled: bool = True def match(self, ctx: AnsibleRunContext) -> bool: return ctx.current.type == RunTargetType.Task check also takes the context, but it returns a RuleResult object. Normally, you can make this result object just by preparing the following 3 things. result represents if the target (e.g. task) met with the rule condition or not detail is the data shown in the result (console output / UI) target itself (e.g. task or role) Then you can call self.create_result() like below to create result object. In the example below, the rule condition is composed of 3 conditions - 1. the task invokes a module (not import/include), 2. the module was resolved and 3. the module is not \"ansbile.builtin\" one. A task has a FQCN of the resolved module as task.resovled_name , so the information is included in detail . def check(self, ctx: AnsibleRunContext): task = ctx.current result = ( task.action_type == ActionType.MODULE_TYPE and task.resolved_action and not task.resolved_action.startswith(\"ansible.builtin.\") ) detail = { \"fqcn\": task.resolved_name, } rule_result = self.create_result(result=result, detail=detail, task=task) return rule_result","title":"match and check methods"},{"location":"customize_rules/#define-custom-rule-result-type","text":"To customize the output format of the result data, you can define your own rule result class. A custom rule result class should have a method print : print is a method for formatting the output string of the rule result. It can access rule properties by self._rule , and it has detail as self.detail . Also it has the original file information of the task such as file name with self.file and line number of the task block with self.lines . To enable your own RuleResult, you can specify the class name in the result_type field in rules like below. from dataclasses import dataclass from ansible_risk_insight.rules.base import RuleResult @dataclass class NonBuiltinUseRuleResult(RuleResult): def print(self): output = f\"ruleID={self._rule.rule_id}, \\ description={self._rule.description}, \\ result={self.result}, \\ file={self.file}, \\ lines={self.lines}, \\ detail={self.detail}\\n\" return output @dataclass class NonBuiltinUseRule(Rule): rule_id: str = \"R110\" description: str = \"Non-builtin module is used\" enabled: bool = True risk_type: type = NonBuiltinUseRuleResult","title":"Define custom rule result type"},{"location":"installing/","text":"Installing Installing from GitHub You can install ARI from GitHub source code using pip command. $ pip install git+https://github.com/ansible/ansible-risk-insight.git","title":"Installing"},{"location":"installing/#installing","text":"","title":"Installing"},{"location":"installing/#installing-from-github","text":"You can install ARI from GitHub source code using pip command. $ pip install git+https://github.com/ansible/ansible-risk-insight.git","title":"Installing from GitHub"},{"location":"rules/R101_command_exec/","text":"command exec The command exec rule checks whether a task executes parameterized command. Problematic code - name: Run command. command: bash {{ install_script }} # <-- This parameter can be overwritten. Correct code - name: Run command. command: bash /tmp/install_script.sh","title":"R101 command exec"},{"location":"rules/R101_command_exec/#command-exec","text":"The command exec rule checks whether a task executes parameterized command.","title":"command exec"},{"location":"rules/R101_command_exec/#problematic-code","text":"- name: Run command. command: bash {{ install_script }} # <-- This parameter can be overwritten.","title":"Problematic code"},{"location":"rules/R101_command_exec/#correct-code","text":"- name: Run command. command: bash /tmp/install_script.sh","title":"Correct code"},{"location":"rules/R102_command_instead_of_shell/","text":"command instead of shell The command instead of shell rule checks whether a task uses shell module instead of command module. If you want to run a command predictably and securely, it is recommended to use the command module instead of the shell. Problematic code - name: Cat /etc/foo.conf ansible.builtin.shell: cat /etc/foo.conf Correct code - name: Cat /etc/foo.conf ansible.builtin.command: cat /etc/foo.conf","title":"R102 command instead of shell"},{"location":"rules/R102_command_instead_of_shell/#command-instead-of-shell","text":"The command instead of shell rule checks whether a task uses shell module instead of command module. If you want to run a command predictably and securely, it is recommended to use the command module instead of the shell.","title":"command instead of shell"},{"location":"rules/R102_command_instead_of_shell/#problematic-code","text":"- name: Cat /etc/foo.conf ansible.builtin.shell: cat /etc/foo.conf","title":"Problematic code"},{"location":"rules/R102_command_instead_of_shell/#correct-code","text":"- name: Cat /etc/foo.conf ansible.builtin.command: cat /etc/foo.conf","title":"Correct code"},{"location":"rules/R103_download_exec/","text":"download exec The download exec rule checks whether a task executes downloaded file from parameterized source. Problematic code - name: Download sample app installation script. get_url: url: \"{{ app_installation_script_url }}\" # <-- This parameter can be overwritten. dest: /tmp/install_script.sh - name: Install sample app. command: bash /tmp/install_script.sh Correct code - name: Download sample app installation script. get_url: url: https://example.com/path/install_script.sh dest: /tmp/install_script.sh - name: Install sample app. command: bash /tmp/install_script.sh","title":"R103 download exec"},{"location":"rules/R103_download_exec/#download-exec","text":"The download exec rule checks whether a task executes downloaded file from parameterized source.","title":"download exec"},{"location":"rules/R103_download_exec/#problematic-code","text":"- name: Download sample app installation script. get_url: url: \"{{ app_installation_script_url }}\" # <-- This parameter can be overwritten. dest: /tmp/install_script.sh - name: Install sample app. command: bash /tmp/install_script.sh","title":"Problematic code"},{"location":"rules/R103_download_exec/#correct-code","text":"- name: Download sample app installation script. get_url: url: https://example.com/path/install_script.sh dest: /tmp/install_script.sh - name: Install sample app. command: bash /tmp/install_script.sh","title":"Correct code"},{"location":"rules/R104_unauthorized_download_src/","text":"unauthorized download source The unauthorized download source rule checks whether a task download a source from an authorized location. Authorized locations can be defined using the allow url list and deny url list. Problematic code # allow_url_list = [\"https://valid*\", \"https://myurl*\"] - name: Download sample app installation script. get_url: url: https://invalid.example.com/path/install_script.sh dest: /tmp/install_script.sh Correct code # allow_url_list = [\"https://valid*\", \"https://myurl*\"] - name: Download sample app installation script. get_url: url: https://valid.example.com/path/install_script.sh dest: /tmp/install_script.sh","title":"R104 unauthorized download src"},{"location":"rules/R104_unauthorized_download_src/#unauthorized-download-source","text":"The unauthorized download source rule checks whether a task download a source from an authorized location. Authorized locations can be defined using the allow url list and deny url list.","title":"unauthorized download source"},{"location":"rules/R104_unauthorized_download_src/#problematic-code","text":"# allow_url_list = [\"https://valid*\", \"https://myurl*\"] - name: Download sample app installation script. get_url: url: https://invalid.example.com/path/install_script.sh dest: /tmp/install_script.sh","title":"Problematic code"},{"location":"rules/R104_unauthorized_download_src/#correct-code","text":"# allow_url_list = [\"https://valid*\", \"https://myurl*\"] - name: Download sample app installation script. get_url: url: https://valid.example.com/path/install_script.sh dest: /tmp/install_script.sh","title":"Correct code"},{"location":"rules/R105_outbound_transfer/","text":"outbound data transfer The outbound data transfer rule identifies that an outbound data transfer from a parameterized source. Problematic code - name: POST from contents of remote file ansible.builtin.uri: url: {{ url }} method: POST src: /path/to/my/file.json remote_src: yes Correct code - name: POST from contents of remote file ansible.builtin.uri: url: https://httpbin.org/post method: POST src: /path/to/my/file.json remote_src: yes","title":"R105 outbound transfer"},{"location":"rules/R105_outbound_transfer/#outbound-data-transfer","text":"The outbound data transfer rule identifies that an outbound data transfer from a parameterized source.","title":"outbound data transfer"},{"location":"rules/R105_outbound_transfer/#problematic-code","text":"- name: POST from contents of remote file ansible.builtin.uri: url: {{ url }} method: POST src: /path/to/my/file.json remote_src: yes","title":"Problematic code"},{"location":"rules/R105_outbound_transfer/#correct-code","text":"- name: POST from contents of remote file ansible.builtin.uri: url: https://httpbin.org/post method: POST src: /path/to/my/file.json remote_src: yes","title":"Correct code"},{"location":"rules/R106_inbound_transfer/","text":"inbound data transfer The inbound data transfer rule identifies that an inbound data transfer from a parameterized source. Problematic code - name: Download file ansible.builtin.get_url: url: https://{{ example_url }}/path/file.conf # <-- This parameter can be overwritten. dest: /etc/file.conf Correct code - name: Download file ansible.builtin.get_url: url: https://example.com/path/file.conf dest: /etc/file.conf","title":"R106 inbound transfer"},{"location":"rules/R106_inbound_transfer/#inbound-data-transfer","text":"The inbound data transfer rule identifies that an inbound data transfer from a parameterized source.","title":"inbound data transfer"},{"location":"rules/R106_inbound_transfer/#problematic-code","text":"- name: Download file ansible.builtin.get_url: url: https://{{ example_url }}/path/file.conf # <-- This parameter can be overwritten. dest: /etc/file.conf","title":"Problematic code"},{"location":"rules/R106_inbound_transfer/#correct-code","text":"- name: Download file ansible.builtin.get_url: url: https://example.com/path/file.conf dest: /etc/file.conf","title":"Correct code"},{"location":"rules/R107_pkg_install_with_insecure_option/","text":"pkg install with insecure option The pkg install with insecure option rule identifies an pkg installation with insecure option. Problematic code - name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm state: present validate_certs: false Correct code - name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm state: present","title":"R107 pkg install with insecure option"},{"location":"rules/R107_pkg_install_with_insecure_option/#pkg-install-with-insecure-option","text":"The pkg install with insecure option rule identifies an pkg installation with insecure option.","title":"pkg install with insecure option"},{"location":"rules/R107_pkg_install_with_insecure_option/#problematic-code","text":"- name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm state: present validate_certs: false","title":"Problematic code"},{"location":"rules/R107_pkg_install_with_insecure_option/#correct-code","text":"- name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm state: present","title":"Correct code"},{"location":"rules/R108_privilege_escalation/","text":"privilege escalation The privilege escalation rule identifies a task execution with root privileges or with another user\u2019s permissions. Problematic code - name: Run command if /path/to/database does not exist (without 'args') ansible.builtin.command: /usr/bin/make_database.sh db_user db_name creates=/path/to/database become: true Correct code - name: Run command if /path/to/database does not exist (without 'args') ansible.builtin.command: /usr/bin/make_database.sh db_user db_name creates=/path/to/database","title":"R108 privilege escalation"},{"location":"rules/R108_privilege_escalation/#privilege-escalation","text":"The privilege escalation rule identifies a task execution with root privileges or with another user\u2019s permissions.","title":"privilege escalation"},{"location":"rules/R108_privilege_escalation/#problematic-code","text":"- name: Run command if /path/to/database does not exist (without 'args') ansible.builtin.command: /usr/bin/make_database.sh db_user db_name creates=/path/to/database become: true","title":"Problematic code"},{"location":"rules/R108_privilege_escalation/#correct-code","text":"- name: Run command if /path/to/database does not exist (without 'args') ansible.builtin.command: /usr/bin/make_database.sh db_user db_name creates=/path/to/database","title":"Correct code"},{"location":"rules/R109_key_config_change/","text":"key config change The key config change rule identifies parameterized key change. Problematic code - name: Import a key from a url ansible.builtin.rpm_key: state: present key: http://{{ key_server }}/RPM-GPG-KEY.dag.txt Correct code - name: Import a key from a url ansible.builtin.rpm_key: state: present key: http://apt.sw.be/RPM-GPG-KEY.dag.txt","title":"R109 key config change"},{"location":"rules/R109_key_config_change/#key-config-change","text":"The key config change rule identifies parameterized key change.","title":"key config change"},{"location":"rules/R109_key_config_change/#problematic-code","text":"- name: Import a key from a url ansible.builtin.rpm_key: state: present key: http://{{ key_server }}/RPM-GPG-KEY.dag.txt","title":"Problematic code"},{"location":"rules/R109_key_config_change/#correct-code","text":"- name: Import a key from a url ansible.builtin.rpm_key: state: present key: http://apt.sw.be/RPM-GPG-KEY.dag.txt","title":"Correct code"},{"location":"rules/R110_non_builtin_use/","text":"non builtin use The non builtin use rule identifies the use of a non builtin module. Problematic code Correct code","title":"R110 non builtin use"},{"location":"rules/R110_non_builtin_use/#non-builtin-use","text":"The non builtin use rule identifies the use of a non builtin module.","title":"non builtin use"},{"location":"rules/R110_non_builtin_use/#problematic-code","text":"","title":"Problematic code"},{"location":"rules/R110_non_builtin_use/#correct-code","text":"","title":"Correct code"},{"location":"rules/R111_parameterized_import_role/","text":"parameterized import role The parameterized import role rule checks whether a task imports or includes a parameterized role. Problematic code tasks: - ansible.builtin.import_role: name: {{ my_role }} Correct code tasks: - ansible.builtin.import_role: name: myrole","title":"R111 parameterized import role"},{"location":"rules/R111_parameterized_import_role/#parameterized-import-role","text":"The parameterized import role rule checks whether a task imports or includes a parameterized role.","title":"parameterized import role"},{"location":"rules/R111_parameterized_import_role/#problematic-code","text":"tasks: - ansible.builtin.import_role: name: {{ my_role }}","title":"Problematic code"},{"location":"rules/R111_parameterized_import_role/#correct-code","text":"tasks: - ansible.builtin.import_role: name: myrole","title":"Correct code"},{"location":"rules/R112_parameterized_import_taskfile/","text":"parameterized import taskfile The parameterized import taskfile rule identifies whether a task imports or includes a parameterized task file. Problematic code - name: Include task list in play ansible.builtin.import_tasks: file: {{ task_file }} Correct code - name: Include task list in play ansible.builtin.import_tasks: file: stuff.yaml","title":"R112 parameterized import taskfile"},{"location":"rules/R112_parameterized_import_taskfile/#parameterized-import-taskfile","text":"The parameterized import taskfile rule identifies whether a task imports or includes a parameterized task file.","title":"parameterized import taskfile"},{"location":"rules/R112_parameterized_import_taskfile/#problematic-code","text":"- name: Include task list in play ansible.builtin.import_tasks: file: {{ task_file }}","title":"Problematic code"},{"location":"rules/R112_parameterized_import_taskfile/#correct-code","text":"- name: Include task list in play ansible.builtin.import_tasks: file: stuff.yaml","title":"Correct code"},{"location":"rules/R113_parameterized_pkg_install/","text":"parameterized package install The parameterized package install rule identifies parameterized package installation. Problematic code - name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: {{ nginx_rpm_url }} state: present Correct code - name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm state: present","title":"R113 parameterized pkg install"},{"location":"rules/R113_parameterized_pkg_install/#parameterized-package-install","text":"The parameterized package install rule identifies parameterized package installation.","title":"parameterized package install"},{"location":"rules/R113_parameterized_pkg_install/#problematic-code","text":"- name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: {{ nginx_rpm_url }} state: present","title":"Problematic code"},{"location":"rules/R113_parameterized_pkg_install/#correct-code","text":"- name: Install the nginx rpm from a remote repo ansible.builtin.yum: name: http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm state: present","title":"Correct code"},{"location":"rules/R114_file_change/","text":"file change The file change rule identifies parameterized file change. Problematic code - name: Update sshd configuration ansible.builtin.template: src: {{ sshd_config }} # <-- This parameter can be overwritten. dest: /etc/ssh/sshd_config Correct code - name: Update sshd configuration ansible.builtin.template: src: etc/ssh/sshd_config.j2 dest: /etc/ssh/sshd_config","title":"R114 file change"},{"location":"rules/R114_file_change/#file-change","text":"The file change rule identifies parameterized file change.","title":"file change"},{"location":"rules/R114_file_change/#problematic-code","text":"- name: Update sshd configuration ansible.builtin.template: src: {{ sshd_config }} # <-- This parameter can be overwritten. dest: /etc/ssh/sshd_config","title":"Problematic code"},{"location":"rules/R114_file_change/#correct-code","text":"- name: Update sshd configuration ansible.builtin.template: src: etc/ssh/sshd_config.j2 dest: /etc/ssh/sshd_config","title":"Correct code"},{"location":"rules/R115_file_deletion/","text":"file deletion The file deletion rule identifies parameterized file deletion. If state option is absent, directories will be recursively deleted, and files or symlinks will be unlinked. Problematic code - name: Recursively remove directory ansible.builtin.file: path: {{ path_to_dir }} # <-- This parameter can be overwritten. state: absent Correct code - name: Recursively remove directory ansible.builtin.file: path: /etc/foo state: absent","title":"R115 file deletion"},{"location":"rules/R115_file_deletion/#file-deletion","text":"The file deletion rule identifies parameterized file deletion. If state option is absent, directories will be recursively deleted, and files or symlinks will be unlinked.","title":"file deletion"},{"location":"rules/R115_file_deletion/#problematic-code","text":"- name: Recursively remove directory ansible.builtin.file: path: {{ path_to_dir }} # <-- This parameter can be overwritten. state: absent","title":"Problematic code"},{"location":"rules/R115_file_deletion/#correct-code","text":"- name: Recursively remove directory ansible.builtin.file: path: /etc/foo state: absent","title":"Correct code"},{"location":"rules/R116_insecure_file_permission/","text":"insecure file permission The insecure file permission rule checks whether a task gives insecure permissions to a file. Problematic code - name: Change file permissions ansible.builtin.file: path: /work owner: root group: root mode: '1777' Correct code - name: Change file permissions ansible.builtin.file: path: /work owner: root group: root mode: '0755'","title":"R116 insecure file permission"},{"location":"rules/R116_insecure_file_permission/#insecure-file-permission","text":"The insecure file permission rule checks whether a task gives insecure permissions to a file.","title":"insecure file permission"},{"location":"rules/R116_insecure_file_permission/#problematic-code","text":"- name: Change file permissions ansible.builtin.file: path: /work owner: root group: root mode: '1777'","title":"Problematic code"},{"location":"rules/R116_insecure_file_permission/#correct-code","text":"- name: Change file permissions ansible.builtin.file: path: /work owner: root group: root mode: '0755'","title":"Correct code"},{"location":"rules/R301_non_fqcn_use/","text":"non fqcn use The non fqcn use rule checks whether a task uses a short name module. Problematic code - name: Install collection community.network ansible_galaxy_install: type: collection name: community.network Correct code - name: Install collection community.network community.general.ansible_galaxy_install: type: collection name: community.network","title":"R301 non fqcn use"},{"location":"rules/R301_non_fqcn_use/#non-fqcn-use","text":"The non fqcn use rule checks whether a task uses a short name module.","title":"non fqcn use"},{"location":"rules/R301_non_fqcn_use/#problematic-code","text":"- name: Install collection community.network ansible_galaxy_install: type: collection name: community.network","title":"Problematic code"},{"location":"rules/R301_non_fqcn_use/#correct-code","text":"- name: Install collection community.network community.general.ansible_galaxy_install: type: collection name: community.network","title":"Correct code"}]}