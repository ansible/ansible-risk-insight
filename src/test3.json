{"py/object": "struct4.Repository", "name": "", "path": "testdata3/scm_repo/playbooks", "my_collection_name": "", "playbooks": [{"py/object": "struct4.Playbook", "name": "matomo.yml", "defined_in": "testdata3/scm_repo/playbooks/matomo.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/matomo.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "docker-compose", "options": {"role": "docker-compose", "tags": "docker"}, "defined_in": "testdata3/scm_repo/playbooks/matomo.yml", "role_index": 1, "play_index": 0, "fqcn": "docker-compose", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "matomo", "options": {"role": "matomo", "tags": "matomo"}, "defined_in": "testdata3/scm_repo/playbooks/matomo.yml", "role_index": 2, "play_index": 0, "fqcn": "matomo", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "chat.yml", "defined_in": "testdata3/scm_repo/playbooks/chat.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/chat.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "mattermost", "options": {"role": "mattermost", "tags": "mattermost"}, "defined_in": "testdata3/scm_repo/playbooks/chat.yml", "role_index": 1, "play_index": 0, "fqcn": "mattermost", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "mattermail", "options": {"role": "mattermail", "tags": "mattermail"}, "defined_in": "testdata3/scm_repo/playbooks/chat.yml", "role_index": 2, "play_index": 0, "fqcn": "mattermail", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "link-shortener", "options": {"role": "link-shortener", "tags": "link-shortener"}, "defined_in": "testdata3/scm_repo/playbooks/chat.yml", "role_index": 3, "play_index": 0, "fqcn": "link-shortener", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "pr-watcher-notifier.yml", "defined_in": "testdata3/scm_repo/playbooks/pr-watcher-notifier.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "pr-watcher-notifier", "options": {"role": "pr-watcher-notifier"}, "defined_in": "testdata3/scm_repo/playbooks/pr-watcher-notifier.yml", "role_index": 0, "play_index": 0, "fqcn": "pr-watcher-notifier", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "rabbitmq.yml", "defined_in": "testdata3/scm_repo/playbooks/rabbitmq.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/rabbitmq.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "rabbitmq", "options": {"role": "rabbitmq", "tags": "rabbitmq"}, "defined_in": "testdata3/scm_repo/playbooks/rabbitmq.yml", "role_index": 1, "play_index": 0, "fqcn": "rabbitmq", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "mongodb.yml", "defined_in": "testdata3/scm_repo/playbooks/mongodb.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/mongodb.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "mongodb", "options": {"role": "mongodb", "tags": "mongodb"}, "defined_in": "testdata3/scm_repo/playbooks/mongodb.yml", "role_index": 1, "play_index": 0, "fqcn": "mongodb", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "greendayonfire.mongodb", "options": {"role": "greendayonfire.mongodb", "tags": "greendayonfire.mongodb", "vars": {"mongodb_cloud_monitoring_free_state": "off"}}, "defined_in": "testdata3/scm_repo/playbooks/mongodb.yml", "role_index": 2, "play_index": 0, "fqcn": "greendayonfire.mongodb", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "ocim-vagrant.yml", "defined_in": "testdata3/scm_repo/playbooks/ocim-vagrant.yml", "tasks": [{"py/object": "struct4.Task", "name": "apt-get update, dist-upgrade and autoremove", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/ocim-vagrant.yml", "options": {"name": "apt-get update, dist-upgrade and autoremove"}, "module_options": {"update_cache": true, "upgrade": "dist", "cache_valid_time": 43200, "autoremove": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/ocim-vagrant.yml"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_role", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/ocim-vagrant.yml", "options": {}, "module_options": {"name": "ocim", "tasks_from": "vagrant"}, "executable": "ocim", "executable_type": "Role", "fqcn": "ocim", "used_in": ["testdata3/scm_repo/playbooks/ocim-vagrant.yml"], "annotations": {"use-non-builtin-module": true}}], "roles": [], "import_playbooks": [], "source": "", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Playbook", "name": "bootstrap-dedicated.yml", "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "tasks": [{"py/object": "struct4.Task", "name": "create ubuntu user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "create ubuntu user"}, "module_options": {"name": "ubuntu", "groups": "adm,sudo", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}, {"py/object": "struct4.Task", "name": "give passwordless sudo privileges to ubuntu user", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "give passwordless sudo privileges to ubuntu user"}, "module_options": {"content": "ubuntu ALL=(ALL) NOPASSWD:ALL\n", "dest": "/etc/sudoers.d/ubuntu_user", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate SSH public key", "module": "", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "generate SSH public key", "local_action": "command ssh-keygen -y -f {{ ansible_ssh_private_key_file }}\n", "register": "common_public_ssh_key"}, "module_options": {}, "executable": "", "executable_type": "Module", "fqcn": "", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add SSH authorized key for user ubuntu", "module": "authorized_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "add SSH authorized key for user ubuntu"}, "module_options": {"user": "ubuntu", "key": "{{ common_public_ssh_key.stdout }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "ansible.posix.authorized_key", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "disable root password", "module": "user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "disable root password"}, "module_options": {"name": "root", "password": "*", "update_password": "always"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}], "roles": [], "import_playbooks": [], "source": "", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Playbook", "name": "learner-profile-dashboard.yml", "defined_in": "testdata3/scm_repo/playbooks/learner-profile-dashboard.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server", "TARSNAP_KEY": "{{ LPD_LOGROTATE_TARSNAP_KEY }}", "TARSNAP_KEY_REMOTE_LOCATION": "/root/tarsnap-logrotate.key", "TARSNAP_BACKUP_PRE_SCRIPT": "/usr/local/sbin/lpd-pre-backup.sh", "TARSNAP_BACKUP_SCRIPT_LOCATION": "{{ LPD_TARSNAP_BACKUP_SCRIPT }}", "TARSNAP_ARCHIVE_NAME": "lpd-logs", "TARSNAP_CACHE": "/var/cache/lpd-logrotate", "TARSNAP_BACKUP_FOLDERS": "{{ LPD_LOG_DOWNLOAD_LOG_DIR }} {{ LPD_LOG_DOWNLOAD_DB_DIR }}", "TARSNAP_BACKUP_SNITCH": "{{ LPD_TARSNAP_SNITCH }}", "TARSNAP_CRONTAB_STATE": "absent", "TARSNAP_BACKUP_GLOBAL_LOCK": false}, "defined_in": "testdata3/scm_repo/playbooks/learner-profile-dashboard.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "learner-profile-dashboard", "options": {"role": "learner-profile-dashboard", "tags": "learner-profile-dashboard"}, "defined_in": "testdata3/scm_repo/playbooks/learner-profile-dashboard.yml", "role_index": 1, "play_index": 0, "fqcn": "learner-profile-dashboard", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "load-balancer-v2.yml", "defined_in": "testdata3/scm_repo/playbooks/load-balancer-v2.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/load-balancer-v2.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "load-balancer-v2", "options": {"role": "load-balancer-v2", "tags": "load-balancer-v2"}, "defined_in": "testdata3/scm_repo/playbooks/load-balancer-v2.yml", "role_index": 1, "play_index": 0, "fqcn": "load-balancer-v2", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "node-exporter", "options": {"role": "node-exporter", "tags": "node-exporter"}, "defined_in": "testdata3/scm_repo/playbooks/load-balancer-v2.yml", "role_index": 2, "play_index": 0, "fqcn": "node-exporter", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "dalite.yml", "defined_in": "testdata3/scm_repo/playbooks/dalite.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server", "TARSNAP_KEY": "{{ DALITE_LOGROTATE_TARSNAP_KEY }}", "TARSNAP_KEY_REMOTE_LOCATION": "/root/tarsnap-logrotate.key", "TARSNAP_BACKUP_PRE_SCRIPT": "/usr/local/sbin/dalite-pre-backup.sh", "TARSNAP_BACKUP_SCRIPT_LOCATION": "{{ DALITE_TARSNAP_BACKUP_SCRIPT }}", "TARSNAP_ARCHIVE_NAME": "dalite-logs", "TARSNAP_CACHE": "/var/cache/tarsnap-logrotate", "TARSNAP_BACKUP_FOLDERS": "{{ DALITE_LOG_DOWNLOAD_LOG_DIR }} {{ DALITE_LOG_DOWNLOAD_DB_DIR }}", "TARSNAP_BACKUP_SNITCH": "{{ DALITE_LOG_TARSNAP_SNITCH }}", "TARSNAP_CRONTAB_STATE": "absent", "TARSNAP_BACKUP_GLOBAL_LOCK": false}, "defined_in": "testdata3/scm_repo/playbooks/dalite.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "dalite", "options": {"role": "dalite", "tags": "dalite"}, "defined_in": "testdata3/scm_repo/playbooks/dalite.yml", "role_index": 1, "play_index": 0, "fqcn": "dalite", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "backup-swift-container", "options": {"role": "backup-swift-container", "tags": "backup-swift-container"}, "defined_in": "testdata3/scm_repo/playbooks/dalite.yml", "role_index": 2, "play_index": 0, "fqcn": "backup-swift-container", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "cert-manager.yml", "defined_in": "testdata3/scm_repo/playbooks/cert-manager.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/cert-manager.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "cert-manager", "options": {"role": "cert-manager", "tags": "cert-manager"}, "defined_in": "testdata3/scm_repo/playbooks/cert-manager.yml", "role_index": 1, "play_index": 0, "fqcn": "cert-manager", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "mysql.yml", "defined_in": "testdata3/scm_repo/playbooks/mysql.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/mysql.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "mysql", "options": {"role": "mysql", "tags": "mysql"}, "defined_in": "testdata3/scm_repo/playbooks/mysql.yml", "role_index": 1, "play_index": 0, "fqcn": "mysql", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.mysql", "options": {"role": "geerlingguy.mysql", "tags": "geerlingguy.mysql"}, "defined_in": "testdata3/scm_repo/playbooks/mysql.yml", "role_index": 2, "play_index": 0, "fqcn": "geerlingguy.mysql", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "sprintcraft.yml", "defined_in": "testdata3/scm_repo/playbooks/sprintcraft.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/sprintcraft.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "docker-compose", "options": {"role": "docker-compose", "tags": "docker"}, "defined_in": "testdata3/scm_repo/playbooks/sprintcraft.yml", "role_index": 1, "play_index": 0, "fqcn": "docker-compose", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "sprintcraft", "options": {"role": "sprintcraft", "tags": "sprintcraft"}, "defined_in": "testdata3/scm_repo/playbooks/sprintcraft.yml", "role_index": 2, "play_index": 0, "fqcn": "sprintcraft", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "wordpress.yml", "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "tasks": [{"py/object": "struct4.Task", "name": "mount /var/www", "module": "mount", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "options": {"name": "mount /var/www"}, "module_options": "name=/var/www src=/dev/vdb1 fstype=ext4 state=mounted", "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/wordpress.yml"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "chown www-data /var/www", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "options": {"name": "chown www-data /var/www"}, "module_options": "path=/var/www mode=750 owner=www-data group=www-data state=directory", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/wordpress.yml"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mkdir /var/www/log", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "options": {"name": "mkdir /var/www/log"}, "module_options": "path=/var/www/log mode=750 state=directory", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/wordpress.yml"], "annotations": {}}], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.php-versions", "options": {}, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "role_index": 1, "play_index": 0, "fqcn": "geerlingguy.php-versions", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.php-mysql", "options": {}, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "role_index": 2, "play_index": 0, "fqcn": "geerlingguy.php-mysql", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "wordpress", "options": {}, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "role_index": 3, "play_index": 0, "fqcn": "wordpress", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "tarsnap", "options": {}, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "role_index": 4, "play_index": 0, "fqcn": "tarsnap", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Playbook", "name": "redis.yml", "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "redis", "options": {"role": "redis", "tags": "install-redis"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 1, "play_index": 0, "fqcn": "redis", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "davidwittman.redis", "options": {"role": "davidwittman.redis", "tags": "davidwittman.redis"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 2, "play_index": 0, "fqcn": "davidwittman.redis", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 0, "play_index": 1, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "redis", "options": {"role": "redis", "tags": "install-redis"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 1, "play_index": 1, "fqcn": "redis", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "davidwittman.redis", "options": {"role": "davidwittman.redis", "tags": "davidwittman.redis"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 2, "play_index": 1, "fqcn": "davidwittman.redis", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 0, "play_index": 2, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "redis", "options": {"role": "redis", "tags": "install-redis"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 1, "play_index": 2, "fqcn": "redis", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "davidwittman.redis", "options": {"role": "davidwittman.redis", "tags": "davidwittman.redis"}, "defined_in": "testdata3/scm_repo/playbooks/redis.yml", "role_index": 2, "play_index": 2, "fqcn": "davidwittman.redis", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "consul-acl.yml", "defined_in": "testdata3/scm_repo/playbooks/consul-acl.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "consul-acl", "options": {"role": "consul-acl", "tags": "consul-acl"}, "defined_in": "testdata3/scm_repo/playbooks/consul-acl.yml", "role_index": 0, "play_index": 0, "fqcn": "consul-acl", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "deploy-all.yml", "defined_in": "testdata3/scm_repo/playbooks/deploy-all.yml", "tasks": [], "roles": [], "import_playbooks": ["testdata3/scm_repo/playbooks/accounting.yml", "testdata3/scm_repo/playbooks/backup-pruner.yml", "testdata3/scm_repo/playbooks/chat.yml", "testdata3/scm_repo/playbooks/dalite.yml", "testdata3/scm_repo/playbooks/elasticsearch.yml", "testdata3/scm_repo/playbooks/elk.yml", "testdata3/scm_repo/playbooks/hx-annotations.yml", "testdata3/scm_repo/playbooks/learner-profile-dashboard.yml", "testdata3/scm_repo/playbooks/load-balancer-v2.yml", "testdata3/scm_repo/playbooks/mongodb.yml", "testdata3/scm_repo/playbooks/mysql.yml", "testdata3/scm_repo/playbooks/ocim.yml", "testdata3/scm_repo/playbooks/postgres.yml", "testdata3/scm_repo/playbooks/prometheus.yml", "testdata3/scm_repo/playbooks/rabbitmq.yml", "testdata3/scm_repo/playbooks/redis.yml", "testdata3/scm_repo/playbooks/memcached.yml", "testdata3/scm_repo/playbooks/custom-nginx-proxy.yml", "testdata3/scm_repo/playbooks/relay.yml", "testdata3/scm_repo/playbooks/vault.yml", "testdata3/scm_repo/playbooks/wordpress.yml", "testdata3/scm_repo/playbooks/pr-watcher-notifier.yml", "testdata3/scm_repo/playbooks/sprintcraft.yml", "testdata3/scm_repo/playbooks/matomo.yml", "testdata3/scm_repo/playbooks/mail.yml"], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "memcached.yml", "defined_in": "testdata3/scm_repo/playbooks/memcached.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/memcached.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "memcached", "options": {"role": "memcached", "tags": "memcached"}, "defined_in": "testdata3/scm_repo/playbooks/memcached.yml", "role_index": 1, "play_index": 0, "fqcn": "memcached", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.memcached", "options": {"role": "geerlingguy.memcached", "tags": "geerlingguy.memcached"}, "defined_in": "testdata3/scm_repo/playbooks/memcached.yml", "role_index": 2, "play_index": 0, "fqcn": "geerlingguy.memcached", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "hx-annotations.yml", "defined_in": "testdata3/scm_repo/playbooks/hx-annotations.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/hx-annotations.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "postgres", "options": {"role": "postgres", "tags": "postgres"}, "defined_in": "testdata3/scm_repo/playbooks/hx-annotations.yml", "role_index": 1, "play_index": 0, "fqcn": "postgres", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.postgresql", "options": {"role": "geerlingguy.postgresql", "tags": "geerlingguy.postgresql"}, "defined_in": "testdata3/scm_repo/playbooks/hx-annotations.yml", "role_index": 2, "play_index": 0, "fqcn": "geerlingguy.postgresql", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "davidwittman.redis", "options": {"role": "davidwittman.redis", "tags": "davidwittman.redis"}, "defined_in": "testdata3/scm_repo/playbooks/hx-annotations.yml", "role_index": 3, "play_index": 0, "fqcn": "davidwittman.redis", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "hx-annotations", "options": {"role": "hx-annotations", "tags": "hx-annotations"}, "defined_in": "testdata3/scm_repo/playbooks/hx-annotations.yml", "role_index": 4, "play_index": 0, "fqcn": "hx-annotations", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "nginx-proxy", "options": {"role": "nginx-proxy", "tags": "nginx"}, "defined_in": "testdata3/scm_repo/playbooks/hx-annotations.yml", "role_index": 5, "play_index": 0, "fqcn": "nginx-proxy", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "accounting.yml", "defined_in": "testdata3/scm_repo/playbooks/accounting.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/accounting.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "accounting", "options": {"role": "accounting", "tags": "accounting"}, "defined_in": "testdata3/scm_repo/playbooks/accounting.yml", "role_index": 1, "play_index": 0, "fqcn": "accounting", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "custom-nginx-proxy.yml", "defined_in": "testdata3/scm_repo/playbooks/custom-nginx-proxy.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "nginx-proxy", "options": {"role": "nginx-proxy", "tags": "nginx-proxy", "vars": {"NGINX_PROXY_CONFIG_PATH": "{{ CUSTOM_NGINX_PROXY_CONFIG_PATH }}", "NGINX_PROXY_INTERNAL_SCHEME": "{{ CUSTOM_NGINX_PROXY_INTERNAL_SCHEME }}", "NGINX_PROXY_INTERNAL_DOMAIN": "{{ CUSTOM_NGINX_PROXY_INTERNAL_DOMAIN }}", "NGINX_PROXY_INTERNAL_PORT": "{{ CUSTOM_NGINX_PROXY_INTERNAL_PORT }}", "NGINX_PROXY_PUBLIC_PORT": "{{ CUSTOM_NGINX_PROXY_PUBLIC_PORT }}", "NGINX_PROXY_SERVER_NAME": "{{ CUSTOM_NGINX_PROXY_SERVER_NAME }}", "NGINX_PROXY_SET_HEADER_HOST": "{{ CUSTOM_NGINX_PROXY_SET_HEADER_HOST }}", "NGINX_PROXY_USE_SSL": "{{ CUSTOM_NGINX_PROXY_USE_SSL }}", "NGINX_PROXY_EXTRA_CONFIG": "{{ CUSTOM_NGINX_PROXY_EXTRA_CONFIG | default('') }}"}}, "defined_in": "testdata3/scm_repo/playbooks/custom-nginx-proxy.yml", "role_index": 0, "play_index": 0, "fqcn": "nginx-proxy", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "elk.yml", "defined_in": "testdata3/scm_repo/playbooks/elk.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/elk.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "elasticsearch", "options": {"role": "elasticsearch", "tags": "elasticsearch"}, "defined_in": "testdata3/scm_repo/playbooks/elk.yml", "role_index": 1, "play_index": 0, "fqcn": "elasticsearch", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "logstash", "options": {"role": "logstash", "tags": "logstash"}, "defined_in": "testdata3/scm_repo/playbooks/elk.yml", "role_index": 2, "play_index": 0, "fqcn": "logstash", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "kibana", "options": {"role": "kibana", "tags": "kibana"}, "defined_in": "testdata3/scm_repo/playbooks/elk.yml", "role_index": 3, "play_index": 0, "fqcn": "kibana", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "curator", "options": {"role": "curator", "tags": "curator"}, "defined_in": "testdata3/scm_repo/playbooks/elk.yml", "role_index": 4, "play_index": 0, "fqcn": "curator", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "kibana-email-alert", "options": {"role": "kibana-email-alert", "tags": "kibana-email-alert"}, "defined_in": "testdata3/scm_repo/playbooks/elk.yml", "role_index": 5, "play_index": 0, "fqcn": "kibana-email-alert", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "postgres.yml", "defined_in": "testdata3/scm_repo/playbooks/postgres.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/postgres.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "postgres", "options": {"role": "postgres", "tags": "postgres"}, "defined_in": "testdata3/scm_repo/playbooks/postgres.yml", "role_index": 1, "play_index": 0, "fqcn": "postgres", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.postgresql", "options": {"role": "geerlingguy.postgresql", "tags": "geerlingguy.postgresql"}, "defined_in": "testdata3/scm_repo/playbooks/postgres.yml", "role_index": 2, "play_index": 0, "fqcn": "geerlingguy.postgresql", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "vault.yml", "defined_in": "testdata3/scm_repo/playbooks/vault.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "vault", "options": {"role": "vault", "tags": "vault"}, "defined_in": "testdata3/scm_repo/playbooks/vault.yml", "role_index": 0, "play_index": 0, "fqcn": "vault", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "tasks.yml", "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server", "vars": {"NGINX_PROXY_EXTRA_CONFIG": ""}}, "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.java", "options": {"role": "geerlingguy.java", "tags": "geerlingguy.java"}, "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "role_index": 1, "play_index": 0, "fqcn": "geerlingguy.java", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "jira", "options": {"role": "jira", "tags": "jira"}, "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "role_index": 2, "play_index": 0, "fqcn": "jira", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "nginx-proxy", "options": {"role": "nginx-proxy", "tags": "nginx", "vars": {"NGINX_PROXY_CONFIG_PATH": "/etc/nginx/sites-available/tasks", "NGINX_PROXY_INTERNAL_SCHEME": "http", "NGINX_PROXY_INTERNAL_DOMAIN": "localhost", "NGINX_PROXY_INTERNAL_PORT": 6002, "NGINX_PROXY_EXTRA_CONFIG": "client_max_body_size       100m;\nclient_body_buffer_size    128k;\n\nproxy_connect_timeout      30;\nproxy_send_timeout         600;\nproxy_read_timeout         600;\n\nproxy_buffer_size          4k;\nproxy_buffers              4 32k;\nproxy_busy_buffers_size    64k;\nproxy_temp_file_write_size 64k;\n\n# deny access to .htaccess files\nlocation ~ /\\.ht {\n  deny  all;\n}\n\n# Workaround issue where AgilePoker slows down the backlog page for everyone (MNG-179)\n# Block AgilePoker except on its own pages\nlocation /rest/pokerng/1.0/session/ {\n  # Only serve this file if the referring URL contains 'jiraplanningpoker'\n  # e.g. allow https://tasks.opencraft.com/projects/SE?selectedItem=com.spartez.jira.plugins.jiraplanningpoker:pokerng-project-side-panel-link\n  # e.g. block https://tasks.opencraft.com/secure/RapidBoard.jspa?projectKey=SE&rapidView=24&view=planning\n  valid_referers ~.*jiraplanningpoker.*;\n\n  if ($invalid_referer = '1'){\n    return 403;\n  }\n\n  proxy_pass http://localhost:6002;\n  proxy_redirect     off;\n  proxy_set_header   Host             $host;\n  proxy_set_header   X-Real-IP        $remote_addr;\n  proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n}\n"}}, "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "role_index": 3, "play_index": 0, "fqcn": "nginx-proxy", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "role_index": 0, "play_index": 1, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "mysql", "options": {"role": "mysql", "tags": "mysql", "vars": {"MYSQL_DEBIAN_SNAPSHOT_URL": "http://snapshot.debian.org/archive/debian/20210214T202741Z/pool/main/m/mysql-5.7/", "MYSQL_URLS": [{"name": "insserv", "url": "http://cz.archive.ubuntu.com/ubuntu/pool/main/i/insserv/insserv_1.14.0-5ubuntu3_amd64.deb"}, {"name": "sysv-rc", "url": "http://cz.archive.ubuntu.com/ubuntu/pool/main/s/sysvinit/sysv-rc_2.88dsf-59.3ubuntu2_all.deb"}, {"name": "initscripts", "url": "http://cz.archive.ubuntu.com/ubuntu/pool/main/s/sysvinit/initscripts_2.88dsf-59.3ubuntu2_amd64.deb"}, {"name": "libmysqlclient", "url": "{{ MYSQL_DEBIAN_SNAPSHOT_URL }}/libmysqlclient20_5.7.26-1+b1_amd64.deb"}, {"name": "MySQL Client Core", "url": "{{ MYSQL_DEBIAN_SNAPSHOT_URL }}/mysql-client-core-5.7_5.7.26-1+b1_amd64.deb"}, {"name": "MySQL Client", "url": "{{ MYSQL_DEBIAN_SNAPSHOT_URL }}/mysql-client-5.7_5.7.26-1+b1_amd64.deb"}, {"name": "MySQL Server Core", "url": "{{ MYSQL_DEBIAN_SNAPSHOT_URL }}/mysql-server-core-5.7_5.7.26-1+b1_amd64.deb"}, {"name": "MySQL Server", "url": "{{ MYSQL_DEBIAN_SNAPSHOT_URL }}/mysql-server-5.7_5.7.26-1+b1_amd64.deb"}]}}, "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "role_index": 1, "play_index": 1, "fqcn": "mysql", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "geerlingguy.mysql", "options": {"role": "geerlingguy.mysql", "tags": "geerlingguy.mysql"}, "defined_in": "testdata3/scm_repo/playbooks/tasks.yml", "role_index": 2, "play_index": 1, "fqcn": "geerlingguy.mysql", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "vault-policy.yml", "defined_in": "testdata3/scm_repo/playbooks/vault-policy.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "vault-policy", "options": {"role": "vault-policy", "tags": "vault-policy"}, "defined_in": "testdata3/scm_repo/playbooks/vault-policy.yml", "role_index": 0, "play_index": 0, "fqcn": "vault-policy", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "elasticstack.yml", "defined_in": "testdata3/scm_repo/playbooks/elasticstack.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/elasticstack.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "elastic.elasticsearch", "options": {"role": "elastic.elasticsearch", "tags": "elasticstack"}, "defined_in": "testdata3/scm_repo/playbooks/elasticstack.yml", "role_index": 1, "play_index": 0, "fqcn": "elastic.elasticsearch", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "nginx-proxy", "options": {"role": "nginx-proxy", "vars": {"NGINX_PROXY_CONFIG_PATH": "/etc/nginx/sites-available/elasticsearch", "NGINX_PROXY_AUTH_DOMAIN": "Elasticsearch", "NGINX_PROXY_INTERNAL_PORT": 9200, "NGINX_PROXY_PUBLIC_PORT": 19200, "NGINX_PROXY_USERNAME": "{{ ELASTICSEARCH_USERNAME }}", "NGINX_PROXY_PASSWORD": "{{ ELASTICSEARCH_PASSWORD }}"}}, "defined_in": "testdata3/scm_repo/playbooks/elasticstack.yml", "role_index": 2, "play_index": 0, "fqcn": "nginx-proxy", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "appserver.yml", "defined_in": "testdata3/scm_repo/playbooks/appserver.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "consul", "options": {"role": "consul", "when": "consul_servers | length > 0"}, "defined_in": "testdata3/scm_repo/playbooks/appserver.yml", "role_index": 0, "play_index": 0, "fqcn": "consul", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "node-exporter", "options": {"role": "node-exporter", "when": "NODE_EXPORTER_PASSWORD is not none"}, "defined_in": "testdata3/scm_repo/playbooks/appserver.yml", "role_index": 1, "play_index": 0, "fqcn": "node-exporter", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "filebeat", "options": {"role": "filebeat", "filebeat_elastic_apt_pin": 200, "when": "filebeat_logstash_hosts | length > 0"}, "defined_in": "testdata3/scm_repo/playbooks/appserver.yml", "role_index": 2, "play_index": 0, "fqcn": "filebeat", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "ocim.yml", "defined_in": "testdata3/scm_repo/playbooks/ocim.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/ocim.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "ocim", "options": {"role": "ocim", "tags": "ocim"}, "defined_in": "testdata3/scm_repo/playbooks/ocim.yml", "role_index": 1, "play_index": 0, "fqcn": "ocim", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "redis-exporter", "options": {"role": "redis-exporter", "tags": "redis-exporter", "REDIS_EXPORTER_CHECK_KEYS": "{{ OCIM_QUEUE_REDIS_KEY }}", "REDIS_EXPORTER_REDIS_ADDR": "{{ OCIM_REDIS_ADDRESS }}", "when": "REDIS_EXPORTER_PASSWORD is not none"}, "defined_in": "testdata3/scm_repo/playbooks/ocim.yml", "role_index": 2, "play_index": 0, "fqcn": "redis-exporter", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "elasticsearch.yml", "defined_in": "testdata3/scm_repo/playbooks/elasticsearch.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/elasticsearch.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "elasticsearch", "options": {"role": "elasticsearch", "tags": "elasticsearch"}, "defined_in": "testdata3/scm_repo/playbooks/elasticsearch.yml", "role_index": 1, "play_index": 0, "fqcn": "elasticsearch", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "forum.yml", "defined_in": "testdata3/scm_repo/playbooks/forum.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/forum.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "discourse", "options": {"role": "discourse", "tags": "discourse"}, "defined_in": "testdata3/scm_repo/playbooks/forum.yml", "role_index": 1, "play_index": 0, "fqcn": "discourse", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "nginx-proxy", "options": {"role": "nginx-proxy", "tags": "nginx", "vars": {"NGINX_PROXY_CONFIG_PATH": "/etc/nginx/sites-available/discourse", "NGINX_PROXY_INTERNAL_SCHEME": "http", "NGINX_PROXY_INTERNAL_DOMAIN": "unix", "NGINX_PROXY_INTERNAL_PORT": "/var/discourse/shared/standalone/nginx.http.sock:", "NGINX_PROXY_EXTRA_CONFIG": "client_max_body_size 100M;\n"}}, "defined_in": "testdata3/scm_repo/playbooks/forum.yml", "role_index": 2, "play_index": 0, "fqcn": "nginx-proxy", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "wordpress-docker.yml", "defined_in": "testdata3/scm_repo/playbooks/wordpress-docker.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "docker-compose", "options": {"role": "docker-compose", "tags": "docker"}, "defined_in": "testdata3/scm_repo/playbooks/wordpress-docker.yml", "role_index": 0, "play_index": 0, "fqcn": "docker-compose", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "wordpress-docker", "options": {"role": "wordpress-docker", "tags": "wordpress-docker"}, "defined_in": "testdata3/scm_repo/playbooks/wordpress-docker.yml", "role_index": 1, "play_index": 0, "fqcn": "wordpress-docker", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "consul", "options": {"role": "consul", "when": "consul_servers | length > 0"}, "defined_in": "testdata3/scm_repo/playbooks/wordpress-docker.yml", "role_index": 2, "play_index": 0, "fqcn": "consul", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "node-exporter", "options": {"role": "node-exporter", "when": "NODE_EXPORTER_PASSWORD is not none"}, "defined_in": "testdata3/scm_repo/playbooks/wordpress-docker.yml", "role_index": 3, "play_index": 0, "fqcn": "node-exporter", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "filebeat", "options": {"role": "filebeat", "filebeat_elastic_apt_pin": 200, "when": "filebeat_logstash_hosts | length > 0"}, "defined_in": "testdata3/scm_repo/playbooks/wordpress-docker.yml", "role_index": 4, "play_index": 0, "fqcn": "filebeat", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "prometheus.yml", "defined_in": "testdata3/scm_repo/playbooks/prometheus.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "", "options": {"name": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/prometheus.yml", "role_index": 0, "play_index": 0, "fqcn": "", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "", "options": {"name": "prometheus", "tags": "prometheus"}, "defined_in": "testdata3/scm_repo/playbooks/prometheus.yml", "role_index": 1, "play_index": 0, "fqcn": "", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "mail.yml", "defined_in": "testdata3/scm_repo/playbooks/mail.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/mail.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "mail", "options": {"role": "mail", "tags": "mail"}, "defined_in": "testdata3/scm_repo/playbooks/mail.yml", "role_index": 1, "play_index": 0, "fqcn": "mail", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "relay.yml", "defined_in": "testdata3/scm_repo/playbooks/relay.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/relay.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "postfix", "options": {"role": "postfix", "tags": "postfix"}, "defined_in": "testdata3/scm_repo/playbooks/relay.yml", "role_index": 1, "play_index": 0, "fqcn": "postfix", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}, {"py/object": "struct4.Playbook", "name": "backup-pruner.yml", "defined_in": "testdata3/scm_repo/playbooks/backup-pruner.yml", "tasks": [], "roles": [{"py/object": "struct4.RoleInPlay", "name": "common-server", "options": {"role": "common-server", "tags": "common-server"}, "defined_in": "testdata3/scm_repo/playbooks/backup-pruner.yml", "role_index": 0, "play_index": 0, "fqcn": "common-server", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "tarsnap", "options": {"role": "tarsnap", "tags": "tarsnap"}, "defined_in": "testdata3/scm_repo/playbooks/backup-pruner.yml", "role_index": 1, "play_index": 0, "fqcn": "tarsnap", "annotations": {}}, {"py/object": "struct4.RoleInPlay", "name": "backup-pruner", "options": {"role": "backup-pruner", "tags": "backup-pruner"}, "defined_in": "testdata3/scm_repo/playbooks/backup-pruner.yml", "role_index": 2, "play_index": 0, "fqcn": "backup-pruner", "annotations": {}}], "import_playbooks": [], "source": "", "used_in": [], "annotations": {}}], "roles": [{"py/object": "struct4.Role", "name": "pyenv", "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv", "fqcn": "pyenv", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install prerequisites", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Install prerequisites"}, "module_options": {"name": "{{ pyenv_prerequisite_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the \"{{ pyenv_home }}\" directory is present and has the right permissions", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Ensure that the \"{{ pyenv_home }}\" directory is present and has the right permissions", "when": "pyenv_create_pyenv_home"}, "module_options": {"path": "{{ pyenv_home }}", "owner": "{{ pyenv_user }}", "group": "{{ pyenv_group }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone pyenv", "module": "git", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Clone pyenv"}, "module_options": {"repo": "https://github.com/pyenv/pyenv.git", "dest": "{{ pyenv_root }}", "version": "{{ pyenv_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone pyenv-virtualenv", "module": "git", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Clone pyenv-virtualenv"}, "module_options": {"repo": "https://github.com/pyenv/pyenv-virtualenv.git", "dest": "{{ pyenv_root }}/plugins/pyenv-virtualenv", "version": "{{ pyenv_virtualenv_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create shell configuration for pyenv", "module": "blockinfile", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Create shell configuration for pyenv"}, "module_options": {"path": "{{ pyenv_root }}/.pyenvrc", "create": true, "block": "export PYENV_ROOT=\"{{ pyenv_root }}\"\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\nif command -v pyenv 1>/dev/null 2>&1; then\neval \"$(pyenv init -)\"\nfi\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add code to load pyenv configuration in ~/.bashrc", "module": "blockinfile", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Add code to load pyenv configuration in ~/.bashrc"}, "module_options": {"create": true, "path": "{{ pyenv_home }}/.bashrc", "marker": "# {mark} ANSIBLE MANAGED BLOCK load_pyenv_configuration", "block": "source \"{{ pyenv_root }}/.pyenvrc\"\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the requested python versions", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Install the requested python versions", "with_items": "{{ pyenv_python_versions }}"}, "module_options": "{{ pyenv_root }}/bin/pyenv install -s {{ item }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a virtualenv environment", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Create a virtualenv environment", "with_items": "{{ pyenv_virtualenv_environments }}"}, "module_options": ". {{ pyenv_root }}/.pyenvrc\npyenv virtualenv -f {{ item.python_version }} {{ item.virtualenv_name }}\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "accounting", "defined_in": "testdata3/scm_repo/playbooks/roles/accounting", "fqcn": "accounting", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy screen session configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Copy screen session configuration"}, "module_options": {"src": "accounting-screenrc", "dest": "{{ accounting_screenrc_path }}", "owner": "ubuntu", "group": "ubuntu"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "accounting-screen.service", "dest": "/etc/systemd/system/accounting-screen.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the systemd service to start on boot automatically", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Enable the systemd service to start on boot automatically"}, "module_options": {"name": "accounting-screen.service", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the systemd service right now", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Start the systemd service right now"}, "module_options": {"name": "accounting-screen.service", "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy nginx site configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "options": {"name": "Copy nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "accounting-nginx.j2", "dest": "/etc/nginx/sites-available/accounting"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nginx site configuration", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "options": {"name": "Enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/accounting", "dest": "/etc/nginx/sites-enabled/accounting", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy Google Crafty service account PEM contents to a file", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Copy Google Crafty service account PEM contents to a file", "become_user": "www-data"}, "module_options": {"content": "{{ GOOGLE_CRAFTY_SERVICE_ACCOUNT_PEM }}", "dest": "{{ www_data_home_dir }}/google-crafty.pem", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn PEM file format into PKCS12", "module": "command", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Turn PEM file format into PKCS12", "become_user": "www-data"}, "module_options": "openssl pkcs12 -export -in google-crafty.pem -out {{ accounting_root_dir }}/.p12 -passin pass:notasecret -passout pass:notasecret chdir='{{ www_data_home_dir }}'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unneeded PEM file", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Delete unneeded PEM file"}, "module_options": {"path": "{{ www_data_home_dir }}/google-crafty.pem", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set login shell for user www-data", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Set login shell for user www-data"}, "module_options": {"name": "www-data", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create {{ www_data_home_dir }}", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Create {{ www_data_home_dir }}"}, "module_options": {"path": "{{ www_data_home_dir }}", "owner": "www-data", "group": "www-data", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy shell configuration for user www-data", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Copy shell configuration for user www-data"}, "module_options": {"src": "bashrc", "dest": "{{ www_data_home_dir }}/.bashrc", "owner": "www-data", "group": "www-data"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory {{ www_data_home_dir }}/.ssh", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Create directory {{ www_data_home_dir }}/.ssh", "become_user": "www-data"}, "module_options": {"path": "{{ www_data_home_dir }}/.ssh", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive the wkhtmltopdf .tar.xz file", "module": "unarchive", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Unarchive the wkhtmltopdf .tar.xz file", "become_user": "www-data"}, "module_options": {"src": "{{ wkhtmltopdf_url_path }}", "dest": "{{ www_data_home_dir }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove the .tar.xz file", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Remove the .tar.xz file"}, "module_options": {"path": "{{ www_data_home_dir }}/{{ wkhtmltopdf_zipped_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the binary into the accounting repository root", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Copy the binary into the accounting repository root", "become_user": "www-data"}, "module_options": {"src": "{{ wkhtmltopdf_binary_path }}", "dest": "{{ accounting_root_dir }}/wkhtmltopdf", "mode": 365, "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove the decompressed directory", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Remove the decompressed directory"}, "module_options": {"path": "{{ www_data_home_dir }}/wkhtmltox", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the accounting repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Clone the accounting repository", "become_user": "www-data"}, "module_options": {"repo": "https://github.com/open-craft/accounting.git", "version": "master", "dest": "{{ accounting_root_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04"}, "module_options": {"repo": "ppa:deadsnakes/ppa"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install system dependencies for the accounting service", "module": "command", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install system dependencies for the accounting service"}, "module_options": "make install_system_dependencies chdir=\"{{ accounting_root_dir }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pew because pipenv requires it", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install pew because pipenv requires it", "become": true}, "module_options": {"name": "pew", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pipenv to later install python dependencies and virtual environments.", "module": "pip", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install pipenv to later install python dependencies and virtual environments.", "become": true}, "module_options": {"name": "pipenv", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install all python dependencies and the virtual environment.", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install all python dependencies and the virtual environment.", "become_user": "www-data", "environment": {"LC_ALL": "C.UTF-8", "LANG": "C.UTF-8", "PYTHONIOENCODING": "utf-8"}}, "module_options": "pipenv install --python 3.6 chdir=\"{{ accounting_root_dir }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the configuration/environment file for the accounting service", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install the configuration/environment file for the accounting service", "become_user": "www-data"}, "module_options": {"src": "env.accounting.j2", "dest": "{{ accounting_root_dir }}/.env", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "base.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "accounting.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "wkhtmltopdf.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {"when": "{{ ACCOUNTING_ENV_TOKENS.ENABLE_GOOGLE }}"}, "module_options": "google-integration.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "screen.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open HTTPS port on the firewall", "module": "ufw", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {"name": "Open HTTPS port on the firewall", "with_items": [443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "ocim", "defined_in": "testdata3/scm_repo/playbooks/roles/ocim", "fqcn": "ocim", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install system dependencies", "module": "command", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Install system dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}}, "module_options": "make install_system_dependencies", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the python requirements", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Install the python requirements", "become_user": "{{ www_user }}"}, "module_options": ". \"{{ pyenv_root }}/.pyenvrc\"\npyenv activate opencraft\npip install -r \"{{ opencraft_root_dir }}/requirements.txt\"\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy archived_cleanup script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Copy archived_cleanup script"}, "module_options": {"src": "archived_cleanup.j2", "dest": "{{ opencraft_root_dir }}/bin/archived_cleanup.sh", "owner": "{{ www_user }}", "group": "{{ www_group }}", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add calling management command delete_archived to the crontab", "module": "cron", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Add calling management command delete_archived to the crontab"}, "module_options": {"name": "run delete_archived", "special_time": "weekly", "job": "{{ opencraft_root_dir }}/bin/archived_cleanup.sh >> {{ opencraft_root_dir }}/log/delete_archived.log", "user": "{{ www_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {}, "module_options": "common.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create settings file if it does not exist yet", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create settings file if it does not exist yet", "become_user": "{{ www_user }}"}, "module_options": {"src": "{{ opencraft_root_dir }}/.env.test", "remote_src": true, "dest": "{{ opencraft_root_dir }}/.env", "force": false}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set HUEY_ALWAYS_EAGER to false", "module": "replace", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Set HUEY_ALWAYS_EAGER to false"}, "module_options": {"path": "{{ opencraft_root_dir }}/.env", "regexp": "^HUEY_ALWAYS_EAGER=true$", "replace": "HUEY_ALWAYS_EAGER=false"}, "executable": "replace", "executable_type": "Module", "fqcn": "ansible.builtin.replace", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install javascript dependencies", "module": "shell", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Install javascript dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}, "become_user": "{{ www_user }}"}, "module_options": "DEBIAN_FRONTEND=noninteractive make install_js_dependencies", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install database dependencies", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Install database dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}}, "module_options": "DEBIAN_FRONTEND=noninteractive make install_system_db_dependencies", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change directory to ~/opencraft on login", "module": "blockinfile", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Change directory to ~/opencraft on login", "become_user": "vagrant"}, "module_options": {"path": "~/.bashrc", "marker": "# {mark} ANSIBLE MANAGED BLOCK activate_virtualenv", "block": "pyenv activate opencraft\ncd ~/opencraft\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {}, "module_options": "echo \"update user set plugin='mysql_native_password' where user='root' and host='localhost'; flush privileges;\" | \\ sudo -H -u root mysql mysql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Postgres user", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create Postgres user", "become_user": "postgres", "ignore_errors": true}, "module_options": "createuser -d vagrant", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow access to postgres from localhost without password", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Allow access to postgres from localhost without password"}, "module_options": {"dest": "/etc/postgresql/9.5/main/pg_hba.conf", "content": "local   all             postgres                                peer\nlocal   all             all                                     trust\nhost    all             all             127.0.0.1/32            trust\nhost    all             all             ::1/128                 trust\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart postgres", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Restart postgres"}, "module_options": "name=postgresql state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create postgres database", "module": "command", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create postgres database", "become_user": "vagrant"}, "module_options": "make create_db chdir={{ opencraft_root_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Print SWIFT deprecation warning", "module": "fail", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "Print SWIFT deprecation warning", "ignore_errors": true}, "module_options": {"msg": "SWIFT Backup module is deprecated and will be removed in a future version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "upload tarsnap key", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "upload tarsnap key"}, "module_options": {"src": "tarsnap.key.j2", "dest": "{{ OPENCRAFT_BACKUP_SWIFT_TARSNAP_KEY_LOCATION }}", "owner": "{{ www_user }}", "group": "root"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup folders", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "create backup folders", "with_items": ["{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "{{ OPENCRAFT_BACKUP_SWIFT_TARSNAP_CACHE_LOCATION }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ www_user }}", "group": "root", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mount volume", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "mount volume", "when": "OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE"}, "module_options": {"fstype": "ext4", "state": "mounted", "name": "{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "src": "{{ OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE }}"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "chmod volume", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "chmod volume", "when": "OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE"}, "module_options": {"path": "{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "owner": "{{ www_user }}", "group": "root", "recurse": "yes", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set login shell for user {{ www_user }}", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Set login shell for user {{ www_user }}"}, "module_options": {"name": "{{ www_user }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create {{ www_data_home_dir }}", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Create {{ www_data_home_dir }}"}, "module_options": {"path": "{{ www_data_home_dir }}", "owner": "{{ www_user }}", "group": "{{ www_group }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy shell configuration for user {{ www_user }}", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy shell configuration for user {{ www_user }}"}, "module_options": {"src": "bashrc", "dest": "{{ www_data_home_dir }}/.bashrc", "owner": "{{ www_user }}", "group": "{{ www_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the opencraft repository", "module": "git", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Clone the opencraft repository", "become_user": "{{ www_user }}"}, "module_options": {"repo": "https://github.com/open-craft/opencraft.git", "dest": "{{ opencraft_root_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the configuration/environment file", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the configuration/environment file", "become_user": "{{ www_user }}", "tags": "ocim-env-file"}, "module_options": {"src": "env.j2", "dest": "{{ opencraft_root_dir }}/.env", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {}, "module_options": "common.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the venv wrapper script", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the venv wrapper script", "become_user": "{{ www_user }}"}, "module_options": {"src": "venv_exec.j2", "dest": "{{ pyenv_root }}/shims/exec", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory {{ www_data_home_dir }}/.ssh", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Create directory {{ www_data_home_dir }}/.ssh", "become_user": "{{ www_user }}"}, "module_options": {"path": "{{ www_data_home_dir }}/.ssh", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the SSH private key used for deploying instances.", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the SSH private key used for deploying instances.", "become_user": "{{ www_user }}"}, "module_options": {"content": "{{ OPENCRAFT_OPENSTACK_SSH_KEY }}", "dest": "{{ www_data_home_dir }}/.ssh/id_rsa", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy screen session configuration", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy screen session configuration"}, "module_options": {"src": "ocim-screenrc", "dest": "{{ opencraft_screenrc_path }}", "owner": "{{ session_user }}", "group": "{{ session_user_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "ocim-screen.service", "dest": "/etc/systemd/system/ocim-screen.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"daemon-reload": true, "name": "ocim-screen.service", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"when": "OPENCRAFT_BACKUP_SWIFT_ENABLED"}, "module_options": "configure-swift-backups.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.memcached", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.memcached", "fqcn": "geerlingguy.memcached", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "hx-annotations", "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations", "fqcn": "hx-annotations", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install system packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install system packages", "become": true}, "module_options": {"update_cache": true, "cache_valid_time": 43200, "name": "{{ required_system_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ servce_group }} service group exists", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure {{ servce_group }} service group exists"}, "module_options": {"name": "{{ service_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ service_user }} service user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure {{ service_user }} service user"}, "module_options": {"name": "{{ service_user }}", "comment": "{{ service_name }} service user", "group": "{{ service_group }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create service directories", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create service directories", "become": true, "with_items": "{{ service_directories }}"}, "module_options": {"path": "{{ item }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pre-backup script", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create pre-backup script", "become": true}, "module_options": {"src": "pre_backup.sh.j2", "dest": "{{ service_bin_dir }}/pre_backup", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 484, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create service initialization script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create service initialization script", "become": true}, "module_options": {"src": "init_service.py.j2", "dest": "{{ service_bin_dir }}/init_service.py", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone {{ service_name }} repository", "module": "git", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Clone {{ service_name }} repository", "become": true, "become_user": "{{ service_user }}"}, "module_options": {"repo": "{{ service_git_repo }}", "version": "{{ service_git_revision }}", "dest": "{{ service_install_dir }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtualenv for {{ service_name }}", "module": "pip", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create virtualenv for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "requirements": "{{ service_install_dir }}/requirements.txt", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install {{ service_name }} service", "module": "pip", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install {{ service_name }} service", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "name": ".", "editable": true}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dotenv file for {{ service_name }}", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create dotenv file for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"src": "dotenv.j2", "dest": "{{ service_dotenv_path }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 416, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure .bashrc set for {{ service_name }}", "module": "blockinfile", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure .bashrc set for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"dest": "/home/{{ service_user }}/.bashrc", "block": "export {{ service_name | upper }}_DOTENV_PATH={{ service_dotenv_path }}\nsource {{ service_virtualenv_dir }}/bin/activate\ncd {{ service_install_dir }}\n", "backup": true, "state": "present"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect static assets for {{ service_name }}", "module": "django_manage", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Collect static assets for {{ service_name }}", "become": true, "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "collectstatic"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Run migrations for {{ service_name }}", "module": "django_manage", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Run migrations for {{ service_name }}", "become": true, "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "migrate"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Initialize service for {{ service_name }}", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Initialize service for {{ service_name }}", "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": ". {{ service_virtualenv_dir }}/bin/activate\ncd {{ service_install_dir }}\npython manage.py shell < {{ service_bin_dir }}/init_service.py\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create LTI consumer pair", "module": "django_manage", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create LTI consumer pair", "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}", "when": "lti_create_consumer_key_pair is defined and lti_create_consumer_key_pair"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "create_consumer_pair --consumer '{{ annotation_db_key }}' --secret '{{ annotation_db_secret }}' --expire_in_weeks 260"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Ensure cronjob exists to clear sessions", "module": "cron", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure cronjob exists to clear sessions"}, "module_options": {"name": "clear Django sessions", "user": "{{ service_user }}", "hour": "7", "minute": "0", "state": "present", "job": "{{ service_name | upper }}_DOTENV_PATH={{ service_dotenv_path }} {{ service_virtualenv_dir }}/bin/python {{ service_install_dir }}/manage.py clearsessions >> {{ service_data_dir }}/clearsessions.log 2>&1\n"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gunicorn in {{ service_name }} virtualenv", "module": "pip", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install gunicorn in {{ service_name }} virtualenv", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "name": "gunicorn==20.1.0", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create gunicorn configuration", "module": "template", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create gunicorn configuration", "become_user": "{{ service_user }}"}, "module_options": {"src": "start_gunicorn.j2", "dest": "{{ service_bin_dir }}/start_gunicorn", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure supervisor service is running", "module": "service", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure supervisor service is running"}, "module_options": {"name": "supervisor", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create supervisor config for {{ service_name }} service", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create supervisor config for {{ service_name }} service"}, "module_options": {"src": "{{ 'supervisor.conf.asgi.j2' if websockets is defined and websockets.service_daphne is defined else 'supervisor.conf.wsgi.j2' }}", "dest": "/etc/supervisor/conf.d/{{ service_name }}.conf", "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create socket direcotry", "module": "file", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create socket direcotry", "when": "websockets is defined and websockets.service_daphne is defined"}, "module_options": {"path": "{{ websockets.service_daphne.socket_dir }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart supervisor service", "module": "service", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Restart supervisor service"}, "module_options": {"name": "supervisor", "state": "restarted", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set worker_connection in /etc/nginx/nginx.conf", "module": "lineinfile", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Set worker_connection in /etc/nginx/nginx.conf", "when": "websockets.nginx is defined"}, "module_options": {"path": "/etc/nginx/nginx.conf", "regexp": "worker_connections.*", "line": "worker_connections {{ websockets.nginx.worker_connections }};", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set worker_rlimit_nofile in /etc/nginx/nginx.conf", "module": "lineinfile", "index": 23, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Set worker_rlimit_nofile in /etc/nginx/nginx.conf", "when": "websockets.nginx is defined"}, "module_options": {"path": "/etc/nginx/nginx.conf", "regexp": "worker_rlimit_nofile.*", "line": "worker_rlimit_nofile {{ websockets.nginx.worker_rlimit_nofile }};", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure soft nproc is set in /etc/security/limits.conf", "module": "lineinfile", "index": 24, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure soft nproc is set in /etc/security/limits.conf", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/security/limits.conf", "regexp": "^\\*[ \\t]+soft[ \\t]+nproc[ \\t]+{{ websockets.system_limits_conf.soft_nproc }}", "line": "* soft nproc {{ websockets.system_limits_conf.soft_nproc }}", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure soft nofile is set in /etc/security/limits.conf", "module": "lineinfile", "index": 25, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure soft nofile is set in /etc/security/limits.conf", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/security/limits.conf", "regexp": "^\\*[ \\t]+soft[ \\t]+nofile[ \\t]+{{ websockets.system_limits_conf.soft_nofile }}", "line": "* soft nofile {{ websockets.system_limits_conf.soft_nofile }}", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/pam.d/common-session is configured", "module": "lineinfile", "index": 26, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure /etc/pam.d/common-session is configured", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/pam.d/common-session", "regexp": "session[ \\t]+required[ \\t]+pam_limits.so", "line": "session required pam_limits.so", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.postgresql", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.postgresql", "fqcn": "geerlingguy.postgresql", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "link-shortener", "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener", "fqcn": "link-shortener", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create link-shortener group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create link-shortener group"}, "module_options": {"name": "link-shortener"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create link-shortener user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create link-shortener user"}, "module_options": {"name": "link-shortener", "group": "link-shortener", "home": "{{ LINK_SHORTENER_HOME }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create ~/.ssh directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create ~/.ssh directory"}, "module_options": {"path": "{{ LINK_SHORTENER_HOME }}/.ssh", "state": "directory", "owner": "link-shortener", "group": "link-shortener"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy the deploy key for accessing the link shortener repository", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "copy the deploy key for accessing the link shortener repository"}, "module_options": {"content": "{{ LINK_SHORTENER_DEPLOY_KEY }}", "dest": "{{ LINK_SHORTENER_HOME }}/.ssh/id_rsa", "owner": "link-shortener", "group": "link-shortener", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check out the link shortener git repository", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "check out the link shortener git repository", "become_user": "link-shortener"}, "module_options": {"repo": "{{ LINK_SHORTENER_REPO }}", "version": "{{ LINK_SHORTENER_BRANCH }}", "dest": "{{ LINK_SHORTENER_HOME }}/link-shortener", "ssh_opts": "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o CheckHostIP=no"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create symlink to the nginx config", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create symlink to the nginx config", "notify": ["reload nginx"]}, "module_options": {"src": "{{ LINK_SHORTENER_HOME }}/link-shortener/nginx-configuration", "dest": "/etc/nginx/sites-available/link-shortener", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create symlink to SSL certificate", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create symlink to SSL certificate"}, "module_options": {"src": "{{ LINK_SHORTENER_HOME }}/link-shortener/link-shortener-cert.pem", "dest": "/etc/ssl/certs/link-shortener-cert.pem", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy SSL private key", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "copy SSL private key"}, "module_options": {"content": "{{ LINK_SHORTENER_SSL_PRIVATE_KEY }}", "dest": "/etc/ssl/private/link-shortener-key.pem", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/link-shortener", "dest": "/etc/nginx/sites-enabled/link-shortener", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "newrelic_infra", "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra", "fqcn": "newrelic_infra", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "ensure /etc/newrelic-infra.yml is present", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure /etc/newrelic-infra.yml is present"}, "module_options": {"src": "newrelic-infra.yml.j2", "dest": "/etc/newrelic-infra.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure newrelic apt repository gpg key is added", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic apt repository gpg key is added"}, "module_options": {"url": "https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure newrelic apt repository is registered", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic apt repository is registered"}, "module_options": {"repo": "deb [arch=amd64] https://download.newrelic.com/infrastructure_agent/linux/apt xenial main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure newrelic infra plugin is installed", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic infra plugin is installed"}, "module_options": {"name": "newrelic-infra", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "kibana", "defined_in": "testdata3/scm_repo/playbooks/roles/kibana", "fqcn": "kibana", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "apt-transport-https"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/7.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Kibana", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install Kibana"}, "module_options": {"name": "kibana"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Kibana directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Configure Kibana directories", "with_items": [{"path": "{{ kibana_config_dir }}", "owner": "root"}, {"path": "{{ kibana_data_dir }}", "owner": "kibana"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "kibana", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ kibana_config_dir }}/elasticsearch-ca.pem", "owner": "kibana", "group": "kibana", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Kibana", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Configure Kibana", "notify": "restart kibana"}, "module_options": {"src": "kibana.yml.j2", "dest": "/etc/kibana/kibana.yml", "group": "kibana"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Kibana is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Ensure Kibana is started and enabled at boot"}, "module_options": {"name": "kibana", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "wordpress", "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress", "fqcn": "wordpress", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Allow web ports on firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Allow web ports on firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Copy nginx global configuration", "module": "synchronize", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Copy nginx global configuration"}, "module_options": "src=\"global/\" dest=/etc/nginx/global checksum=yes delete=yes owner=no group=no", "executable": "synchronize", "executable_type": "Module", "fqcn": "ansible.posix.synchronize", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "install passlib for htpasswd generation", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "install passlib for htpasswd generation"}, "module_options": {"name": "python3-passlib"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate htpasswd file", "module": "htpasswd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "generate htpasswd file"}, "module_options": {"path": "{{ NGINX_WP_AUTH_HTPASSWD_PATH }}", "username": "{{ NGINX_WP_AUTH_USERNAME }}", "password": "{{ NGINX_WP_AUTH_PASSWORD }}"}, "executable": "htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add auth basic credentials to global configuration", "module": "command", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "add auth basic credentials to global configuration"}, "module_options": "sed -i '/try_files $uri $uri\\/ \\/index.php?$args;/a auth_basic \"Restricted\";\\nauth_basic_user_file {{ NGINX_WP_AUTH_HTPASSWD_PATH }};' /etc/nginx/global/wordpress.conf", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add site nginx configurations", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Add site nginx configurations", "with_items": [{"template": "wordpress", "hostname": "{{ LANDING_SITE_HOSTNAME }}"}, {"template": "maintenance", "hostname": "{{ MAINTENANCE_SITE_HOSTNAME }}"}, {"template": "default", "hostname": "{{ DEFAULT_SITE_HOSTNAME }}"}]}, "module_options": {"src": "../templates/{{ item.template }}-nginx.j2", "dest": "/etc/nginx/sites-available/{{ item.hostname }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nginx site configurations", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Enable nginx site configurations", "with_items": ["{{ LANDING_SITE_HOSTNAME }}", "{{ MAINTENANCE_SITE_HOSTNAME }}", "{{ DEFAULT_SITE_HOSTNAME }}"], "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/{{ item }}.conf", "dest": "/etc/nginx/sites-enabled/{{ item }}.conf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Install dependencies", "with_items": ["unzip", "mysql-client", "build-essential", "python3-dev", "libmysqlclient-dev", "python3-mysqldb", "python3-pip"]}, "module_options": {"name": "{{ item }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Python MySQL module", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Install the Python MySQL module"}, "module_options": {"name": "mysqlclient"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure .ssh directory exists for www-data user", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Ensure .ssh directory exists for www-data user"}, "module_options": {"path": "/var/www/.ssh/", "state": "directory", "owner": "www-data", "group": "www-data"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create key file", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Create key file", "no_log": true}, "module_options": {"dest": "/var/www/.ssh/id_rsa", "content": "{{ WORDPRESS_THEME_DEPLOY_KEY }}", "owner": "www-data", "group": "www-data", "mode": "0600"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Evaluating the authentication agent & adding the key...", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Evaluating the authentication agent & adding the key..."}, "module_options": "eval \"$(ssh-agent)\"\nssh-add /var/www/.ssh/id_rsa\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy database dump", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Copy database dump", "when": "WORDPRESS_DATABASE_RESTORE"}, "module_options": "cp {{ WORDPRESS_DATABASE_RESTORE_BACKUP_PATH }} /tmp/db_dump.sql", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore database backup", "module": "mysql_db", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Restore database backup", "when": "WORDPRESS_DATABASE_RESTORE"}, "module_options": {"name": "{{ WORDPRESS_DATABASE_NAME }}", "login_user": "{{ WORDPRESS_DATABASE_USER }}", "login_password": "{{ WORDPRESS_DATABASE_PASSWORD }}", "login_host": "{{ WORDPRESS_DATABASE_HOST }}", "state": "import", "target": "/tmp/db_dump.sql"}, "executable": "mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"when": "WORDPRESS_DEPLOY", "notify": ["reload nginx"]}, "module_options": "deploy.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy content backup", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Copy content backup"}, "module_options": "cp {{ WORDPRESS_UPLOADS_RESTORE_BACKUP_PATH }} /tmp/uploads.zip", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract content backup", "module": "unarchive", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Extract content backup"}, "module_options": {"src": "/tmp/uploads.zip", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"when": "WORDPRESS_FULL_RESTORE", "notify": ["reload nginx"]}, "module_options": "restore.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy full backup", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "options": {"name": "Copy full backup"}, "module_options": {"src": "{{ WORDPRESS_FULL_BACKUP_PATH }}", "dest": "/tmp/uploads.zip"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract full backup", "module": "unarchive", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "options": {"name": "Extract full backup"}, "module_options": {"src": "/tmp/uploads.zip", "dest": "/var/www/", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create server directories", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Create server directories", "with_items": ["{{ LANDING_SITE_HOSTNAME }}", "{{ DEFAULT_SITE_HOSTNAME }}", "{{ MAINTENANCE_SITE_HOSTNAME }}"]}, "module_options": {"path": "/var/www/{{ item }}", "state": "directory", "owner": "www-data", "group": "www-data", "mode": 509}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and extract latest version of wordpress", "module": "unarchive", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Download and extract latest version of wordpress"}, "module_options": {"src": "https://wordpress.org/latest.zip", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Move files to correct directory", "module": "shell", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Move files to correct directory", "become_user": "www-data"}, "module_options": "cp -r /var/www/{{ LANDING_SITE_HOSTNAME }}/wordpress/. /var/www/{{ LANDING_SITE_HOSTNAME }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Create configuration file"}, "module_options": {"src": "../templates/wp-config.php.j2", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-config.php", "owner": "www-data", "group": "www-data", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and install plugins from list", "module": "unarchive", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Download and install plugins from list", "with_items": "{{ WORDPRESS_INSTALL_PLUGINS }}"}, "module_options": {"src": "{{ item }}", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/plugins", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone compiled theme", "module": "git", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Clone compiled theme", "become_user": "www-data", "when": "WORDPRESS_THEME_DEPLOY"}, "module_options": {"repo": "{{ WORDPRESS_THEME_REPO }}", "version": "{{ WORDPRESS_THEME_VERSION }}", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/themes/opencraftv2", "accept_hostkey": true, "force": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml", "options": {}, "module_options": "wordpress.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "wordpress-docker", "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker", "fqcn": "wordpress-docker", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create the WordPress deployment and the document root directories", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Create the WordPress deployment and the document root directories", "with_items": ["{{ WORDPRESS_DOCKER_COMPOSE_DIR }}", "{{ WORDPRESS_DOCUMENT_ROOT }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install the docker-compose file"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ WORDPRESS_DOCKER_COMPOSE_DIR }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose environment configuration file", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install the docker-compose environment configuration file"}, "module_options": {"src": "wordpress.env.j2", "dest": "{{ WORDPRESS_DOCKER_COMPOSE_ENV_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install FPM's upload configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install FPM's upload configuration file"}, "module_options": {"src": "uploads.ini.j2", "dest": "{{ WORDPRESS_FPM_UPLOAD_SETTINGS_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the app with docker-compose", "module": "docker_service", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Start the app with docker-compose"}, "module_options": {"project_src": "{{ WORDPRESS_DOCKER_COMPOSE_DIR }}", "pull": true, "debug": true}, "executable": "docker_service", "executable_type": "Module", "fqcn": "community.general.docker_service", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Install nginx", "module": "import_role", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install nginx"}, "module_options": {"name": "common-server-init", "tasks_from": "nginx"}, "executable": "common-server-init", "executable_type": "Role", "fqcn": "common-server-init", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add nginx site configuration", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Add nginx site configuration"}, "module_options": {"src": "nginx.conf.j2", "dest": "/etc/nginx/sites-available/{{ WORDPRESS_SITE_DOMAIN }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nginx site configuration", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Enable nginx site configuration"}, "module_options": {"src": "/etc/nginx/sites-available/{{ WORDPRESS_SITE_DOMAIN }}.conf", "dest": "/etc/nginx/sites-enabled/{{ WORDPRESS_SITE_DOMAIN }}.conf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload nginx", "module": "service", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Reload nginx"}, "module_options": {"name": "nginx", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "logstash", "defined_in": "testdata3/scm_repo/playbooks/roles/logstash", "fqcn": "logstash", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "openjdk-8-jdk"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/7.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Logstash", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Logstash"}, "module_options": {"name": "logstash"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Logstash TLS details", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Logstash TLS details", "with_items": [{"content": "{{ logstash_ca_cert }}", "dest": "{{ logstash_config_dir }}/ca.crt"}, {"content": "{{ logstash_cert }}", "dest": "{{ logstash_config_dir }}/logstash.crt"}, {"content": "{{ logstash_key }}", "dest": "{{ logstash_config_dir }}/logstash.key"}], "no_log": true, "notify": "restart logstash"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}", "mode": 288, "group": "logstash"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ logstash_config_dir }}/elasticsearch-ca.pem", "owner": "logstash", "group": "logstash", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Logstash", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Configure Logstash", "notify": "restart logstash"}, "module_options": {"src": "logstash.conf.j2", "dest": "{{ logstash_config_dir }}/conf.d/logstash.conf", "group": "logstash"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Logstash is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Ensure Logstash is started and enabled at boot"}, "module_options": {"name": "logstash", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open Logstash ports on the firewall", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Open Logstash ports on the firewall", "with_items": ["tcp", "udp"]}, "module_options": {"rule": "allow", "port": 5044, "proto": "{{ item }}"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "redis", "defined_in": "testdata3/scm_repo/playbooks/roles/redis", "fqcn": "redis", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install build dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "install build dependencies", "with_items": ["libssl-dev", "libjemalloc-dev", "build-essential"]}, "module_options": {"name": "{{item}}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open redis port on the firewall", "module": "ufw", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "open redis port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ redis_port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add redis backup script", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "add redis backup script"}, "module_options": {"src": "{{ REDIS_BACKUP_COMMAND }}", "dest": "{{ REDIS_SCRIPTS_DIR }}/{{ REDIS_BACKUP_COMMAND }}", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "filebeat", "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat", "fqcn": "filebeat", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "apt-transport-https"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic apt repository pin", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic apt repository pin"}, "module_options": {"src": "elastic.preferences.j2", "dest": "/etc/apt/preferences.d/artifacts_elastic_co_packages_6_x_apt"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/6.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Filebeat", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat"}, "module_options": {"name": "filebeat"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Filebeat TLS details", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat TLS details", "with_items": [{"content": "{{ filebeat_ca_cert }}", "dest": "{{ filebeat_config_dir }}/ca.crt"}, {"content": "{{ filebeat_cert }}", "dest": "{{ filebeat_config_dir }}/filebeat.crt"}, {"content": "{{ filebeat_key }}", "dest": "{{ filebeat_config_dir }}/filebeat.key"}], "no_log": true, "notify": "restart filebeat"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Filebeat configuration", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat configuration", "notify": "restart filebeat"}, "module_options": {"src": "filebeat.yml.j2", "dest": "{{ filebeat_config_dir }}/filebeat.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Filebeat is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Ensure Filebeat is started and enabled at boot"}, "module_options": {"name": "filebeat", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "forward-server-mail", "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail", "fqcn": "forward-server-mail", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ FORWARD_MAIL_OS_PACKAGES }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template postfix", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template postfix", "notify": ["restart postfix"]}, "module_options": {"src": "postfix.conf", "dest": "/etc/postfix/main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template aliases", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template aliases", "register": "postfix_aliases", "notify": ["restart postfix"]}, "module_options": {"src": "aliases", "dest": "/etc/aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "update aliases", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "update aliases", "when": "postfix_aliases.changed"}, "module_options": "newaliases", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template password", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template password", "register": "postfix_password", "notify": ["restart postfix"]}, "module_options": {"src": "sasl_passwd", "dest": "/etc/postfix/sasl_passwd", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "run postmap on sasl password", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "run postmap on sasl password", "when": "postfix_password.changed"}, "module_options": "postmap /etc/postfix/sasl_passwd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template canonical", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template canonical", "register": "postfix_canonical", "notify": ["restart postfix"]}, "module_options": {"src": "canonical", "dest": "/etc/postfix/canonical"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "run postmap on canonical file", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "run postmap on canonical file", "when": "postfix_canonical.changed"}, "module_options": "postmap /etc/postfix/canonical", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create server CA file", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "create server CA file", "notify": ["restart postfix"]}, "module_options": {"dest": "/etc/postfix/cacert.pem", "content": "{{ FORWARD_MAIL_SERVER_CERTIFICATE }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "mail", "defined_in": "testdata3/scm_repo/playbooks/roles/mail", "fqcn": "mail", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "mailman3 packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "mailman3 packages", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"name": ["mailman3-full"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "postfix packages", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "postfix packages", "notify": ["reload postfix"]}, "module_options": {"name": ["postfix"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 mailman.cfg", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman.cfg", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman.cfg.j2", "dest": "/etc/mailman3/mailman.cfg"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 mailman-web.py", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman-web.py", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman-web.py.j2", "dest": "/etc/mailman3/mailman-web.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 mailman-hyperkitty.cfg", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman-hyperkitty.cfg", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman-hyperkitty.cfg.j2", "dest": "/etc/mailman3/mailman-hyperkitty.cfg"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 web database migrations up to date", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 web database migrations up to date", "become_user": "www-data", "register": "mailman3_web_migrations", "changed_when": "'No migrations to apply' not in mailman3_web_migrations.stdout"}, "module_options": "/usr/share/mailman3-web/manage.py migrate", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow 443 tcp port for mailman3 web (nginx reverse proxy)", "module": "ufw", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow 443 tcp port for mailman3 web (nginx reverse proxy)"}, "module_options": {"rule": "allow", "port": "443", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow tcp port 25 for SMTP", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 25 for SMTP"}, "module_options": {"rule": "allow", "port": "25", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow tcp port 465 for SMTPS", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 465 for SMTPS"}, "module_options": {"rule": "allow", "port": "465", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow tcp port 587 for MSA", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 587 for MSA"}, "module_options": {"rule": "allow", "port": "587", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Mailman3 web nginx proxy config", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 web nginx proxy config", "notify": ["reload nginx"]}, "module_options": {"src": "mailman3-nginx-proxy.conf.j2", "dest": "/etc/nginx/sites-available/mailman3"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 nginx proxy config sites-enabled", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 nginx proxy config sites-enabled", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/mailman3", "dest": "/etc/nginx/sites-enabled/mailman3", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix transport maps", "module": "template", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix transport maps", "notify": ["postmap transport", "reload postfix"]}, "module_options": {"src": "postfix-transport.j2", "dest": "/etc/postfix/transport"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix header check maps", "module": "template", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix header check maps", "when": "OPENCRAFT_HEADER_TOKEN", "notify": ["postmap header_checks", "reload postfix"]}, "module_options": {"src": "postfix-header-checks.j2", "dest": "/etc/postfix/header_checks"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix aliases", "module": "template", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix aliases", "notify": ["newaliases"]}, "module_options": {"src": "postfix-aliases.j2", "dest": "/etc/aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix is configured", "module": "template", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix is configured", "notify": "reload postfix"}, "module_options": {"src": "postfix-main.cf.j2", "dest": "/etc/postfix/main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.java", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.java", "fqcn": "geerlingguy.java", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "certbot", "defined_in": "testdata3/scm_repo/playbooks/roles/certbot", "fqcn": "certbot", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "copy nginx default configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "copy nginx default configuration", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-default-server.j2", "dest": "/etc/nginx/sites-available/common-server"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/common-server", "dest": "/etc/nginx/sites-enabled/common-server", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "reload nginx if required", "module": "meta", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "reload nginx if required"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open HTTP port on the firewall", "module": "ufw", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "open HTTP port on the firewall"}, "module_options": {"rule": "allow", "port": 80, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove certbot apt package if installed", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Remove certbot apt package if installed", "with_items": ["python-certbot-nginx", "certbot"]}, "module_options": {"name": "{{ item }}", "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install snapd", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Install snapd"}, "module_options": {"name": "snapd"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install certbot snap", "module": "command", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Install certbot snap"}, "module_options": "snap install certbot --classic", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Certbot webroot directory", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create Certbot webroot directory"}, "module_options": {"path": "/var/www/certbot", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Certbot deploy hooks directory", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create Certbot deploy hooks directory"}, "module_options": {"path": "/etc/letsencrypt/renewal-hooks/deploy", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the Certbot deploy hook to restart nginx on renewal", "module": "copy", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Copy the Certbot deploy hook to restart nginx on renewal"}, "module_options": {"src": "restart-nginx.sh", "dest": "/etc/letsencrypt/renewal-hooks/deploy/restart-nginx.sh", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable systemd timer", "module": "systemd", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Disable systemd timer"}, "module_options": {"name": "snap.certbot.renew.timer", "state": "stopped", "enabled": false}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create cron job to periodically renew certificates", "module": "cron", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create cron job to periodically renew certificates"}, "module_options": {"name": "certbot renew", "user": "root", "job": "perl -e 'sleep int(rand(43200))' && /snap/bin/certbot -q renew", "minute": "0", "hour": "*/12", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set MAILTO variable for certbot renew cron job", "module": "cron", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Set MAILTO variable for certbot renew cron job"}, "module_options": {"name": "MAILTO", "env": true, "job": "{{ CERTBOT_RENEW_OPS_EMAIL }}", "user": "root", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate SSL certificate with certbot", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "generate SSL certificate with certbot", "args": {"creates": "/etc/letsencrypt/live/{{ CERTBOT_DOMAIN_NAME }}/fullchain.pem"}}, "module_options": "certbot certonly --webroot --webroot-path /var/www/certbot --domain {{ CERTBOT_DOMAIN_NAME }} {% for domain in CERTBOT_ADDITIONAL_DOMAINS %} --domain {{ domain }} {% endfor %} --email {{ CERTBOT_OPS_EMAIL }} --non-interactive --agree-tos", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "cert-manager", "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager", "fqcn": "cert-manager", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04", "module": "apt_repository", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04"}, "module_options": {"repo": "ppa:deadsnakes/ppa"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Python3.6", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download Python3.6"}, "module_options": {"name": "python3.6"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download pip3.6", "module": "shell", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download pip3.6"}, "module_options": {"cmd": "curl https://bootstrap.pypa.io/get-pip.py | sudo -H python3.6"}, "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pipenv to later install python dependencies and virtual environments.", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Install pipenv to later install python dependencies and virtual environments.", "become": true}, "module_options": {"name": "pipenv", "executable": "pip3.6"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download cert-manager", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download cert-manager"}, "module_options": {"repo": "https://github.com/open-craft/cert-manager", "dest": "{{ cert_manager_path }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install cert-manager requirements", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Install cert-manager requirements", "args": {"chdir": "{{ cert_manager_path }}"}}, "module_options": "pipenv install --ignore-pipfile", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over cert-manager script and service files", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Copy over cert-manager script and service files", "with_items": [{"src": "cert-manager.sh", "dest": "/usr/local/sbin/cert-manager.sh", "mode": "0755"}, {"src": "cert-manager.service", "dest": "/lib/systemd/system/cert-manager.service", "mode": "0644"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the deploy_cert.sh script template", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Copy the deploy_cert.sh script template"}, "module_options": {"src": "deploy_cert.sh", "dest": "/usr/local/sbin/deploy_cert.sh", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start the cert-manager service", "module": "systemd", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Enable and start the cert-manager service"}, "module_options": {"daemon_reload": true, "enabled": true, "state": "restarted", "name": "cert-manager"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open HTTP and HTTPS port on the firewall", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Open HTTP and HTTPS port on the firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.php", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.php", "fqcn": "geerlingguy.php", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "vault-policy", "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy", "fqcn": "vault-policy", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy Vault policies to the server", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml", "options": {"name": "Copy Vault policies to the server", "with_items": "{{ vault_policies }}"}, "module_options": {"content": "{{ item.policy }}", "dest": "{{ vault_policy_dir }}/{{ item.name }}.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/vault-policy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Write Vault policies", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml", "options": {"name": "Write Vault policies", "with_items": "{{ vault_policies }}", "changed_when": false, "environment": "{{ vault_env_policy }}"}, "module_options": "vault policy write \\\n  {{ item.name }} \\\n  {{ vault_policy_dir }}/{{ item.name }}.json\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault-policy"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "common-server", "defined_in": "testdata3/scm_repo/playbooks/roles/common-server", "fqcn": "common-server", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "catchpy", "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy", "fqcn": "catchpy", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install packages for catchpy", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "Install packages for catchpy", "become": true, "vars": {"packages": ["libapache2-mod-wsgi-py3", "postgresql", "postgresql-contrib", "libpq-dev", "python3-dev", "python3-pip", "python3-setuptools"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install psycopg2", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "Install psycopg2", "become": true}, "module_options": {"name": "psycopg2"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure database is created", "module": "postgresql_db", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure database is created", "become": true, "become_user": "postgres"}, "module_options": "name={{catchpy_dbname}}", "executable": "postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure user has access to database", "module": "postgresql_user", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure user has access to database", "become": true, "become_user": "postgres"}, "module_options": "db={{catchpy_dbname}} name={{catchpy_dbuser}} password={{catchpy_dbpassword}} priv=ALL", "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure user does not have unnecessary privilege", "module": "postgresql_user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure user does not have unnecessary privilege", "become": true, "become_user": "postgres"}, "module_options": "name={{catchpy_dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB", "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "catchpy-pre-backup.sh", "dest": "/usr/local/sbin/catchpy-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "stat", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"register": "app_path"}, "module_options": "path={{ catchpy_app_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "clone repository and checkout correct version", "module": "git", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "clone repository and checkout correct version", "become": true, "when": "app_path.stat.exists == False"}, "module_options": {"repo": "{{ catchpy_app_repository }}", "dest": "{{ catchpy_app_path }}", "version": "{{ catchpy_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "change owner", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "change owner", "become": true}, "module_options": {"path": "{{ catchpy_app_path }}", "owner": "www-data", "group": "www-data", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install python requirements", "module": "pip", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "install python requirements", "become": true}, "module_options": {"requirements": "{{ catchpy_app_path}}/requirements.txt", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "get settings from template", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "get settings from template", "become": true, "become_user": "www-data"}, "module_options": {"src": "prod.py.j2", "dest": "{{ catchpy_app_path }}/catchpy/settings/prod.py", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "setup django database", "module": "command", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "setup django database", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py migrate --noinput", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "collect django static", "module": "command", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "collect django static", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py collectstatic --noinput", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create admin superuser", "module": "command", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "create admin superuser", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py create_user --username {{ catchpy_super_user }} --password {{ catchpy_super_pass }} --is_admin", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable default site", "module": "file", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "disable default site", "become": true}, "module_options": {"state": "absent", "path": "/etc/apache2/sites-enabled/000-default.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure mod_wsgi is present", "module": "apache2_module", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "make sure mod_wsgi is present", "become": true}, "module_options": {"state": "present", "name": "wsgi"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "get apache conf from template", "module": "template", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "get apache conf from template", "become": true}, "module_options": {"src": "apache2.conf.j2", "dest": "/etc/apache2/sites-enabled/catchpy.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure apache reload its configuration", "module": "service", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure apache reload its configuration", "become": true}, "module_options": {"name": "apache2", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "backup-pruner", "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner", "fqcn": "backup-pruner", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install packages for tarsnapper", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "Install packages for tarsnapper", "vars": {"packages": ["python3-dev", "python3-pip", "python3-setuptools"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install gnu parallel", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install gnu parallel"}, "module_options": {"name": "parallel"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create dirs", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create dirs"}, "module_options": {"name": "/etc/tarsnap", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "upload keys", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "upload keys", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"src": "tarsnap.key", "dest": "/etc/tarsnap/{{ item.name }}.key", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create cache dirs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create cache dirs", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"name": "/var/cache/tarsnap/{{ item.name }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install tarsnapper", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install tarsnapper"}, "module_options": "pip install tarsnapper==0.5.0", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install pruner scripts", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install pruner scripts", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"src": "run-tarsnapper.sh", "dest": "/usr/local/sbin/tarsnap-{{ item.name }}.sh", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create log dir", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create log dir"}, "module_options": {"name": "{{ BACKUP_PRUNER_LOG_DIR }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add logrotate for individual pruner logs", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add logrotate for individual pruner logs"}, "module_options": {"src": "logrotate.conf", "dest": "/etc/logrotate.d/backup-pruner", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add parallel pruner script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add parallel pruner script"}, "module_options": {"src": "backup-pruner.sh", "dest": "{{ BACKUP_PRUNER_SCRIPT }}", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add backup pruner cron", "module": "cron", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add backup pruner cron"}, "module_options": {"name": "backup pruner", "minute": 40, "hour": "6,18", "job": "{{ BACKUP_PRUNER_SCRIPT }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "curator", "defined_in": "testdata3/scm_repo/playbooks/roles/curator", "fqcn": "curator", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb [arch=amd64] https://packages.elastic.co/curator/5/debian stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Curator", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator"}, "module_options": {"name": "elasticsearch-curator"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Curator config directory", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator config directory"}, "module_options": {"path": "{{ curator_config_dir }}", "state": "directory", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Curator system group", "module": "group", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator system group"}, "module_options": {"name": "{{ curator_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Curator system user", "module": "user", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator system user"}, "module_options": {"name": "{{ curator_user }}", "group": "{{ curator_group }}", "home": "{{ curator_config_dir }}", "system": true, "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates", "when": "elasticsearch_ca is defined"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ curator_config_dir }}/elasticsearch-ca.pem", "owner": "{{ curator_user }}", "group": "{{ curator_group }}", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Curator configuration files", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator configuration files", "with_items": ["action.yml", "config.yml"]}, "module_options": {"src": "{{ item }}.j2", "dest": "{{ curator_config_dir }}/{{ item }}", "owner": "{{ curator_user }}", "group": "{{ curator_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change Curator home owner", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Change Curator home owner"}, "module_options": {"path": "{{ curator_config_dir }}", "owner": "{{ curator_user }}", "group": "{{ curator_group }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add curator elasticsearch role and user", "module": "include_tasks", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add curator elasticsearch role and user", "vars": {"elasticsearch_create_roles": [{"name": "curator_writer", "permissions": "{\n  \"cluster\" : [\n    \"monitor\",\n  ],\n  \"indices\" : [\n    {\n      \"names\" : [\n        \"{{ curator_delete_indices_prefix }}*\"\n      ],\n      \"privileges\" : [\n        \"manage\",\n        \"delete_index\",\n        \"delete\",\n        \"write\",\n        \"read\"\n      ],\n      \"allow_restricted_indices\" : false\n    }\n  ],\n  \"applications\" : [],\n  \"run_as\" : [],\n  \"metadata\" : {\n    \"version\" : 1\n  },\n  \"transient_metadata\" : {\n    \"enabled\" : true\n  }\n}"}], "elasticsearch_create_users": [{"username": "{{ curator_elasticsearch_username }}", "password": "{{ curator_elasticsearch_password }}", "roles": ["curator_writer"]}]}}, "module_options": "roles/elasticsearch/tasks/create_user_roles.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Curator cron job", "module": "cron", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator cron job"}, "module_options": {"name": "Delete {{ curator_delete_indices_prefix }}* indices older than {{ curator_delete_indices_days }} days", "job": "curator --config {{ curator_config_dir }}/config.yml {{ curator_config_dir }}/action.yml", "special_time": "daily", "user": "{{ curator_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "load-balancer-v2", "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2", "fqcn": "load-balancer-v2", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Fetch backend map from load balancer", "module": "slurp", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Fetch backend map from load balancer", "register": "backend_map"}, "module_options": {"src": "/etc/haproxy/backend.map"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Parse backend map for matching domains", "module": "set_fact", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Parse backend map for matching domains"}, "module_options": {"backend_matched_domains": "{{ (backend_map['content'] | b64decode).split('\n') | map('regex_replace', '^(\\S+)\\s+\\S+$', '\\1') | select('search', maintenance_base_domain) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert entries into the HAProxy maintenance map", "module": "lineinfile", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Insert entries into the HAProxy maintenance map", "loop": "{{ backend_matched_domains }}", "when": "backend_matched_domains", "notify": "reload haproxy"}, "module_options": {"path": "/etc/haproxy/maint.map", "line": "{{ item }} {{ maintenance_type }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "These domains were placed into maintenance mode", "module": "debug", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "These domains were placed into maintenance mode"}, "module_options": "msg=\"{{ backend_matched_domains }}\"", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download HAProxy exporter", "module": "unarchive", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Download HAProxy exporter"}, "module_options": {"src": "{{ haproxy_exporter_download_url }}", "remote_src": true, "dest": "/opt", "creates": "{{ haproxy_exporter_binary }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy HAProxy exporter service definition", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Copy HAProxy exporter service definition"}, "module_options": {"src": "haproxy-exporter.service.j2", "dest": "/etc/systemd/system/haproxy-exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start HAProxy exporter", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Start HAProxy exporter"}, "module_options": {"daemon-reload": true, "name": "haproxy-exporter.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ haproxy_exporter_consul_service | to_nice_json }}", "dest": "/etc/consul/haproxy-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch maintenance map from the load balancer", "module": "slurp", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Fetch maintenance map from the load balancer", "register": "maint_map"}, "module_options": {"src": "/etc/haproxy/maint.map"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Parse maintenance map for matching domains", "module": "set_fact", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Parse maintenance map for matching domains"}, "module_options": {"maint_matched_domains": "{{ (maint_map['content'] | b64decode).split('\n') | map('regex_replace', '^(\\S+)\\s+\\S+$', '\\1') | select('search', maintenance_base_domain) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove entries from the HAProxy maintenance map", "module": "lineinfile", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Remove entries from the HAProxy maintenance map", "loop": "{{ maint_matched_domains }}", "when": "maint_matched_domains", "notify": "reload haproxy"}, "module_options": {"path": "/etc/haproxy/maint.map", "state": "absent", "regexp": "^{{ item }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "These domains were removed from maintenance mode", "module": "debug", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "These domains were removed from maintenance mode"}, "module_options": "msg=\"{{ maint_matched_domains }}\"", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the maint map file exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Ensure that the maint map file exists"}, "module_options": {"path": "/etc/haproxy/maint.map", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that {{ maintenance_server_static_root }} exists", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Ensure that {{ maintenance_server_static_root }} exists"}, "module_options": {"path": "{{ maintenance_server_static_root }}", "owner": "www-data", "group": "www-data", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy Nginx site configuration", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Copy Nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-maintenance.conf", "dest": "/etc/nginx/sites-available/maintenance"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable Nginx config", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Enable Nginx config", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/maintenance", "dest": "/etc/nginx/sites-enabled/maintenance", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install maintenance content", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Install maintenance content"}, "module_options": {"repo": "{{ maintenance_pages_repo }}", "dest": "{{ maintenance_server_static_root }}/default"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add HAProxy PPA", "module": "apt_repository", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Add HAProxy PPA", "when": "haproxy_ppa != \"\""}, "module_options": {"repo": "{{ haproxy_ppa }}"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install HAProxy", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Install HAProxy"}, "module_options": {"name": "haproxy={{ haproxy_version }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install other essential or handy packages", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Install other essential or handy packages", "with_items": ["inotify-tools", "python3-openssl", "socat", "ssl-cert", "jq"]}, "module_options": {"name": "{{ item }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Create directories", "with_items": ["/etc/haproxy/certs", "/etc/haproxy/certs/ocim", "/etc/haproxy/conf.d", "/etc/haproxy/backends", "/etc/letsencrypt/live"]}, "module_options": {"path": "{{ item }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Go templates for generating HAProxy configuration files", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Go templates for generating HAProxy configuration files", "with_items": [{"src": "backend.map.ctmpl", "dest": "/etc/consul-template/templates/backend.map.ctmpl", "mode": "0644"}, {"src": "haproxy.cfg.ctmpl", "dest": "/etc/consul-template/templates/haproxy.cfg.ctmpl", "mode": "0644"}], "tags": "haproxy-config"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Hashicorp Configuration Language files", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Hashicorp Configuration Language files", "with_items": [{"src": "backend.map.hcl.j2", "dest": "/etc/consul-template/config/backend.map.hcl", "mode": "0644"}, {"src": "haproxy.cfg.hcl.j2", "dest": "/etc/consul-template/config/haproxy.cfg.hcl", "mode": "0644"}], "tags": "haproxy-config"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Consul watcher scripts", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Consul watcher scripts", "with_items": [{"src": "consul-template-render.sh", "dest": "/usr/local/sbin/consul-template-render.sh", "mode": "0755"}, {"src": "consul-certificates-render.sh", "dest": "/usr/local/sbin/consul-certificates-render.sh", "mode": "0755"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over the local filesystem watcher", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over the local filesystem watcher"}, "module_options": {"src": "cert-watcher", "dest": "/usr/local/sbin/cert-watcher", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over systemd service files", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over systemd service files", "with_items": [{"src": "consul-template-render.service", "dest": "/lib/systemd/system/consul-template-render.service", "mode": "0644"}, {"src": "consul-certificates-render.service", "dest": "/lib/systemd/system/consul-certificates-render.service", "mode": "0644"}, {"src": "cert-watcher.service", "dest": "/lib/systemd/system/cert-watcher.service", "mode": "0644"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over snakeoil certificate", "module": "shell", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over snakeoil certificate", "args": {"chdir": "/etc/ssl/certs/"}}, "module_options": "cat ssl-cert-snakeoil.pem ../private/ssl-cert-snakeoil.key > /etc/haproxy/certs.pem", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over bespoke HAProxy config blocks", "module": "copy", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over bespoke HAProxy config blocks", "with_items": "{{ haproxy_custom_rules }}", "when": "haproxy_custom_rules"}, "module_options": {"content": "{{ item.rule }}", "dest": "/etc/haproxy/conf.d/{{ item.filename }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over extra certs for prod", "module": "copy", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over extra certs for prod", "with_fileglob": ["prod/*.pem"], "when": "inventory_hostname in groups['load-balancer-v2-prod']"}, "module_options": {"src": "{{ item }}", "dest": "/etc/haproxy/certs/{{ item | basename | splitext | first | b64decode }}.pem", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over extra certs for stage", "module": "copy", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over extra certs for stage", "with_fileglob": ["stage/*.pem"], "when": "inventory_hostname in groups['load-balancer-v2-stage']"}, "module_options": {"src": "{{ item }}", "dest": "/etc/haproxy/certs/{{ item | basename | splitext | first | b64decode }}.pem", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy picks up conf.d rules", "module": "lineinfile", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Ensure HAProxy picks up conf.d rules"}, "module_options": {"path": "/etc/default/haproxy", "line": "EXTRAOPTS=\"-f /etc/haproxy/conf.d\"", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start the services", "module": "systemd", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Enable and start the services", "with_items": ["cert-watcher", "consul-template-render", "consul-certificates-render"]}, "module_options": {"daemon_reload": true, "enabled": true, "state": "restarted", "name": "{{ item }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we must bootstrap the local certificate", "module": "stat", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Check if we must bootstrap the local certificate", "register": "lb_cert_p"}, "module_options": {"path": "/etc/letsencrypt/live/{{ CERTBOT_DOMAIN_NAME }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": "site-is-down"}, "module_options": "maintenance.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Find config files that will stop nginx from reloading", "module": "find", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Find config files that will stop nginx from reloading", "register": "nginx_sites_enabled"}, "module_options": {"paths": "/etc/nginx/sites-enabled", "file_type": "link"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable config files that will stop nginx from reloading", "module": "file", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Disable config files that will stop nginx from reloading", "with_items": "{{ nginx_sites_enabled.files }}"}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_role", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": "certbot"}, "module_options": {"name": "certbot"}, "executable": "certbot", "executable_type": "Role", "fqcn": "certbot", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Restore config files after bootstrapping", "module": "file", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Restore config files after bootstrapping", "with_items": "{{ nginx_sites_enabled.files }}", "notify": ["reload nginx"], "when": "lb_cert_p.stat.exists == False"}, "module_options": {"src": "/etc/nginx/sites-available/{{ item.path | basename }}", "dest": "/etc/nginx/sites-enabled/{{ item.path | basename }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"when": "haproxy_exporter_enabled"}, "module_options": "exporter.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart rsyslog", "module": "service", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Restart rsyslog", "changed_when": false}, "module_options": {"name": "rsyslog", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open HTTP and HTTPS port on the firewall", "module": "ufw", "index": 23, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Open HTTP and HTTPS port on the firewall", "with_items": [{"enabled": true, "port": 80}, {"enabled": true, "port": 443}, {"enabled": "{{ haproxy_enable_stats_page }}", "port": "{{ haproxy_stats_port }}"}], "when": "item.enabled"}, "module_options": {"rule": "allow", "port": "{{ item.port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 24, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": ["never", "site-is-down"]}, "module_options": "site-is-down.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 25, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": ["never", "site-is-up"]}, "module_options": "site-is-up.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.php-versions", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.php-versions", "fqcn": "geerlingguy.php-versions", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.php-mysql", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.php-mysql", "fqcn": "geerlingguy.php-mysql", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "rabbitmq", "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq", "fqcn": "rabbitmq", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install apt packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "install apt packages"}, "module_options": {"name": "{{ RABBITMQ_APT_PACKAGES }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open RabbitMQ firewall ports", "module": "ufw", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Open RabbitMQ firewall ports", "with_items": ["{{ RABBITMQ_TLS_PORT }}", "{{ RABBITMQ_HTTPS_PORT }}"]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add rabbitmq repositories", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq repositories", "with_items": ["{{ ERLANG_REPO }}", "{{ RABBITMQ_REPO }}"], "tags": ["install_rabbitmq"]}, "module_options": {"repo": "{{ item }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add trusted repository keys", "module": "apt_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add trusted repository keys", "with_items": ["{{ ERLANG_REPO_KEY }}", "{{ RABBITMQ_REPO_KEY }}"], "tags": ["install_rabbitmq"]}, "module_options": {"url": "{{ item }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Unlock erlang and rabbitmq", "module": "dpkg_selections", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Unlock erlang and rabbitmq", "with_items": ["esl-erlang", "rabbitmq-server"], "ignore_errors": true, "tags": ["install_rabbitmq"]}, "module_options": {"name": "{{ item }}", "selection": "install"}, "executable": "dpkg_selections", "executable_type": "Module", "fqcn": "ansible.builtin.dpkg_selections", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install rabbitmq", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "install rabbitmq", "tags": ["install_rabbitmq"]}, "module_options": {"name": ["esl-erlang={{ ERLANG_VERSION }}", "rabbitmq-server={{ RABBITMQ_VERSION }}"], "update_cache": true, "force": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Lock erlang and rabbitmq", "module": "dpkg_selections", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Lock erlang and rabbitmq", "with_items": ["esl-erlang", "rabbitmq-server"], "tags": ["install_rabbitmq"]}, "module_options": {"name": "{{ item }}", "selection": "hold"}, "executable": "dpkg_selections", "executable_type": "Module", "fqcn": "ansible.builtin.dpkg_selections", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for RabbitMQ service overrides", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Create directory for RabbitMQ service overrides", "tags": ["fd_limit"]}, "module_options": {"path": "/etc/systemd/system/rabbitmq-server.service.d/", "state": "directory", "mode": 493, "owner": "root", "group": "root"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the file descriptor limit to a high value in the systemd service", "module": "ini_file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Set the file descriptor limit to a high value in the systemd service", "with_items": ["LimitNOFILE", "LimitNPROC"], "notify": ["reload systemd", "restart rabbitmq"], "tags": ["fd_limit"]}, "module_options": {"dest": "/etc/systemd/system/rabbitmq-server.service.d/limits.conf", "section": "Service", "option": "{{ item }}", "value": 65535, "mode": 420, "owner": "root", "group": "root"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add rabbitmqadmin config", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmqadmin config"}, "module_options": {"src": "rabbitmqadmin.conf.j2", "dest": "/etc/rabbitmqadmin.conf", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add rabbitmq import/export scripts", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq import/export scripts", "with_items": ["{{ RABBITMQ_BACKUP_COMMAND }}", "{{ RABBITMQ_RESTORE_COMMAND }}"]}, "module_options": {"src": "{{ item }}.j2", "dest": "{{ RABBITMQ_SCRIPTS_DIR }}/{{ item }}", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add rabbitmq export directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq export directory"}, "module_options": {"path": "{{ RABBITMQ_EXPORT_DIR }}", "state": "directory", "owner": "root", "group": "root", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set letsencrypt directory owner", "module": "file", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "set letsencrypt directory owner"}, "module_options": {"path": "/etc/letsencrypt", "owner": "rabbitmq", "state": "directory", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write rabbitmq configuration", "module": "template", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "write rabbitmq configuration", "notify": ["restart rabbitmq"]}, "module_options": {"src": "rabbitmq.config.j2", "dest": "/etc/rabbitmq/rabbitmq.config"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable rabbitmq plugins", "module": "rabbitmq_plugin", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "enable rabbitmq plugins", "notify": ["restart rabbitmq"]}, "module_options": {"names": "rabbitmq_management,rabbitmq_tracing,rabbitmq_federation", "state": "enabled"}, "executable": "rabbitmq_plugin", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_plugin", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create default admin user", "module": "rabbitmq_user", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "create default admin user"}, "module_options": {"user": "{{ RABBITMQ_ADMIN_USERNAME }}", "tags": "administrator,{{ RABBITMQ_ADMIN_USERNAME }}", "password": "{{ RABBITMQ_ADMIN_PASSWORD }}", "vhost": "/", "configure_priv": ".*", "write_priv": ".*", "read_priv": ".*", "state": "present"}, "executable": "rabbitmq_user", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_user", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "download rabbitmqadmin executable", "module": "command", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "download rabbitmqadmin executable", "args": {"creates": "{{ RABBITMQ_SCRIPTS_DIR }}/rabbitmqadmin"}}, "module_options": "wget -P \"{{ RABBITMQ_SCRIPTS_DIR }}\" \"{{ RABBITMQADMIN_URL }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "remove default guest user", "module": "rabbitmq_user", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "remove default guest user"}, "module_options": {"user": "guest", "state": "absent"}, "executable": "rabbitmq_user", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_user", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure vhost /test is present", "module": "rabbitmq_vhost", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure vhost /test is present"}, "module_options": {"name": "/test", "state": "present"}, "executable": "rabbitmq_vhost", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_vhost", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure newrelic rabbitmq monitoring is present", "module": "apt", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure newrelic rabbitmq monitoring is present", "register": "rabbit_newrelic", "tags": ["rabbitmq-newrelic"]}, "module_options": {"pkg": "nri-rabbitmq", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure /etc/newrelic-infra/integrations.d/rabbitmq-config.yml is present", "module": "template", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure /etc/newrelic-infra/integrations.d/rabbitmq-config.yml is present", "register": "rabbit_newrelic_config", "tags": ["rabbitmq-newrelic"]}, "module_options": {"src": "rabbitmq-config-newrelic-infra.yml.j2", "dest": "/etc/newrelic-infra/integrations.d/rabbitmq-config.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart newrelic-infra if changed", "module": "systemd", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "restart newrelic-infra if changed", "when": "rabbit_newrelic.changed or rabbit_newrelic_config.changed", "tags": ["rabbitmq-newrelic"]}, "module_options": {"name": "newrelic-infra", "state": "restarted"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "mongodb", "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb", "fqcn": "mongodb", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create mongodb group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create mongodb group"}, "module_options": {"name": "mongodb", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create mongodb user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create mongodb user"}, "module_options": {"name": "mongodb", "group": "mongodb", "home": "{{ MONGODB_HOME }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a xfs filesystem on MONGODB_OPENSTACK_DB_DEVICE", "module": "filesystem", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create a xfs filesystem on MONGODB_OPENSTACK_DB_DEVICE"}, "module_options": {"fstype": "xfs", "dev": "{{ MONGODB_OPENSTACK_DB_DEVICE }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Mount MongoDB home", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Mount MongoDB home"}, "module_options": {"name": "{{ MONGODB_HOME }}", "src": "{{ MONGODB_OPENSTACK_DB_DEVICE }}", "fstype": "xfs", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create db and log directories for MongoDB home", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create db and log directories for MongoDB home", "with_items": ["db", "log"]}, "module_options": {"path": "{{ MONGODB_HOME }}/{{ item }}", "state": "directory", "mode": 488, "owner": "mongodb", "group": "mongodb"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change MongoDB Home owner", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Change MongoDB Home owner"}, "module_options": {"path": "{{ MONGODB_HOME }}", "owner": "mongodb", "group": "mongodb", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change MongoDB permissions", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Change MongoDB permissions"}, "module_options": {"path": "{{ MONGODB_HOME }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open MongoDB port on the firewall", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Open MongoDB port on the firewall"}, "module_options": {"rule": "allow", "port": 27017, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "configure log rotation for the MongoDB log", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "configure log rotation for the MongoDB log"}, "module_options": {"src": "logrotate.conf.j2", "dest": "/etc/logrotate.d/mongodb.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-mongodb.sh", "dest": "/usr/local/sbin/backup-pre.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-mongodb.sh", "dest": "/usr/local/sbin/backup-post.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom fact directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create custom fact directory"}, "module_options": {"path": "/etc/ansible/facts.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Go Path directory", "module": "file", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create Go Path directory"}, "module_options": {"path": "{{ GO_PATH }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download golang", "module": "get_url", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Download golang"}, "module_options": {"url": "https://storage.googleapis.com/golang/go1.12.linux-amd64.tar.gz", "dest": "{{ GO_PATH }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract go into /tmp/mongo", "module": "unarchive", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Extract go into /tmp/mongo"}, "module_options": {"src": "{{ GO_PATH }}/go1.12.linux-amd64.tar.gz", "dest": "{{ GO_PATH }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download MongoDB exporter", "module": "git", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Download MongoDB exporter"}, "module_options": {"repo": "{{ MONGODB_EXPORTER_REPO }}", "dest": "{{ MONGODB_EXPORTER_PATH }}", "version": "{{ MONGODB_EXPORTER_VERSION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile MongoDB exporter files", "module": "make", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Compile MongoDB exporter files", "environment": {"GOPATH": "{{ GO_PATH }}", "PATH": "{{ GO_PATH }}/go/bin:{{ ansible_env.PATH }}", "GO111MODULE": "on"}}, "module_options": {"chdir": "{{ MONGODB_EXPORTER_PATH }}", "target": "build"}, "executable": "make", "executable_type": "Module", "fqcn": "community.general.make", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add MongoDB exporter binary to the path", "module": "copy", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Add MongoDB exporter binary to the path"}, "module_options": {"src": "{{ MONGODB_EXPORTER_PATH }}/mongodb_exporter", "dest": "/usr/local/bin/mongodb_exporter", "remote_src": true, "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create MongoDB exporter environment file", "module": "copy", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create MongoDB exporter environment file"}, "module_options": {"content": "MONGODB_URL=mongodb://{{ mongodb_root_admin_name }}:{{ mongodb_root_admin_password }}@localhost:27017\n", "dest": "/etc/mongodb_exporter.conf", "mode": 416, "owner": "root", "group": "mongodb"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy MongoDB exporter service definition", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy MongoDB exporter service definition"}, "module_options": {"src": "mongodb_exporter.service.j2", "dest": "/etc/systemd/system/mongodb_exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable MongoDB exporter", "module": "systemd", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Start and enable MongoDB exporter"}, "module_options": {"daemon-reload": true, "name": "mongodb_exporter.service", "state": "restarted", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Store MongoDB exporter version", "module": "copy", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Store MongoDB exporter version"}, "module_options": {"content": "{\"version\": \"{{ MONGODB_EXPORTER_VERSION }}\"}\n", "dest": "/etc/ansible/facts.d/mongodb_exporter.fact"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ MONGODB_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/mongodb-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "common-server-init", "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init", "fqcn": "common-server-init", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/sftp.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Set the hostname", "module": "hostname", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set the hostname"}, "module_options": {"name": "{{ COMMON_SERVER_HOSTNAME }}"}, "executable": "hostname", "executable_type": "Module", "fqcn": "ansible.builtin.hostname", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system timezone to UTC", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set system timezone to UTC"}, "module_options": {"src": "timezone", "dest": "/etc/timezone", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local timezone to UTC", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set local timezone to UTC"}, "module_options": {"src": "/usr/share/zoneinfo/Etc/UTC", "dest": "/etc/localtime", "state": "link", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add Opencraft repository key", "module": "apt_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "add Opencraft repository key"}, "module_options": {"keyserver": "{{ COMMON_SERVER_OPENCRAFT_REPO_KEY_SERVER }}", "id": "{{ COMMON_SERVER_OPENCRAFT_REPO_KEY_ID }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add Opencraft repository", "module": "apt_repository", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "add Opencraft repository"}, "module_options": {"repo": "{{ COMMON_SERVER_OPENCRAFT_REPO }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set apt preferences to prioritize the opencraft repo", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "set apt preferences to prioritize the opencraft repo"}, "module_options": {"content": "Package: chkrootkit\nPin: Origin \"{{ COMMON_SERVER_OPENCRAFT_REPO_DOMAIN }}\"\nPin-Priority: 1001\n", "dest": "/etc/apt/preferences.d/opencraft"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "apt-get update, dist-upgrade and autoremove", "module": "apt", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "apt-get update, dist-upgrade and autoremove"}, "module_options": {"update_cache": true, "upgrade": "dist", "autoremove": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Install dependencies"}, "module_options": {"name": "{{ COMMON_SERVER_DEPENDENCIES }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if Python3 exists", "module": "stat", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Check if Python3 exists", "register": "python3_executable"}, "module_options": {"path": "/usr/bin/python3"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Default to python3", "module": "alternatives", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Default to python3", "when": "python3_executable.stat.exists"}, "module_options": {"name": "python", "link": "/usr/bin/python", "path": "/usr/bin/python3"}, "executable": "alternatives", "executable_type": "Module", "fqcn": "community.general.alternatives", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "tmpreaper is configured", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "tmpreaper is configured"}, "module_options": {"src": "tmpreaper.conf", "dest": "/etc/tmpreaper.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy security update check script", "module": "copy", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Copy security update check script"}, "module_options": {"src": "security_updates_checker.sh", "dest": "{{ SECURITY_UPDATE_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Schedule cron job to track security updates of held packages", "module": "cron", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Schedule cron job to track security updates of held packages"}, "module_options": {"name": "Track security updates", "minute": 0, "hour": 1, "job": "bash {{ SECURITY_UPDATE_SCRIPT_LOCATION }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "etckeeper - use git", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - use git"}, "module_options": {"src": "etckeeper.conf", "dest": "/etc/etckeeper/etckeeper.conf", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "etckeeper - init and initial commit", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - init and initial commit", "args": {"creates": "/etc/.git"}}, "module_options": "etckeeper init && etckeeper commit \"Initial commit.\"", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "etckeeper - configure git author settings", "module": "git_config", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - configure git author settings", "with_items": [{"name": "user.name", "value": "{{ COMMON_SERVER_ETCKEEPER_COMMIT_USER }}"}, {"name": "user.email", "value": "{{ COMMON_SERVER_ETCKEEPER_COMMIT_EMAIL }}"}]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "scope": "local", "repo": "/etc"}, "executable": "git_config", "executable_type": "Module", "fqcn": "community.general.git_config", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "install nginx apt package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "install nginx apt package"}, "module_options": {"name": "nginx"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable nginx default site", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "disable nginx default site", "notify": ["reload nginx"]}, "module_options": {"path": "/etc/nginx/sites-enabled/default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set up global nginx SSL settings", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "set up global nginx SSL settings", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-ssl", "dest": "/etc/nginx/conf.d/ssl.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "reload nginx if required", "module": "meta", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "reload nginx if required"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure sftp is enabled", "module": "lineinfile", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/sftp.yml", "options": {"name": "Ensure sftp is enabled", "notify": "Restart sshd"}, "module_options": {"dest": "/etc/ssh/sshd_config", "regexp": "^Subsystem(\\s+)sftp", "line": "Subsystem sftp internal-sftp", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "misc.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "networking.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "etckeeper.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "chkrootkit.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {"when": "COMMON_SERVER_INSTALL_SFTP"}, "module_options": "sftp.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate list of enabled chkrootkit tests", "module": "shell", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Generate list of enabled chkrootkit tests", "register": "enabled_tests_output"}, "module_options": "chkrootkit -l 2>&1 | cut -d ' ' -f 3- | sed -r 's/\\b({{CHKROOTKIT_DISABLED_TESTS | join(\"|\")}})\\b//g'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add chkrootkit config file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Add chkrootkit config file"}, "module_options": {"src": "chkrootkit.conf", "dest": "/etc/chkrootkit.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy expected output generator script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Copy expected output generator script"}, "module_options": {"src": "gen_chkrootkit_expected_output.sh", "dest": "{{ CHKROOTKIT_EXPECTED_OUTPUT_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate expected chkrootkit output", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Generate expected chkrootkit output"}, "module_options": "{{ CHKROOTKIT_EXPECTED_OUTPUT_SCRIPT_LOCATION }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add apt hook to update chkrootkit expected output after updates", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Add apt hook to update chkrootkit expected output after updates"}, "module_options": {"src": "100chrootkitupdate.j2", "dest": "/etc/apt/apt.conf.d/100chrootkitupdate"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Update expected output daily", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Update expected output daily"}, "module_options": {"src": "update-chkrootkit-log", "dest": "/etc/cron.daily/update-chkrootkit-log", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add floating IP as network interface alias", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add floating IP as network interface alias"}, "module_options": {"src": "network/interfaces.d/floating-ip.cfg", "dest": "/etc/network/interfaces.d/floating-ip.cfg", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure floating alias is included in configuration file", "module": "lineinfile", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Ensure floating alias is included in configuration file"}, "module_options": {"dest": "/etc/network/interfaces", "state": "present", "line": "source /etc/network/interfaces.d/*.cfg"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart networking service", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Restart networking service"}, "module_options": {"name": "networking", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Bring up new interface", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Bring up new interface"}, "module_options": "ifup {{ COMMON_FLOATING_INTERFACE_NAME }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add floating IP as network interface alias", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add floating IP as network interface alias"}, "module_options": {"src": "netplan/floating-ip.yaml", "dest": "/etc/netplan/floating-ip.yaml", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply changes using netplan", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Apply changes using netplan", "become": true}, "module_options": "netplan apply", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add fallback DNS servers to /etc/dhcp/dhclient.conf.", "module": "lineinfile", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add fallback DNS servers to /etc/dhcp/dhclient.conf.", "notify": "restart networking"}, "module_options": {"dest": "/etc/dhcp/dhclient.conf", "regexp": "^\\s*append\\s+domain-name-servers", "line": "append domain-name-servers {{ COMMON_FALLBACK_DNS_SERVERS | join(', ') }};"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Template hosts", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Template hosts"}, "module_options": {"src": "hosts", "dest": "/etc/hosts", "mode": 356}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "By default allow only ssh", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "By default allow only ssh"}, "module_options": {"rule": "allow", "port": 22, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Set firewall default policy", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Set firewall default policy"}, "module_options": {"state": "enabled", "policy": "reject"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "memcached", "defined_in": "testdata3/scm_repo/playbooks/roles/memcached", "fqcn": "memcached", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Open memcached port on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml", "options": {"name": "Open memcached port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ memcached_port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/memcached"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "mattermail", "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail", "fqcn": "mattermail", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create mattermail group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create mattermail group"}, "module_options": {"name": "mattermail"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create mattermail user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create mattermail user"}, "module_options": {"name": "mattermail", "group": "mattermail", "home": "{{ MATTERMAIL_HOME }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install golang package", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "Install golang package"}, "module_options": {"name": ["golang"], "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create config", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create config", "become_user": "mattermail"}, "module_options": {"src": "config.json.j2", "dest": "{{ MATTERMAIL_HOME }}/config.json"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create data dir", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create data dir"}, "module_options": {"path": "{{ MATTERMAIL_HOME }}/data", "state": "directory", "owner": "mattermail", "group": "mattermail"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd service", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create systemd service"}, "module_options": {"src": "mattermail.service.j2", "dest": "/etc/systemd/system/mattermail.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "fetch latest hash", "module": "git", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "fetch latest hash", "register": "githash"}, "module_options": {"repo": "https://{{ MATTERMAIL_REPO }}", "clone": false, "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "store git hash", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "store git hash", "register": "mattermail_version"}, "module_options": {"dest": "{{ MATTERMAIL_HOME }}/.hash", "content": "{{ githash.after }}", "owner": "mattermail", "group": "mattermail"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "build Mattermail binary", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "build Mattermail binary", "become_user": "mattermail", "environment": {"GOPATH": "{{ MATTERMAIL_HOME }}"}}, "module_options": "go get -u {{ MATTERMAIL_REPO }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable the mattermail service", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "start and enable the mattermail service"}, "module_options": {"name": "mattermail", "state": "restarted", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "pr-watcher-notifier", "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier", "fqcn": "pr-watcher-notifier", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy the watch configuration file", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml", "options": {"name": "Copy the watch configuration file", "become_user": "www-data", "tags": "pr-watcher-notifier-watch-config"}, "module_options": {"src": "watch_config.yml", "dest": "{{ PR_WATCHER_NOTIFIER_ENV['WATCH_CONFIG_FILE'] }}", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart gunicorn via supervisor", "module": "supervisorctl", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml", "options": {"name": "Restart gunicorn via supervisor"}, "module_options": {"name": "pr_watcher_notifier", "state": "restarted"}, "executable": "supervisorctl", "executable_type": "Module", "fqcn": "community.general.supervisorctl", "used_in": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "consul-acl", "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl", "fqcn": "consul-acl", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install Consul ACL apt requirements", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Install Consul ACL apt requirements"}, "module_options": {"name": ["python3-pip"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Consul ACL python requirements", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Install Consul ACL python requirements"}, "module_options": {"executable": "pip3", "name": ["python-consul==1.1.0", "pyhcl==0.3.10"]}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul ACL tokens", "module": "consul_acl", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Create Consul ACL tokens", "with_items": "{{ consul_acl_tokens }}"}, "module_options": {"token": "{{ item.id }}", "rules": "{{ item.rules }}", "name": "{{ item.name | default(item.id) }}", "mgmt_token": "{{ consul_acl_mgmt_token }}"}, "executable": "consul_acl", "executable_type": "Module", "fqcn": "community.general.consul_acl", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "loris", "defined_in": "testdata3/scm_repo/playbooks/roles/loris", "fqcn": "loris", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install packages for loris", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Install packages for loris", "become": true, "vars": {"packages": ["libapache2-mod-wsgi", "libjpeg-turbo8-dev", "libfreetype6-dev", "liblcms2-dev", "liblcms2-utils", "libssl-dev", "libtiff5-dev", "libwebp-dev", "zlib1g-dev"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure group \"{{ loris_group }}\" exists", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Ensure group \"{{ loris_group }}\" exists", "become": true}, "module_options": {"name": "{{ loris_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure user \"{{ loris_user }}\" exists", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Ensure user \"{{ loris_user }}\" exists", "become": true}, "module_options": {"name": "{{ loris_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "stat", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"register": "app_path"}, "module_options": "path={{ loris_app_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "clone repository and checkout correct version", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "clone repository and checkout correct version", "become": true, "when": "app_path.stat.exists == False"}, "module_options": {"repo": "{{ loris_app_repository }}", "dest": "{{ loris_app_path }}", "version": "{{ loris_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install configobj", "module": "pip", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "install configobj", "become": true}, "module_options": {"name": "configobj"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install loris", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "install loris", "become": true, "args": {"chdir": "{{ loris_app_path }}", "creates": "/etc/loris2/loris2.conf"}}, "module_options": "python setup.py install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable default site", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "disable default site", "become": true}, "module_options": {"state": "absent", "path": "/etc/apache2/sites-enabled/000-default.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure mod_expires is present", "module": "apache2_module", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "make sure mod_expires is present", "become": true}, "module_options": {"state": "present", "name": "expires"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "make sure mod_wsgi is present", "module": "apache2_module", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "make sure mod_wsgi is present", "become": true}, "module_options": {"state": "present", "name": "wsgi"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "get apache conf from template", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "get apache conf from template", "become": true}, "module_options": {"src": "apache2.conf.j2", "dest": "/etc/apache2/conf-available/loris.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure apache reload its configuration", "module": "service", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "ensure apache reload its configuration", "become": true}, "module_options": {"name": "apache2", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "postgres", "defined_in": "testdata3/scm_repo/playbooks/roles/postgres", "fqcn": "postgres", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Configure official PostgreSQL repository", "module": "shell", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Configure official PostgreSQL repository", "become": true}, "module_options": "echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PostgreSQL repository key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Install PostgreSQL repository key"}, "module_options": {"id": "ACCC4CF8", "url": "https://www.postgresql.org/media/keys/ACCC4CF8.asc", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install required PostgreSQL packages", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Install required PostgreSQL packages"}, "module_options": {"name": ["postgresql-{{postgresql_version}}", "postgresql-contrib-{{postgresql_version}}", "postgresql-server-dev-{{postgresql_version}}", "postgresql-client-{{postgresql_version}}", "python3-psycopg2"], "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create postgres group", "module": "group", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Create postgres group"}, "module_options": {"name": "postgres", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create postgres user", "module": "user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Create postgres user"}, "module_options": {"name": "postgres", "group": "postgres", "home": "/var/lib/postgresql", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mount /var/lib/postgresql", "module": "mount", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "mount /var/lib/postgresql", "when": "POSTGRES_OPENSTACK_DB_DEVICE != None"}, "module_options": {"name": "/var/lib/postgresql", "src": "{{ POSTGRES_OPENSTACK_DB_DEVICE }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "chown & chmod /var/lib/postgresql", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "chown & chmod /var/lib/postgresql"}, "module_options": {"path": "/var/lib/postgresql", "owner": "postgres", "group": "postgres", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open Postgres port on the firewall", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Open Postgres port on the firewall", "with_items": [5432]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-postgres.sh", "dest": "/usr/local/sbin/backup-pre.sh", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-postgres.sh", "dest": "/usr/local/sbin/backup-post.sh", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "jira", "defined_in": "testdata3/scm_repo/playbooks/roles/jira", "fqcn": "jira", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install Jira dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "install Jira dependencies"}, "module_options": {"pkg": ["mysql-client"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable www-data shell", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "disable www-data shell"}, "module_options": {"name": "www-data", "shell": "/bin/false"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy jira service file", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "copy jira service file", "notify": ["restart jira"]}, "module_options": {"src": "jira.service", "dest": "/etc/systemd/system/jira.service"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable jira", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "enable jira"}, "module_options": {"name": "jira", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add backup pruner cron job", "module": "cron", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "add backup pruner cron job"}, "module_options": {"name": "clean old Jira exports", "state": "present", "job": "find /var/www/jira/var/jira/export -maxdepth 2 -type f -mtime +150 -delete -regextype sed -regex '.*/[0-9]\\{4\\}-[A-Z][a-z]\\{2\\}-[0-9]\\{2\\}.*.zip'", "day": "*", "minute": "0", "hour": "0"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "consul", "defined_in": "testdata3/scm_repo/playbooks/roles/consul", "fqcn": "consul", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Ensure that unzip is installed", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Ensure that unzip is installed"}, "module_options": {"name": "unzip", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul group", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul group"}, "module_options": {"name": "consul", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul user"}, "module_options": {"name": "consul", "group": "consul", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mount \"{{ consul_data_dir }}\"", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Mount \"{{ consul_data_dir }}\"", "when": "consul_server"}, "module_options": {"name": "{{ consul_data_dir }}", "src": "{{ consul_openstack_data_device }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create consul directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul directories", "with_items": [{"path": "{{ consul_config_dir }}", "owner": "root"}, {"path": "{{ consul_data_dir }}", "owner": "consul"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "consul", "recurse": true, "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current Consul version", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Determine current Consul version", "register": "consul_current_version", "changed_when": false}, "module_options": "consul version | sed -n 's/Consul v\\(.*\\)/\\1/p'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unarchive the Consul binary", "module": "unarchive", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Download and unarchive the Consul binary", "when": "consul_current_version.rc != 0 or consul_current_version.stdout != consul_version", "notify": "restart consul"}, "module_options": {"src": "{{ consul_url }}", "dest": "{{ consul_bin_dir }}", "owner": "consul", "group": "consul", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul configuration file", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul configuration file", "notify": "restart consul"}, "module_options": {"src": "config.json.j2", "dest": "{{ consul_config_dir }}/config.json", "group": "consul"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul service definition file", "when": "consul_service_config != \"\"", "notify": "restart consul"}, "module_options": {"content": "{{ consul_service_config | to_nice_json }}", "dest": "{{ consul_config_dir }}/service.json", "group": "consul"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the wrapper script files", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Copy the wrapper script files", "with_items": ["run_consul.sh", "update_consul_config.py"]}, "module_options": {"src": "{{ item }}.j2", "dest": "/usr/local/sbin/{{ item }}", "owner": "root", "group": "root", "mode": "755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the consul configuration file is group-writeable", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Ensure that the consul configuration file is group-writeable"}, "module_options": {"path": "{{ consul_config_dir }}/config.json", "mode": "g+w"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul systemd service file", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul systemd service file"}, "module_options": {"src": "consul.service.j2", "dest": "/etc/systemd/system/consul.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"name": "consul.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open TCP/UDP ports on firewall needed for Consul RPC/gossip", "module": "ufw", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Open TCP/UDP ports on firewall needed for Consul RPC/gossip", "with_items": ["tcp", "udp"]}, "module_options": {"rule": "allow", "port": "8300:8302", "proto": "{{ item }}"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Copy pre- and post-backup scripts", "module": "template", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Copy pre- and post-backup scripts", "with_items": [{"src": "backup-pre-consul.sh", "dest": "/usr/local/sbin/backup-pre-consul.sh"}, {"src": "backup-post-consul.sh", "dest": "/usr/local/sbin/backup-post-consul.sh"}], "when": "consul_backup"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "nginx-proxy", "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy", "fqcn": "nginx-proxy", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install passlib for htpasswd generation", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "install passlib for htpasswd generation"}, "module_options": {"name": "python3-passlib"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate htpasswd file", "module": "htpasswd", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "generate htpasswd file"}, "module_options": {"path": "{{ NGINX_PROXY_HTPASSWD_PATH }}", "username": "{{ NGINX_PROXY_USERNAME }}", "password": "{{ NGINX_PROXY_PASSWORD }}"}, "executable": "htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "set up nginx to reverse-proxy", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "set up nginx to reverse-proxy", "register": "sites_available"}, "module_options": {"src": "nginx-proxy.j2", "dest": "{{ NGINX_PROXY_CONFIG_PATH }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "enable nginx site configuration", "register": "sites_enabled"}, "module_options": {"src": "{{ NGINX_PROXY_CONFIG_PATH }}", "dest": "/etc/nginx/sites-enabled/{{ NGINX_PROXY_CONFIG_PATH | basename }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open public port on the firewall", "module": "ufw", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "open public port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ NGINX_PROXY_PUBLIC_PORT }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "reload nginx", "module": "service", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "reload nginx", "when": "(sites_available.changed or sites_enabled.changed) and NGINX_PROXY_RELOAD_NGINX"}, "module_options": {"name": "nginx", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "dalite", "defined_in": "testdata3/scm_repo/playbooks/roles/dalite", "fqcn": "dalite", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "copy ssl cert", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "copy ssl cert"}, "module_options": {"content": "{{ DALITE_SSL_CERT }}", "dest": "/etc/ssl/certs/ssl-cert.pem", "owner": "root", "group": "ssl-cert", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy ssl key", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "copy ssl key"}, "module_options": {"content": "{{ DALITE_SSL_KEY }}", "dest": "/etc/ssl/private/ssl-cert.key", "owner": "root", "group": "ssl-cert", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "prepare nginx site", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "prepare nginx site"}, "module_options": "src=dalite.site dest=/etc/nginx/sites-enabled/dalite", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart nginx", "module": "service", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "restart nginx"}, "module_options": "name=nginx state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "checkout repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "checkout repository"}, "module_options": {"repo": "{{ DALITE_REPOSITORY }}", "version": "{{ DALITE_REPOSITORY_VERSION }}", "dest": "{{ DALITE_APP_LOCATION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ DALITE_VENV }}", "state": "present", "requirements": "{{ DALITE_APP_LOCATION }}/requirements/prod-openstack.txt", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ DALITE_VENV }}", "state": "present", "name": "Gunicorn==17.5", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create settings", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create settings"}, "module_options": {"src": "dalite_settings.py", "dest": "{{ DALITE_APP_LOCATION }}/dalite/local_settings.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create static root", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create static root"}, "module_options": {"name": "{{ DALITE_STATICFILES_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create media root", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create media root"}, "module_options": {"name": "{{ DALITE_MEDIA_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "collectstatic", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "collectstatic"}, "module_options": "{{ DALITE_MANAGE_PY }} collectstatic --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "migrate", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "migrate"}, "module_options": "{{ DALITE_MANAGE_PY }} migrate --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create log download user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create log download user"}, "module_options": {"name": "{{ DALITE_LOG_DOWNLOAD_USER }}", "home": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create ssh dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create ssh dir"}, "module_options": {"state": "directory", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{ DALITE_LOG_DOWNLOAD_USER }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create authorized keys", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create authorized keys"}, "module_options": {"state": "touch", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{ DALITE_LOG_DOWNLOAD_USER }}", "mode": 384}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add authorized keys", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "add authorized keys", "with_items": ["{{ DALITE_LOG_DOWNLOAD_AUTHORIZED_KEYS }}"]}, "module_options": {"dest": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "line": "{{ item }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create directory for the logs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create directory for the logs", "with_items": ["{{ DALITE_LOG_DOWNLOAD_DB_DIR }}", "{{ DALITE_LOG_DOWNLOAD_LOG_DIR }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{DALITE_LOG_DOWNLOAD_USER}}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "dalite-pre-backup.sh", "dest": "/usr/local/sbin/dalite-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy logrotate", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "copy logrotate"}, "module_options": "src=logrotate.d dest=/etc/logrotate.d/dalite", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "format log download volume", "module": "filesystem", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "options": {"name": "format log download volume"}, "module_options": {"dev": "{{ DALITE_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "fstype": "{{ DALITE_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "resizefs": true}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "mount log download volume", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "options": {"name": "mount log download volume"}, "module_options": {"src": "{{ DALITE_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}", "fstype": "{{ DALITE_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "prepare config", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "options": {"name": "prepare config"}, "module_options": {"src": "dalite.gunicorn", "dest": "/etc/gunicorn.d/dalite"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart guncorn", "module": "service", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "options": {"name": "restart guncorn"}, "module_options": "name=gunicorn state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ DALITE_REQUIREMENTS }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install build deps", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "install build deps"}, "module_options": {"name": "{{ PYTHON_BUILD_DEP_REQIREMENTS }}", "state": "build-dep", "install_recommends": false}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dalite user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Create dalite user"}, "module_options": {"name": "{{ DALITE_USER_NAME }}", "home": "{{ DALITE_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log dir", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Create log dir"}, "module_options": {"name": "{{ DALITE_LOG_DIR }}", "state": "directory", "owner": "{{ DALITE_USER_NAME }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "deploy-app.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "deploy-gunicorn.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "configure_nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "log_volume.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "configure_log_download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Allow required ports", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "tarsnap", "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap", "fqcn": "tarsnap", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "", "module": "fail", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"when": "TARSNAP_BACKUP_FOLDERS is not defined or TARSNAP_BACKUP_FOLDERS == ''"}, "module_options": "msg=\"Please configure TARSNAP_BACKUP_FOLDERS, we want all servers to be backed up :)\"", "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy key file into place", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Copy key file into place"}, "module_options": {"src": "tarsnap.key", "dest": "{{ TARSNAP_KEY_REMOTE_LOCATION }}", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create cache directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Create cache directory"}, "module_options": {"state": "directory", "path": "{{ TARSNAP_CACHE }}", "owner": "root", "group": "root", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template main backup script", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "template main backup script"}, "module_options": {"src": "backup.sh", "dest": "{{ TARSNAP_BACKUP_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install backup in cron", "module": "cron", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Install backup in cron"}, "module_options": {"name": "Backup for this server, archive: {{ TARSNAP_ARCHIVE_NAME }}", "job": "{{ TARSNAP_BACKUP_SCRIPT_LOCATION }} >> {{ TARSNAP_BACKUP_LOG_FILE }} 2>&1", "minute": "{{ TARSNAP_BACKUP_MINUTE }}", "hour": "{{ TARSNAP_BACKUP_HOUR }}", "day": "{{ TARSNAP_BACKUP_DAY }}", "month": "{{ TARSNAP_BACKUP_MONTH }}", "weekday": "{{ TARSNAP_BACKUP_WEEKDAY }}", "state": "{{ TARSNAP_CRONTAB_STATE }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set up log rotation for backup logs", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Set up log rotation for backup logs"}, "module_options": {"src": "logrotate", "dest": "{{ TARSNAP_BACKUP_LOGROTATE_CONFIG }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dependencies for Tarsnap", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Install dependencies for Tarsnap", "with_items": ["e2fslibs-dev", "libssl-dev", "zlib1g-dev", "build-essential", "python-setuptools"]}, "module_options": "pkg={{ item }} state=installed", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if tarsnap {{ tarsnap_version }} is installed", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Check if tarsnap {{ tarsnap_version }} is installed", "register": "tarnsap_installed", "changed_when": "tarnsap_installed.stderr != ''", "ignore_errors": true}, "module_options": "tarsnap --version | grep {{ tarsnap_version }} --color=never", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download the current tarsnap code signing key", "module": "get_url", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download the current tarsnap code signing key", "when": "tarnsap_installed|failed"}, "module_options": "url=https://www.tarsnap.com/tarsnap-signing-key.asc dest=/root/tarsnap-signing-key.asc", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the tarsnap code signing key to your list of keys", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Add the tarsnap code signing key to your list of keys", "when": "tarnsap_installed|failed"}, "module_options": "gpg --import tarsnap-signing-key.asc chdir=/root/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download tarsnap SHA file", "module": "get_url", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download tarsnap SHA file", "when": "tarnsap_installed|failed"}, "module_options": "url=\"https://www.tarsnap.com/download/tarsnap-sigs-{{ tarsnap_version }}.asc\" dest=\"/root/tarsnap-sigs-{{ tarsnap_version }}.asc\"", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "get the SHA256sum for this tarsnap release", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "get the SHA256sum for this tarsnap release", "when": "tarnsap_installed|failed", "args": {"executable": "/bin/bash", "chdir": "/root"}, "register": "tarsnap_sha"}, "module_options": "gpgResult=`gpg --decrypt tarsnap-sigs-{{ tarsnap_version }}.asc 2>/dev/null`; echo ${gpgResult#*=};\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Tarsnap source", "module": "get_url", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download Tarsnap source", "when": "tarnsap_installed|failed"}, "module_options": "url=\"https://www.tarsnap.com/download/tarsnap-autoconf-{{ tarsnap_version }}.tgz\" dest=\"/root/tarsnap-autoconf-{{ tarsnap_version }}.tgz\" sha256sum={{ tarsnap_sha.stdout_lines[0] }}", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Decompress Tarsnap source", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Decompress Tarsnap source", "when": "tarnsap_installed|failed"}, "module_options": "tar xzf /root/tarsnap-autoconf-{{ tarsnap_version }}.tgz chdir=/root creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/COPYING", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Tarsnap for local build", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Configure Tarsnap for local build", "when": "tarnsap_installed|failed"}, "module_options": "./configure chdir=/root/tarsnap-autoconf-{{ tarsnap_version }} creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/Makefile", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Build and install Tarsnap", "module": "command", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Build and install Tarsnap", "when": "tarnsap_installed|failed"}, "module_options": "make all install clean chdir=/root/tarsnap-autoconf-{{ tarsnap_version }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Tarsnap cache directory", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Create Tarsnap cache directory"}, "module_options": "state=directory path={{ tarsnap_cache }}", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml", "options": {"tags": "tarsnap"}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml", "options": {"tarsnap_cache": "{{ TARSNAP_CACHE }}", "tarsnap_keyfile": "{{ TARSNAP_KEY_REMOTE_LOCATION }}", "when": "TARSNAP_KEY is defined and TARSNAP_KEY != ''", "tags": "tarsnap"}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "mysql", "defined_in": "testdata3/scm_repo/playbooks/roles/mysql", "fqcn": "mysql", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install python3-mysqldb package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Install python3-mysqldb package"}, "module_options": {"name": "python3-mysqldb"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create mysql group", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create mysql group"}, "module_options": {"name": "mysql", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create mysql user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create mysql user"}, "module_options": {"name": "mysql", "group": "mysql", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a ext4 filesystem on MYSQL_OPENSTACK_DB_DEVICE", "module": "filesystem", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create a ext4 filesystem on MYSQL_OPENSTACK_DB_DEVICE", "when": "MYSQL_OPENSTACK_DB_DEVICE is defined and MYSQL_OPENSTACK_DB_DEVICE != \"\""}, "module_options": {"fstype": "ext4", "dev": "{{ MYSQL_OPENSTACK_DB_DEVICE }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Mount MySQL home", "module": "mount", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Mount MySQL home", "when": "MYSQL_OPENSTACK_DB_DEVICE is defined and MYSQL_OPENSTACK_DB_DEVICE != \"\""}, "module_options": {"name": "/var/lib/mysql", "src": "{{ MYSQL_OPENSTACK_DB_DEVICE }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "chown -R /var/lib/mysql", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "chown -R /var/lib/mysql"}, "module_options": {"path": "/var/lib/mysql", "owner": "mysql", "group": "mysql", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "chmod /var/lib/mysql", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "chmod /var/lib/mysql"}, "module_options": {"path": "/var/lib/mysql", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Allow required ports"}, "module_options": {"rule": "allow", "port": 3306, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Creating directory for Mysql files limit configuration", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Creating directory for Mysql files limit configuration"}, "module_options": {"path": "/etc/systemd/system/mysql.service.d/", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set open files limit in mysql through systemd", "module": "copy", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Set open files limit in mysql through systemd"}, "module_options": {"dest": "/etc/systemd/system/mysql.service.d/override.conf", "content": "# cf https://duntuk.com/how-raise-ulimit-open-files-and-mysql-openfileslimit\n[Service]\nLimitNOFILE={{ MYSQL_OPEN_FILES_LIMIT }}\nLimitNPROC={{ MYSQL_PROCESSES_LIMIT }}\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-mysql.sh", "dest": "/usr/local/sbin/backup-pre.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-mysql.sh", "dest": "/usr/local/sbin/backup-post.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download MySQL exporter", "module": "unarchive", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Download MySQL exporter", "notify": "restart mysqld_exporter"}, "module_options": {"src": "{{ MYSQL_EXPORTER_DOWNLOAD_URL }}", "remote_src": true, "dest": "/opt", "creates": "{{ MYSQL_EXPORTER_BINARY }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Append MySQL exporter user to list of MySQL users", "module": "set_fact", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Append MySQL exporter user to list of MySQL users"}, "module_options": {"mysql_users": "{{ mysql_users + MYSQL_EXPORTER_MYSQL_USERS }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create MySQL exporter environment file", "module": "copy", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create MySQL exporter environment file", "notify": "restart mysqld_exporter"}, "module_options": {"content": "DATA_SOURCE_NAME='exporter:{{ MYSQL_EXPORTER_MYSQL_PASSWORD }}@(localhost:3306)/'\n", "dest": "/etc/mysqld_exporter.conf", "mode": 416, "owner": "root", "group": "mysql"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy MySQL exporter service definition", "module": "template", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy MySQL exporter service definition", "notify": "restart mysqld_exporter"}, "module_options": {"src": "mysqld_exporter.service.j2", "dest": "/etc/systemd/system/mysqld_exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start MySQL exporter", "module": "systemd", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Start MySQL exporter"}, "module_options": {"daemon-reload": true, "name": "mysqld_exporter.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create Consul service definition file", "when": "COMMON_SERVER_INSTALL_CONSUL is defined and COMMON_SERVER_INSTALL_CONSUL", "notify": ["reload consul"]}, "module_options": {"content": "{{ MYSQL_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/mysqld-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MySQL binaries from debian", "module": "apt", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Install MySQL binaries from debian", "with_items": ["{{MYSQL_URLS}}"]}, "module_options": {"deb": "{{item.url}}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Created pinned version file", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Created pinned version file", "when": "MYSQL_PINNED_VERSION != \"\""}, "module_options": {"src": "pinned_versions.j2", "dest": "/etc/apt/preferences.d/mysql", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "davidwittman.redis", "defined_in": "testdata3/scm_repo/playbooks/roles/davidwittman.redis", "fqcn": "davidwittman.redis", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "prometheus_redis_exporter_role", "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus_redis_exporter_role", "fqcn": "prometheus_redis_exporter_role", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.mysql", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.mysql", "fqcn": "geerlingguy.mysql", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "sanity-checker", "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker", "fqcn": "sanity-checker", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install mailutils apt package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "install mailutils apt package"}, "module_options": {"name": "mailutils"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy sanity check script", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "copy sanity check script"}, "module_options": {"src": "sanity_check.py", "dest": "{{ SANITY_CHECK_SCRIPT_LOCATION }}", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy sanity check config", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "copy sanity check config"}, "module_options": {"content": "{{ sanity_check_control_file|to_json }}", "dest": "{{ SANITY_CHECK_CONFIG }}", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install sanity checks crontab", "module": "cron", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "install sanity checks crontab"}, "module_options": {"job": "{{ SANITY_CHECK_SCRIPT_LOCATION }} {{ SANITY_CHECK_CONFIG }} > /dev/null 2>&1", "minute": "1,11,21,31,41,51", "name": "sanity checker for: {{ SANITY_CHECK_SUBJECT }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "discourse", "defined_in": "testdata3/scm_repo/playbooks/roles/discourse", "fqcn": "discourse", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "mkdir /discourse", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse"}, "module_options": {"path": "/discourse", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mount /discourse", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mount /discourse"}, "module_options": {"name": "/discourse", "src": "/dev/vdb1", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "mkdir /discourse/discourse (needed to have /var/discourse as a git repo, which can't use a mounted folder)", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse/discourse (needed to have /var/discourse as a git repo, which can't use a mounted folder)"}, "module_options": {"path": "/discourse/discourse", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ln -s /discourse/discourse /var/discourse", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "ln -s /discourse/discourse /var/discourse"}, "module_options": {"src": "/discourse/discourse", "dest": "/var/discourse", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mkdir /discourse/docker", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse/docker"}, "module_options": {"path": "/discourse/docker", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mkdir /etc/docker", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /etc/docker", "become": true}, "module_options": {"path": "/etc/docker", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "change docker root directory", "module": "copy", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "change docker root directory", "notify": ["restart docker", "reload systemd"]}, "module_options": {"src": "daemon.json", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add discourse user", "module": "user", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "add discourse user"}, "module_options": {"name": "discourse", "groups": ["sudo", "admin"]}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure docker is running", "module": "service", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "ensure docker is running", "become": true}, "module_options": {"name": "docker", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check if discourse is running", "module": "shell", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "check if discourse is running", "become": true, "register": "discourse_running"}, "module_options": "docker ps", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "checkout discourse source", "module": "git", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "checkout discourse source", "notify": ["stop discourse", "rebuild discourse"]}, "module_options": {"repo": "https://github.com/discourse/discourse_docker.git", "dest": "/var/discourse", "update": false, "accept_hostkey": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy discourse configuration app.yml", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "copy discourse configuration app.yml", "notify": ["rebuild discourse"]}, "module_options": {"src": "app.yml.j2", "dest": "/var/discourse/containers/app.yml", "owner": "discourse", "group": "sudo"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "backup-swift-container", "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container", "fqcn": "backup-swift-container", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "install dependencies"}, "module_options": {"name": "{{ BACKUP_SWIFT_CONTAINER_DEPS }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "create backup dir"}, "module_options": {"name": "{{ BACKUP_SWIFT_LOCAL_DIR }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, {"py/object": "struct4.Task", "name": "save pre backup script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "save pre backup script"}, "module_options": {"src": "backup-swift-pre.sh", "dest": "{{ BACKUP_SWIFT_PRE_DEST }}", "mode": "0700"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, {"py/object": "struct4.Task", "name": "save local rc", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "save local rc"}, "module_options": {"content": "{{ BACKUP_SWIFT_RC }}", "dest": "{{ BACKUP_SWIFT_RC_DEST }}", "mode": "0500"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "mattermost", "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost", "fqcn": "mattermost", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "open HTTPS port on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "open HTTPS port on the firewall", "with_items": [443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "copy nginx site configuration", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "copy nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "mattermost-nginx.j2", "dest": "/etc/nginx/sites-available/mattermost"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/mattermost", "dest": "/etc/nginx/sites-enabled/mattermost", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create mattermost group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create mattermost group"}, "module_options": {"name": "mattermost", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create mattermost user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create mattermost user"}, "module_options": {"name": "mattermost", "group": "mattermost", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create directories", "with_items": ["{{ MATTERMOST_STATUS_DIR }}", "{{ MATTERMOST_LOG_DIR }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create config file if it does not exist yet", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create config file if it does not exist yet"}, "module_options": {"src": "config.json.j2", "dest": "{{ MATTERMOST_CONFIG_FILE }}", "owner": "mattermost", "group": "mattermost", "force": false}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate autolink configuration", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "generate autolink configuration"}, "module_options": {"src": "autolink.json.j2", "dest": "{{ MATTERMOST_STATUS_DIR }}/autolink.json", "owner": "mattermost", "group": "mattermost"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create Mattermost systemd service file", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create Mattermost systemd service file"}, "module_options": {"src": "mattermost.service.j2", "dest": "/etc/systemd/system/mattermost.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check whether previous installation was completed", "module": "stat", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "check whether previous installation was completed", "register": "mattermost_installation_complete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check installed version of Mattermost", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "check installed version of Mattermost", "register": "mattermost_version"}, "module_options": {"dest": "{{ MATTERMOST_VERSION_FILE }}", "content": "{{ MATTERMOST_VERSION }}", "owner": "mattermost", "group": "mattermost"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mark Mattermost installation as incomplete", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "mark Mattermost installation as incomplete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "download Mattermost distribution tarball", "module": "get_url", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "download Mattermost distribution tarball"}, "module_options": {"url": "{{ MATTERMOST_DOWNLOAD_URL }}", "dest": "{{ MATTERMOST_DOWNLOAD_DEST }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "stop Mattermost service (if it is already running)", "module": "service", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "stop Mattermost service (if it is already running)"}, "module_options": {"name": "mattermost", "state": "stopped"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "remove Mattermost installation directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "remove Mattermost installation directory"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_DIR }}/mattermost", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "unpack Mattermost distribution tarball", "module": "unarchive", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "unpack Mattermost distribution tarball"}, "module_options": {"src": "{{ MATTERMOST_DOWNLOAD_DEST }}", "remote_src": true, "dest": "{{ MATTERMOST_INSTALL_DIR }}", "owner": "mattermost", "group": "mattermost"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create symlink to config file", "module": "file", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create symlink to config file"}, "module_options": {"src": "{{ MATTERMOST_CONFIG_FILE }}", "dest": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/config/config.json", "state": "link", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "download Mattermost autolink distribution tarball", "module": "get_url", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "download Mattermost autolink distribution tarball"}, "module_options": {"url": "{{ MATTERMOST_UNLINK_DOWNLOAD_URL }}", "dest": "{{ MATTERMOST_UNLINK_DOWNLOAD_DEST }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create plugin directory", "module": "file", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create plugin directory"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/plugins", "state": "directory", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "unpack Mattermost autolink plugin", "module": "unarchive", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "unpack Mattermost autolink plugin"}, "module_options": {"src": "{{ MATTERMOST_UNLINK_DOWNLOAD_DEST }}", "remote_src": true, "dest": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/plugins", "owner": "mattermost", "group": "mattermost"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "start Mattermost service", "module": "service", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "start Mattermost service"}, "module_options": {"name": "mattermost", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mark Mattermost installation as complete", "module": "file", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "mark Mattermost installation as complete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}", "state": "touch", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "find old Mattermost autolink installer files in /tmp", "module": "find", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "find old Mattermost autolink installer files in /tmp", "register": "all_mm_autolink", "tags": ["cleanup_tmp"]}, "module_options": {"path": "/tmp", "pattern": "mattermost-autolink.+\\.tar\\.gz", "recurse": false, "use_regex": true}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "find old Mattermost team installer files in /tmp", "module": "find", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "find old Mattermost team installer files in /tmp", "register": "all_mm_team", "tags": ["cleanup_tmp"]}, "module_options": {"path": "/tmp", "pattern": "mattermost-team.+\\.tar\\.gz", "recurse": false, "use_regex": true}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "select all but the latest 2 installers for cleanup", "module": "set_fact", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "select all but the latest 2 installers for cleanup", "tags": ["cleanup_tmp"]}, "module_options": {"autolink_delete": "{{ (all_mm_autolink.files|sort(attribute='mtime')|map(attribute='path')|list)[:all_mm_autolink.matched-2] }}", "team_delete": "{{ (all_mm_team.files|sort(attribute='mtime')|map(attribute='path')|list)[:all_mm_team.matched-2] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "perform tmp cleanup of old installer files", "module": "file", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "perform tmp cleanup of old installer files", "with_items": ["{{ autolink_delete }}", "{{ team_delete }}"], "tags": ["cleanup_tmp"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml", "options": {}, "module_options": "mattermost.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "learner-profile-dashboard", "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard", "fqcn": "learner-profile-dashboard", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "ensure nginx config directory exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "ensure nginx config directory exists"}, "module_options": {"path": "/etc/nginx/sites-enabled", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "prepare nginx site", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "prepare nginx site"}, "module_options": "src=lpd.site dest=/etc/nginx/sites-enabled/lpd", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart nginx", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "restart nginx"}, "module_options": "name=nginx state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "checkout repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "checkout repository"}, "module_options": {"repo": "{{ LPD_REPOSITORY }}", "version": "{{ LPD_REPOSITORY_VERSION }}", "dest": "{{ LPD_APP_LOCATION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "requirements": "{{ LPD_APP_LOCATION }}/requirements/base.txt", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install gunicorn", "module": "pip", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install gunicorn"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "name": "Gunicorn==19.4.5", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install mysql client", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install mysql client"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "name": "mysqlclient", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create settings", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create settings"}, "module_options": {"src": "lpd_settings.py", "dest": "{{ LPD_APP_LOCATION }}/app/local_settings.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create static root", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create static root"}, "module_options": {"name": "{{ LPD_STATICFILES_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create media root", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create media root"}, "module_options": {"name": "{{ LPD_MEDIA_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "collectstatic", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "collectstatic"}, "module_options": "{{ LPD_MANAGE_PY }} collectstatic --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "migrate", "module": "shell", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "migrate"}, "module_options": "{{ LPD_MANAGE_PY }} migrate --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create log download user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create log download user"}, "module_options": {"name": "{{ LPD_LOG_DOWNLOAD_USER }}", "home": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create ssh dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create ssh dir"}, "module_options": {"state": "directory", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{ LPD_LOG_DOWNLOAD_USER }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create authorized keys", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create authorized keys"}, "module_options": {"state": "touch", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{ LPD_LOG_DOWNLOAD_USER }}", "mode": 384}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add authorized keys", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "add authorized keys", "with_items": ["{{ LPD_LOG_DOWNLOAD_AUTHORIZED_KEYS }}"]}, "module_options": {"dest": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "line": "{{ item }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create directory for the logs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create directory for the logs", "with_items": ["{{ LPD_LOG_DOWNLOAD_DB_DIR }}", "{{ LPD_LOG_DOWNLOAD_LOG_DIR }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{LPD_LOG_DOWNLOAD_USER}}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "lpd-pre-backup.sh", "dest": "/usr/local/sbin/lpd-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy logrotate", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "copy logrotate"}, "module_options": "src=logrotate.d dest=/etc/logrotate.d/lpd", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "format log download volume", "module": "filesystem", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "options": {"name": "format log download volume"}, "module_options": {"dev": "{{ LPD_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "fstype": "{{ LPD_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "resizefs": true}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "mount log download volume", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "options": {"name": "mount log download volume"}, "module_options": {"src": "{{ LPD_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}", "fstype": "{{ LPD_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Ensure Gunicorn config directory exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "Ensure Gunicorn config directory exists"}, "module_options": {"path": "/etc/gunicorn.d", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "prepare config", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "prepare config"}, "module_options": {"src": "lpd.gunicorn", "dest": "/etc/gunicorn.d/lpd"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart gunicorn", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "restart gunicorn"}, "module_options": "name=gunicorn state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ LPD_REQUIREMENTS }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install build deps", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "install build deps"}, "module_options": {"name": "{{ PYTHON_BUILD_DEP_REQIREMENTS }}", "state": "build-dep"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create lpd user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Create lpd user"}, "module_options": {"name": "{{ LPD_USER_NAME }}", "home": "{{ LPD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log dir", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Create log dir"}, "module_options": {"name": "{{ LPD_LOG_DIR }}", "state": "directory", "owner": "{{ LPD_USER_NAME }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "deploy-app.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "deploy-gunicorn.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "configure_nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "log_volume.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "configure_log_download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Allow required ports", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "common-apache2", "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2", "fqcn": "common-apache2", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install common packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "install common packages", "vars": {"packages": ["apache2", "build-essential", "git", "libffi-dev", "openssl", "python-dev", "python-pip", "python-setuptools"]}}, "module_options": {"name": "{{ packages }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install snapd", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Install snapd"}, "module_options": {"name": "snapd"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install certbot snap", "module": "command", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Install certbot snap"}, "module_options": "snap install certbot --classic", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable systemd timer", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Disable systemd timer"}, "module_options": {"name": "snap.certbot.renew.timer", "state": "stopped", "enabled": false}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "include `certbot-renew.sh` script", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "include `certbot-renew.sh` script", "become": true}, "module_options": {"src": "certbot-renew.sh", "dest": "/root/certbot-renew.sh", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create cron job to periodically renew certificates", "module": "cron", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Create cron job to periodically renew certificates"}, "module_options": {"name": "certbot renew", "user": "root", "job": "perl -e 'sleep int(rand(43200))' && /root/certbot-renew.sh", "minute": "0", "hour": "*/12", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set MAILTO variable for certbot renew cron job", "module": "cron", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Set MAILTO variable for certbot renew cron job"}, "module_options": {"name": "MAILTO", "env": true, "job": "ops@opencraft.com", "user": "root", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "prometheus", "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus", "fqcn": "prometheus", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Grafana \u2013 add apt key", "module": "apt_key", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 add apt key"}, "module_options": {"url": "https://packages.grafana.com/gpg.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 add apt repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 add apt repository"}, "module_options": {"repo": "deb https://packages.grafana.com/oss/deb stable main", "filename": "grafana"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 install Debian package", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 install Debian package"}, "module_options": {"name": "grafana", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 only listen on localhost", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 only listen on localhost"}, "module_options": {"path": "/etc/grafana/grafana.ini", "regexp": "http_addr.*=", "line": "http_addr = 127.0.0.1"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 start server", "module": "service", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 start server"}, "module_options": {"name": "grafana-server", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy Let's Encrypt stage CA cert", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "copy Let's Encrypt stage CA cert"}, "module_options": {"src": "lets-encrypt-fake-cert.crt", "dest": "{{ PROMETHEUS_LETSENCRYPT_STAGE_CA }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure rsyslog to send Prometheus logs to a separate file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "configure rsyslog to send Prometheus logs to a separate file"}, "module_options": {"content": ":programname, isequal, \"prometheus\"    /var/log/prometheus.log\n", "dest": "/etc/rsyslog.d/prometheus.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure log rotation for the Prometheus logs", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "configure log rotation for the Prometheus logs"}, "module_options": {"src": "logrotate", "dest": "/etc/logrotate.d/prometheus"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure prometheus service directory exists", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "ensure prometheus service directory exists"}, "module_options": {"path": "/etc/systemd/system/prometheus.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set the nofile limit for prometheus service to a high number", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "set the nofile limit for prometheus service to a high number"}, "module_options": {"content": "[Service]\nLimitNOFILE=infinity\n", "dest": "/etc/systemd/system/prometheus.service.d/override.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {}, "module_options": "grafana.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "postfix", "defined_in": "testdata3/scm_repo/playbooks/roles/postfix", "fqcn": "postfix", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install apt packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "install apt packages"}, "module_options": {"name": ["ca-certificates", "dovecot-core", "libsasl2-modules", "postfix", "sasl2-bin"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy TLS certificate", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "copy TLS certificate"}, "module_options": {"dest": "{{ POSTFIX_TLS_CERT }}", "content": "{{ POSTFIX_TLS_CERT_CONTENT }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy TLS private key", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "copy TLS private key"}, "module_options": {"dest": "{{ POSTFIX_TLS_KEY }}", "content": "{{ POSTFIX_TLS_KEY_CONTENT }}", "owner": "root", "group": "ssl-cert", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Postfix main.cf configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Postfix main.cf configuration file"}, "module_options": {"dest": "/etc/postfix/main.cf", "src": "main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write /etc/mailname", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write /etc/mailname"}, "module_options": {"dest": "/etc/mailname", "content": "{{ POSTFIX_MAILNAME }}\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write /etc/aliases", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write /etc/aliases"}, "module_options": {"dest": "/etc/aliases", "src": "aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure sasl client passwords", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "configure sasl client passwords"}, "module_options": {"src": "client-passwd.j2", "dest": "{{ POSTFIX_SASL_CLIENT_PASSWORD_FILE }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "call postmap on sasl client password file", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "call postmap on sasl client password file"}, "module_options": "postmap \"{{ POSTFIX_SASL_CLIENT_PASSWORD_FILE }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure relay maps", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "configure relay maps"}, "module_options": {"src": "relay_maps.j2", "dest": "{{ POSTFIX_RELAY_MAPS_FILE }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "call postmap on relay maps file", "module": "command", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "call postmap on relay maps file"}, "module_options": "postmap \"{{ POSTFIX_RELAY_MAPS_FILE }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Dovecot master configuration file", "module": "copy", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot master configuration file"}, "module_options": {"dest": "/etc/dovecot/conf.d/10-master.conf", "src": "dovecot-master.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Dovecot auth configuration file", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot auth configuration file"}, "module_options": {"dest": "/etc/dovecot/conf.d/10-auth.conf", "src": "dovecot-auth.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate Dovecot password hashes", "module": "command", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "generate Dovecot password hashes", "register": "dovecot_users", "with_items": "{{ POSTFIX_SASL_USERS }}"}, "module_options": "doveadm pw -s SHA512-CRYPT -p {{ item.password }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Dovecot password file", "module": "copy", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot password file"}, "module_options": {"dest": "{{ POSTFIX_SASL_SERVER_PASSWORD_FILE }}", "content": "{% for item in dovecot_users.results -%}\n{{ item.item.user }}:{{ item.stdout }}\n{% endfor %}\n", "owner": "root", "group": "dovecot", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart services", "module": "service", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "restart services", "with_items": ["dovecot", "postfix"]}, "module_options": {"name": "{{ item }}", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open SMTP port on the firewall", "module": "ufw", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "open SMTP port on the firewall"}, "module_options": {"rule": "allow", "port": 25, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "unbound", "defined_in": "testdata3/scm_repo/playbooks/roles/unbound", "fqcn": "unbound", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install unbound and resolvconf", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml", "options": {"name": "Install unbound and resolvconf", "with_items": ["unbound", "resolvconf"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/unbound"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the configuration for caching and forwarding", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml", "options": {"name": "Copy the configuration for caching and forwarding", "notify": ["restart unbound"]}, "module_options": {"src": "cache-and-forward.conf.j2", "dest": "{{ unbound_config_dir }}/cache-and-forward.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/unbound"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "docker-compose", "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose", "fqcn": "docker-compose", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install dependencies", "tags": ["docker"]}, "module_options": {"name": ["apt-transport-https", "ca-certificates", "curl", "gnupg-agent", "software-properties-common", "python3-pip"], "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker official GPG key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Add Docker official GPG key", "tags": ["docker"]}, "module_options": {"url": "https://download.docker.com/linux/ubuntu/gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify that we have the key with the fingerprint", "module": "apt_key", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Verify that we have the key with the fingerprint", "tags": ["docker"]}, "module_options": {"id": "0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set up the stable repository", "module": "apt_repository", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Set up the stable repository", "tags": ["docker"]}, "module_options": {"repo": "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt packages", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Update apt packages", "tags": ["docker"]}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install docker", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install docker", "notify": "Start docker on boot", "tags": ["docker"]}, "module_options": {"name": ["docker-ce", "docker-ce-cli", "containerd.io"], "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Python dependencies", "module": "pip", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install Docker Python dependencies"}, "module_options": {"name": ["docker", "docker-compose"]}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create \"docker\" group", "module": "group", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Create \"docker\" group", "tags": ["docker"]}, "module_options": {"name": "docker", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add remote \"ubuntu\" user to \"docker\" group", "module": "user", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Add remote \"ubuntu\" user to \"docker\" group", "tags": ["docker"]}, "module_options": {"name": "ubuntu", "group": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install docker-compose", "module": "uri", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install docker-compose", "tags": ["docker"]}, "module_options": {"url": "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture}}", "dest": "/usr/local/bin/docker-compose", "status_code": "200, 304"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Give permissions to docker-compose", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Give permissions to docker-compose"}, "module_options": {"path": "/usr/local/bin/docker-compose", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "consul-template", "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template", "fqcn": "consul-template", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create consul group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul group"}, "module_options": {"name": "consul", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul user"}, "module_options": {"name": "consul", "group": "consul", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul-template directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul-template directories", "with_items": [{"path": "/etc/consul-template/config", "owner": "root"}, {"path": "/etc/consul-template/templates", "owner": "root"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "consul", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current consul-template version", "module": "shell", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Determine current consul-template version", "register": "consul_template_current_version", "changed_when": false}, "module_options": "consul-template --version 2>&1 >/dev/null | cut -d\" \" -f 2 - | cut -b 2- -", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unarchive the consul-template binary", "module": "unarchive", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Download and unarchive the consul-template binary", "when": "consul_template_current_version.rc != 0 or consul_template_current_version.stdout != consul_template_version"}, "module_options": {"src": "{{ consul_template_url }}", "dest": "{{ consul_template_bin_dir }}", "owner": "consul", "group": "consul", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "ernestas-poskus.prometheus", "defined_in": "testdata3/scm_repo/playbooks/roles/ernestas-poskus.prometheus", "fqcn": "ernestas-poskus.prometheus", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "sprintcraft", "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft", "fqcn": "sprintcraft", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Allow web ports on firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Allow web ports on firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Set authorized key for CircleCI", "module": "authorized_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Set authorized key for CircleCI"}, "module_options": {"user": "ubuntu", "state": "present", "key": "{{ CI_SSH_PUBLIC_KEY }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "ansible.posix.authorized_key", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create the app directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Create the app directory"}, "module_options": {"path": "{{ APP_PATH }}", "state": "directory", "owner": "ubuntu", "group": "ubuntu", "mode": 509}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the deployment script", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Copy the deployment script", "become_user": "ubuntu"}, "module_options": {"src": "deploy.sh", "dest": "{{ APP_PATH }}/", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Install the docker-compose file", "become_user": "ubuntu"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ APP_PATH }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker cleanup cron job", "module": "cron", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Install Docker cleanup cron job", "become_user": "ubuntu"}, "module_options": {"name": "Remove unused Docker data", "job": "docker system prune -f", "special_time": "daily"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate the environment file", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Generate the environment file", "become_user": "ubuntu", "tags": "configuration"}, "module_options": {"src": "env.j2", "dest": "{{ APP_PATH }}/.env", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start SprintCraft with docker-compose", "module": "docker_compose", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Start SprintCraft with docker-compose", "become_user": "ubuntu"}, "module_options": {"project_src": "{{ APP_PATH }}", "pull": true}, "executable": "docker_compose", "executable_type": "Module", "fqcn": "community.docker.docker_compose", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Restart SprintCraft services after reconfiguring them", "module": "docker_compose", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Restart SprintCraft services after reconfiguring them", "tags": ["never", "configuration"]}, "module_options": {"project_src": "{{ APP_PATH }}", "restarted": true, "services": ["django", "celeryworker"]}, "executable": "docker_compose", "executable_type": "Module", "fqcn": "community.docker.docker_compose", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "redis-exporter", "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter", "fqcn": "redis-exporter", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create Consul config directory", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml", "options": {"name": "create Consul config directory"}, "module_options": {"path": "/etc/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/redis-exporter"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create Consul service definition file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml", "options": {"name": "create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ REDIS_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/redis-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/redis-exporter"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "appserver", "defined_in": "testdata3/scm_repo/playbooks/roles/appserver", "fqcn": "appserver", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Set up Consul Connect proxy endpoints for memcached and Redis", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml", "options": {"name": "Set up Consul Connect proxy endpoints for memcached and Redis", "vars": {"upstream_specs": "{{ appserver_memcached_upstream_specs }}{{ appserver_redis_upstream_specs }}"}}, "module_options": {"src": "consul-connect.service.j2", "dest": "/etc/systemd/system/consul-connect.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/appserver"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable the Consul Connect proxy", "module": "systemd", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml", "options": {"name": "Start and enable the Consul Connect proxy"}, "module_options": {"name": "consul-connect.service", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/appserver"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "wsgi-app", "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app", "fqcn": "wsgi-app", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Set login shell for the {{ www_user }} user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Set login shell for the {{ www_user }} user"}, "module_options": {"name": "{{ www_user }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the {{ www_dir }} directory", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Create the {{ www_dir }} directory"}, "module_options": {"path": "{{ www_dir }}", "owner": "{{ www_user }}", "group": "{{ www_user }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the {{ app_name }} repository", "module": "git", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Clone the {{ app_name }} repository", "become_user": "{{ www_user }}"}, "module_options": {"repo": "{{ app_repo }}", "dest": "{{ app_deploy_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the virtualenv package", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install the virtualenv package"}, "module_options": {"name": "virtualenv", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the virtualenv environment and install the requirements", "module": "pip", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Create the virtualenv environment and install the requirements"}, "module_options": {"requirements": "{{ app_deploy_dir }}/requirements.txt", "virtualenv": "{{ app_virtualenv_dir }}", "virtualenv_python": "python3.6"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gunicorn", "module": "pip", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install gunicorn"}, "module_options": {"name": "gunicorn=={{ gunicorn_version }}", "virtualenv": "{{ app_virtualenv_dir }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the script for running the application", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install the script for running the application", "become_user": "{{ www_user }}", "tags": "wsgi-app-env-file"}, "module_options": {"src": "run.sh", "dest": "{{ www_dir }}/{{ app_name}}_run.sh", "mode": 448, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install supervisor", "module": "apt", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install supervisor"}, "module_options": {"name": "supervisor", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install supervisor configuration", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install supervisor configuration"}, "module_options": {"src": "supervisor.conf", "dest": "/etc/supervisor/conf.d/{{ app_name }}.conf", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart supervisor", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Restart supervisor"}, "module_options": {"name": "supervisor", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.security", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.security", "fqcn": "geerlingguy.security", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "greendayonfire.mongodb", "defined_in": "testdata3/scm_repo/playbooks/roles/greendayonfire.mongodb", "fqcn": "greendayonfire.mongodb", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "kibana-email-alert", "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert", "fqcn": "kibana-email-alert", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy alert script", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Copy alert script"}, "module_options": {"src": "kibana_email_alert.sh.j2", "dest": "/usr/local/sbin/kibana_email_alert.sh", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "kibana_email_alert.service.j2", "dest": "/etc/systemd/system/kibana_email_alert.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start the systemd service to start on boot automatically", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Enable and start the systemd service to start on boot automatically"}, "module_options": {"name": "kibana_email_alert.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "elasticsearch", "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch", "fqcn": "elasticsearch", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create Elasticsearch role", "module": "uri", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Create Elasticsearch role", "with_items": "{{ elasticsearch_create_roles }}", "when": "elasticsearch_create_roles is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/role/{{ item.name }}", "method": "POST", "body_format": "json", "body": "{{ item.permissions }}", "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Elasticsearch user", "module": "uri", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Create Elasticsearch user", "with_items": "{{ elasticsearch_create_users }}", "when": "elasticsearch_create_users is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/{{ item.username }}", "method": "POST", "body_format": "json", "body": {"password": "{{ item.password }}", "roles": "{{ item.roles }}"}, "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Update password for Elasticsearch user", "module": "uri", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Update password for Elasticsearch user", "with_items": "{{ elasticsearch_create_users }}", "when": "elasticsearch_create_users is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/{{ item.username }}/_password", "method": "POST", "body_format": "json", "body": {"password": "{{ item.password }}"}, "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "openjdk-8-jdk"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elasticsearch apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Add Elasticsearch apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elasticsearch repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Add Elasticsearch repository"}, "module_options": {"repo": "{{ elasticsearch_repo }}"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch"}, "module_options": {"name": "{{ elasticsearch_package }}", "force": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Elasticsearch directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Create Elasticsearch directories", "with_items": ["{{ elasticsearch_data_dir }}", "{{ elasticsearch_log_dir }}", "{{ elasticsearch_cfg_dir }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "elasticsearch", "group": "elasticsearch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 1", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 1", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"src": "http.p12.b64.j2", "dest": "{{ elasticsearch_cfg_dir }}/http.p12.b64"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 2", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 2", "args": {"creates": "{{ elasticsearch_cfg_dir }}/http.p12"}, "when": "elasticsearch_keystore|length > 0"}, "module_options": "base64 -d {{ elasticsearch_cfg_dir }}/http.p12.b64 > {{ elasticsearch_cfg_dir }}/http.p12", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 3", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 3", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"path": "{{ elasticsearch_cfg_dir }}/http.p12", "owner": "elasticsearch", "group": "elasticsearch", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 4", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 4", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"path": "{{ elasticsearch_cfg_dir }}/http.p12.b64", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Elasticsearch", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Configure Elasticsearch", "notify": "restart elasticsearch"}, "module_options": {"src": "elasticsearch.yml.j2", "dest": "/etc/elasticsearch/elasticsearch.yml", "group": "elasticsearch", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Elasticsearch extra jvm options", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Elasticsearch extra jvm options", "notify": "restart elasticsearch", "when": "elasticsearch_extra_jvm_options|length > 0"}, "module_options": {"src": "50-extra-jvm.options.j2", "dest": "/etc/elasticsearch/jvm.options.d/50-extra-jvm.options", "group": "elasticsearch", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set bootstrap password", "module": "shell", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Set bootstrap password", "when": "elasticsearch_password|length > 0"}, "module_options": "echo \"{{ elasticsearch_password }}\" | {{ elasticsearch_bin_dir }}/elasticsearch-keystore add -f -x 'bootstrap.password'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Elasticsearch", "module": "service", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Start Elasticsearch"}, "module_options": {"name": "elasticsearch", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup password for user kibana_system", "module": "uri", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Setup password for user kibana_system", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/kibana_system/_password", "method": "POST", "body_format": "json", "body": "{ \"password\":\"{{ kibana_elasticsearch_password }}\" }", "status_code": 200, "user": "elastic", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open Elasticsearch ports on the firewall", "module": "ufw", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Open Elasticsearch ports on the firewall", "with_items": ["{{ elasticsearch_http_port }}"]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "node-exporter", "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter", "fqcn": "node-exporter", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create Consul config directory", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "create Consul config directory"}, "module_options": {"path": "/etc/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create Consul service definition file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ NODE_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/node-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nodeexporter", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "enable nodeexporter"}, "module_options": {"name": "nodeexporter.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "kamaln7.swapfile", "defined_in": "testdata3/scm_repo/playbooks/roles/kamaln7.swapfile", "fqcn": "kamaln7.swapfile", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "vault", "defined_in": "testdata3/scm_repo/playbooks/roles/vault", "fqcn": "vault", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create vault group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault group"}, "module_options": {"name": "vault", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create vault user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault user"}, "module_options": {"name": "vault", "group": "vault", "createhome": "{{ vault_user_createhome }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create vault directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault directories", "with_items": [{"path": "{{ vault_bin_dir }}", "owner": "root"}, {"path": "{{ vault_log_dir }}", "owner": "vault"}, {"path": "{{ vault_config_dir }}", "owner": "vault"}, {"path": "{{ vault_policy_dir }}", "owner": "vault"}, {"path": "{{ vault_tls_dir }}", "owner": "vault"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "vault", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Vault private TLS content", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Copy over Vault private TLS content", "with_items": [{"content": "{{ vault_tls_cert }}", "dest": "{{ vault_tcp_tls_cert_file }}"}, {"content": "{{ vault_tls_key }}", "dest": "{{ vault_tcp_tls_key_file }}"}, {"content": "{{ vault_tls_ca }}", "dest": "{{ vault_tcp_tls_client_ca_file }}"}], "no_log": true, "notify": "restart vault"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current Vault version", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Determine current Vault version", "register": "vault_current_version", "changed_when": false}, "module_options": "vault version | cut -d\" \" -f 2 - | cut -b 2- -", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unarchive the Vault binary", "module": "unarchive", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Download and unarchive the Vault binary", "when": "vault_current_version.rc != 0 or vault_current_version.stdout != vault_version", "register": "vault_binary", "notify": "restart vault"}, "module_options": {"src": "{{ vault_url }}", "dest": "{{ vault_bin_dir }}", "owner": "vault", "group": "vault", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure `vault` autocomplete", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Configure `vault` autocomplete", "become": false, "when": "vault_binary.changed", "ignore_errors": true}, "module_options": "vault -autocomplete-install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Vault environment variables", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Install Vault environment variables", "become": false}, "module_options": {"src": "vault-env.j2", "dest": "/home/{{ ansible_ssh_user }}/.vault-env"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Source Vault environment variables", "module": "lineinfile", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Source Vault environment variables", "become": false}, "module_options": {"path": "/home/{{ ansible_ssh_user }}/.bashrc", "line": "source $HOME/.vault-env"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Vault configuration file", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create Vault configuration file", "notify": "restart vault"}, "module_options": {"src": "config.hcl.j2", "dest": "{{ vault_config_dir }}/config.hcl", "group": "vault"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Vault systemd service file", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create Vault systemd service file"}, "module_options": {"src": "vault.service.j2", "dest": "/etc/systemd/system/vault.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"name": "vault.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open TCP port on firewall needed for Vault server-to-server communication", "module": "ufw", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Open TCP port on firewall needed for Vault server-to-server communication", "when": "vault_ufw"}, "module_options": {"rule": "allow", "port": "8200:8201", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow the mlock syscall to be used by the Vault binary", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Allow the mlock syscall to be used by the Vault binary", "register": "result", "changed_when": "'cap_ipc_lock set' in result.stdout"}, "module_options": "if getcap $(readlink -f {{ vault_bin_dir }}/vault) | grep -q '= cap_ipc_lock+ep' ; then\n  echo already set\nelse\n  setcap cap_ipc_lock=+ep $(readlink -f {{ vault_bin_dir }}/vault)\n  echo cap_ipc_lock set\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "matomo", "defined_in": "testdata3/scm_repo/playbooks/roles/matomo", "fqcn": "matomo", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Allow web ports on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Allow web ports on the firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create the Matomo deployment and configuration directories", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Create the Matomo deployment and configuration directories", "with_items": ["{{ MATOMO_DOCKER_COMPOSE_DIR }}", "{{ MATOMO_CONFIG_DIR }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the docker-compose file"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose environment configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the docker-compose environment configuration file"}, "module_options": {"src": "matomo.env.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_ENV_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Matomo archive reports script to use in the cron job", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the Matomo archive reports script to use in the cron job"}, "module_options": {"src": "matomo_archive_reports.sh.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/matomo_archive_reports.sh", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the app with docker-compose", "module": "docker_service", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Start the app with docker-compose"}, "module_options": {"project_src": "{{ MATOMO_DOCKER_COMPOSE_DIR }}", "pull": true, "debug": true}, "executable": "docker_service", "executable_type": "Module", "fqcn": "community.general.docker_service", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Install the Matomo archive script cron job", "module": "cron", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the Matomo archive script cron job"}, "module_options": {"name": "Run the Matomo archive script", "job": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/matomo_archive_reports.sh", "special_time": "hourly", "user": "root", "cron_file": "matomo_archive_reports"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "elastic.elasticsearch", "defined_in": "testdata3/scm_repo/playbooks/roles/elastic.elasticsearch", "fqcn": "elastic.elasticsearch", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}], "installed_collections_path": "testdata3/installed_collections_path", "installed_collections": [{"py/object": "struct4.Collection", "name": "community.general-1.3.14.info.GALAXY.yml", "path": "testdata3/installed_collections_path/ansible_collections/community.general-1.3.14.info/GALAXY.yml", "playbooks": [], "roles": [], "modules": [], "annotations": {}}, {"py/object": "struct4.Collection", "name": "google.cloud", "path": "testdata3/installed_collections_path/ansible_collections/google/cloud", "playbooks": [], "roles": [{"py/object": "struct4.Role", "name": "gcloud", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud", "fqcn": "google.cloud.gcloud", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "gcloud | Load Distro and OS specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "options": {"name": "gcloud | Load Distro and OS specific variables", "vars": {"params": {"files": ["os/{{ ansible_distribution|lower }}.yml", "os/{{ ansible_os_family|lower }}.yml", "main.yml"], "paths": ["vars"]}}}, "module_options": "{{ lookup('first_found', params) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Install the google-cloud-sdk from {{ gcloud_install_type }}", "module": "include_tasks", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "options": {"name": "gcloud | Install the google-cloud-sdk from {{ gcloud_install_type }}"}, "module_options": "{{ gcloud_install_type }}/main.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Debian | Ensure bash completion is installed", "module": "apt", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Debian | Ensure bash completion is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "when": "ansible_os_family == \"Debian\""}, "module_options": "name=bash-completion", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | RedHat | Ensure bash completion is installed", "module": "yum", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | RedHat | Ensure bash completion is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": ["bash-completion"]}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Ensure bash_completion.d directory exists", "module": "file", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Ensure bash_completion.d directory exists"}, "module_options": {"path": "/etc/bash_completion.d", "owner": "root", "group": "root", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "module": "file", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Link binaries to /usr/bin (like package install)"}, "module_options": {"src": "{{ gcloud_library_path }}/completion.bash.inc", "dest": "/etc/bash_completion.d/gcloud", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Ensure temp path exists", "module": "file", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Ensure temp path exists"}, "module_options": "path={{ gcloud_archive_path }} state=directory", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Extract Cloud SDK archive", "module": "unarchive", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Extract Cloud SDK archive"}, "module_options": {"src": "{{ gcloud_archive_url }}", "dest": "{{ gcloud_archive_path }}", "remote_src": true, "creates": "{{ gcloud_library_path }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "module": "file", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "loop": ["bq", "docker-credential-gcloud", "gcloud", "git-credential-gcloud.sh", "gsutil"], "when": "not gcloud_install_script"}, "module_options": {"src": "{{ gcloud_library_path }}/bin/{{ item }}", "dest": "/usr/bin/{{ item }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Add command completion", "module": "include_tasks", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Add command completion", "when": "gcloud_command_completion"}, "module_options": "command_completion.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Install into Path", "module": "command", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Install into Path", "when": "gcloud_install_script"}, "module_options": "{{ gcloud_archive_path }}/install.sh --quiet --usage-reporting {{ gcloud_usage_reporting | lower }} {% if gcloud_profile_path %}\n  --rc-path {{ gcloud_profile_path }}\n{% endif %} --command-completion {{ gcloud_command_completion | lower }} --path-update {{ gcloud_update_path | lower }} {% if gcloud_override_components | length > 0 %}--override-components\n  {% for component in gcloud_override_components %}{{ component }}\n    {% if loop.index < gcloud_override_components | length  %}\n    {% endif %}\n  {% endfor %}\n{% endif %} {% if gcloud_additional_components | length > 0 %}--additional-components\n  {% for component in gcloud_additional_components %}{{ component }}\n    {% if loop.index < gcloud_additional_components | length %}\n    {% endif %}\n  {% endfor %}\n{% endif %}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Look for existing Google Cloud SDK installation", "module": "stat", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Look for existing Google Cloud SDK installation", "register": "gcloud_status"}, "module_options": {"path": "{{ gcloud_archive_path }}/google-cloud-sdk/VERSION"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {}, "module_options": "var=gcloud_status", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Importing contents of {{ gcloud_archive_path }}/google-cloud-sdk/VERSION", "module": "slurp", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Importing contents of {{ gcloud_archive_path }}/google-cloud-sdk/VERSION", "register": "gcloud_installed_version_data"}, "module_options": {"src": "{{ gcloud_archive_path }}/google-cloud-sdk/VERSION"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Setting the gcloud_installed_version variable/fact", "module": "set_fact", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Setting the gcloud_installed_version variable/fact"}, "module_options": {"gcloud_installed_version": "{{ (gcloud_installed_version_data.content|b64decode|trim) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {}, "module_options": {"msg": "google-cloud-sdk: {{ gcloud_installed_version }} is installed"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 5, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"when": "gcloud_version == gcloud_installed_version"}, "module_options": {"msg": "Skipping installation of google-cloud-sdk version {{ gcloud_version }} when {{ gcloud_installed_version }} is already installed."}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Start installation", "module": "include_tasks", "index": 6, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Start installation", "when": "gcloud_installed_version is undefined or gcloud_version is version(gcloud_installed_version, '>')"}, "module_options": "archive_install.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "command", "index": 7, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "gcloud_install_comp_status", "changed_when": "'All components are up to date.' not in gcloud_install_comp_status.stderr_lines", "loop": "{{ gcloud_additional_components }}"}, "module_options": "gcloud components install {{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | RHEL | Add an Apt signing key, uses whichever key is at the URL", "module": "yum_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | RHEL | Add an Apt signing key, uses whichever key is at the URL"}, "module_options": {"name": "google-cloud-sdk", "description": "Google Cloud SDK", "file": "google-cloud-sdk", "baseurl": "https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": ["https://packages.cloud.google.com/yum/doc/yum-key.gpg", "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | RHEL | Install the google-cloud-sdk package", "module": "yum", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | RHEL | Install the google-cloud-sdk package", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=google-cloud-sdk update_cache=yes", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "loop": "{{ gcloud_additional_components }}"}, "module_options": "name=google-cloud-sdk-{{ item }} update_cache=yes", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Add an Apt signing key, uses whichever key is at the URL", "module": "apt_key", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Add an Apt signing key, uses whichever key is at the URL"}, "module_options": {"url": "{{ gcloud_apt_key }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Add the gcloud repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Add the gcloud repository"}, "module_options": {"repo": "deb {{ gcloud_apt_url }} {{ gcloud_apt_repo }} main", "state": "present", "filename": "google-cloud-sdk"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk package", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk package", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=google-cloud-sdk update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "loop": "{{ gcloud_additional_components }}"}, "module_options": "name=google-cloud-sdk-{{ item }} update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Start package installation for specific distro", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/main.yml", "options": {"name": "gcloud | Start package installation for specific distro"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "gcsfuse", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse", "fqcn": "google.cloud.gcsfuse", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "gcsfuse | Ensure gpg is installed", "module": "apt", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Ensure gpg is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=gnupg", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcsfuse | Add an apt signing key", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Add an apt signing key"}, "module_options": {"url": "https://packages.cloud.google.com/apt/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcsfuse | Add the apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Add the apt repository"}, "module_options": {"repo": "deb http://packages.cloud.google.com/apt gcsfuse-{{ ansible_distribution_release }} main", "state": "present", "filename": "gcsfuse"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcsfuse | Install gcsfuse", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Install gcsfuse", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=gcsfuse update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/main.yml", "options": {}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "gcp_http_lb", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb", "fqcn": "google.cloud.gcp_http_lb", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create a global address for the load balancer.", "module": "gcp_compute_global_address", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a global address for the load balancer.", "register": "globaladdress"}, "module_options": {"name": "{{ gcp_http_lb_globaladdress }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_global_address", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_global_address", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a http health check to verify lb working", "module": "gcp_compute_http_health_check", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a http health check to verify lb working", "register": "healthcheck"}, "module_options": {"name": "{{ gcp_http_lb_healthcheck }}", "healthy_threshold": 10, "port": 80, "timeout_sec": 2, "unhealthy_threshold": 5, "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_http_health_check", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_http_health_check", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a backend service", "module": "gcp_compute_backend_service", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a backend service", "register": "backendservice"}, "module_options": {"name": "{{ gcp_http_lb_backendservice }}", "backends": [{"group": "{{ gcp_http_lb_backend.selfLink }}"}], "health_checks": ["{{ healthcheck.selfLink }}"], "enable_cdn": "{{ gcp_http_lb_cdn }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_backend_service", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_backend_service", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a url map", "module": "gcp_compute_url_map", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a url map", "register": "urlmap"}, "module_options": {"name": "{{ gcp_http_lb_urlmap }}", "default_service": "{{ backendservice }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_url_map", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_url_map", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a target http proxy", "module": "gcp_compute_target_http_proxy", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a target http proxy", "register": "httpproxy"}, "module_options": {"name": "{{ gcp_http_lb_httpproxy }}", "url_map": "{{ urlmap }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_target_http_proxy", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_target_http_proxy", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a global forwarding rule", "module": "gcp_compute_global_forwarding_rule", "index": 5, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a global forwarding rule", "register": "result"}, "module_options": {"name": "{{ gcp_http_lb_forwardingrule }}", "ip_address": "{{ globaladdress.address }}", "load_balancing_scheme": "EXTERNAL", "ip_protocol": "TCP", "port_range": "80-80", "target": "{{ httpproxy.selfLink }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_global_forwarding_rule", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_global_forwarding_rule", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "stackdriver_logging", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging", "fqcn": "google.cloud.stackdriver_logging", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Install the Python bindings for SELinux", "module": "yum", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Install the Python bindings for SELinux"}, "module_options": "name=libselinux-python state=present", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Add the Stackdriver repository", "module": "yum_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Add the Stackdriver repository"}, "module_options": {"name": "google-cloud-logging", "description": "Google Cloud Logging Agent Repository", "baseurl": "{{ stackdriver_log_yum_repo }}", "file": "google-cloud-logging", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": "{{ stackdriver_log_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Install Stackdriver agent", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Install Stackdriver agent", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_log_package_name }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Add the Stackdriver repository", "module": "apt_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Add the Stackdriver repository"}, "module_options": {"repo": "deb {{ stackdriver_log_apt_repo_url }} {{ stackdriver_log_apt_repo_name }} main", "filename": "google-cloud-logging", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Ensure Stackdriver's GPG key is available.", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Ensure Stackdriver's GPG key is available."}, "module_options": {"url": "{{ stackdriver_log_apt_repo_url }}/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Install the Stackdriver agent", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Install the Stackdriver agent", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_log_package_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Install the Stackdriver catch all config", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Install the Stackdriver catch all config", "when": "stackdriver_log_catch_all_conf"}, "module_options": {"name": "{{ stackdriver_log_config_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | OS Based Installation", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | OS Based Installation"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Install the Stackdriver defaults file", "module": "template", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | Install the Stackdriver defaults file", "when": "stackdriver_http_proxy is defined or stackdriver_https_proxy is defined"}, "module_options": {"src": "default/google-fluentd", "dest": "/etc/default/google-fluentd"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Install the logging files", "module": "template", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | Install the logging files", "loop": "{{ stackdriver_log_files }}", "when": "stackdriver_log_files is defined", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"src": "source.conf", "dest": "/etc/google-fluentd/config.d/{{ item.name }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "stackdriver_monitoring", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring", "fqcn": "google.cloud.stackdriver_monitoring", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Install the Python bindings for SELinux", "module": "yum", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Install the Python bindings for SELinux"}, "module_options": "name=libselinux-python state=present", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Add the Stackdriver repository", "module": "yum_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Add the Stackdriver repository"}, "module_options": {"name": "google-cloud-monitoring", "description": "Google Cloud Monitoring Agent Repository", "baseurl": "{{ stackdriver_mon_yum_repo }}", "file": "google-cloud-monitoring", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": "{{ stackdriver_mon_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Install Stackdriver agent", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Install Stackdriver agent", "notify": "Stackdriver Monitoring | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_mon_package_name }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Add the Stackdriver repository", "module": "apt_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Add the Stackdriver repository"}, "module_options": {"repo": "deb {{ stackdriver_mon_apt_repo_url }} {{ stackdriver_mon_apt_repo_name }} main", "filename": "google-cloud-monitoring", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Ensure Stackdriver's GPG key is available.", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Ensure Stackdriver's GPG key is available."}, "module_options": {"url": "{{ stackdriver_mon_apt_repo_url }}/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Install the Stackdriver agent", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Install the Stackdriver agent", "notify": "Stackdriver Monitoring | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_mon_package_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | OS Based Installation", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/main.yml", "options": {"name": "Stackdriver Monitoring | OS Based Installation"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [{"py/object": "struct4.Module", "name": "gcp_compute_target_https_proxy_info", "fqcn": "google.cloud.gcp_compute_target_https_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_https_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_firewall_info", "fqcn": "google.cloud.gcp_compute_firewall_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_firewall_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_mlengine_model", "fqcn": "google.cloud.gcp_mlengine_model", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_model.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_bigquery_dataset", "fqcn": "google.cloud.gcp_bigquery_dataset", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_dataset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_backend_service", "fqcn": "google.cloud.gcp_compute_backend_service", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_service.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 2}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_node_template_info", "fqcn": "google.cloud.gcp_compute_node_template_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_template_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_interconnect_attachment", "fqcn": "google.cloud.gcp_compute_interconnect_attachment", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_interconnect_attachment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sql_database", "fqcn": "google.cloud.gcp_sql_database", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_dns_managed_zone_info", "fqcn": "google.cloud.gcp_dns_managed_zone_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_managed_zone_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_config", "fqcn": "google.cloud.gcp_runtimeconfig_config", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_ssl_certificate", "fqcn": "google.cloud.gcp_compute_ssl_certificate", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_certificate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_mlengine_version_info", "fqcn": "google.cloud.gcp_mlengine_version_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_version_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_node_group_info", "fqcn": "google.cloud.gcp_compute_node_group_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sql_user", "fqcn": "google.cloud.gcp_sql_user", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_global_forwarding_rule", "fqcn": "google.cloud.gcp_compute_global_forwarding_rule", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_forwarding_rule.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 5}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_health_check_info", "fqcn": "google.cloud.gcp_compute_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_iam_role", "fqcn": "google.cloud.gcp_iam_role", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_kms_crypto_key", "fqcn": "google.cloud.gcp_kms_crypto_key", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_crypto_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_iam_service_account_info", "fqcn": "google.cloud.gcp_iam_service_account_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_service_account_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_container_node_pool", "fqcn": "google.cloud.gcp_container_node_pool", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_node_pool.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_tcp_proxy", "fqcn": "google.cloud.gcp_compute_target_tcp_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_tcp_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudbuild_trigger", "fqcn": "google.cloud.gcp_cloudbuild_trigger", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudbuild_trigger.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance_group_manager", "fqcn": "google.cloud.gcp_compute_instance_group_manager", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance_template_info", "fqcn": "google.cloud.gcp_compute_instance_template_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_template_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_backend_service_info", "fqcn": "google.cloud.gcp_compute_region_backend_service_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_backend_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudscheduler_job_info", "fqcn": "google.cloud.gcp_cloudscheduler_job_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudscheduler_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_global_address", "fqcn": "google.cloud.gcp_compute_global_address", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_address.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_ssl_proxy", "fqcn": "google.cloud.gcp_compute_target_ssl_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_ssl_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_autoscaler", "fqcn": "google.cloud.gcp_compute_autoscaler", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_autoscaler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudfunctions_cloud_function_info", "fqcn": "google.cloud.gcp_cloudfunctions_cloud_function_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudfunctions_cloud_function_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_https_health_check", "fqcn": "google.cloud.gcp_compute_https_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_https_health_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_route", "fqcn": "google.cloud.gcp_compute_route", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_http_proxy", "fqcn": "google.cloud.gcp_compute_target_http_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_http_proxy.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 4}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_https_health_check_info", "fqcn": "google.cloud.gcp_compute_https_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_https_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance_group_manager_info", "fqcn": "google.cloud.gcp_compute_instance_group_manager_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_kms_key_ring", "fqcn": "google.cloud.gcp_kms_key_ring", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_key_ring.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_target_https_proxy_info", "fqcn": "google.cloud.gcp_compute_region_target_https_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_https_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_backend_service_info", "fqcn": "google.cloud.gcp_compute_backend_service_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_address", "fqcn": "google.cloud.gcp_compute_address", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_address.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_reservation_info", "fqcn": "google.cloud.gcp_compute_reservation_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_reservation_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_bigquery_dataset_info", "fqcn": "google.cloud.gcp_bigquery_dataset_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_dataset_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_router_info", "fqcn": "google.cloud.gcp_compute_router_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_router_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_disk_info", "fqcn": "google.cloud.gcp_compute_region_disk_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_disk_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_tpu_node", "fqcn": "google.cloud.gcp_tpu_node", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_tpu_node.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_forwarding_rule", "fqcn": "google.cloud.gcp_compute_forwarding_rule", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_forwarding_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance", "fqcn": "google.cloud.gcp_compute_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_vpn_gateway_info", "fqcn": "google.cloud.gcp_compute_target_vpn_gateway_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_vpn_gateway_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_resource_policy", "fqcn": "google.cloud.gcp_compute_resource_policy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_resource_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_serviceusage_service_info", "fqcn": "google.cloud.gcp_serviceusage_service_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_serviceusage_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_spanner_instance_info", "fqcn": "google.cloud.gcp_spanner_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_redis_instance", "fqcn": "google.cloud.gcp_redis_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_redis_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_ssl_proxy_info", "fqcn": "google.cloud.gcp_compute_target_ssl_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_ssl_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_config_info", "fqcn": "google.cloud.gcp_runtimeconfig_config_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_config_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_https_proxy", "fqcn": "google.cloud.gcp_compute_target_https_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_https_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_route_info", "fqcn": "google.cloud.gcp_compute_route_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_route_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_spanner_database_info", "fqcn": "google.cloud.gcp_spanner_database_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_database_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sql_instance", "fqcn": "google.cloud.gcp_sql_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_dns_resource_record_set", "fqcn": "google.cloud.gcp_dns_resource_record_set", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_resource_record_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance_group_info", "fqcn": "google.cloud.gcp_compute_instance_group_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sql_ssl_cert", "fqcn": "google.cloud.gcp_sql_ssl_cert", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_ssl_cert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_resourcemanager_project", "fqcn": "google.cloud.gcp_resourcemanager_project", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_resourcemanager_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_redis_instance_info", "fqcn": "google.cloud.gcp_redis_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_redis_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_iam_service_account", "fqcn": "google.cloud.gcp_iam_service_account", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_service_account.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_target_http_proxy_info", "fqcn": "google.cloud.gcp_compute_region_target_http_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_http_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_mlengine_version", "fqcn": "google.cloud.gcp_mlengine_version", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_version.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudtasks_queue", "fqcn": "google.cloud.gcp_cloudtasks_queue", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudtasks_queue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_container_cluster_info", "fqcn": "google.cloud.gcp_container_cluster_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_cluster_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_router", "fqcn": "google.cloud.gcp_compute_router", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_router.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance_group", "fqcn": "google.cloud.gcp_compute_instance_group", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_storage_bucket", "fqcn": "google.cloud.gcp_storage_bucket", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_bucket.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_kms_crypto_key_info", "fqcn": "google.cloud.gcp_kms_crypto_key_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_crypto_key_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_firewall", "fqcn": "google.cloud.gcp_compute_firewall", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_firewall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_serviceusage_service", "fqcn": "google.cloud.gcp_serviceusage_service", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_serviceusage_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudbuild_trigger_info", "fqcn": "google.cloud.gcp_cloudbuild_trigger_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudbuild_trigger_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_storage_object", "fqcn": "google.cloud.gcp_storage_object", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_object.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_autoscaler", "fqcn": "google.cloud.gcp_compute_region_autoscaler", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_autoscaler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sourcerepo_repository", "fqcn": "google.cloud.gcp_sourcerepo_repository", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sourcerepo_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_pool", "fqcn": "google.cloud.gcp_compute_target_pool", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_pool.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_bigtable_instance", "fqcn": "google.cloud.gcp_bigtable_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigtable_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_instance_info", "fqcn": "google.cloud.gcp_compute_target_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_autoscaler_info", "fqcn": "google.cloud.gcp_compute_region_autoscaler_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_autoscaler_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_global_address_info", "fqcn": "google.cloud.gcp_compute_global_address_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_global_forwarding_rule_info", "fqcn": "google.cloud.gcp_compute_global_forwarding_rule_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_forwarding_rule_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance_info", "fqcn": "google.cloud.gcp_compute_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_iam_service_account_key", "fqcn": "google.cloud.gcp_iam_service_account_key", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_service_account_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_image", "fqcn": "google.cloud.gcp_compute_image", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_resource_policy_info", "fqcn": "google.cloud.gcp_compute_resource_policy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_resource_policy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_forwarding_rule_info", "fqcn": "google.cloud.gcp_compute_forwarding_rule_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_forwarding_rule_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_container_node_pool_info", "fqcn": "google.cloud.gcp_container_node_pool_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_node_pool_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_network_endpoint_group", "fqcn": "google.cloud.gcp_compute_network_endpoint_group", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network_endpoint_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_external_vpn_gateway_info", "fqcn": "google.cloud.gcp_compute_external_vpn_gateway_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_external_vpn_gateway_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_vpn_tunnel_info", "fqcn": "google.cloud.gcp_compute_vpn_tunnel_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_vpn_tunnel_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_instance_template", "fqcn": "google.cloud.gcp_compute_instance_template", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_bigtable_instance_info", "fqcn": "google.cloud.gcp_bigtable_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigtable_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_tcp_proxy_info", "fqcn": "google.cloud.gcp_compute_target_tcp_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_tcp_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_backend_bucket_info", "fqcn": "google.cloud.gcp_compute_backend_bucket_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_bucket_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_ssl_policy_info", "fqcn": "google.cloud.gcp_compute_ssl_policy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_policy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_appengine_firewall_rule", "fqcn": "google.cloud.gcp_appengine_firewall_rule", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_appengine_firewall_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_filestore_instance", "fqcn": "google.cloud.gcp_filestore_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_filestore_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_vpn_tunnel", "fqcn": "google.cloud.gcp_compute_vpn_tunnel", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_vpn_tunnel.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_reservation", "fqcn": "google.cloud.gcp_compute_reservation", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_reservation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_image_info", "fqcn": "google.cloud.gcp_compute_image_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_http_proxy_info", "fqcn": "google.cloud.gcp_compute_target_http_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_http_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_snapshot_info", "fqcn": "google.cloud.gcp_compute_snapshot_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_snapshot_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_subnetwork_info", "fqcn": "google.cloud.gcp_compute_subnetwork_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_subnetwork_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudscheduler_job", "fqcn": "google.cloud.gcp_cloudscheduler_job", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudscheduler_job.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_url_map_info", "fqcn": "google.cloud.gcp_compute_region_url_map_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_url_map_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_disk", "fqcn": "google.cloud.gcp_compute_region_disk", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_disk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_instance_group_manager_info", "fqcn": "google.cloud.gcp_compute_region_instance_group_manager_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_instance_group_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_spanner_instance", "fqcn": "google.cloud.gcp_spanner_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_external_vpn_gateway", "fqcn": "google.cloud.gcp_compute_external_vpn_gateway", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_external_vpn_gateway.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_bigquery_table_info", "fqcn": "google.cloud.gcp_bigquery_table_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_table_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_backend_bucket", "fqcn": "google.cloud.gcp_compute_backend_bucket", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_bucket.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_logging_metric", "fqcn": "google.cloud.gcp_logging_metric", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_logging_metric.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_url_map", "fqcn": "google.cloud.gcp_compute_region_url_map", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_url_map.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_health_check", "fqcn": "google.cloud.gcp_compute_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_health_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_appengine_firewall_rule_info", "fqcn": "google.cloud.gcp_appengine_firewall_rule_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_appengine_firewall_rule_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_pubsub_topic_info", "fqcn": "google.cloud.gcp_pubsub_topic_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_topic_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudfunctions_cloud_function", "fqcn": "google.cloud.gcp_cloudfunctions_cloud_function", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudfunctions_cloud_function.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_target_https_proxy", "fqcn": "google.cloud.gcp_compute_region_target_https_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_https_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_address_info", "fqcn": "google.cloud.gcp_compute_address_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_dns_resource_record_set_info", "fqcn": "google.cloud.gcp_dns_resource_record_set_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_resource_record_set_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_node_template", "fqcn": "google.cloud.gcp_compute_node_template", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sourcerepo_repository_info", "fqcn": "google.cloud.gcp_sourcerepo_repository_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sourcerepo_repository_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_snapshot", "fqcn": "google.cloud.gcp_compute_snapshot", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_filestore_instance_info", "fqcn": "google.cloud.gcp_filestore_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_filestore_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_node_group", "fqcn": "google.cloud.gcp_compute_node_group", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_url_map", "fqcn": "google.cloud.gcp_compute_url_map", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_url_map.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 3}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_backend_service", "fqcn": "google.cloud.gcp_compute_region_backend_service", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_backend_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_variable", "fqcn": "google.cloud.gcp_runtimeconfig_variable", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_cloudtasks_queue_info", "fqcn": "google.cloud.gcp_cloudtasks_queue_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudtasks_queue_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_vpn_gateway", "fqcn": "google.cloud.gcp_compute_target_vpn_gateway", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_vpn_gateway.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_autoscaler_info", "fqcn": "google.cloud.gcp_compute_autoscaler_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_autoscaler_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_variable_info", "fqcn": "google.cloud.gcp_runtimeconfig_variable_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_variable_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_network_info", "fqcn": "google.cloud.gcp_compute_network_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_http_health_check_info", "fqcn": "google.cloud.gcp_compute_http_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_http_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_network_endpoint_group_info", "fqcn": "google.cloud.gcp_compute_network_endpoint_group_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network_endpoint_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_tpu_node_info", "fqcn": "google.cloud.gcp_tpu_node_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_tpu_node_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_logging_metric_info", "fqcn": "google.cloud.gcp_logging_metric_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_logging_metric_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_storage_default_object_acl", "fqcn": "google.cloud.gcp_storage_default_object_acl", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_default_object_acl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_container_cluster", "fqcn": "google.cloud.gcp_container_cluster", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_cluster.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_storage_bucket_access_control", "fqcn": "google.cloud.gcp_storage_bucket_access_control", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_bucket_access_control.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_ssl_policy", "fqcn": "google.cloud.gcp_compute_ssl_policy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_health_check_info", "fqcn": "google.cloud.gcp_compute_region_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_kms_key_ring_info", "fqcn": "google.cloud.gcp_kms_key_ring_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_key_ring_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_health_check", "fqcn": "google.cloud.gcp_compute_region_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_health_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_disk_info", "fqcn": "google.cloud.gcp_compute_disk_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_disk_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sql_instance_info", "fqcn": "google.cloud.gcp_sql_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_bigquery_table", "fqcn": "google.cloud.gcp_bigquery_table", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_table.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_resourcemanager_project_info", "fqcn": "google.cloud.gcp_resourcemanager_project_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_resourcemanager_project_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_instance_group_manager", "fqcn": "google.cloud.gcp_compute_region_instance_group_manager", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_instance_group_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_url_map_info", "fqcn": "google.cloud.gcp_compute_url_map_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_url_map_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_interconnect_attachment_info", "fqcn": "google.cloud.gcp_compute_interconnect_attachment_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_interconnect_attachment_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sql_user_info", "fqcn": "google.cloud.gcp_sql_user_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_http_health_check", "fqcn": "google.cloud.gcp_compute_http_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_http_health_check.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 1}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_disk", "fqcn": "google.cloud.gcp_compute_disk", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_disk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_iam_role_info", "fqcn": "google.cloud.gcp_iam_role_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_role_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_dns_managed_zone", "fqcn": "google.cloud.gcp_dns_managed_zone", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_managed_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_instance", "fqcn": "google.cloud.gcp_compute_target_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_subnetwork", "fqcn": "google.cloud.gcp_compute_subnetwork", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_subnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_region_target_http_proxy", "fqcn": "google.cloud.gcp_compute_region_target_http_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_http_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_pubsub_subscription", "fqcn": "google.cloud.gcp_pubsub_subscription", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_target_pool_info", "fqcn": "google.cloud.gcp_compute_target_pool_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_pool_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_spanner_database", "fqcn": "google.cloud.gcp_spanner_database", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_ssl_certificate_info", "fqcn": "google.cloud.gcp_compute_ssl_certificate_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_certificate_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_pubsub_subscription_info", "fqcn": "google.cloud.gcp_pubsub_subscription_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_subscription_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_mlengine_model_info", "fqcn": "google.cloud.gcp_mlengine_model_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_model_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_sql_database_info", "fqcn": "google.cloud.gcp_sql_database_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_database_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_compute_network", "fqcn": "google.cloud.gcp_compute_network", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_pubsub_topic", "fqcn": "google.cloud.gcp_pubsub_topic", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_topic.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "ansible.posix", "path": "testdata3/installed_collections_path/ansible_collections/ansible/posix", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "patch", "fqcn": "ansible.posix.patch", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/patch.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selinux", "fqcn": "ansible.posix.selinux", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/selinux.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "firewalld", "fqcn": "ansible.posix.firewalld", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "at", "fqcn": "ansible.posix.at", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/at.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "authorized_key", "fqcn": "ansible.posix.authorized_key", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/authorized_key.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/bootstrap-dedicated.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 1}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "acl", "fqcn": "ansible.posix.acl", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/acl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "synchronize", "fqcn": "ansible.posix.synchronize", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/synchronize.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 1}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "mount", "fqcn": "ansible.posix.mount", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/mount.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 4}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 5}", "{\"path\": \"testdata3/scm_repo/playbooks/wordpress.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "sysctl", "fqcn": "ansible.posix.sysctl", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/sysctl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "firewalld_info", "fqcn": "ansible.posix.firewalld_info", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "seboolean", "fqcn": "ansible.posix.seboolean", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/seboolean.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "ansible.netcommon", "path": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "net_banner", "fqcn": "ansible.netcommon.net_banner", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_banner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_l3_interface", "fqcn": "ansible.netcommon.net_l3_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l3_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_vlan", "fqcn": "ansible.netcommon.net_vlan", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "telnet", "fqcn": "ansible.netcommon.telnet", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/telnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_get", "fqcn": "ansible.netcommon.net_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_get.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_logging", "fqcn": "ansible.netcommon.net_logging", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_logging.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cli_config", "fqcn": "ansible.netcommon.cli_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_l2_interface", "fqcn": "ansible.netcommon.net_l2_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l2_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_user", "fqcn": "ansible.netcommon.net_user", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netconf_rpc", "fqcn": "ansible.netcommon.netconf_rpc", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_rpc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_lldp_interface", "fqcn": "ansible.netcommon.net_lldp_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netconf_get", "fqcn": "ansible.netcommon.netconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_static_route", "fqcn": "ansible.netcommon.net_static_route", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_static_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_interface", "fqcn": "ansible.netcommon.net_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_interface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netconf_config", "fqcn": "ansible.netcommon.netconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_lldp", "fqcn": "ansible.netcommon.net_lldp", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "restconf_get", "fqcn": "ansible.netcommon.restconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cli_command", "fqcn": "ansible.netcommon.cli_command", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "network_resource", "fqcn": "ansible.netcommon.network_resource", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/network_resource.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_vrf", "fqcn": "ansible.netcommon.net_vrf", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vrf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_ping", "fqcn": "ansible.netcommon.net_ping", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_ping.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "restconf_config", "fqcn": "ansible.netcommon.restconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_linkagg", "fqcn": "ansible.netcommon.net_linkagg", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_linkagg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_put", "fqcn": "ansible.netcommon.net_put", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_put.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "net_system", "fqcn": "ansible.netcommon.net_system", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_system.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "ansible.utils", "path": "testdata3/installed_collections_path/ansible_collections/ansible/utils", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/cli_parse.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "fact_diff", "fqcn": "ansible.utils.fact_diff", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/fact_diff.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "update_fact", "fqcn": "ansible.utils.update_fact", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/update_fact.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "validate", "fqcn": "ansible.utils.validate", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/validate.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.postgresql", "path": "testdata3/installed_collections_path/ansible_collections/community/postgresql", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "postgresql_sequence", "fqcn": "community.postgresql.postgresql_sequence", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_sequence.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_script", "fqcn": "community.postgresql.postgresql_script", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_script.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user", "fqcn": "community.postgresql.postgresql_user", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 4}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_lang", "fqcn": "community.postgresql.postgresql_lang", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_lang.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_privs", "fqcn": "community.postgresql.postgresql_privs", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_privs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_publication", "fqcn": "community.postgresql.postgresql_publication", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_publication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_schema", "fqcn": "community.postgresql.postgresql_schema", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_schema.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_pg_hba", "fqcn": "community.postgresql.postgresql_pg_hba", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_pg_hba.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_membership", "fqcn": "community.postgresql.postgresql_membership", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_membership.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_table", "fqcn": "community.postgresql.postgresql_table", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_table.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_copy", "fqcn": "community.postgresql.postgresql_copy", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_copy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_slot", "fqcn": "community.postgresql.postgresql_slot", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_slot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_subscription", "fqcn": "community.postgresql.postgresql_subscription", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_query", "fqcn": "community.postgresql.postgresql_query", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ext", "fqcn": "community.postgresql.postgresql_ext", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ext.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user_obj_stat_info", "fqcn": "community.postgresql.postgresql_user_obj_stat_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user_obj_stat_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_set", "fqcn": "community.postgresql.postgresql_set", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_info", "fqcn": "community.postgresql.postgresql_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_db", "fqcn": "community.postgresql.postgresql_db", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_db.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 2}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_idx", "fqcn": "community.postgresql.postgresql_idx", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_idx.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_owner", "fqcn": "community.postgresql.postgresql_owner", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_owner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_tablespace", "fqcn": "community.postgresql.postgresql_tablespace", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_tablespace.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ping", "fqcn": "community.postgresql.postgresql_ping", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ping.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.docker", "path": "testdata3/installed_collections_path/ansible_collections/community/docker", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "docker_prune", "fqcn": "community.docker.docker_prune", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_prune.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack", "fqcn": "community.docker.docker_stack", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_stack.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_compose", "fqcn": "community.docker.docker_compose", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_compose.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 8}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_node", "fqcn": "community.docker.docker_node", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_node.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_volume_info", "fqcn": "community.docker.docker_volume_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_node_info", "fqcn": "community.docker.docker_node_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_node_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_container_info", "fqcn": "community.docker.docker_container_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_container_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_plugin", "fqcn": "community.docker.docker_plugin", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image", "fqcn": "community.docker.docker_image", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_secret", "fqcn": "community.docker.docker_secret", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_secret.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack_info", "fqcn": "community.docker.docker_stack_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_stack_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image_load", "fqcn": "community.docker.docker_image_load", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_image_load.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_login", "fqcn": "community.docker.docker_login", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_login.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_volume", "fqcn": "community.docker.docker_volume", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image_info", "fqcn": "community.docker.docker_image_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_service", "fqcn": "community.docker.docker_swarm_service", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_network", "fqcn": "community.docker.docker_network", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm", "fqcn": "community.docker.docker_swarm", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_host_info", "fqcn": "community.docker.docker_host_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_host_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_network_info", "fqcn": "community.docker.docker_network_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "current_container_facts", "fqcn": "community.docker.current_container_facts", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/current_container_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_config", "fqcn": "community.docker.docker_config", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_container_exec", "fqcn": "community.docker.docker_container_exec", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_container_exec.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_info", "fqcn": "community.docker.docker_swarm_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack_task_info", "fqcn": "community.docker.docker_stack_task_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_stack_task_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_container", "fqcn": "community.docker.docker_container", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_service_info", "fqcn": "community.docker.docker_swarm_service_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm_service_info.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.general", "path": "testdata3/installed_collections_path/ansible_collections/community/general", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "postgresql_sequence", "fqcn": "community.general.postgresql_sequence", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_sequence.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcpubsub_info", "fqcn": "community.general.gcpubsub_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcpubsub_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "serverless", "fqcn": "community.general.serverless", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/serverless.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_domain_info", "fqcn": "community.general.proxmox_domain_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_domain_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert", "fqcn": "community.general.utm_ca_host_key_cert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_ca_host_key_cert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "odbc", "fqcn": "community.general.odbc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/odbc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_host_facts", "fqcn": "community.general.ovirt_host_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_host_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_group", "fqcn": "community.general.keycloak_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/keycloak_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_user", "fqcn": "community.general.influxdb_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_server_facts", "fqcn": "community.general.online_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "onepassword_info", "fqcn": "community.general.onepassword_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/onepassword_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xbps", "fqcn": "community.general.xbps", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xbps.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cronvar", "fqcn": "community.general.cronvar", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cronvar.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "osx_defaults", "fqcn": "community.general.osx_defaults", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/osx_defaults.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgutil", "fqcn": "community.general.pkgutil", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkgutil.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb_user", "fqcn": "community.general.rax_cdb_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mail", "fqcn": "community.general.mail", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mail.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_datacenter", "fqcn": "community.general.profitbricks_datacenter", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_datacenter.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_security_group", "fqcn": "community.general.hwc_vpc_security_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "matrix", "fqcn": "community.general.matrix", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/matrix.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_evs_disk", "fqcn": "community.general.hwc_evs_disk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_evs_disk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_failover_ip", "fqcn": "community.general.hetzner_failover_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_failover_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_prune", "fqcn": "community.general.docker_prune", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_prune.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bundler", "fqcn": "community.general.bundler", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bundler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_snapshot_schedule_manager", "fqcn": "community.general.sf_snapshot_schedule_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_snapshot_schedule_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nginx_status_facts", "fqcn": "community.general.nginx_status_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nginx_status_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pacman", "fqcn": "community.general.pacman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pacman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_ontap_gather_facts", "fqcn": "community.general.na_ontap_gather_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_ontap_gather_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user", "fqcn": "community.general.postgresql_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_dns_reload", "fqcn": "community.general.memset_dns_reload", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_dns_reload.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_lvg", "fqcn": "community.general.aix_lvg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_lvg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_target_proxy", "fqcn": "community.general.gcp_target_proxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_target_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhevm", "fqcn": "community.general.rhevm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhevm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_permission_facts", "fqcn": "community.general.ovirt_permission_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_permission_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_role", "fqcn": "community.general.ipa_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_check", "fqcn": "community.general.sensu_check", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_compute", "fqcn": "community.general.scaleway_compute", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_compute.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_svm", "fqcn": "community.general.na_cdot_svm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_svm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxc_container", "fqcn": "community.general.lxc_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxc_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_role", "fqcn": "community.general.vertica_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_server_info", "fqcn": "community.general.memset_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_user", "fqcn": "community.general.udm_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_host", "fqcn": "community.general.ibm_sa_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_memstore_facts", "fqcn": "community.general.memset_memstore_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_memstore_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iptables_state", "fqcn": "community.general.iptables_state", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/iptables_state.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxd_container", "fqcn": "community.general.lxd_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxd_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_device", "fqcn": "community.general.packet_device", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_device.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_variable", "fqcn": "community.general.bitbucket_pipeline_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_pipeline_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "python_requirements_facts", "fqcn": "community.general.python_requirements_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/python_requirements_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume", "fqcn": "community.general.scaleway_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pulp_repo", "fqcn": "community.general.pulp_repo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pulp_repo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_sshkey", "fqcn": "community.general.scaleway_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_lang", "fqcn": "community.general.postgresql_lang", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_lang.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "emc_vnx_sg_member", "fqcn": "community.general.emc_vnx_sg_member", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/emc_vnx_sg_member.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_organization_info", "fqcn": "community.general.scaleway_organization_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_organization_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_dns_record", "fqcn": "community.general.rax_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "etcd3", "fqcn": "community.general.etcd3", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/etcd3.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_hbacrule", "fqcn": "community.general.ipa_hbacrule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_hbacrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgng", "fqcn": "community.general.pkgng", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkgng.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ss_3par_cpg", "fqcn": "community.general.ss_3par_cpg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ss_3par_cpg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "katello", "fqcn": "community.general.katello", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/katello.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_member", "fqcn": "community.general.nios_member", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_member.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "imgadm", "fqcn": "community.general.imgadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/imgadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack", "fqcn": "community.general.docker_stack", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_stack.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_notification", "fqcn": "community.general.rax_mon_notification", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_notification.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_privs", "fqcn": "community.general.postgresql_privs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_privs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_volume", "fqcn": "community.general.na_cdot_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_compose", "fqcn": "community.general.docker_compose", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_compose.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nagios", "fqcn": "community.general.nagios", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nagios.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_files_objects", "fqcn": "community.general.rax_files_objects", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_files_objects.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vexata_volume", "fqcn": "community.general.vexata_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vexata_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_publication", "fqcn": "community.general.postgresql_publication", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_publication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cbs", "fqcn": "community.general.rax_cbs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cbs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "grove", "fqcn": "community.general.grove", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/grove.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_share", "fqcn": "community.general.udm_share", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_share.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_node", "fqcn": "community.general.docker_node", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_node.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selogin", "fqcn": "community.general.selogin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/selogin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_facts", "fqcn": "community.general.rax_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cloud_init_data_facts", "fqcn": "community.general.cloud_init_data_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud_init_data_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oci_vcn", "fqcn": "community.general.oci_vcn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oci_vcn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager", "fqcn": "community.general.oneview_san_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_san_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dimensiondata_network", "fqcn": "community.general.dimensiondata_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dimensiondata_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_domain", "fqcn": "community.general.ibm_sa_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_mig", "fqcn": "community.general.gce_mig", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_mig.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "terraform", "fqcn": "community.general.terraform", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/terraform.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jabber", "fqcn": "community.general.jabber", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jabber.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group_variable", "fqcn": "community.general.gitlab_group_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_group_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zypper", "fqcn": "community.general.zypper", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zypper.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert_info", "fqcn": "community.general.utm_ca_host_key_cert_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_ca_host_key_cert_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sefcontext", "fqcn": "community.general.sefcontext", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sefcontext.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_deploy_key", "fqcn": "community.general.github_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nomad_job_info", "fqcn": "community.general.nomad_job_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nomad_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apt_repo", "fqcn": "community.general.apt_repo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apt_repo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pip_package_info", "fqcn": "community.general.pip_package_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pip_package_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_files", "fqcn": "community.general.rax_files", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_files.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_volume_info", "fqcn": "community.general.docker_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "circonus_annotation", "fqcn": "community.general.circonus_annotation", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/circonus_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_group", "fqcn": "community.general.clc_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "easy_install", "fqcn": "community.general.easy_install", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/easy_install.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_public_ip", "fqcn": "community.general.oneandone_public_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_public_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_user_facts", "fqcn": "community.general.ovirt_user_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_user_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gluster_volume", "fqcn": "community.general.gluster_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gluster_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_server_info", "fqcn": "community.general.online_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "datadog_monitor", "fqcn": "community.general.datadog_monitor", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/datadog_monitor.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_webhook_info", "fqcn": "community.general.github_webhook_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_webhook_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_issue", "fqcn": "community.general.github_issue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_issue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_schema", "fqcn": "community.general.postgresql_schema", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_schema.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image", "fqcn": "community.general.one_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_release", "fqcn": "community.general.github_release", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_release.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kibana_plugin", "fqcn": "community.general.kibana_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kibana_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_location_info", "fqcn": "community.general.utm_proxy_location_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_location_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_node_info", "fqcn": "community.general.docker_node_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_node_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vexata_eg", "fqcn": "community.general.vexata_eg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vexata_eg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bigpanda", "fqcn": "community.general.bigpanda", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bigpanda.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_webhook", "fqcn": "community.general.github_webhook", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_webhook.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job_facts", "fqcn": "community.general.jenkins_job_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_job_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network", "fqcn": "community.general.oneview_fcoe_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fcoe_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_failover_ip_info", "fqcn": "community.general.hetzner_failover_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_failover_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_backend_service", "fqcn": "community.general.gcp_backend_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_backend_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netcup_dns", "fqcn": "community.general.netcup_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/netcup_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "syspatch", "fqcn": "community.general.syspatch", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/syspatch.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_group", "fqcn": "community.general.udm_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network_facts", "fqcn": "community.general.oneview_fcoe_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fcoe_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "crypttab", "fqcn": "community.general.crypttab", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/crypttab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_user", "fqcn": "community.general.na_cdot_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_service", "fqcn": "community.general.docker_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_service.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 5}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 4}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_queue", "fqcn": "community.general.rax_queue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_queue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "infinity", "fqcn": "community.general.infinity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/infinity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "swdepot", "fqcn": "community.general.swdepot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/swdepot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_datacenter_facts", "fqcn": "community.general.oneview_datacenter_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_datacenter_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_server_info", "fqcn": "community.general.scaleway_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gconftool2", "fqcn": "community.general.gconftool2", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gconftool2.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "read_csv", "fqcn": "community.general.read_csv", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/read_csv.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb_nodes", "fqcn": "community.general.rax_clb_nodes", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_clb_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nictagadm", "fqcn": "community.general.nictagadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nictagadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_vm_facts", "fqcn": "community.general.ovirt_vm_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_vm_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "statusio_maintenance", "fqcn": "community.general.statusio_maintenance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/statusio_maintenance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_pg_hba", "fqcn": "community.general.postgresql_pg_hba", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_pg_hba.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_firewall_policy", "fqcn": "community.general.clc_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcdns_record", "fqcn": "community.general.gcdns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcdns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "supervisorctl", "fqcn": "community.general.supervisorctl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/supervisorctl.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml\", \"index\": 1}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "flatpak_remote", "fqcn": "community.general.flatpak_remote", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/flatpak_remote.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance", "fqcn": "community.general.ali_instance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ali_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "spotinst_aws_elastigroup", "fqcn": "community.general.spotinst_aws_elastigroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/spotinst_aws_elastigroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_nic", "fqcn": "community.general.profitbricks_nic", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_nic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_host", "fqcn": "community.general.ipa_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "open_iscsi", "fqcn": "community.general.open_iscsi", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/open_iscsi.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance_facts", "fqcn": "community.general.ali_instance_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ali_instance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_license", "fqcn": "community.general.na_cdot_license", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_license.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "monit", "fqcn": "community.general.monit", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monit.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image_info", "fqcn": "community.general.one_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "purefa_facts", "fqcn": "community.general.purefa_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/purefa_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_image", "fqcn": "community.general.atomic_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/atomic_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_subnet", "fqcn": "community.general.hwc_vpc_subnet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_tags", "fqcn": "community.general.manageiq_tags", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_tags.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "composer", "fqcn": "community.general.composer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/composer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_loadbalancer", "fqcn": "community.general.clc_loadbalancer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_enclosure_facts", "fqcn": "community.general.oneview_enclosure_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_enclosure_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "heroku_collaborator", "fqcn": "community.general.heroku_collaborator", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/heroku_collaborator.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "snmp_facts", "fqcn": "community.general.snmp_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/snmp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_project", "fqcn": "community.general.packet_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_container", "fqcn": "community.general.atomic_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/atomic_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_inittab", "fqcn": "community.general.aix_inittab", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_inittab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_container_info", "fqcn": "community.general.docker_container_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_container_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_server_facts", "fqcn": "community.general.scaleway_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_dns_view", "fqcn": "community.general.nios_dns_view", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_dns_view.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest", "fqcn": "community.general.xenserver_guest", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dpkg_divert", "fqcn": "community.general.dpkg_divert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dpkg_divert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_network", "fqcn": "community.general.rax_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_facts", "fqcn": "community.general.idrac_redfish_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_preset", "fqcn": "community.general.kubevirt_preset", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_preset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bzr", "fqcn": "community.general.bzr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bzr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_host_ports", "fqcn": "community.general.ibm_sa_host_ports", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_host_ports.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_zone", "fqcn": "community.general.nios_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_deploy_key", "fqcn": "community.general.gitlab_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_storage_domain_facts", "fqcn": "community.general.ovirt_storage_domain_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_storage_domain_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_monthly_billing", "fqcn": "community.general.ovh_monthly_billing", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovh_monthly_billing.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ohai", "fqcn": "community.general.ohai", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ohai.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "honeybadger_deployment", "fqcn": "community.general.honeybadger_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/honeybadger_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_meta", "fqcn": "community.general.rax_meta", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_meta.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "icinga2_host", "fqcn": "community.general.icinga2_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/icinga2_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "layman", "fqcn": "community.general.layman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/layman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hipchat", "fqcn": "community.general.hipchat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hipchat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcdns_zone", "fqcn": "community.general.gcdns_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcdns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_security_group_rule", "fqcn": "community.general.hwc_vpc_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image_facts", "fqcn": "community.general.docker_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_group", "fqcn": "community.general.ipa_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bearychat", "fqcn": "community.general.bearychat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bearychat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aerospike_migrations", "fqcn": "community.general.aerospike_migrations", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aerospike_migrations.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_config", "fqcn": "community.general.idrac_redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_network", "fqcn": "community.general.nios_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_ip_subnet", "fqcn": "community.general.packet_ip_subnet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_ip_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "portage", "fqcn": "community.general.portage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/portage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_project_variable", "fqcn": "community.general.gitlab_project_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_project_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_txt_record", "fqcn": "community.general.nios_txt_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_txt_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ome_device_info", "fqcn": "community.general.ome_device_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ome_device_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone_domain", "fqcn": "community.general.memset_zone_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_zone_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_user_info", "fqcn": "community.general.proxmox_user_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "foreman", "fqcn": "community.general.foreman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/foreman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "maven_artifact", "fqcn": "community.general.maven_artifact", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/maven_artifact.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "telegram", "fqcn": "community.general.telegram", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/telegram.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_monitoring_policy", "fqcn": "community.general.oneandone_monitoring_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_monitoring_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager_facts", "fqcn": "community.general.oneview_san_manager_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_san_manager_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_handler", "fqcn": "community.general.sensu_handler", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_handler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xfconf", "fqcn": "community.general.xfconf", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xfconf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_scaling_policy", "fqcn": "community.general.rax_scaling_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_scaling_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "say", "fqcn": "community.general.say", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/say.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pushover", "fqcn": "community.general.pushover", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pushover.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "elasticsearch_plugin", "fqcn": "community.general.elasticsearch_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/elasticsearch_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_naptr_record", "fqcn": "community.general.nios_naptr_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_naptr_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_boot", "fqcn": "community.general.hpilo_boot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hpilo_boot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_dns_record", "fqcn": "community.general.udm_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "modprobe", "fqcn": "community.general.modprobe", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/modprobe.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_info", "fqcn": "community.general.oneview_logical_interconnect_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_logical_interconnect_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "filesystem", "fqcn": "community.general.filesystem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/filesystem.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 2}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 3}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "linode", "fqcn": "community.general.linode", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/linode.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "datadog_event", "fqcn": "community.general.datadog_event", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/datadog_event.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "htpasswd", "fqcn": "community.general.htpasswd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/htpasswd.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 3}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "stacki_host", "fqcn": "community.general.stacki_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/stacki_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cobbler_sync", "fqcn": "community.general.cobbler_sync", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cobbler_sync.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_healthcheck", "fqcn": "community.general.gcp_healthcheck", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_healthcheck.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image", "fqcn": "community.general.docker_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_ptr_record", "fqcn": "community.general.nios_ptr_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_ptr_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_user_info", "fqcn": "community.general.online_user_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb", "fqcn": "community.general.rax_clb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_clb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apk", "fqcn": "community.general.apk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_host_record", "fqcn": "community.general.nios_host_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_host_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_host_storage_facts", "fqcn": "community.general.ovirt_host_storage_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_host_storage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "snap", "fqcn": "community.general.snap", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/snap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_group_facts", "fqcn": "community.general.ovirt_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_user", "fqcn": "community.general.manageiq_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_network_view", "fqcn": "community.general.nios_network_view", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_network_view.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_entity", "fqcn": "community.general.rax_mon_entity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_entity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group", "fqcn": "community.general.oneview_logical_interconnect_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_logical_interconnect_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pubnub_blocks", "fqcn": "community.general.pubnub_blocks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pubnub_blocks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "irc", "fqcn": "community.general.irc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/irc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_net", "fqcn": "community.general.gce_net", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_net.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew", "fqcn": "community.general.homebrew", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/homebrew.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mattermost", "fqcn": "community.general.mattermost", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mattermost.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax", "fqcn": "community.general.rax", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_srv_record", "fqcn": "community.general.nios_srv_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_srv_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_event_facts", "fqcn": "community.general.ovirt_event_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_event_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcpubsub", "fqcn": "community.general.gcpubsub", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcpubsub.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_secret", "fqcn": "community.general.docker_secret", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_secret.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_database_backup", "fqcn": "community.general.scaleway_database_backup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_database_backup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce", "fqcn": "community.general.gce", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set_info", "fqcn": "community.general.oneview_network_set_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_network_set_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "facter", "fqcn": "community.general.facter", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/facter.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_site", "fqcn": "community.general.webfaction_site", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_site.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_network_interface_address", "fqcn": "community.general.utm_network_interface_address", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_network_interface_address.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_check_connections", "fqcn": "community.general.sf_check_connections", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_check_connections.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_vault", "fqcn": "community.general.ipa_vault", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_vault.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logstash_plugin", "fqcn": "community.general.logstash_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/logstash_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dimensiondata_vlan", "fqcn": "community.general.dimensiondata_vlan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dimensiondata_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "git_config", "fqcn": "community.general.git_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/git_config.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml\", \"index\": 2}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_membership", "fqcn": "community.general.postgresql_membership", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_membership.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mas", "fqcn": "community.general.mas", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mas.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xml", "fqcn": "community.general.xml", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xml.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jboss", "fqcn": "community.general.jboss", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jboss.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "shutdown", "fqcn": "community.general.shutdown", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/shutdown.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nexmo", "fqcn": "community.general.nexmo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nexmo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudocmdgroup", "fqcn": "community.general.ipa_sudocmdgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_sudocmdgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack_info", "fqcn": "community.general.docker_stack_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_stack_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_keypair", "fqcn": "community.general.rax_keypair", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_keypair.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_user_role", "fqcn": "community.general.na_cdot_user_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_user_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_policies", "fqcn": "community.general.manageiq_policies", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_policies.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipinfoio_facts", "fqcn": "community.general.ipinfoio_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipinfoio_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_table", "fqcn": "community.general.postgresql_table", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_table.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_user", "fqcn": "community.general.ipa_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_api_facts", "fqcn": "community.general.ovirt_api_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_api_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_aggregate", "fqcn": "community.general.na_cdot_aggregate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_aggregate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dconf", "fqcn": "community.general.dconf", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dconf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_vol_map", "fqcn": "community.general.ibm_sa_vol_map", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_vol_map.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ip_netns", "fqcn": "community.general.ip_netns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ip_netns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_server", "fqcn": "community.general.clc_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "beadm", "fqcn": "community.general.beadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/beadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_vm", "fqcn": "community.general.kubevirt_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_private_ip", "fqcn": "community.general.hwc_vpc_private_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_private_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager_info", "fqcn": "community.general.oneview_san_manager_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_san_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image_facts", "fqcn": "community.general.one_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_acl", "fqcn": "community.general.consul_acl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul_acl.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml\", \"index\": 2}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_template", "fqcn": "community.general.kubevirt_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_frontend", "fqcn": "community.general.utm_proxy_frontend", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_frontend.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks", "fqcn": "community.general.profitbricks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redhat_subscription", "fqcn": "community.general.redhat_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redhat_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "openbsd_pkg", "fqcn": "community.general.openbsd_pkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/openbsd_pkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zypper_repository", "fqcn": "community.general.zypper_repository", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zypper_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_session", "fqcn": "community.general.consul_session", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul_session.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "typetalk", "fqcn": "community.general.typetalk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/typetalk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_storage_template_facts", "fqcn": "community.general.ovirt_storage_template_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_storage_template_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_facts", "fqcn": "community.general.xenserver_guest_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network_facts", "fqcn": "community.general.oneview_ethernet_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_ethernet_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_powerstate", "fqcn": "community.general.xenserver_guest_powerstate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest_powerstate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_copy", "fqcn": "community.general.postgresql_copy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_copy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_client", "fqcn": "community.general.keycloak_client", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/keycloak_client.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_aa_policy", "fqcn": "community.general.clc_aa_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_aa_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "urpmi", "fqcn": "community.general.urpmi", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/urpmi.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_user", "fqcn": "community.general.vertica_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_slot", "fqcn": "community.general.postgresql_slot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_slot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apache2_module", "fqcn": "community.general.apache2_module", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apache2_module.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 9}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcspanner", "fqcn": "community.general.gcspanner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcspanner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_login", "fqcn": "community.general.docker_login", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_login.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mqtt", "fqcn": "community.general.mqtt", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mqtt.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_facts", "fqcn": "community.general.hpilo_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hpilo_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_key_pair", "fqcn": "community.general.bitbucket_pipeline_key_pair", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_pipeline_key_pair.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_write", "fqcn": "community.general.influxdb_write", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_write.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mksysb", "fqcn": "community.general.mksysb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mksysb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb_database", "fqcn": "community.general.rax_cdb_database", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "taiga_issue", "fqcn": "community.general.taiga_issue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/taiga_issue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xfs_quota", "fqcn": "community.general.xfs_quota", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xfs_quota.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_silence", "fqcn": "community.general.sensu_silence", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_silence.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "npm", "fqcn": "community.general.npm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/npm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ufw", "fqcn": "community.general.ufw", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ufw.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 6}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 13}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 14}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 23}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 6}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 4}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 12}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs_facts", "fqcn": "community.general.zfs_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zfs_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_volume", "fqcn": "community.general.docker_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_configuration", "fqcn": "community.general.vertica_configuration", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_configuration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_query", "fqcn": "community.general.influxdb_query", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image_info", "fqcn": "community.general.docker_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cloudflare_dns", "fqcn": "community.general.cloudflare_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloudflare_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_image_info", "fqcn": "community.general.scaleway_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_nsgroup", "fqcn": "community.general.nios_nsgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_nsgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_runner", "fqcn": "community.general.gitlab_runner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_runner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_publicip", "fqcn": "community.general.clc_publicip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_publicip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network_info", "fqcn": "community.general.oneview_fc_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fc_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "solaris_zone", "fqcn": "community.general.solaris_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/solaris_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_forwarding_rule", "fqcn": "community.general.gcp_forwarding_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_forwarding_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "listen_ports_facts", "fqcn": "community.general.listen_ports_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/listen_ports_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nginx_status_info", "fqcn": "community.general.nginx_status_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nginx_status_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nosh", "fqcn": "community.general.nosh", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nosh.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logentries", "fqcn": "community.general.logentries", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/logentries.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_nic_facts", "fqcn": "community.general.ovirt_nic_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_nic_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_alert", "fqcn": "community.general.pagerduty_alert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty_alert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "haproxy", "fqcn": "community.general.haproxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/haproxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_dns", "fqcn": "community.general.rax_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_facts", "fqcn": "community.general.oneview_logical_interconnect_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_logical_interconnect_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_group", "fqcn": "community.general.manageiq_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "office_365_connector_card", "fqcn": "community.general.office_365_connector_card", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/office_365_connector_card.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb_ssl", "fqcn": "community.general.rax_clb_ssl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_clb_ssl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set", "fqcn": "community.general.oneview_network_set", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_network_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "syslogger", "fqcn": "community.general.syslogger", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/syslogger.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_dnszone", "fqcn": "community.general.ipa_dnszone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_template_facts", "fqcn": "community.general.ovirt_template_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_template_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_cluster_facts", "fqcn": "community.general.ovirt_cluster_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_cluster_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxca_nodes", "fqcn": "community.general.lxca_nodes", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxca_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_check", "fqcn": "community.general.rax_mon_check", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip", "fqcn": "community.general.scaleway_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_img", "fqcn": "community.general.gce_img", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_img.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "swupd", "fqcn": "community.general.swupd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/swupd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network", "fqcn": "community.general.oneview_fc_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fc_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "smartos_image_facts", "fqcn": "community.general.smartos_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/smartos_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipmi_boot", "fqcn": "community.general.ipmi_boot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipmi_boot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew_tap", "fqcn": "community.general.homebrew_tap", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/homebrew_tap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt", "fqcn": "community.general.ovirt", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_pool", "fqcn": "community.general.ibm_sa_pool", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_pool.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lbu", "fqcn": "community.general.lbu", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lbu.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_filesystem", "fqcn": "community.general.aix_filesystem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_filesystem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pamd", "fqcn": "community.general.pamd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pamd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs", "fqcn": "community.general.zfs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zfs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "wakeonlan", "fqcn": "community.general.wakeonlan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/wakeonlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_account_manager", "fqcn": "community.general.sf_account_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_account_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_domain", "fqcn": "community.general.webfaction_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_identity", "fqcn": "community.general.rax_identity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_identity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnsimple", "fqcn": "community.general.dnsimple", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dnsimple.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_subscription", "fqcn": "community.general.postgresql_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_project", "fqcn": "community.general.rundeck_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rundeck_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_server_snapshot", "fqcn": "community.general.clc_server_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_server_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_lvol", "fqcn": "community.general.aix_lvol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_lvol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "riak", "fqcn": "community.general.riak", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/riak.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group", "fqcn": "community.general.scaleway_security_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_url_map", "fqcn": "community.general.gcp_url_map", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_url_map.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_info", "fqcn": "community.general.idrac_redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul", "fqcn": "community.general.consul", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "purefb_facts", "fqcn": "community.general.purefb_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/purefb_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_passwd", "fqcn": "community.general.ldap_passwd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_passwd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job_info", "fqcn": "community.general.jenkins_job_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_lb", "fqcn": "community.general.gce_lb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_lb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_search", "fqcn": "community.general.ldap_search", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_search.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sysupgrade", "fqcn": "community.general.sysupgrade", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sysupgrade.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "svc", "fqcn": "community.general.svc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/svc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_service", "fqcn": "community.general.docker_swarm_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhn_channel", "fqcn": "community.general.rhn_channel", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhn_channel.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "omapi_host", "fqcn": "community.general.omapi_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/omapi_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_user", "fqcn": "community.general.pagerduty_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_pvc", "fqcn": "community.general.kubevirt_pvc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_pvc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gc_storage", "fqcn": "community.general.gc_storage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gc_storage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "campfire", "fqcn": "community.general.campfire", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/campfire.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_info", "fqcn": "community.general.scaleway_security_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "yarn", "fqcn": "community.general.yarn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/yarn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgin", "fqcn": "community.general.pkgin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkgin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group", "fqcn": "community.general.gitlab_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_mx_record", "fqcn": "community.general.nios_mx_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_mx_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_pd", "fqcn": "community.general.gce_pd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_pd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_network", "fqcn": "community.general.docker_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_network_interface_address_info", "fqcn": "community.general.utm_network_interface_address_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_network_interface_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "linode_v4", "fqcn": "community.general.linode_v4", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/linode_v4.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gunicorn", "fqcn": "community.general.gunicorn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gunicorn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs_delegate_admin", "fqcn": "community.general.zfs_delegate_admin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zfs_delegate_admin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb", "fqcn": "community.general.rax_cdb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cdb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_cname_record", "fqcn": "community.general.nios_cname_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_cname_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "smartos_image_info", "fqcn": "community.general.smartos_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/smartos_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox", "fqcn": "community.general.proxmox", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network_info", "fqcn": "community.general.oneview_fcoe_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fcoe_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxd_profile", "fqcn": "community.general.lxd_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxd_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "svr4pkg", "fqcn": "community.general.svr4pkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/svr4pkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vdo", "fqcn": "community.general.vdo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vdo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network", "fqcn": "community.general.oneview_ethernet_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_ethernet_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis", "fqcn": "community.general.redis", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redis.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_query", "fqcn": "community.general.postgresql_query", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "installp", "fqcn": "community.general.installp", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/installp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_location", "fqcn": "community.general.utm_proxy_location", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_location.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew_cask", "fqcn": "community.general.homebrew_cask", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/homebrew_cask.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "openwrt_init", "fqcn": "community.general.openwrt_init", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/openwrt_init.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_labels", "fqcn": "community.general.gce_labels", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_labels.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "newrelic_deployment", "fqcn": "community.general.newrelic_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/newrelic_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sorcery", "fqcn": "community.general.sorcery", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sorcery.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_rs", "fqcn": "community.general.kubevirt_rs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_rs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_user_data", "fqcn": "community.general.scaleway_user_data", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_user_data.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcpubsub_facts", "fqcn": "community.general.gcpubsub_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcpubsub_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lldp", "fqcn": "community.general.lldp", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lldp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "capabilities", "fqcn": "community.general.capabilities", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/capabilities.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ext", "fqcn": "community.general.postgresql_ext", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_ext.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flowdock", "fqcn": "community.general.flowdock", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/flowdock.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "java_keystore", "fqcn": "community.general.java_keystore", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/java_keystore.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_port", "fqcn": "community.general.hwc_vpc_port", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_port.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "uptimerobot", "fqcn": "community.general.uptimerobot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/uptimerobot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vmadm", "fqcn": "community.general.vmadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vmadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_script", "fqcn": "community.general.jenkins_script", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_script.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cbs_attachments", "fqcn": "community.general.rax_cbs_attachments", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cbs_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudorule", "fqcn": "community.general.ipa_sudorule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_sudorule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_vmpool_facts", "fqcn": "community.general.ovirt_vmpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_vmpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_cdi_upload", "fqcn": "community.general.kubevirt_cdi_upload", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_cdi_upload.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_client", "fqcn": "community.general.sensu_client", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_client.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_firewall_policy", "fqcn": "community.general.oneandone_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "puppet", "fqcn": "community.general.puppet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/puppet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_service", "fqcn": "community.general.ipa_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_datacenter_facts", "fqcn": "community.general.ovirt_datacenter_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_datacenter_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "librato_annotation", "fqcn": "community.general.librato_annotation", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/librato_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "slackpkg", "fqcn": "community.general.slackpkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/slackpkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_template", "fqcn": "community.general.proxmox_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nsupdate", "fqcn": "community.general.nsupdate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nsupdate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "runit", "fqcn": "community.general.runit", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/runit.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "znode", "fqcn": "community.general.znode", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/znode.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pam_limits", "fqcn": "community.general.pam_limits", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pam_limits.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_key", "fqcn": "community.general.github_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user_obj_stat_info", "fqcn": "community.general.postgresql_user_obj_stat_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_user_obj_stat_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flatpak", "fqcn": "community.general.flatpak", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/flatpak.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_snapshot", "fqcn": "community.general.gce_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sl_vm", "fqcn": "community.general.sl_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sl_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pids", "fqcn": "community.general.pids", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pids.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_vm", "fqcn": "community.general.one_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "awall", "fqcn": "community.general.awall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/awall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_a_record", "fqcn": "community.general.nios_a_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_a_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_modify_server", "fqcn": "community.general.clc_modify_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_modify_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_lun", "fqcn": "community.general.na_cdot_lun", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_lun.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kernel_blacklist", "fqcn": "community.general.kernel_blacklist", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kernel_blacklist.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_external_provider_facts", "fqcn": "community.general.ovirt_external_provider_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_external_provider_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_firewall", "fqcn": "community.general.hetzner_firewall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_firewall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_service", "fqcn": "community.general.one_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_subscription", "fqcn": "community.general.sensu_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_instance_template", "fqcn": "community.general.gce_instance_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_instance_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xattr", "fqcn": "community.general.xattr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xattr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_volume_access_group_manager", "fqcn": "community.general.sf_volume_access_group_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_volume_access_group_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "icinga2_feature", "fqcn": "community.general.icinga2_feature", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/icinga2_feature.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set_facts", "fqcn": "community.general.oneview_network_set_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_network_set_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gluster_heal_info", "fqcn": "community.general.gluster_heal_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gluster_heal_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_server_facts", "fqcn": "community.general.memset_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "parted", "fqcn": "community.general.parted", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/parted.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rollbar_deployment", "fqcn": "community.general.rollbar_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rollbar_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lvol", "fqcn": "community.general.lvol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lvol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm", "fqcn": "community.general.docker_swarm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "archive", "fqcn": "community.general.archive", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/archive.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_set", "fqcn": "community.general.postgresql_set", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_volume_attachment", "fqcn": "community.general.packet_volume_attachment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_volume_attachment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_quota_facts", "fqcn": "community.general.ovirt_quota_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_quota_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nomad_job", "fqcn": "community.general.nomad_job", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nomad_job.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sendgrid", "fqcn": "community.general.sendgrid", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sendgrid.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "opendj_backendprop", "fqcn": "community.general.opendj_backendprop", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/opendj_backendprop.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipwcli_dns", "fqcn": "community.general.ipwcli_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipwcli_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_dns_zone", "fqcn": "community.general.udm_dns_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_dns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_attrs", "fqcn": "community.general.ldap_attrs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_attrs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_user", "fqcn": "community.general.gitlab_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "airbrake_deployment", "fqcn": "community.general.airbrake_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/airbrake_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_config", "fqcn": "community.general.redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_host_info", "fqcn": "community.general.docker_host_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_host_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pacemaker_cluster", "fqcn": "community.general.pacemaker_cluster", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pacemaker_cluster.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_subca", "fqcn": "community.general.ipa_subca", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_subca.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_aaaa_record", "fqcn": "community.general.nios_aaaa_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_aaaa_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job", "fqcn": "community.general.jenkins_job", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_job.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "django_manage", "fqcn": "community.general.django_manage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/django_manage.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 11}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 12}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 14}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "bower", "fqcn": "community.general.bower", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bower.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_info", "fqcn": "community.general.vertica_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume_info", "fqcn": "community.general.scaleway_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_smn_topic", "fqcn": "community.general.hwc_smn_topic", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_smn_topic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_datacenter_info", "fqcn": "community.general.oneview_datacenter_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_datacenter_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "make", "fqcn": "community.general.make", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/make.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 16}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipify_facts", "fqcn": "community.general.ipify_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipify_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zpool_facts", "fqcn": "community.general.zpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pingdom", "fqcn": "community.general.pingdom", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pingdom.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_enclosure_info", "fqcn": "community.general.oneview_enclosure_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_enclosure_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pear", "fqcn": "community.general.pear", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pear.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network_info", "fqcn": "community.general.oneview_ethernet_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_ethernet_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_provider", "fqcn": "community.general.manageiq_provider", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_provider.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_command", "fqcn": "community.general.idrac_redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "onepassword_facts", "fqcn": "community.general.onepassword_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/onepassword_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nmcli", "fqcn": "community.general.nmcli", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nmcli.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "portinstall", "fqcn": "community.general.portinstall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/portinstall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jira", "fqcn": "community.general.jira", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jira.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_notification_plan", "fqcn": "community.general.rax_mon_notification_plan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_notification_plan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_disk_facts", "fqcn": "community.general.ovirt_disk_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_disk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_network_info", "fqcn": "community.general.docker_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_group_info", "fqcn": "community.general.proxmox_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hg", "fqcn": "community.general.hg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_plugin", "fqcn": "community.general.jenkins_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_eip", "fqcn": "community.general.gce_eip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_eip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_info", "fqcn": "community.general.postgresql_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhsm_repository", "fqcn": "community.general.rhsm_repository", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhsm_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_organization_facts", "fqcn": "community.general.scaleway_organization_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_organization_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apache2_mod_proxy", "fqcn": "community.general.apache2_mod_proxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apache2_mod_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_hook", "fqcn": "community.general.gitlab_hook", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_hook.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "imc_rest", "fqcn": "community.general.imc_rest", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/imc_rest.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_ip_loadbalancing_backend", "fqcn": "community.general.ovh_ip_loadbalancing_backend", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovh_ip_loadbalancing_backend.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cpanm", "fqcn": "community.general.cpanm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cpanm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_facts", "fqcn": "community.general.redfish_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_server_config_profile", "fqcn": "community.general.idrac_server_config_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_server_config_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "launchd", "fqcn": "community.general.launchd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/launchd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_tag_facts", "fqcn": "community.general.ovirt_tag_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_tag_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "deploy_helper", "fqcn": "community.general.deploy_helper", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/deploy_helper.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "java_cert", "fqcn": "community.general.java_cert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/java_cert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone_record", "fqcn": "community.general.memset_zone_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_zone_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_scaling_group", "fqcn": "community.general.rax_scaling_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_scaling_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty", "fqcn": "community.general.pagerduty", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_clienttemplate", "fqcn": "community.general.keycloak_clienttemplate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/keycloak_clienttemplate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_attr", "fqcn": "community.general.ldap_attr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_attr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_info", "fqcn": "community.general.hpilo_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hpilo_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_entry", "fqcn": "community.general.ldap_entry", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_entry.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cisco_spark", "fqcn": "community.general.cisco_spark", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cisco_spark.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_ecs_instance", "fqcn": "community.general.hwc_ecs_instance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_ecs_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_fixed_address", "fqcn": "community.general.nios_fixed_address", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_fixed_address.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnsmadeeasy", "fqcn": "community.general.dnsmadeeasy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dnsmadeeasy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cisco_webex", "fqcn": "community.general.cisco_webex", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cisco_webex.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_memstore_info", "fqcn": "community.general.memset_memstore_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_memstore_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_blueprint_package", "fqcn": "community.general.clc_blueprint_package", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_blueprint_package.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lvg", "fqcn": "community.general.lvg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lvg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_volume", "fqcn": "community.general.packet_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_access_key", "fqcn": "community.general.bitbucket_access_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_access_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_sshkey", "fqcn": "community.general.packet_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_config", "fqcn": "community.general.docker_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxca_cmms", "fqcn": "community.general.lxca_cmms", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxca_cmms.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "locale_gen", "fqcn": "community.general.locale_gen", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/locale_gen.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkg5", "fqcn": "community.general.pkg5", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkg5.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_aaa_group_info", "fqcn": "community.general.utm_aaa_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_aaa_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_aaa_group", "fqcn": "community.general.utm_aaa_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_aaa_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone", "fqcn": "community.general.memset_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_known_host", "fqcn": "community.general.bitbucket_pipeline_known_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_pipeline_known_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip_info", "fqcn": "community.general.scaleway_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gem", "fqcn": "community.general.gem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iso_create", "fqcn": "community.general.iso_create", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/iso_create.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_image_facts", "fqcn": "community.general.scaleway_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_volume_manager", "fqcn": "community.general.sf_volume_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_volume_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_change", "fqcn": "community.general.pagerduty_change", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty_change.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_user_facts", "fqcn": "community.general.online_user_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_user_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_db", "fqcn": "community.general.postgresql_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_rule", "fqcn": "community.general.scaleway_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_dns_host", "fqcn": "community.general.utm_dns_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_dns_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_info", "fqcn": "community.general.docker_swarm_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipmi_power", "fqcn": "community.general.ipmi_power", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipmi_power.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_tenant", "fqcn": "community.general.manageiq_tenant", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_tenant.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_idx", "fqcn": "community.general.postgresql_idx", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_idx.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhsm_release", "fqcn": "community.general.rhsm_release", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhsm_release.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_database", "fqcn": "community.general.influxdb_database", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iso_extract", "fqcn": "community.general.iso_extract", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/iso_extract.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_owner", "fqcn": "community.general.postgresql_owner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_owner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_snapshot_info", "fqcn": "community.general.scaleway_snapshot_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_snapshot_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_ip_failover", "fqcn": "community.general.ovh_ip_failover", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovh_ip_failover.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "timezone", "fqcn": "community.general.timezone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/timezone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_volume_attachments", "fqcn": "community.general.profitbricks_volume_attachments", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_volume_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_firewall_info", "fqcn": "community.general.hetzner_firewall_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_firewall_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mssql_db", "fqcn": "community.general.mssql_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mssql_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "seport", "fqcn": "community.general.seport", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/seport.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "twilio", "fqcn": "community.general.twilio", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/twilio.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_tablespace", "fqcn": "community.general.postgresql_tablespace", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_tablespace.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_facts", "fqcn": "community.general.xenserver_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_info", "fqcn": "community.general.xenserver_guest_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "python_requirements_info", "fqcn": "community.general.python_requirements_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/python_requirements_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_storage_vm_facts", "fqcn": "community.general.ovirt_storage_vm_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_storage_vm_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "opkg", "fqcn": "community.general.opkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/opkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_hooks", "fqcn": "community.general.github_hooks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_hooks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "alternatives", "fqcn": "community.general.alternatives", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/alternatives.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 9}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_vol", "fqcn": "community.general.ibm_sa_vol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_vol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkg5_publisher", "fqcn": "community.general.pkg5_publisher", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkg5_publisher.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis_info", "fqcn": "community.general.redis_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redis_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_host", "fqcn": "community.general.one_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack_task_info", "fqcn": "community.general.docker_stack_task_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_stack_task_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_network_vpc", "fqcn": "community.general.hwc_network_vpc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_network_vpc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudocmd", "fqcn": "community.general.ipa_sudocmd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_sudocmd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_facts", "fqcn": "community.general.vertica_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_network_facts", "fqcn": "community.general.ovirt_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance_info", "fqcn": "community.general.ali_instance_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ali_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pushbullet", "fqcn": "community.general.pushbullet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pushbullet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_eip", "fqcn": "community.general.hwc_vpc_eip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_eip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ping", "fqcn": "community.general.postgresql_ping", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_ping.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_acl_policy", "fqcn": "community.general.rundeck_acl_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rundeck_acl_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network_facts", "fqcn": "community.general.oneview_fc_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fc_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume_facts", "fqcn": "community.general.scaleway_volume_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_volume_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_hostgroup", "fqcn": "community.general.ipa_hostgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_hostgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_snapshot_facts", "fqcn": "community.general.scaleway_snapshot_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_snapshot_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_container", "fqcn": "community.general.docker_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "slack", "fqcn": "community.general.slack", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/slack.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_host", "fqcn": "community.general.atomic_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/atomic_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hponcfg", "fqcn": "community.general.hponcfg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hponcfg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_affinity_label_facts", "fqcn": "community.general.ovirt_affinity_label_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_affinity_label_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_command", "fqcn": "community.general.redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_route", "fqcn": "community.general.hwc_vpc_route", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "stackdriver", "fqcn": "community.general.stackdriver", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/stackdriver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_project", "fqcn": "community.general.gitlab_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_alert_policy", "fqcn": "community.general.clc_alert_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_alert_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rocketchat", "fqcn": "community.general.rocketchat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rocketchat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhn_register", "fqcn": "community.general.rhn_register", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhn_register.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_db", "fqcn": "community.general.webfaction_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cobbler_system", "fqcn": "community.general.cobbler_system", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cobbler_system.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_peering_connect", "fqcn": "community.general.hwc_vpc_peering_connect", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_peering_connect.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logentries_msg", "fqcn": "community.general.logentries_msg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/logentries_msg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ini_file", "fqcn": "community.general.ini_file", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ini_file.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 8}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_alert_profiles", "fqcn": "community.general.manageiq_alert_profiles", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_alert_profiles.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_schema", "fqcn": "community.general.vertica_schema", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_schema.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_frontend_info", "fqcn": "community.general.utm_proxy_frontend_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_frontend_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_retention_policy", "fqcn": "community.general.influxdb_retention_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_retention_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm", "fqcn": "community.general.helm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/helm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_alarm", "fqcn": "community.general.rax_mon_alarm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_alarm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_firmware", "fqcn": "community.general.idrac_firmware", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_firmware.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_tag", "fqcn": "community.general.gce_tag", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_tag.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip_facts", "fqcn": "community.general.scaleway_ip_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_ip_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_qtree", "fqcn": "community.general.na_cdot_qtree", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_qtree.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_snapshot_facts", "fqcn": "community.general.ovirt_snapshot_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_snapshot_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apt_rpm", "fqcn": "community.general.apt_rpm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apt_rpm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_server", "fqcn": "community.general.oneandone_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_dnsrecord", "fqcn": "community.general.ipa_dnsrecord", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_dnsrecord.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "interfaces_file", "fqcn": "community.general.interfaces_file", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/interfaces_file.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ejabberd_user", "fqcn": "community.general.ejabberd_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ejabberd_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gluster_peer", "fqcn": "community.general.gluster_peer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gluster_peer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_scheduling_policy_facts", "fqcn": "community.general.ovirt_scheduling_policy_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_scheduling_policy_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_exception", "fqcn": "community.general.utm_proxy_exception", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_exception.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_devices", "fqcn": "community.general.aix_devices", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_devices.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_private_network", "fqcn": "community.general.oneandone_private_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_auth_profile", "fqcn": "community.general.utm_proxy_auth_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_auth_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_volume", "fqcn": "community.general.profitbricks_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "catapult", "fqcn": "community.general.catapult", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/catapult.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_kv", "fqcn": "community.general.consul_kv", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul_kv.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_config", "fqcn": "community.general.ipa_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_facts", "fqcn": "community.general.scaleway_security_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group_members", "fqcn": "community.general.gitlab_group_members", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_group_members.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_info", "fqcn": "community.general.redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_mailbox", "fqcn": "community.general.webfaction_mailbox", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_mailbox.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_lb", "fqcn": "community.general.scaleway_lb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_lb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_alerts", "fqcn": "community.general.manageiq_alerts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_alerts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_service_info", "fqcn": "community.general.docker_swarm_service_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_app", "fqcn": "community.general.webfaction_app", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_app.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "spectrum_device", "fqcn": "community.general.spectrum_device", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/spectrum_device.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "macports", "fqcn": "community.general.macports", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/macports.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selinux_permissive", "fqcn": "community.general.selinux_permissive", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/selinux_permissive.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_kvm", "fqcn": "community.general.proxmox_kvm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_kvm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_load_balancer", "fqcn": "community.general.oneandone_load_balancer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_load_balancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bundler", "fqcn": "community.general.bundler", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/bundler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pip_package_info", "fqcn": "community.general.pip_package_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pip_package_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "easy_install", "fqcn": "community.general.easy_install", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/easy_install.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "composer", "fqcn": "community.general.composer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/composer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "maven_artifact", "fqcn": "community.general.maven_artifact", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/maven_artifact.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "npm", "fqcn": "community.general.npm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/npm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "yarn", "fqcn": "community.general.yarn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/yarn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bower", "fqcn": "community.general.bower", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/bower.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pear", "fqcn": "community.general.pear", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/pear.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cpanm", "fqcn": "community.general.cpanm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/cpanm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gem", "fqcn": "community.general.gem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/language/gem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xbps", "fqcn": "community.general.xbps", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/xbps.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgutil", "fqcn": "community.general.pkgutil", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgutil.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pacman", "fqcn": "community.general.pacman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pacman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pulp_repo", "fqcn": "community.general.pulp_repo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pulp_repo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgng", "fqcn": "community.general.pkgng", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgng.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zypper", "fqcn": "community.general.zypper", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/zypper.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apt_repo", "fqcn": "community.general.apt_repo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apt_repo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "swdepot", "fqcn": "community.general.swdepot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/swdepot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flatpak_remote", "fqcn": "community.general.flatpak_remote", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/flatpak_remote.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "layman", "fqcn": "community.general.layman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/layman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "portage", "fqcn": "community.general.portage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/portage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apk", "fqcn": "community.general.apk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "snap", "fqcn": "community.general.snap", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/snap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew", "fqcn": "community.general.homebrew", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mas", "fqcn": "community.general.mas", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/mas.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redhat_subscription", "fqcn": "community.general.redhat_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/redhat_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "openbsd_pkg", "fqcn": "community.general.openbsd_pkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/openbsd_pkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zypper_repository", "fqcn": "community.general.zypper_repository", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/zypper_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "urpmi", "fqcn": "community.general.urpmi", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/urpmi.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "swupd", "fqcn": "community.general.swupd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/swupd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew_tap", "fqcn": "community.general.homebrew_tap", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew_tap.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhn_channel", "fqcn": "community.general.rhn_channel", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhn_channel.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkgin", "fqcn": "community.general.pkgin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkgin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "svr4pkg", "fqcn": "community.general.svr4pkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/svr4pkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "installp", "fqcn": "community.general.installp", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/installp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "homebrew_cask", "fqcn": "community.general.homebrew_cask", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/homebrew_cask.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sorcery", "fqcn": "community.general.sorcery", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/sorcery.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "slackpkg", "fqcn": "community.general.slackpkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/slackpkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flatpak", "fqcn": "community.general.flatpak", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/flatpak.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "portinstall", "fqcn": "community.general.portinstall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/portinstall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhsm_repository", "fqcn": "community.general.rhsm_repository", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhsm_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkg5", "fqcn": "community.general.pkg5", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkg5.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhsm_release", "fqcn": "community.general.rhsm_release", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhsm_release.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "opkg", "fqcn": "community.general.opkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/opkg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pkg5_publisher", "fqcn": "community.general.pkg5_publisher", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/pkg5_publisher.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhn_register", "fqcn": "community.general.rhn_register", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/rhn_register.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apt_rpm", "fqcn": "community.general.apt_rpm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/apt_rpm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "macports", "fqcn": "community.general.macports", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packaging/os/macports.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "odbc", "fqcn": "community.general.odbc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/odbc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kibana_plugin", "fqcn": "community.general.kibana_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/kibana_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "elasticsearch_plugin", "fqcn": "community.general.elasticsearch_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/elasticsearch_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "riak", "fqcn": "community.general.riak", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/riak.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis", "fqcn": "community.general.redis", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redis_info", "fqcn": "community.general.redis_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/misc/redis_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_sequence", "fqcn": "community.general.postgresql_sequence", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_sequence.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user", "fqcn": "community.general.postgresql_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_lang", "fqcn": "community.general.postgresql_lang", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_lang.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_privs", "fqcn": "community.general.postgresql_privs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_privs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_publication", "fqcn": "community.general.postgresql_publication", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_publication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_schema", "fqcn": "community.general.postgresql_schema", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_schema.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_pg_hba", "fqcn": "community.general.postgresql_pg_hba", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_pg_hba.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_membership", "fqcn": "community.general.postgresql_membership", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_membership.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_table", "fqcn": "community.general.postgresql_table", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_table.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_copy", "fqcn": "community.general.postgresql_copy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_copy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_slot", "fqcn": "community.general.postgresql_slot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_slot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_subscription", "fqcn": "community.general.postgresql_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_query", "fqcn": "community.general.postgresql_query", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ext", "fqcn": "community.general.postgresql_ext", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_ext.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_user_obj_stat_info", "fqcn": "community.general.postgresql_user_obj_stat_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_user_obj_stat_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_set", "fqcn": "community.general.postgresql_set", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_info", "fqcn": "community.general.postgresql_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_db", "fqcn": "community.general.postgresql_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_idx", "fqcn": "community.general.postgresql_idx", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_idx.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_owner", "fqcn": "community.general.postgresql_owner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_owner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_tablespace", "fqcn": "community.general.postgresql_tablespace", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_tablespace.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "postgresql_ping", "fqcn": "community.general.postgresql_ping", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/postgresql/postgresql_ping.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_user", "fqcn": "community.general.influxdb_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_write", "fqcn": "community.general.influxdb_write", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_write.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_query", "fqcn": "community.general.influxdb_query", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_database", "fqcn": "community.general.influxdb_database", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "influxdb_retention_policy", "fqcn": "community.general.influxdb_retention_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/influxdb/influxdb_retention_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aerospike_migrations", "fqcn": "community.general.aerospike_migrations", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/aerospike/aerospike_migrations.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_role", "fqcn": "community.general.vertica_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_user", "fqcn": "community.general.vertica_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_configuration", "fqcn": "community.general.vertica_configuration", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_configuration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_info", "fqcn": "community.general.vertica_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_facts", "fqcn": "community.general.vertica_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vertica_schema", "fqcn": "community.general.vertica_schema", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/vertica/vertica_schema.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mssql_db", "fqcn": "community.general.mssql_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/database/mssql/mssql_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "onepassword_info", "fqcn": "community.general.onepassword_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/onepassword_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "onepassword_facts", "fqcn": "community.general.onepassword_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/onepassword_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_role", "fqcn": "community.general.ipa_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_hbacrule", "fqcn": "community.general.ipa_hbacrule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_hbacrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_host", "fqcn": "community.general.ipa_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_group", "fqcn": "community.general.ipa_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_vault", "fqcn": "community.general.ipa_vault", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_vault.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudocmdgroup", "fqcn": "community.general.ipa_sudocmdgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudocmdgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_user", "fqcn": "community.general.ipa_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_dnszone", "fqcn": "community.general.ipa_dnszone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudorule", "fqcn": "community.general.ipa_sudorule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudorule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_service", "fqcn": "community.general.ipa_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_subca", "fqcn": "community.general.ipa_subca", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_subca.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_sudocmd", "fqcn": "community.general.ipa_sudocmd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_sudocmd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_hostgroup", "fqcn": "community.general.ipa_hostgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_hostgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_dnsrecord", "fqcn": "community.general.ipa_dnsrecord", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_dnsrecord.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipa_config", "fqcn": "community.general.ipa_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/ipa/ipa_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_group", "fqcn": "community.general.keycloak_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_client", "fqcn": "community.general.keycloak_client", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_client.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "keycloak_clienttemplate", "fqcn": "community.general.keycloak_clienttemplate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/keycloak/keycloak_clienttemplate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "opendj_backendprop", "fqcn": "community.general.opendj_backendprop", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/identity/opendj/opendj_backendprop.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mail", "fqcn": "community.general.mail", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mail.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "matrix", "fqcn": "community.general.matrix", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/matrix.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "grove", "fqcn": "community.general.grove", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/grove.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jabber", "fqcn": "community.general.jabber", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/jabber.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hipchat", "fqcn": "community.general.hipchat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/hipchat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bearychat", "fqcn": "community.general.bearychat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/bearychat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "telegram", "fqcn": "community.general.telegram", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/telegram.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "say", "fqcn": "community.general.say", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/say.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pushover", "fqcn": "community.general.pushover", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/pushover.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "irc", "fqcn": "community.general.irc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/irc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mattermost", "fqcn": "community.general.mattermost", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mattermost.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nexmo", "fqcn": "community.general.nexmo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/nexmo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "typetalk", "fqcn": "community.general.typetalk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/typetalk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mqtt", "fqcn": "community.general.mqtt", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/mqtt.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "office_365_connector_card", "fqcn": "community.general.office_365_connector_card", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/office_365_connector_card.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "syslogger", "fqcn": "community.general.syslogger", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/syslogger.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "campfire", "fqcn": "community.general.campfire", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/campfire.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "flowdock", "fqcn": "community.general.flowdock", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/flowdock.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sendgrid", "fqcn": "community.general.sendgrid", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/sendgrid.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cisco_spark", "fqcn": "community.general.cisco_spark", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/cisco_spark.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cisco_webex", "fqcn": "community.general.cisco_webex", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/cisco_webex.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "twilio", "fqcn": "community.general.twilio", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/twilio.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pushbullet", "fqcn": "community.general.pushbullet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/pushbullet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "slack", "fqcn": "community.general.slack", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/slack.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rocketchat", "fqcn": "community.general.rocketchat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/rocketchat.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logentries_msg", "fqcn": "community.general.logentries_msg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/logentries_msg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "catapult", "fqcn": "community.general.catapult", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/notification/catapult.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "wakeonlan", "fqcn": "community.general.wakeonlan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/wakeonlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "imc_rest", "fqcn": "community.general.imc_rest", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/imc/imc_rest.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxca_nodes", "fqcn": "community.general.lxca_nodes", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lxca/lxca_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxca_cmms", "fqcn": "community.general.lxca_cmms", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/lxca/lxca_cmms.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "stacki_host", "fqcn": "community.general.stacki_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/stacki/stacki_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_facts", "fqcn": "community.general.idrac_redfish_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_config", "fqcn": "community.general.idrac_redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_info", "fqcn": "community.general.idrac_redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_config", "fqcn": "community.general.redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_redfish_command", "fqcn": "community.general.idrac_redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/idrac_redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_facts", "fqcn": "community.general.redfish_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_command", "fqcn": "community.general.redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "redfish_info", "fqcn": "community.general.redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/redfish/redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager", "fqcn": "community.general.oneview_san_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_san_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network", "fqcn": "community.general.oneview_fcoe_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fcoe_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network_facts", "fqcn": "community.general.oneview_fcoe_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fcoe_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_datacenter_facts", "fqcn": "community.general.oneview_datacenter_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_datacenter_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_enclosure_facts", "fqcn": "community.general.oneview_enclosure_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_enclosure_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager_facts", "fqcn": "community.general.oneview_san_manager_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_san_manager_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_info", "fqcn": "community.general.oneview_logical_interconnect_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_logical_interconnect_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group", "fqcn": "community.general.oneview_logical_interconnect_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_logical_interconnect_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set_info", "fqcn": "community.general.oneview_network_set_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_network_set_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_san_manager_info", "fqcn": "community.general.oneview_san_manager_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_san_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network_facts", "fqcn": "community.general.oneview_ethernet_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_ethernet_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network_info", "fqcn": "community.general.oneview_fc_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fc_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_facts", "fqcn": "community.general.oneview_logical_interconnect_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_logical_interconnect_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set", "fqcn": "community.general.oneview_network_set", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_network_set.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network", "fqcn": "community.general.oneview_fc_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fc_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fcoe_network_info", "fqcn": "community.general.oneview_fcoe_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fcoe_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network", "fqcn": "community.general.oneview_ethernet_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_ethernet_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_network_set_facts", "fqcn": "community.general.oneview_network_set_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_network_set_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_datacenter_info", "fqcn": "community.general.oneview_datacenter_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_datacenter_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_enclosure_info", "fqcn": "community.general.oneview_enclosure_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_enclosure_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_ethernet_network_info", "fqcn": "community.general.oneview_ethernet_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_ethernet_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneview_fc_network_facts", "fqcn": "community.general.oneview_fc_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/oneview/oneview_fc_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cobbler_sync", "fqcn": "community.general.cobbler_sync", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/cobbler/cobbler_sync.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cobbler_system", "fqcn": "community.general.cobbler_system", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/cobbler/cobbler_system.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "katello", "fqcn": "community.general.katello", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/foreman/katello.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "foreman", "fqcn": "community.general.foreman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/foreman/foreman.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_boot", "fqcn": "community.general.hpilo_boot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hpilo_boot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_facts", "fqcn": "community.general.hpilo_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hpilo_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hpilo_info", "fqcn": "community.general.hpilo_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hpilo_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hponcfg", "fqcn": "community.general.hponcfg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/hpilo/hponcfg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ome_device_info", "fqcn": "community.general.ome_device_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/dellemc/ome_device_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_server_config_profile", "fqcn": "community.general.idrac_server_config_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/dellemc/idrac_server_config_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "idrac_firmware", "fqcn": "community.general.idrac_firmware", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/dellemc/idrac_firmware.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipmi_boot", "fqcn": "community.general.ipmi_boot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/ipmi/ipmi_boot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipmi_power", "fqcn": "community.general.ipmi_power", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/ipmi/ipmi_power.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_tags", "fqcn": "community.general.manageiq_tags", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_tags.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_user", "fqcn": "community.general.manageiq_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_policies", "fqcn": "community.general.manageiq_policies", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_policies.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_group", "fqcn": "community.general.manageiq_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_provider", "fqcn": "community.general.manageiq_provider", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_provider.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_tenant", "fqcn": "community.general.manageiq_tenant", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_tenant.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_alert_profiles", "fqcn": "community.general.manageiq_alert_profiles", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_alert_profiles.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "manageiq_alerts", "fqcn": "community.general.manageiq_alerts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/remote_management/manageiq/manageiq_alerts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nginx_status_facts", "fqcn": "community.general.nginx_status_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/nginx_status_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job_facts", "fqcn": "community.general.jenkins_job_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_job_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "supervisorctl", "fqcn": "community.general.supervisorctl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/supervisorctl.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml\", \"index\": 1}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "htpasswd", "fqcn": "community.general.htpasswd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/htpasswd.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 3}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "jboss", "fqcn": "community.general.jboss", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jboss.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apache2_module", "fqcn": "community.general.apache2_module", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/apache2_module.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 9}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "taiga_issue", "fqcn": "community.general.taiga_issue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/taiga_issue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nginx_status_info", "fqcn": "community.general.nginx_status_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/nginx_status_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_project", "fqcn": "community.general.rundeck_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job_info", "fqcn": "community.general.jenkins_job_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gunicorn", "fqcn": "community.general.gunicorn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/gunicorn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_script", "fqcn": "community.general.jenkins_script", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_script.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_job", "fqcn": "community.general.jenkins_job", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_job.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "django_manage", "fqcn": "community.general.django_manage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/django_manage.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 11}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 12}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 14}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "jira", "fqcn": "community.general.jira", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jira.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "jenkins_plugin", "fqcn": "community.general.jenkins_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/jenkins_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "apache2_mod_proxy", "fqcn": "community.general.apache2_mod_proxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/apache2_mod_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "deploy_helper", "fqcn": "community.general.deploy_helper", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/deploy_helper.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rundeck_acl_policy", "fqcn": "community.general.rundeck_acl_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/rundeck_acl_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ejabberd_user", "fqcn": "community.general.ejabberd_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/ejabberd_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert", "fqcn": "community.general.utm_ca_host_key_cert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_ca_host_key_cert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert_info", "fqcn": "community.general.utm_ca_host_key_cert_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_ca_host_key_cert_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_location_info", "fqcn": "community.general.utm_proxy_location_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_location_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_network_interface_address", "fqcn": "community.general.utm_network_interface_address", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_network_interface_address.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_frontend", "fqcn": "community.general.utm_proxy_frontend", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_frontend.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_network_interface_address_info", "fqcn": "community.general.utm_network_interface_address_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_network_interface_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_location", "fqcn": "community.general.utm_proxy_location", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_location.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_aaa_group_info", "fqcn": "community.general.utm_aaa_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_aaa_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_aaa_group", "fqcn": "community.general.utm_aaa_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_aaa_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_dns_host", "fqcn": "community.general.utm_dns_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_dns_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_frontend_info", "fqcn": "community.general.utm_proxy_frontend_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_frontend_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_exception", "fqcn": "community.general.utm_proxy_exception", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_exception.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "utm_proxy_auth_profile", "fqcn": "community.general.utm_proxy_auth_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/web_infrastructure/sophos_utm/utm_proxy_auth_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "etcd3", "fqcn": "community.general.etcd3", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/etcd3.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "znode", "fqcn": "community.general.znode", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/znode.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pacemaker_cluster", "fqcn": "community.general.pacemaker_cluster", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/pacemaker_cluster.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nomad_job_info", "fqcn": "community.general.nomad_job_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/nomad/nomad_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nomad_job", "fqcn": "community.general.nomad_job", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/nomad/nomad_job.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_acl", "fqcn": "community.general.consul_acl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_acl.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml\", \"index\": 2}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_session", "fqcn": "community.general.consul_session", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_session.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul", "fqcn": "community.general.consul", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "consul_kv", "fqcn": "community.general.consul_kv", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clustering/consul/consul_kv.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ss_3par_cpg", "fqcn": "community.general.ss_3par_cpg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/hpe3par/ss_3par_cpg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_snapshot_schedule_manager", "fqcn": "community.general.sf_snapshot_schedule_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/sf_snapshot_schedule_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_ontap_gather_facts", "fqcn": "community.general.na_ontap_gather_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_ontap_gather_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_svm", "fqcn": "community.general.na_cdot_svm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_svm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_volume", "fqcn": "community.general.na_cdot_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_user", "fqcn": "community.general.na_cdot_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_license", "fqcn": "community.general.na_cdot_license", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_license.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_check_connections", "fqcn": "community.general.sf_check_connections", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/sf_check_connections.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_user_role", "fqcn": "community.general.na_cdot_user_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_user_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_aggregate", "fqcn": "community.general.na_cdot_aggregate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_aggregate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_account_manager", "fqcn": "community.general.sf_account_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/sf_account_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_lun", "fqcn": "community.general.na_cdot_lun", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_lun.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_volume_access_group_manager", "fqcn": "community.general.sf_volume_access_group_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/sf_volume_access_group_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sf_volume_manager", "fqcn": "community.general.sf_volume_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/sf_volume_manager.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "na_cdot_qtree", "fqcn": "community.general.na_cdot_qtree", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/netapp/na_cdot_qtree.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gluster_volume", "fqcn": "community.general.gluster_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/glusterfs/gluster_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gluster_heal_info", "fqcn": "community.general.gluster_heal_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/glusterfs/gluster_heal_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gluster_peer", "fqcn": "community.general.gluster_peer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/glusterfs/gluster_peer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vexata_volume", "fqcn": "community.general.vexata_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/vexata/vexata_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vexata_eg", "fqcn": "community.general.vexata_eg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/vexata/vexata_eg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "purefa_facts", "fqcn": "community.general.purefa_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/purestorage/purefa_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "purefb_facts", "fqcn": "community.general.purefb_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/purestorage/purefb_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_host", "fqcn": "community.general.ibm_sa_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_domain", "fqcn": "community.general.ibm_sa_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_host_ports", "fqcn": "community.general.ibm_sa_host_ports", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_host_ports.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_vol_map", "fqcn": "community.general.ibm_sa_vol_map", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_vol_map.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_pool", "fqcn": "community.general.ibm_sa_pool", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_pool.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ibm_sa_vol", "fqcn": "community.general.ibm_sa_vol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/ibm/ibm_sa_vol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs_facts", "fqcn": "community.general.zfs_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs", "fqcn": "community.general.zfs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zfs_delegate_admin", "fqcn": "community.general.zfs_delegate_admin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zfs_delegate_admin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "zpool_facts", "fqcn": "community.general.zpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/zfs/zpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "emc_vnx_sg_member", "fqcn": "community.general.emc_vnx_sg_member", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/storage/emc/emc_vnx_sg_member.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cronvar", "fqcn": "community.general.cronvar", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/cronvar.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "osx_defaults", "fqcn": "community.general.osx_defaults", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/osx_defaults.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_lvg", "fqcn": "community.general.aix_lvg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_lvg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iptables_state", "fqcn": "community.general.iptables_state", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/iptables_state.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "python_requirements_facts", "fqcn": "community.general.python_requirements_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/python_requirements_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selogin", "fqcn": "community.general.selogin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/selogin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sefcontext", "fqcn": "community.general.sefcontext", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sefcontext.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "syspatch", "fqcn": "community.general.syspatch", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/syspatch.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "crypttab", "fqcn": "community.general.crypttab", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/crypttab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gconftool2", "fqcn": "community.general.gconftool2", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/gconftool2.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "open_iscsi", "fqcn": "community.general.open_iscsi", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/open_iscsi.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_inittab", "fqcn": "community.general.aix_inittab", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_inittab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dpkg_divert", "fqcn": "community.general.dpkg_divert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/dpkg_divert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ohai", "fqcn": "community.general.ohai", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ohai.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xfconf", "fqcn": "community.general.xfconf", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfconf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "modprobe", "fqcn": "community.general.modprobe", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/modprobe.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "filesystem", "fqcn": "community.general.filesystem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/filesystem.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 2}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 3}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "facter", "fqcn": "community.general.facter", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/facter.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "shutdown", "fqcn": "community.general.shutdown", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/shutdown.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dconf", "fqcn": "community.general.dconf", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/dconf.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "beadm", "fqcn": "community.general.beadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/beadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mksysb", "fqcn": "community.general.mksysb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/mksysb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xfs_quota", "fqcn": "community.general.xfs_quota", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/xfs_quota.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ufw", "fqcn": "community.general.ufw", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/ufw.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 6}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 13}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 14}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 23}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 6}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 4}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 12}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 0}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "solaris_zone", "fqcn": "community.general.solaris_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/solaris_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "listen_ports_facts", "fqcn": "community.general.listen_ports_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/listen_ports_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nosh", "fqcn": "community.general.nosh", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/nosh.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lbu", "fqcn": "community.general.lbu", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lbu.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_filesystem", "fqcn": "community.general.aix_filesystem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_filesystem.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pamd", "fqcn": "community.general.pamd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pamd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_lvol", "fqcn": "community.general.aix_lvol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_lvol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sysupgrade", "fqcn": "community.general.sysupgrade", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/sysupgrade.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "svc", "fqcn": "community.general.svc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/svc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vdo", "fqcn": "community.general.vdo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/vdo.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "openwrt_init", "fqcn": "community.general.openwrt_init", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/openwrt_init.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "capabilities", "fqcn": "community.general.capabilities", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/capabilities.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "java_keystore", "fqcn": "community.general.java_keystore", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/java_keystore.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "puppet", "fqcn": "community.general.puppet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/puppet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "runit", "fqcn": "community.general.runit", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/runit.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pam_limits", "fqcn": "community.general.pam_limits", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pam_limits.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pids", "fqcn": "community.general.pids", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/pids.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "awall", "fqcn": "community.general.awall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/awall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kernel_blacklist", "fqcn": "community.general.kernel_blacklist", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/kernel_blacklist.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "parted", "fqcn": "community.general.parted", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/parted.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lvol", "fqcn": "community.general.lvol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lvol.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "make", "fqcn": "community.general.make", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/make.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 16}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "launchd", "fqcn": "community.general.launchd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/launchd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "java_cert", "fqcn": "community.general.java_cert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/java_cert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lvg", "fqcn": "community.general.lvg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/lvg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "locale_gen", "fqcn": "community.general.locale_gen", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/locale_gen.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "timezone", "fqcn": "community.general.timezone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/timezone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "seport", "fqcn": "community.general.seport", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/seport.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "python_requirements_info", "fqcn": "community.general.python_requirements_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/python_requirements_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "alternatives", "fqcn": "community.general.alternatives", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/alternatives.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 9}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "interfaces_file", "fqcn": "community.general.interfaces_file", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/interfaces_file.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "aix_devices", "fqcn": "community.general.aix_devices", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/aix_devices.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "selinux_permissive", "fqcn": "community.general.selinux_permissive", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/system/selinux_permissive.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance", "fqcn": "community.general.ali_instance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/alicloud/ali_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance_facts", "fqcn": "community.general.ali_instance_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/alicloud/ali_instance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ali_instance_info", "fqcn": "community.general.ali_instance_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/alicloud/ali_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_site", "fqcn": "community.general.webfaction_site", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_site.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_domain", "fqcn": "community.general.webfaction_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_db", "fqcn": "community.general.webfaction_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_db.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_mailbox", "fqcn": "community.general.webfaction_mailbox", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_mailbox.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "webfaction_app", "fqcn": "community.general.webfaction_app", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/webfaction/webfaction_app.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "serverless", "fqcn": "community.general.serverless", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/serverless.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_domain_info", "fqcn": "community.general.proxmox_domain_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_domain_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rhevm", "fqcn": "community.general.rhevm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/rhevm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cloud_init_data_facts", "fqcn": "community.general.cloud_init_data_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/cloud_init_data_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "terraform", "fqcn": "community.general.terraform", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/terraform.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_user_info", "fqcn": "community.general.proxmox_user_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt", "fqcn": "community.general.ovirt", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/ovirt.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox", "fqcn": "community.general.proxmox", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_template", "fqcn": "community.general.proxmox_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_group_info", "fqcn": "community.general.proxmox_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_facts", "fqcn": "community.general.xenserver_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/xenserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm", "fqcn": "community.general.helm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/helm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "proxmox_kvm", "fqcn": "community.general.proxmox_kvm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/misc/proxmox_kvm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_prune", "fqcn": "community.general.docker_prune", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_prune.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack", "fqcn": "community.general.docker_stack", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_stack.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_compose", "fqcn": "community.general.docker_compose", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_compose.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_node", "fqcn": "community.general.docker_node", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_node.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_volume_info", "fqcn": "community.general.docker_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_node_info", "fqcn": "community.general.docker_node_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_node_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_service", "fqcn": "community.general.docker_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_service.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 5}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 4}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_container_info", "fqcn": "community.general.docker_container_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_container_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image_facts", "fqcn": "community.general.docker_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image", "fqcn": "community.general.docker_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_secret", "fqcn": "community.general.docker_secret", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_secret.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack_info", "fqcn": "community.general.docker_stack_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_stack_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_login", "fqcn": "community.general.docker_login", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_login.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_volume", "fqcn": "community.general.docker_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_image_info", "fqcn": "community.general.docker_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_service", "fqcn": "community.general.docker_swarm_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_swarm_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_network", "fqcn": "community.general.docker_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm", "fqcn": "community.general.docker_swarm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_swarm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_host_info", "fqcn": "community.general.docker_host_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_host_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_network_info", "fqcn": "community.general.docker_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_config", "fqcn": "community.general.docker_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_config.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_info", "fqcn": "community.general.docker_swarm_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_swarm_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_stack_task_info", "fqcn": "community.general.docker_stack_task_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_stack_task_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_container", "fqcn": "community.general.docker_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "docker_swarm_service_info", "fqcn": "community.general.docker_swarm_service_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/docker/docker_swarm_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_monthly_billing", "fqcn": "community.general.ovh_monthly_billing", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_monthly_billing.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_ip_loadbalancing_backend", "fqcn": "community.general.ovh_ip_loadbalancing_backend", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_ip_loadbalancing_backend.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovh_ip_failover", "fqcn": "community.general.ovh_ip_failover", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovh/ovh_ip_failover.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_security_group", "fqcn": "community.general.hwc_vpc_security_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_evs_disk", "fqcn": "community.general.hwc_evs_disk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_evs_disk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_subnet", "fqcn": "community.general.hwc_vpc_subnet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_security_group_rule", "fqcn": "community.general.hwc_vpc_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_private_ip", "fqcn": "community.general.hwc_vpc_private_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_private_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_port", "fqcn": "community.general.hwc_vpc_port", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_port.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_smn_topic", "fqcn": "community.general.hwc_smn_topic", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_smn_topic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_ecs_instance", "fqcn": "community.general.hwc_ecs_instance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_ecs_instance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_network_vpc", "fqcn": "community.general.hwc_network_vpc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_network_vpc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_eip", "fqcn": "community.general.hwc_vpc_eip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_eip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_route", "fqcn": "community.general.hwc_vpc_route", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hwc_vpc_peering_connect", "fqcn": "community.general.hwc_vpc_peering_connect", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/huawei/hwc_vpc_peering_connect.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sl_vm", "fqcn": "community.general.sl_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/softlayer/sl_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_datacenter", "fqcn": "community.general.profitbricks_datacenter", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_datacenter.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_nic", "fqcn": "community.general.profitbricks_nic", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_nic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks", "fqcn": "community.general.profitbricks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_volume_attachments", "fqcn": "community.general.profitbricks_volume_attachments", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_volume_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "profitbricks_volume", "fqcn": "community.general.profitbricks_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/profitbricks/profitbricks_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_dns_reload", "fqcn": "community.general.memset_dns_reload", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_dns_reload.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_server_info", "fqcn": "community.general.memset_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_memstore_facts", "fqcn": "community.general.memset_memstore_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_memstore_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone_domain", "fqcn": "community.general.memset_zone_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone_domain.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_server_facts", "fqcn": "community.general.memset_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone_record", "fqcn": "community.general.memset_zone_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_memstore_info", "fqcn": "community.general.memset_memstore_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_memstore_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "memset_zone", "fqcn": "community.general.memset_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/memset/memset_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "heroku_collaborator", "fqcn": "community.general.heroku_collaborator", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/heroku/heroku_collaborator.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "linode", "fqcn": "community.general.linode", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/linode/linode.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "linode_v4", "fqcn": "community.general.linode_v4", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/linode/linode_v4.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb_user", "fqcn": "community.general.rax_cdb_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_dns_record", "fqcn": "community.general.rax_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_notification", "fqcn": "community.general.rax_mon_notification", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_notification.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_files_objects", "fqcn": "community.general.rax_files_objects", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_files_objects.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cbs", "fqcn": "community.general.rax_cbs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cbs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_facts", "fqcn": "community.general.rax_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_files", "fqcn": "community.general.rax_files", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_files.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_queue", "fqcn": "community.general.rax_queue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_queue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb_nodes", "fqcn": "community.general.rax_clb_nodes", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_network", "fqcn": "community.general.rax_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_meta", "fqcn": "community.general.rax_meta", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_meta.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_scaling_policy", "fqcn": "community.general.rax_scaling_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_scaling_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb", "fqcn": "community.general.rax_clb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_entity", "fqcn": "community.general.rax_mon_entity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_entity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax", "fqcn": "community.general.rax", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_keypair", "fqcn": "community.general.rax_keypair", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_keypair.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb_database", "fqcn": "community.general.rax_cdb_database", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_dns", "fqcn": "community.general.rax_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_clb_ssl", "fqcn": "community.general.rax_clb_ssl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_clb_ssl.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_check", "fqcn": "community.general.rax_mon_check", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_identity", "fqcn": "community.general.rax_identity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_identity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cdb", "fqcn": "community.general.rax_cdb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cdb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_cbs_attachments", "fqcn": "community.general.rax_cbs_attachments", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_cbs_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_notification_plan", "fqcn": "community.general.rax_mon_notification_plan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_notification_plan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_scaling_group", "fqcn": "community.general.rax_scaling_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_scaling_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rax_mon_alarm", "fqcn": "community.general.rax_mon_alarm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/rackspace/rax_mon_alarm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pubnub_blocks", "fqcn": "community.general.pubnub_blocks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/pubnub/pubnub_blocks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcpubsub_info", "fqcn": "community.general.gcpubsub_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcpubsub_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_target_proxy", "fqcn": "community.general.gcp_target_proxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcp_target_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_mig", "fqcn": "community.general.gce_mig", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_mig.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_backend_service", "fqcn": "community.general.gcp_backend_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcp_backend_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcdns_record", "fqcn": "community.general.gcdns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcdns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcdns_zone", "fqcn": "community.general.gcdns_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcdns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_healthcheck", "fqcn": "community.general.gcp_healthcheck", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcp_healthcheck.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_net", "fqcn": "community.general.gce_net", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_net.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcpubsub", "fqcn": "community.general.gcpubsub", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcpubsub.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce", "fqcn": "community.general.gce", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcspanner", "fqcn": "community.general.gcspanner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcspanner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_forwarding_rule", "fqcn": "community.general.gcp_forwarding_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcp_forwarding_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_img", "fqcn": "community.general.gce_img", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_img.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcp_url_map", "fqcn": "community.general.gcp_url_map", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcp_url_map.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_lb", "fqcn": "community.general.gce_lb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_lb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gc_storage", "fqcn": "community.general.gc_storage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gc_storage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_pd", "fqcn": "community.general.gce_pd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_pd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_labels", "fqcn": "community.general.gce_labels", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_labels.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gcpubsub_facts", "fqcn": "community.general.gcpubsub_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gcpubsub_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_snapshot", "fqcn": "community.general.gce_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_instance_template", "fqcn": "community.general.gce_instance_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_instance_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_eip", "fqcn": "community.general.gce_eip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_eip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gce_tag", "fqcn": "community.general.gce_tag", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/google/gce_tag.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oci_vcn", "fqcn": "community.general.oci_vcn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oracle/oci_vcn.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_group", "fqcn": "community.general.clc_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_firewall_policy", "fqcn": "community.general.clc_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_loadbalancer", "fqcn": "community.general.clc_loadbalancer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_server", "fqcn": "community.general.clc_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_aa_policy", "fqcn": "community.general.clc_aa_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_aa_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_publicip", "fqcn": "community.general.clc_publicip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_publicip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_server_snapshot", "fqcn": "community.general.clc_server_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_server_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_modify_server", "fqcn": "community.general.clc_modify_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_modify_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_blueprint_package", "fqcn": "community.general.clc_blueprint_package", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_blueprint_package.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "clc_alert_policy", "fqcn": "community.general.clc_alert_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/centurylink/clc_alert_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_image", "fqcn": "community.general.atomic_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_container", "fqcn": "community.general.atomic_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "atomic_host", "fqcn": "community.general.atomic_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/atomic/atomic_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_public_ip", "fqcn": "community.general.oneandone_public_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_public_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_monitoring_policy", "fqcn": "community.general.oneandone_monitoring_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_monitoring_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_firewall_policy", "fqcn": "community.general.oneandone_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_server", "fqcn": "community.general.oneandone_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_server.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_private_network", "fqcn": "community.general.oneandone_private_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "oneandone_load_balancer", "fqcn": "community.general.oneandone_load_balancer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/oneandone/oneandone_load_balancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxc_container", "fqcn": "community.general.lxc_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxc/lxc_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxd_container", "fqcn": "community.general.lxd_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_container.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lxd_profile", "fqcn": "community.general.lxd_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/lxd/lxd_profile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "spotinst_aws_elastigroup", "fqcn": "community.general.spotinst_aws_elastigroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/spotinst/spotinst_aws_elastigroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "imgadm", "fqcn": "community.general.imgadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/imgadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nictagadm", "fqcn": "community.general.nictagadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/nictagadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "smartos_image_facts", "fqcn": "community.general.smartos_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/smartos_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "smartos_image_info", "fqcn": "community.general.smartos_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/smartos_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "vmadm", "fqcn": "community.general.vmadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/smartos/vmadm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_preset", "fqcn": "community.general.kubevirt_preset", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/kubevirt/kubevirt_preset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_vm", "fqcn": "community.general.kubevirt_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/kubevirt/kubevirt_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_template", "fqcn": "community.general.kubevirt_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/kubevirt/kubevirt_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_pvc", "fqcn": "community.general.kubevirt_pvc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/kubevirt/kubevirt_pvc.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_rs", "fqcn": "community.general.kubevirt_rs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/kubevirt/kubevirt_rs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "kubevirt_cdi_upload", "fqcn": "community.general.kubevirt_cdi_upload", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/kubevirt/kubevirt_cdi_upload.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_compute", "fqcn": "community.general.scaleway_compute", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_compute.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume", "fqcn": "community.general.scaleway_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_sshkey", "fqcn": "community.general.scaleway_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_organization_info", "fqcn": "community.general.scaleway_organization_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_organization_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_server_info", "fqcn": "community.general.scaleway_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_server_facts", "fqcn": "community.general.scaleway_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_database_backup", "fqcn": "community.general.scaleway_database_backup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_database_backup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_image_info", "fqcn": "community.general.scaleway_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip", "fqcn": "community.general.scaleway_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group", "fqcn": "community.general.scaleway_security_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_info", "fqcn": "community.general.scaleway_security_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_user_data", "fqcn": "community.general.scaleway_user_data", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_user_data.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume_info", "fqcn": "community.general.scaleway_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_organization_facts", "fqcn": "community.general.scaleway_organization_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_organization_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip_info", "fqcn": "community.general.scaleway_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_image_facts", "fqcn": "community.general.scaleway_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_rule", "fqcn": "community.general.scaleway_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_snapshot_info", "fqcn": "community.general.scaleway_snapshot_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_snapshot_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_volume_facts", "fqcn": "community.general.scaleway_volume_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_volume_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_snapshot_facts", "fqcn": "community.general.scaleway_snapshot_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_snapshot_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_ip_facts", "fqcn": "community.general.scaleway_ip_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_ip_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_security_group_facts", "fqcn": "community.general.scaleway_security_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_security_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "scaleway_lb", "fqcn": "community.general.scaleway_lb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/scaleway/scaleway_lb.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest", "fqcn": "community.general.xenserver_guest", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_facts", "fqcn": "community.general.xenserver_guest_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_powerstate", "fqcn": "community.general.xenserver_guest_powerstate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest_powerstate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xenserver_guest_info", "fqcn": "community.general.xenserver_guest_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/xenserver/xenserver_guest_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_server_facts", "fqcn": "community.general.online_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_server_info", "fqcn": "community.general.online_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_user_info", "fqcn": "community.general.online_user_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "online_user_facts", "fqcn": "community.general.online_user_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/online/online_user_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dimensiondata_network", "fqcn": "community.general.dimensiondata_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/dimensiondata/dimensiondata_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dimensiondata_vlan", "fqcn": "community.general.dimensiondata_vlan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/dimensiondata/dimensiondata_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_host_facts", "fqcn": "community.general.ovirt_host_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_host_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_permission_facts", "fqcn": "community.general.ovirt_permission_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_permission_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_user_facts", "fqcn": "community.general.ovirt_user_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_user_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_vm_facts", "fqcn": "community.general.ovirt_vm_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_vm_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_storage_domain_facts", "fqcn": "community.general.ovirt_storage_domain_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_storage_domain_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_host_storage_facts", "fqcn": "community.general.ovirt_host_storage_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_host_storage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_group_facts", "fqcn": "community.general.ovirt_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_event_facts", "fqcn": "community.general.ovirt_event_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_event_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_api_facts", "fqcn": "community.general.ovirt_api_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_api_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_storage_template_facts", "fqcn": "community.general.ovirt_storage_template_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_storage_template_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_nic_facts", "fqcn": "community.general.ovirt_nic_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_nic_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_template_facts", "fqcn": "community.general.ovirt_template_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_template_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_cluster_facts", "fqcn": "community.general.ovirt_cluster_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_cluster_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_vmpool_facts", "fqcn": "community.general.ovirt_vmpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_vmpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_datacenter_facts", "fqcn": "community.general.ovirt_datacenter_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_datacenter_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_external_provider_facts", "fqcn": "community.general.ovirt_external_provider_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_external_provider_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_quota_facts", "fqcn": "community.general.ovirt_quota_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_quota_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_disk_facts", "fqcn": "community.general.ovirt_disk_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_disk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_tag_facts", "fqcn": "community.general.ovirt_tag_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_tag_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_storage_vm_facts", "fqcn": "community.general.ovirt_storage_vm_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_storage_vm_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_network_facts", "fqcn": "community.general.ovirt_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_affinity_label_facts", "fqcn": "community.general.ovirt_affinity_label_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_affinity_label_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_snapshot_facts", "fqcn": "community.general.ovirt_snapshot_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_snapshot_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ovirt_scheduling_policy_facts", "fqcn": "community.general.ovirt_scheduling_policy_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/ovirt/ovirt_scheduling_policy_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_device", "fqcn": "community.general.packet_device", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_device.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_project", "fqcn": "community.general.packet_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_ip_subnet", "fqcn": "community.general.packet_ip_subnet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_ip_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_volume_attachment", "fqcn": "community.general.packet_volume_attachment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_volume_attachment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_volume", "fqcn": "community.general.packet_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_volume.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "packet_sshkey", "fqcn": "community.general.packet_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/packet/packet_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_user", "fqcn": "community.general.udm_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_share", "fqcn": "community.general.udm_share", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_share.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_group", "fqcn": "community.general.udm_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_dns_record", "fqcn": "community.general.udm_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "udm_dns_zone", "fqcn": "community.general.udm_dns_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/univention/udm_dns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image", "fqcn": "community.general.one_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image_info", "fqcn": "community.general.one_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_image_facts", "fqcn": "community.general.one_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_vm", "fqcn": "community.general.one_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_vm.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_service", "fqcn": "community.general.one_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "one_host", "fqcn": "community.general.one_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud/opennebula/one_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "read_csv", "fqcn": "community.general.read_csv", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/files/read_csv.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xml", "fqcn": "community.general.xml", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/files/xml.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "xattr", "fqcn": "community.general.xattr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/files/xattr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "archive", "fqcn": "community.general.archive", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/files/archive.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iso_create", "fqcn": "community.general.iso_create", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/files/iso_create.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "iso_extract", "fqcn": "community.general.iso_extract", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/files/iso_extract.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ini_file", "fqcn": "community.general.ini_file", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/files/ini_file.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 8}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "nagios", "fqcn": "community.general.nagios", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/nagios.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "circonus_annotation", "fqcn": "community.general.circonus_annotation", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/circonus_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bigpanda", "fqcn": "community.general.bigpanda", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/bigpanda.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "statusio_maintenance", "fqcn": "community.general.statusio_maintenance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/statusio_maintenance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "monit", "fqcn": "community.general.monit", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/monit.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "honeybadger_deployment", "fqcn": "community.general.honeybadger_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/honeybadger_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "icinga2_host", "fqcn": "community.general.icinga2_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/icinga2_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logstash_plugin", "fqcn": "community.general.logstash_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/logstash_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "logentries", "fqcn": "community.general.logentries", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/logentries.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_alert", "fqcn": "community.general.pagerduty_alert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_alert.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_user", "fqcn": "community.general.pagerduty_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "newrelic_deployment", "fqcn": "community.general.newrelic_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/newrelic_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "uptimerobot", "fqcn": "community.general.uptimerobot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/uptimerobot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "librato_annotation", "fqcn": "community.general.librato_annotation", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/librato_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "icinga2_feature", "fqcn": "community.general.icinga2_feature", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/icinga2_feature.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rollbar_deployment", "fqcn": "community.general.rollbar_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/rollbar_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "airbrake_deployment", "fqcn": "community.general.airbrake_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/airbrake_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pingdom", "fqcn": "community.general.pingdom", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pingdom.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty", "fqcn": "community.general.pagerduty", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "pagerduty_change", "fqcn": "community.general.pagerduty_change", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/pagerduty_change.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "stackdriver", "fqcn": "community.general.stackdriver", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/stackdriver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "spectrum_device", "fqcn": "community.general.spectrum_device", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/spectrum_device.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "datadog_monitor", "fqcn": "community.general.datadog_monitor", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_monitor.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "datadog_event", "fqcn": "community.general.datadog_event", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/datadog/datadog_event.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_check", "fqcn": "community.general.sensu_check", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_check.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_handler", "fqcn": "community.general.sensu_handler", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_handler.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_silence", "fqcn": "community.general.sensu_silence", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_silence.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_client", "fqcn": "community.general.sensu_client", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_client.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "sensu_subscription", "fqcn": "community.general.sensu_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monitoring/sensu/sensu_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_failover_ip", "fqcn": "community.general.hetzner_failover_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/hetzner_failover_ip.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_failover_ip_info", "fqcn": "community.general.hetzner_failover_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/hetzner_failover_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "netcup_dns", "fqcn": "community.general.netcup_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/netcup_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "snmp_facts", "fqcn": "community.general.snmp_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/snmp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipinfoio_facts", "fqcn": "community.general.ipinfoio_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipinfoio_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ip_netns", "fqcn": "community.general.ip_netns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ip_netns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "cloudflare_dns", "fqcn": "community.general.cloudflare_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/cloudflare_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "haproxy", "fqcn": "community.general.haproxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/haproxy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnsimple", "fqcn": "community.general.dnsimple", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsimple.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "omapi_host", "fqcn": "community.general.omapi_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/omapi_host.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "lldp", "fqcn": "community.general.lldp", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/lldp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nsupdate", "fqcn": "community.general.nsupdate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nsupdate.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_firewall", "fqcn": "community.general.hetzner_firewall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/hetzner_firewall.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipwcli_dns", "fqcn": "community.general.ipwcli_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipwcli_dns.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ipify_facts", "fqcn": "community.general.ipify_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ipify_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nmcli", "fqcn": "community.general.nmcli", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nmcli.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "dnsmadeeasy", "fqcn": "community.general.dnsmadeeasy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/dnsmadeeasy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "hetzner_firewall_info", "fqcn": "community.general.hetzner_firewall_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/hetzner_firewall_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_member", "fqcn": "community.general.nios_member", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_member.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_dns_view", "fqcn": "community.general.nios_dns_view", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_dns_view.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_zone", "fqcn": "community.general.nios_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_zone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_network", "fqcn": "community.general.nios_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_network.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_txt_record", "fqcn": "community.general.nios_txt_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_txt_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_naptr_record", "fqcn": "community.general.nios_naptr_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_naptr_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_ptr_record", "fqcn": "community.general.nios_ptr_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_ptr_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_host_record", "fqcn": "community.general.nios_host_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_host_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_network_view", "fqcn": "community.general.nios_network_view", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_network_view.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_srv_record", "fqcn": "community.general.nios_srv_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_srv_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_nsgroup", "fqcn": "community.general.nios_nsgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_nsgroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_mx_record", "fqcn": "community.general.nios_mx_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_mx_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_cname_record", "fqcn": "community.general.nios_cname_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_cname_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_a_record", "fqcn": "community.general.nios_a_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_a_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_aaaa_record", "fqcn": "community.general.nios_aaaa_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_aaaa_record.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "nios_fixed_address", "fqcn": "community.general.nios_fixed_address", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/nios/nios_fixed_address.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_passwd", "fqcn": "community.general.ldap_passwd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_passwd.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_search", "fqcn": "community.general.ldap_search", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_search.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_attrs", "fqcn": "community.general.ldap_attrs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_attrs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_attr", "fqcn": "community.general.ldap_attr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_attr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "ldap_entry", "fqcn": "community.general.ldap_entry", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/ldap/ldap_entry.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "infinity", "fqcn": "community.general.infinity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/net_tools/infinity/infinity.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bzr", "fqcn": "community.general.bzr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bzr.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "git_config", "fqcn": "community.general.git_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/git_config.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml\", \"index\": 2}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "hg", "fqcn": "community.general.hg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/hg.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group_variable", "fqcn": "community.general.gitlab_group_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_deploy_key", "fqcn": "community.general.gitlab_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_project_variable", "fqcn": "community.general.gitlab_project_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_runner", "fqcn": "community.general.gitlab_runner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_runner.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group", "fqcn": "community.general.gitlab_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_user", "fqcn": "community.general.gitlab_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_user.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_hook", "fqcn": "community.general.gitlab_hook", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_hook.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_project", "fqcn": "community.general.gitlab_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_project.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "gitlab_group_members", "fqcn": "community.general.gitlab_group_members", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/gitlab/gitlab_group_members.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_deploy_key", "fqcn": "community.general.github_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_webhook_info", "fqcn": "community.general.github_webhook_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_webhook_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_issue", "fqcn": "community.general.github_issue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_issue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_release", "fqcn": "community.general.github_release", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_release.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_webhook", "fqcn": "community.general.github_webhook", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_webhook.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_key", "fqcn": "community.general.github_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "github_hooks", "fqcn": "community.general.github_hooks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/github/github_hooks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_variable", "fqcn": "community.general.bitbucket_pipeline_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_variable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_key_pair", "fqcn": "community.general.bitbucket_pipeline_key_pair", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_key_pair.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_access_key", "fqcn": "community.general.bitbucket_access_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_access_key.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "bitbucket_pipeline_known_host", "fqcn": "community.general.bitbucket_pipeline_known_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/source_control/bitbucket/bitbucket_pipeline_known_host.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.rabbitmq", "path": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "rabbitmq_exchange", "fqcn": "community.rabbitmq.rabbitmq_exchange", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_exchange.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_policy", "fqcn": "community.rabbitmq.rabbitmq_policy", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_policy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_user", "fqcn": "community.rabbitmq.rabbitmq_user", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_user.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 18}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_publish", "fqcn": "community.rabbitmq.rabbitmq_publish", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_publish.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_user_limits", "fqcn": "community.rabbitmq.rabbitmq_user_limits", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_user_limits.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_binding", "fqcn": "community.rabbitmq.rabbitmq_binding", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_binding.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_vhost_limits", "fqcn": "community.rabbitmq.rabbitmq_vhost_limits", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_vhost_limits.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_vhost", "fqcn": "community.rabbitmq.rabbitmq_vhost", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_vhost.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 19}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_queue", "fqcn": "community.rabbitmq.rabbitmq_queue", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_queue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_upgrade", "fqcn": "community.rabbitmq.rabbitmq_upgrade", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_upgrade.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_parameter", "fqcn": "community.rabbitmq.rabbitmq_parameter", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_parameter.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_feature_flag", "fqcn": "community.rabbitmq.rabbitmq_feature_flag", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_feature_flag.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_plugin", "fqcn": "community.rabbitmq.rabbitmq_plugin", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_plugin.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 14}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "rabbitmq_global_parameter", "fqcn": "community.rabbitmq.rabbitmq_global_parameter", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_global_parameter.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.mysql", "path": "testdata3/installed_collections_path/ansible_collections/community/mysql", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "mysql_info", "fqcn": "community.mysql.mysql_info", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_variables", "fqcn": "community.mysql.mysql_variables", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_variables.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_replication", "fqcn": "community.mysql.mysql_replication", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_replication.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_query", "fqcn": "community.mysql.mysql_query", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_query.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_role", "fqcn": "community.mysql.mysql_role", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_role.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_db", "fqcn": "community.mysql.mysql_db", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_db.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 6}"], "annotations": {}}, {"py/object": "struct4.Module", "name": "mysql_user", "fqcn": "community.mysql.mysql_user", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_user.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}, {"py/object": "struct4.Collection", "name": "community.kubernetes", "path": "testdata3/installed_collections_path/ansible_collections/community/kubernetes", "playbooks": [], "roles": [], "modules": [{"py/object": "struct4.Module", "name": "k8s_log", "fqcn": "community.kubernetes.k8s_log", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_log.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm_plugin", "fqcn": "community.kubernetes.helm_plugin", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s_info", "fqcn": "community.kubernetes.k8s_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm_template", "fqcn": "community.kubernetes.helm_template", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_template.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s_scale", "fqcn": "community.kubernetes.k8s_scale", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_scale.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm_plugin_info", "fqcn": "community.kubernetes.helm_plugin_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_plugin_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm_info", "fqcn": "community.kubernetes.helm_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s_exec", "fqcn": "community.kubernetes.k8s_exec", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_exec.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s_service", "fqcn": "community.kubernetes.k8s_service", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_service.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s_rollback", "fqcn": "community.kubernetes.k8s_rollback", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_rollback.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm_repository", "fqcn": "community.kubernetes.helm_repository", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_repository.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s", "fqcn": "community.kubernetes.k8s", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s_cluster_info", "fqcn": "community.kubernetes.k8s_cluster_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_cluster_info.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "k8s_auth", "fqcn": "community.kubernetes.k8s_auth", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_auth.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "helm", "fqcn": "community.kubernetes.helm", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm.py", "builtin": false, "used_in": [], "annotations": {}}], "annotations": {}}], "installed_roles_path": "", "installed_roles": [], "modules": [], "version": "", "module_dict": {"google.cloud.gcp_compute_target_https_proxy_info": {"py/object": "struct4.Module", "name": "gcp_compute_target_https_proxy_info", "fqcn": "google.cloud.gcp_compute_target_https_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_https_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_firewall_info": {"py/object": "struct4.Module", "name": "gcp_compute_firewall_info", "fqcn": "google.cloud.gcp_compute_firewall_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_firewall_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_mlengine_model": {"py/object": "struct4.Module", "name": "gcp_mlengine_model", "fqcn": "google.cloud.gcp_mlengine_model", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_model.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_bigquery_dataset": {"py/object": "struct4.Module", "name": "gcp_bigquery_dataset", "fqcn": "google.cloud.gcp_bigquery_dataset", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_dataset.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_backend_service": {"py/object": "struct4.Module", "name": "gcp_compute_backend_service", "fqcn": "google.cloud.gcp_compute_backend_service", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_service.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 2}"], "annotations": {}}, "google.cloud.gcp_compute_node_template_info": {"py/object": "struct4.Module", "name": "gcp_compute_node_template_info", "fqcn": "google.cloud.gcp_compute_node_template_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_template_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_interconnect_attachment": {"py/object": "struct4.Module", "name": "gcp_compute_interconnect_attachment", "fqcn": "google.cloud.gcp_compute_interconnect_attachment", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_interconnect_attachment.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sql_database": {"py/object": "struct4.Module", "name": "gcp_sql_database", "fqcn": "google.cloud.gcp_sql_database", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_database.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_dns_managed_zone_info": {"py/object": "struct4.Module", "name": "gcp_dns_managed_zone_info", "fqcn": "google.cloud.gcp_dns_managed_zone_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_managed_zone_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_runtimeconfig_config": {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_config", "fqcn": "google.cloud.gcp_runtimeconfig_config", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_config.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_ssl_certificate": {"py/object": "struct4.Module", "name": "gcp_compute_ssl_certificate", "fqcn": "google.cloud.gcp_compute_ssl_certificate", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_certificate.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_mlengine_version_info": {"py/object": "struct4.Module", "name": "gcp_mlengine_version_info", "fqcn": "google.cloud.gcp_mlengine_version_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_version_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_node_group_info": {"py/object": "struct4.Module", "name": "gcp_compute_node_group_info", "fqcn": "google.cloud.gcp_compute_node_group_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sql_user": {"py/object": "struct4.Module", "name": "gcp_sql_user", "fqcn": "google.cloud.gcp_sql_user", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_user.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_global_forwarding_rule": {"py/object": "struct4.Module", "name": "gcp_compute_global_forwarding_rule", "fqcn": "google.cloud.gcp_compute_global_forwarding_rule", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_forwarding_rule.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 5}"], "annotations": {}}, "google.cloud.gcp_compute_health_check_info": {"py/object": "struct4.Module", "name": "gcp_compute_health_check_info", "fqcn": "google.cloud.gcp_compute_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_iam_role": {"py/object": "struct4.Module", "name": "gcp_iam_role", "fqcn": "google.cloud.gcp_iam_role", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_role.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_kms_crypto_key": {"py/object": "struct4.Module", "name": "gcp_kms_crypto_key", "fqcn": "google.cloud.gcp_kms_crypto_key", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_crypto_key.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_iam_service_account_info": {"py/object": "struct4.Module", "name": "gcp_iam_service_account_info", "fqcn": "google.cloud.gcp_iam_service_account_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_service_account_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_container_node_pool": {"py/object": "struct4.Module", "name": "gcp_container_node_pool", "fqcn": "google.cloud.gcp_container_node_pool", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_node_pool.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_tcp_proxy": {"py/object": "struct4.Module", "name": "gcp_compute_target_tcp_proxy", "fqcn": "google.cloud.gcp_compute_target_tcp_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_tcp_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudbuild_trigger": {"py/object": "struct4.Module", "name": "gcp_cloudbuild_trigger", "fqcn": "google.cloud.gcp_cloudbuild_trigger", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudbuild_trigger.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance_group_manager": {"py/object": "struct4.Module", "name": "gcp_compute_instance_group_manager", "fqcn": "google.cloud.gcp_compute_instance_group_manager", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance_template_info": {"py/object": "struct4.Module", "name": "gcp_compute_instance_template_info", "fqcn": "google.cloud.gcp_compute_instance_template_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_template_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_backend_service_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_backend_service_info", "fqcn": "google.cloud.gcp_compute_region_backend_service_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_backend_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudscheduler_job_info": {"py/object": "struct4.Module", "name": "gcp_cloudscheduler_job_info", "fqcn": "google.cloud.gcp_cloudscheduler_job_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudscheduler_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_global_address": {"py/object": "struct4.Module", "name": "gcp_compute_global_address", "fqcn": "google.cloud.gcp_compute_global_address", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_address.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 0}"], "annotations": {}}, "google.cloud.gcp_compute_target_ssl_proxy": {"py/object": "struct4.Module", "name": "gcp_compute_target_ssl_proxy", "fqcn": "google.cloud.gcp_compute_target_ssl_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_ssl_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_autoscaler": {"py/object": "struct4.Module", "name": "gcp_compute_autoscaler", "fqcn": "google.cloud.gcp_compute_autoscaler", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_autoscaler.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudfunctions_cloud_function_info": {"py/object": "struct4.Module", "name": "gcp_cloudfunctions_cloud_function_info", "fqcn": "google.cloud.gcp_cloudfunctions_cloud_function_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudfunctions_cloud_function_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_https_health_check": {"py/object": "struct4.Module", "name": "gcp_compute_https_health_check", "fqcn": "google.cloud.gcp_compute_https_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_https_health_check.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_route": {"py/object": "struct4.Module", "name": "gcp_compute_route", "fqcn": "google.cloud.gcp_compute_route", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_route.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_http_proxy": {"py/object": "struct4.Module", "name": "gcp_compute_target_http_proxy", "fqcn": "google.cloud.gcp_compute_target_http_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_http_proxy.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 4}"], "annotations": {}}, "google.cloud.gcp_compute_https_health_check_info": {"py/object": "struct4.Module", "name": "gcp_compute_https_health_check_info", "fqcn": "google.cloud.gcp_compute_https_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_https_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance_group_manager_info": {"py/object": "struct4.Module", "name": "gcp_compute_instance_group_manager_info", "fqcn": "google.cloud.gcp_compute_instance_group_manager_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_kms_key_ring": {"py/object": "struct4.Module", "name": "gcp_kms_key_ring", "fqcn": "google.cloud.gcp_kms_key_ring", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_key_ring.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_target_https_proxy_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_target_https_proxy_info", "fqcn": "google.cloud.gcp_compute_region_target_https_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_https_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_backend_service_info": {"py/object": "struct4.Module", "name": "gcp_compute_backend_service_info", "fqcn": "google.cloud.gcp_compute_backend_service_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_address": {"py/object": "struct4.Module", "name": "gcp_compute_address", "fqcn": "google.cloud.gcp_compute_address", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_address.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_reservation_info": {"py/object": "struct4.Module", "name": "gcp_compute_reservation_info", "fqcn": "google.cloud.gcp_compute_reservation_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_reservation_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_bigquery_dataset_info": {"py/object": "struct4.Module", "name": "gcp_bigquery_dataset_info", "fqcn": "google.cloud.gcp_bigquery_dataset_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_dataset_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_router_info": {"py/object": "struct4.Module", "name": "gcp_compute_router_info", "fqcn": "google.cloud.gcp_compute_router_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_router_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_disk_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_disk_info", "fqcn": "google.cloud.gcp_compute_region_disk_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_disk_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_tpu_node": {"py/object": "struct4.Module", "name": "gcp_tpu_node", "fqcn": "google.cloud.gcp_tpu_node", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_tpu_node.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_forwarding_rule": {"py/object": "struct4.Module", "name": "gcp_compute_forwarding_rule", "fqcn": "google.cloud.gcp_compute_forwarding_rule", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_forwarding_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance": {"py/object": "struct4.Module", "name": "gcp_compute_instance", "fqcn": "google.cloud.gcp_compute_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_vpn_gateway_info": {"py/object": "struct4.Module", "name": "gcp_compute_target_vpn_gateway_info", "fqcn": "google.cloud.gcp_compute_target_vpn_gateway_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_vpn_gateway_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_resource_policy": {"py/object": "struct4.Module", "name": "gcp_compute_resource_policy", "fqcn": "google.cloud.gcp_compute_resource_policy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_resource_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_serviceusage_service_info": {"py/object": "struct4.Module", "name": "gcp_serviceusage_service_info", "fqcn": "google.cloud.gcp_serviceusage_service_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_serviceusage_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_spanner_instance_info": {"py/object": "struct4.Module", "name": "gcp_spanner_instance_info", "fqcn": "google.cloud.gcp_spanner_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_redis_instance": {"py/object": "struct4.Module", "name": "gcp_redis_instance", "fqcn": "google.cloud.gcp_redis_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_redis_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_ssl_proxy_info": {"py/object": "struct4.Module", "name": "gcp_compute_target_ssl_proxy_info", "fqcn": "google.cloud.gcp_compute_target_ssl_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_ssl_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_runtimeconfig_config_info": {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_config_info", "fqcn": "google.cloud.gcp_runtimeconfig_config_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_config_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_https_proxy": {"py/object": "struct4.Module", "name": "gcp_compute_target_https_proxy", "fqcn": "google.cloud.gcp_compute_target_https_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_https_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_route_info": {"py/object": "struct4.Module", "name": "gcp_compute_route_info", "fqcn": "google.cloud.gcp_compute_route_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_route_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_spanner_database_info": {"py/object": "struct4.Module", "name": "gcp_spanner_database_info", "fqcn": "google.cloud.gcp_spanner_database_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_database_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sql_instance": {"py/object": "struct4.Module", "name": "gcp_sql_instance", "fqcn": "google.cloud.gcp_sql_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_dns_resource_record_set": {"py/object": "struct4.Module", "name": "gcp_dns_resource_record_set", "fqcn": "google.cloud.gcp_dns_resource_record_set", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_resource_record_set.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance_group_info": {"py/object": "struct4.Module", "name": "gcp_compute_instance_group_info", "fqcn": "google.cloud.gcp_compute_instance_group_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sql_ssl_cert": {"py/object": "struct4.Module", "name": "gcp_sql_ssl_cert", "fqcn": "google.cloud.gcp_sql_ssl_cert", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_ssl_cert.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_resourcemanager_project": {"py/object": "struct4.Module", "name": "gcp_resourcemanager_project", "fqcn": "google.cloud.gcp_resourcemanager_project", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_resourcemanager_project.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_redis_instance_info": {"py/object": "struct4.Module", "name": "gcp_redis_instance_info", "fqcn": "google.cloud.gcp_redis_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_redis_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_iam_service_account": {"py/object": "struct4.Module", "name": "gcp_iam_service_account", "fqcn": "google.cloud.gcp_iam_service_account", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_service_account.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_target_http_proxy_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_target_http_proxy_info", "fqcn": "google.cloud.gcp_compute_region_target_http_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_http_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_mlengine_version": {"py/object": "struct4.Module", "name": "gcp_mlengine_version", "fqcn": "google.cloud.gcp_mlengine_version", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_version.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudtasks_queue": {"py/object": "struct4.Module", "name": "gcp_cloudtasks_queue", "fqcn": "google.cloud.gcp_cloudtasks_queue", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudtasks_queue.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_container_cluster_info": {"py/object": "struct4.Module", "name": "gcp_container_cluster_info", "fqcn": "google.cloud.gcp_container_cluster_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_cluster_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_router": {"py/object": "struct4.Module", "name": "gcp_compute_router", "fqcn": "google.cloud.gcp_compute_router", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_router.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance_group": {"py/object": "struct4.Module", "name": "gcp_compute_instance_group", "fqcn": "google.cloud.gcp_compute_instance_group", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_group.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_storage_bucket": {"py/object": "struct4.Module", "name": "gcp_storage_bucket", "fqcn": "google.cloud.gcp_storage_bucket", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_bucket.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_kms_crypto_key_info": {"py/object": "struct4.Module", "name": "gcp_kms_crypto_key_info", "fqcn": "google.cloud.gcp_kms_crypto_key_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_crypto_key_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_firewall": {"py/object": "struct4.Module", "name": "gcp_compute_firewall", "fqcn": "google.cloud.gcp_compute_firewall", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_firewall.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_serviceusage_service": {"py/object": "struct4.Module", "name": "gcp_serviceusage_service", "fqcn": "google.cloud.gcp_serviceusage_service", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_serviceusage_service.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudbuild_trigger_info": {"py/object": "struct4.Module", "name": "gcp_cloudbuild_trigger_info", "fqcn": "google.cloud.gcp_cloudbuild_trigger_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudbuild_trigger_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_storage_object": {"py/object": "struct4.Module", "name": "gcp_storage_object", "fqcn": "google.cloud.gcp_storage_object", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_object.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_autoscaler": {"py/object": "struct4.Module", "name": "gcp_compute_region_autoscaler", "fqcn": "google.cloud.gcp_compute_region_autoscaler", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_autoscaler.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sourcerepo_repository": {"py/object": "struct4.Module", "name": "gcp_sourcerepo_repository", "fqcn": "google.cloud.gcp_sourcerepo_repository", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sourcerepo_repository.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_pool": {"py/object": "struct4.Module", "name": "gcp_compute_target_pool", "fqcn": "google.cloud.gcp_compute_target_pool", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_pool.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_bigtable_instance": {"py/object": "struct4.Module", "name": "gcp_bigtable_instance", "fqcn": "google.cloud.gcp_bigtable_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigtable_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_instance_info": {"py/object": "struct4.Module", "name": "gcp_compute_target_instance_info", "fqcn": "google.cloud.gcp_compute_target_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_autoscaler_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_autoscaler_info", "fqcn": "google.cloud.gcp_compute_region_autoscaler_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_autoscaler_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_global_address_info": {"py/object": "struct4.Module", "name": "gcp_compute_global_address_info", "fqcn": "google.cloud.gcp_compute_global_address_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_global_forwarding_rule_info": {"py/object": "struct4.Module", "name": "gcp_compute_global_forwarding_rule_info", "fqcn": "google.cloud.gcp_compute_global_forwarding_rule_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_global_forwarding_rule_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance_info": {"py/object": "struct4.Module", "name": "gcp_compute_instance_info", "fqcn": "google.cloud.gcp_compute_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_iam_service_account_key": {"py/object": "struct4.Module", "name": "gcp_iam_service_account_key", "fqcn": "google.cloud.gcp_iam_service_account_key", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_service_account_key.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_image": {"py/object": "struct4.Module", "name": "gcp_compute_image", "fqcn": "google.cloud.gcp_compute_image", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_image.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_resource_policy_info": {"py/object": "struct4.Module", "name": "gcp_compute_resource_policy_info", "fqcn": "google.cloud.gcp_compute_resource_policy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_resource_policy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_forwarding_rule_info": {"py/object": "struct4.Module", "name": "gcp_compute_forwarding_rule_info", "fqcn": "google.cloud.gcp_compute_forwarding_rule_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_forwarding_rule_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_container_node_pool_info": {"py/object": "struct4.Module", "name": "gcp_container_node_pool_info", "fqcn": "google.cloud.gcp_container_node_pool_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_node_pool_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_network_endpoint_group": {"py/object": "struct4.Module", "name": "gcp_compute_network_endpoint_group", "fqcn": "google.cloud.gcp_compute_network_endpoint_group", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network_endpoint_group.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_external_vpn_gateway_info": {"py/object": "struct4.Module", "name": "gcp_compute_external_vpn_gateway_info", "fqcn": "google.cloud.gcp_compute_external_vpn_gateway_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_external_vpn_gateway_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_vpn_tunnel_info": {"py/object": "struct4.Module", "name": "gcp_compute_vpn_tunnel_info", "fqcn": "google.cloud.gcp_compute_vpn_tunnel_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_vpn_tunnel_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_instance_template": {"py/object": "struct4.Module", "name": "gcp_compute_instance_template", "fqcn": "google.cloud.gcp_compute_instance_template", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_instance_template.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_bigtable_instance_info": {"py/object": "struct4.Module", "name": "gcp_bigtable_instance_info", "fqcn": "google.cloud.gcp_bigtable_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigtable_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_tcp_proxy_info": {"py/object": "struct4.Module", "name": "gcp_compute_target_tcp_proxy_info", "fqcn": "google.cloud.gcp_compute_target_tcp_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_tcp_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_backend_bucket_info": {"py/object": "struct4.Module", "name": "gcp_compute_backend_bucket_info", "fqcn": "google.cloud.gcp_compute_backend_bucket_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_bucket_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_ssl_policy_info": {"py/object": "struct4.Module", "name": "gcp_compute_ssl_policy_info", "fqcn": "google.cloud.gcp_compute_ssl_policy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_policy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_appengine_firewall_rule": {"py/object": "struct4.Module", "name": "gcp_appengine_firewall_rule", "fqcn": "google.cloud.gcp_appengine_firewall_rule", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_appengine_firewall_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_filestore_instance": {"py/object": "struct4.Module", "name": "gcp_filestore_instance", "fqcn": "google.cloud.gcp_filestore_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_filestore_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_vpn_tunnel": {"py/object": "struct4.Module", "name": "gcp_compute_vpn_tunnel", "fqcn": "google.cloud.gcp_compute_vpn_tunnel", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_vpn_tunnel.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_reservation": {"py/object": "struct4.Module", "name": "gcp_compute_reservation", "fqcn": "google.cloud.gcp_compute_reservation", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_reservation.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_image_info": {"py/object": "struct4.Module", "name": "gcp_compute_image_info", "fqcn": "google.cloud.gcp_compute_image_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_http_proxy_info": {"py/object": "struct4.Module", "name": "gcp_compute_target_http_proxy_info", "fqcn": "google.cloud.gcp_compute_target_http_proxy_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_http_proxy_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_snapshot_info": {"py/object": "struct4.Module", "name": "gcp_compute_snapshot_info", "fqcn": "google.cloud.gcp_compute_snapshot_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_snapshot_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_subnetwork_info": {"py/object": "struct4.Module", "name": "gcp_compute_subnetwork_info", "fqcn": "google.cloud.gcp_compute_subnetwork_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_subnetwork_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudscheduler_job": {"py/object": "struct4.Module", "name": "gcp_cloudscheduler_job", "fqcn": "google.cloud.gcp_cloudscheduler_job", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudscheduler_job.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_url_map_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_url_map_info", "fqcn": "google.cloud.gcp_compute_region_url_map_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_url_map_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_disk": {"py/object": "struct4.Module", "name": "gcp_compute_region_disk", "fqcn": "google.cloud.gcp_compute_region_disk", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_disk.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_instance_group_manager_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_instance_group_manager_info", "fqcn": "google.cloud.gcp_compute_region_instance_group_manager_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_instance_group_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_spanner_instance": {"py/object": "struct4.Module", "name": "gcp_spanner_instance", "fqcn": "google.cloud.gcp_spanner_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_external_vpn_gateway": {"py/object": "struct4.Module", "name": "gcp_compute_external_vpn_gateway", "fqcn": "google.cloud.gcp_compute_external_vpn_gateway", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_external_vpn_gateway.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_bigquery_table_info": {"py/object": "struct4.Module", "name": "gcp_bigquery_table_info", "fqcn": "google.cloud.gcp_bigquery_table_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_table_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_backend_bucket": {"py/object": "struct4.Module", "name": "gcp_compute_backend_bucket", "fqcn": "google.cloud.gcp_compute_backend_bucket", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_backend_bucket.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_logging_metric": {"py/object": "struct4.Module", "name": "gcp_logging_metric", "fqcn": "google.cloud.gcp_logging_metric", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_logging_metric.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_url_map": {"py/object": "struct4.Module", "name": "gcp_compute_region_url_map", "fqcn": "google.cloud.gcp_compute_region_url_map", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_url_map.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_health_check": {"py/object": "struct4.Module", "name": "gcp_compute_health_check", "fqcn": "google.cloud.gcp_compute_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_health_check.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_appengine_firewall_rule_info": {"py/object": "struct4.Module", "name": "gcp_appengine_firewall_rule_info", "fqcn": "google.cloud.gcp_appengine_firewall_rule_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_appengine_firewall_rule_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_pubsub_topic_info": {"py/object": "struct4.Module", "name": "gcp_pubsub_topic_info", "fqcn": "google.cloud.gcp_pubsub_topic_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_topic_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudfunctions_cloud_function": {"py/object": "struct4.Module", "name": "gcp_cloudfunctions_cloud_function", "fqcn": "google.cloud.gcp_cloudfunctions_cloud_function", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudfunctions_cloud_function.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_target_https_proxy": {"py/object": "struct4.Module", "name": "gcp_compute_region_target_https_proxy", "fqcn": "google.cloud.gcp_compute_region_target_https_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_https_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_address_info": {"py/object": "struct4.Module", "name": "gcp_compute_address_info", "fqcn": "google.cloud.gcp_compute_address_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_dns_resource_record_set_info": {"py/object": "struct4.Module", "name": "gcp_dns_resource_record_set_info", "fqcn": "google.cloud.gcp_dns_resource_record_set_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_resource_record_set_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_node_template": {"py/object": "struct4.Module", "name": "gcp_compute_node_template", "fqcn": "google.cloud.gcp_compute_node_template", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_template.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sourcerepo_repository_info": {"py/object": "struct4.Module", "name": "gcp_sourcerepo_repository_info", "fqcn": "google.cloud.gcp_sourcerepo_repository_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sourcerepo_repository_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_snapshot": {"py/object": "struct4.Module", "name": "gcp_compute_snapshot", "fqcn": "google.cloud.gcp_compute_snapshot", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_filestore_instance_info": {"py/object": "struct4.Module", "name": "gcp_filestore_instance_info", "fqcn": "google.cloud.gcp_filestore_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_filestore_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_node_group": {"py/object": "struct4.Module", "name": "gcp_compute_node_group", "fqcn": "google.cloud.gcp_compute_node_group", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_node_group.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_url_map": {"py/object": "struct4.Module", "name": "gcp_compute_url_map", "fqcn": "google.cloud.gcp_compute_url_map", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_url_map.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 3}"], "annotations": {}}, "google.cloud.gcp_compute_region_backend_service": {"py/object": "struct4.Module", "name": "gcp_compute_region_backend_service", "fqcn": "google.cloud.gcp_compute_region_backend_service", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_backend_service.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_runtimeconfig_variable": {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_variable", "fqcn": "google.cloud.gcp_runtimeconfig_variable", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_variable.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_cloudtasks_queue_info": {"py/object": "struct4.Module", "name": "gcp_cloudtasks_queue_info", "fqcn": "google.cloud.gcp_cloudtasks_queue_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_cloudtasks_queue_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_vpn_gateway": {"py/object": "struct4.Module", "name": "gcp_compute_target_vpn_gateway", "fqcn": "google.cloud.gcp_compute_target_vpn_gateway", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_vpn_gateway.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_autoscaler_info": {"py/object": "struct4.Module", "name": "gcp_compute_autoscaler_info", "fqcn": "google.cloud.gcp_compute_autoscaler_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_autoscaler_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_runtimeconfig_variable_info": {"py/object": "struct4.Module", "name": "gcp_runtimeconfig_variable_info", "fqcn": "google.cloud.gcp_runtimeconfig_variable_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_runtimeconfig_variable_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_network_info": {"py/object": "struct4.Module", "name": "gcp_compute_network_info", "fqcn": "google.cloud.gcp_compute_network_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_http_health_check_info": {"py/object": "struct4.Module", "name": "gcp_compute_http_health_check_info", "fqcn": "google.cloud.gcp_compute_http_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_http_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_network_endpoint_group_info": {"py/object": "struct4.Module", "name": "gcp_compute_network_endpoint_group_info", "fqcn": "google.cloud.gcp_compute_network_endpoint_group_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network_endpoint_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_tpu_node_info": {"py/object": "struct4.Module", "name": "gcp_tpu_node_info", "fqcn": "google.cloud.gcp_tpu_node_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_tpu_node_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_logging_metric_info": {"py/object": "struct4.Module", "name": "gcp_logging_metric_info", "fqcn": "google.cloud.gcp_logging_metric_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_logging_metric_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_storage_default_object_acl": {"py/object": "struct4.Module", "name": "gcp_storage_default_object_acl", "fqcn": "google.cloud.gcp_storage_default_object_acl", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_default_object_acl.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_container_cluster": {"py/object": "struct4.Module", "name": "gcp_container_cluster", "fqcn": "google.cloud.gcp_container_cluster", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_container_cluster.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_storage_bucket_access_control": {"py/object": "struct4.Module", "name": "gcp_storage_bucket_access_control", "fqcn": "google.cloud.gcp_storage_bucket_access_control", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_storage_bucket_access_control.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_ssl_policy": {"py/object": "struct4.Module", "name": "gcp_compute_ssl_policy", "fqcn": "google.cloud.gcp_compute_ssl_policy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_health_check_info": {"py/object": "struct4.Module", "name": "gcp_compute_region_health_check_info", "fqcn": "google.cloud.gcp_compute_region_health_check_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_health_check_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_kms_key_ring_info": {"py/object": "struct4.Module", "name": "gcp_kms_key_ring_info", "fqcn": "google.cloud.gcp_kms_key_ring_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_kms_key_ring_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_health_check": {"py/object": "struct4.Module", "name": "gcp_compute_region_health_check", "fqcn": "google.cloud.gcp_compute_region_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_health_check.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_disk_info": {"py/object": "struct4.Module", "name": "gcp_compute_disk_info", "fqcn": "google.cloud.gcp_compute_disk_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_disk_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sql_instance_info": {"py/object": "struct4.Module", "name": "gcp_sql_instance_info", "fqcn": "google.cloud.gcp_sql_instance_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_bigquery_table": {"py/object": "struct4.Module", "name": "gcp_bigquery_table", "fqcn": "google.cloud.gcp_bigquery_table", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_bigquery_table.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_resourcemanager_project_info": {"py/object": "struct4.Module", "name": "gcp_resourcemanager_project_info", "fqcn": "google.cloud.gcp_resourcemanager_project_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_resourcemanager_project_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_instance_group_manager": {"py/object": "struct4.Module", "name": "gcp_compute_region_instance_group_manager", "fqcn": "google.cloud.gcp_compute_region_instance_group_manager", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_instance_group_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_url_map_info": {"py/object": "struct4.Module", "name": "gcp_compute_url_map_info", "fqcn": "google.cloud.gcp_compute_url_map_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_url_map_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_interconnect_attachment_info": {"py/object": "struct4.Module", "name": "gcp_compute_interconnect_attachment_info", "fqcn": "google.cloud.gcp_compute_interconnect_attachment_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_interconnect_attachment_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sql_user_info": {"py/object": "struct4.Module", "name": "gcp_sql_user_info", "fqcn": "google.cloud.gcp_sql_user_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_http_health_check": {"py/object": "struct4.Module", "name": "gcp_compute_http_health_check", "fqcn": "google.cloud.gcp_compute_http_health_check", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_http_health_check.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 1}"], "annotations": {}}, "google.cloud.gcp_compute_disk": {"py/object": "struct4.Module", "name": "gcp_compute_disk", "fqcn": "google.cloud.gcp_compute_disk", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_disk.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_iam_role_info": {"py/object": "struct4.Module", "name": "gcp_iam_role_info", "fqcn": "google.cloud.gcp_iam_role_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_iam_role_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_dns_managed_zone": {"py/object": "struct4.Module", "name": "gcp_dns_managed_zone", "fqcn": "google.cloud.gcp_dns_managed_zone", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_dns_managed_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_instance": {"py/object": "struct4.Module", "name": "gcp_compute_target_instance", "fqcn": "google.cloud.gcp_compute_target_instance", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_subnetwork": {"py/object": "struct4.Module", "name": "gcp_compute_subnetwork", "fqcn": "google.cloud.gcp_compute_subnetwork", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_subnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_region_target_http_proxy": {"py/object": "struct4.Module", "name": "gcp_compute_region_target_http_proxy", "fqcn": "google.cloud.gcp_compute_region_target_http_proxy", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_region_target_http_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_pubsub_subscription": {"py/object": "struct4.Module", "name": "gcp_pubsub_subscription", "fqcn": "google.cloud.gcp_pubsub_subscription", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_target_pool_info": {"py/object": "struct4.Module", "name": "gcp_compute_target_pool_info", "fqcn": "google.cloud.gcp_compute_target_pool_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_target_pool_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_spanner_database": {"py/object": "struct4.Module", "name": "gcp_spanner_database", "fqcn": "google.cloud.gcp_spanner_database", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_spanner_database.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_ssl_certificate_info": {"py/object": "struct4.Module", "name": "gcp_compute_ssl_certificate_info", "fqcn": "google.cloud.gcp_compute_ssl_certificate_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_ssl_certificate_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_pubsub_subscription_info": {"py/object": "struct4.Module", "name": "gcp_pubsub_subscription_info", "fqcn": "google.cloud.gcp_pubsub_subscription_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_subscription_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_mlengine_model_info": {"py/object": "struct4.Module", "name": "gcp_mlengine_model_info", "fqcn": "google.cloud.gcp_mlengine_model_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_mlengine_model_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_sql_database_info": {"py/object": "struct4.Module", "name": "gcp_sql_database_info", "fqcn": "google.cloud.gcp_sql_database_info", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_sql_database_info.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_compute_network": {"py/object": "struct4.Module", "name": "gcp_compute_network", "fqcn": "google.cloud.gcp_compute_network", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_compute_network.py", "builtin": false, "used_in": [], "annotations": {}}, "google.cloud.gcp_pubsub_topic": {"py/object": "struct4.Module", "name": "gcp_pubsub_topic", "fqcn": "google.cloud.gcp_pubsub_topic", "collection": "google.cloud", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/plugins/modules/gcp_pubsub_topic.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.patch": {"py/object": "struct4.Module", "name": "patch", "fqcn": "ansible.posix.patch", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/patch.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.selinux": {"py/object": "struct4.Module", "name": "selinux", "fqcn": "ansible.posix.selinux", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/selinux.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.firewalld": {"py/object": "struct4.Module", "name": "firewalld", "fqcn": "ansible.posix.firewalld", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.at": {"py/object": "struct4.Module", "name": "at", "fqcn": "ansible.posix.at", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/at.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.authorized_key": {"py/object": "struct4.Module", "name": "authorized_key", "fqcn": "ansible.posix.authorized_key", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/authorized_key.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/bootstrap-dedicated.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 1}"], "annotations": {}}, "ansible.posix.acl": {"py/object": "struct4.Module", "name": "acl", "fqcn": "ansible.posix.acl", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/acl.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.synchronize": {"py/object": "struct4.Module", "name": "synchronize", "fqcn": "ansible.posix.synchronize", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/synchronize.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 1}"], "annotations": {}}, "ansible.posix.mount": {"py/object": "struct4.Module", "name": "mount", "fqcn": "ansible.posix.mount", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/mount.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 4}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 5}", "{\"path\": \"testdata3/scm_repo/playbooks/wordpress.yml\", \"index\": 0}"], "annotations": {}}, "ansible.posix.sysctl": {"py/object": "struct4.Module", "name": "sysctl", "fqcn": "ansible.posix.sysctl", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/sysctl.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.firewalld_info": {"py/object": "struct4.Module", "name": "firewalld_info", "fqcn": "ansible.posix.firewalld_info", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/firewalld_info.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.posix.seboolean": {"py/object": "struct4.Module", "name": "seboolean", "fqcn": "ansible.posix.seboolean", "collection": "ansible.posix", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/posix/plugins/modules/seboolean.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_banner": {"py/object": "struct4.Module", "name": "net_banner", "fqcn": "ansible.netcommon.net_banner", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_banner.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_l3_interface": {"py/object": "struct4.Module", "name": "net_l3_interface", "fqcn": "ansible.netcommon.net_l3_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l3_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_vlan": {"py/object": "struct4.Module", "name": "net_vlan", "fqcn": "ansible.netcommon.net_vlan", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.telnet": {"py/object": "struct4.Module", "name": "telnet", "fqcn": "ansible.netcommon.telnet", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/telnet.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_get": {"py/object": "struct4.Module", "name": "net_get", "fqcn": "ansible.netcommon.net_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_get.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_logging": {"py/object": "struct4.Module", "name": "net_logging", "fqcn": "ansible.netcommon.net_logging", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_logging.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.cli_config": {"py/object": "struct4.Module", "name": "cli_config", "fqcn": "ansible.netcommon.cli_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_config.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_l2_interface": {"py/object": "struct4.Module", "name": "net_l2_interface", "fqcn": "ansible.netcommon.net_l2_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_l2_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_user": {"py/object": "struct4.Module", "name": "net_user", "fqcn": "ansible.netcommon.net_user", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_user.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.netconf_rpc": {"py/object": "struct4.Module", "name": "netconf_rpc", "fqcn": "ansible.netcommon.netconf_rpc", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_rpc.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_lldp_interface": {"py/object": "struct4.Module", "name": "net_lldp_interface", "fqcn": "ansible.netcommon.net_lldp_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.netconf_get": {"py/object": "struct4.Module", "name": "netconf_get", "fqcn": "ansible.netcommon.netconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_static_route": {"py/object": "struct4.Module", "name": "net_static_route", "fqcn": "ansible.netcommon.net_static_route", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_static_route.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_interface": {"py/object": "struct4.Module", "name": "net_interface", "fqcn": "ansible.netcommon.net_interface", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_interface.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.netconf_config": {"py/object": "struct4.Module", "name": "netconf_config", "fqcn": "ansible.netcommon.netconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/netconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_lldp": {"py/object": "struct4.Module", "name": "net_lldp", "fqcn": "ansible.netcommon.net_lldp", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_lldp.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.restconf_get": {"py/object": "struct4.Module", "name": "restconf_get", "fqcn": "ansible.netcommon.restconf_get", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_get.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.cli_command": {"py/object": "struct4.Module", "name": "cli_command", "fqcn": "ansible.netcommon.cli_command", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/cli_command.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.network_resource": {"py/object": "struct4.Module", "name": "network_resource", "fqcn": "ansible.netcommon.network_resource", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/network_resource.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_vrf": {"py/object": "struct4.Module", "name": "net_vrf", "fqcn": "ansible.netcommon.net_vrf", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_vrf.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_ping": {"py/object": "struct4.Module", "name": "net_ping", "fqcn": "ansible.netcommon.net_ping", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_ping.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.restconf_config": {"py/object": "struct4.Module", "name": "restconf_config", "fqcn": "ansible.netcommon.restconf_config", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/restconf_config.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_linkagg": {"py/object": "struct4.Module", "name": "net_linkagg", "fqcn": "ansible.netcommon.net_linkagg", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_linkagg.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_put": {"py/object": "struct4.Module", "name": "net_put", "fqcn": "ansible.netcommon.net_put", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_put.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.netcommon.net_system": {"py/object": "struct4.Module", "name": "net_system", "fqcn": "ansible.netcommon.net_system", "collection": "ansible.netcommon", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/netcommon/plugins/modules/net_system.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.cli_parse": {"py/object": "struct4.Module", "name": "cli_parse", "fqcn": "ansible.utils.cli_parse", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/cli_parse.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.fact_diff": {"py/object": "struct4.Module", "name": "fact_diff", "fqcn": "ansible.utils.fact_diff", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/fact_diff.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.update_fact": {"py/object": "struct4.Module", "name": "update_fact", "fqcn": "ansible.utils.update_fact", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/update_fact.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.utils.validate": {"py/object": "struct4.Module", "name": "validate", "fqcn": "ansible.utils.validate", "collection": "ansible.utils", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/ansible/utils/plugins/modules/validate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_sequence": {"py/object": "struct4.Module", "name": "postgresql_sequence", "fqcn": "community.postgresql.postgresql_sequence", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_sequence.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_script": {"py/object": "struct4.Module", "name": "postgresql_script", "fqcn": "community.postgresql.postgresql_script", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_script.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_user": {"py/object": "struct4.Module", "name": "postgresql_user", "fqcn": "community.postgresql.postgresql_user", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 4}"], "annotations": {}}, "community.postgresql.postgresql_lang": {"py/object": "struct4.Module", "name": "postgresql_lang", "fqcn": "community.postgresql.postgresql_lang", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_lang.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_privs": {"py/object": "struct4.Module", "name": "postgresql_privs", "fqcn": "community.postgresql.postgresql_privs", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_privs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_publication": {"py/object": "struct4.Module", "name": "postgresql_publication", "fqcn": "community.postgresql.postgresql_publication", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_publication.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_schema": {"py/object": "struct4.Module", "name": "postgresql_schema", "fqcn": "community.postgresql.postgresql_schema", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_schema.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_pg_hba": {"py/object": "struct4.Module", "name": "postgresql_pg_hba", "fqcn": "community.postgresql.postgresql_pg_hba", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_pg_hba.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_membership": {"py/object": "struct4.Module", "name": "postgresql_membership", "fqcn": "community.postgresql.postgresql_membership", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_membership.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_table": {"py/object": "struct4.Module", "name": "postgresql_table", "fqcn": "community.postgresql.postgresql_table", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_table.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_copy": {"py/object": "struct4.Module", "name": "postgresql_copy", "fqcn": "community.postgresql.postgresql_copy", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_copy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_slot": {"py/object": "struct4.Module", "name": "postgresql_slot", "fqcn": "community.postgresql.postgresql_slot", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_slot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_subscription": {"py/object": "struct4.Module", "name": "postgresql_subscription", "fqcn": "community.postgresql.postgresql_subscription", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_query": {"py/object": "struct4.Module", "name": "postgresql_query", "fqcn": "community.postgresql.postgresql_query", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_ext": {"py/object": "struct4.Module", "name": "postgresql_ext", "fqcn": "community.postgresql.postgresql_ext", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ext.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_user_obj_stat_info": {"py/object": "struct4.Module", "name": "postgresql_user_obj_stat_info", "fqcn": "community.postgresql.postgresql_user_obj_stat_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_user_obj_stat_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_set": {"py/object": "struct4.Module", "name": "postgresql_set", "fqcn": "community.postgresql.postgresql_set", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_set.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_info": {"py/object": "struct4.Module", "name": "postgresql_info", "fqcn": "community.postgresql.postgresql_info", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_db": {"py/object": "struct4.Module", "name": "postgresql_db", "fqcn": "community.postgresql.postgresql_db", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_db.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 2}"], "annotations": {}}, "community.postgresql.postgresql_idx": {"py/object": "struct4.Module", "name": "postgresql_idx", "fqcn": "community.postgresql.postgresql_idx", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_idx.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_owner": {"py/object": "struct4.Module", "name": "postgresql_owner", "fqcn": "community.postgresql.postgresql_owner", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_owner.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_tablespace": {"py/object": "struct4.Module", "name": "postgresql_tablespace", "fqcn": "community.postgresql.postgresql_tablespace", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_tablespace.py", "builtin": false, "used_in": [], "annotations": {}}, "community.postgresql.postgresql_ping": {"py/object": "struct4.Module", "name": "postgresql_ping", "fqcn": "community.postgresql.postgresql_ping", "collection": "community.postgresql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/postgresql/plugins/modules/postgresql_ping.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_prune": {"py/object": "struct4.Module", "name": "docker_prune", "fqcn": "community.docker.docker_prune", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_prune.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_stack": {"py/object": "struct4.Module", "name": "docker_stack", "fqcn": "community.docker.docker_stack", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_stack.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_compose": {"py/object": "struct4.Module", "name": "docker_compose", "fqcn": "community.docker.docker_compose", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_compose.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 8}"], "annotations": {}}, "community.docker.docker_node": {"py/object": "struct4.Module", "name": "docker_node", "fqcn": "community.docker.docker_node", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_node.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_volume_info": {"py/object": "struct4.Module", "name": "docker_volume_info", "fqcn": "community.docker.docker_volume_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_node_info": {"py/object": "struct4.Module", "name": "docker_node_info", "fqcn": "community.docker.docker_node_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_node_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_container_info": {"py/object": "struct4.Module", "name": "docker_container_info", "fqcn": "community.docker.docker_container_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_container_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_plugin": {"py/object": "struct4.Module", "name": "docker_plugin", "fqcn": "community.docker.docker_plugin", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_image": {"py/object": "struct4.Module", "name": "docker_image", "fqcn": "community.docker.docker_image", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_image.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_secret": {"py/object": "struct4.Module", "name": "docker_secret", "fqcn": "community.docker.docker_secret", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_secret.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_stack_info": {"py/object": "struct4.Module", "name": "docker_stack_info", "fqcn": "community.docker.docker_stack_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_stack_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_image_load": {"py/object": "struct4.Module", "name": "docker_image_load", "fqcn": "community.docker.docker_image_load", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_image_load.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_login": {"py/object": "struct4.Module", "name": "docker_login", "fqcn": "community.docker.docker_login", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_login.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_volume": {"py/object": "struct4.Module", "name": "docker_volume", "fqcn": "community.docker.docker_volume", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_image_info": {"py/object": "struct4.Module", "name": "docker_image_info", "fqcn": "community.docker.docker_image_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_swarm_service": {"py/object": "struct4.Module", "name": "docker_swarm_service", "fqcn": "community.docker.docker_swarm_service", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_network": {"py/object": "struct4.Module", "name": "docker_network", "fqcn": "community.docker.docker_network", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_swarm": {"py/object": "struct4.Module", "name": "docker_swarm", "fqcn": "community.docker.docker_swarm", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_host_info": {"py/object": "struct4.Module", "name": "docker_host_info", "fqcn": "community.docker.docker_host_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_host_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_network_info": {"py/object": "struct4.Module", "name": "docker_network_info", "fqcn": "community.docker.docker_network_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.current_container_facts": {"py/object": "struct4.Module", "name": "current_container_facts", "fqcn": "community.docker.current_container_facts", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/current_container_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_config": {"py/object": "struct4.Module", "name": "docker_config", "fqcn": "community.docker.docker_config", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_container_exec": {"py/object": "struct4.Module", "name": "docker_container_exec", "fqcn": "community.docker.docker_container_exec", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_container_exec.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_swarm_info": {"py/object": "struct4.Module", "name": "docker_swarm_info", "fqcn": "community.docker.docker_swarm_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_stack_task_info": {"py/object": "struct4.Module", "name": "docker_stack_task_info", "fqcn": "community.docker.docker_stack_task_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_stack_task_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_container": {"py/object": "struct4.Module", "name": "docker_container", "fqcn": "community.docker.docker_container", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.docker.docker_swarm_service_info": {"py/object": "struct4.Module", "name": "docker_swarm_service_info", "fqcn": "community.docker.docker_swarm_service_info", "collection": "community.docker", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/docker/plugins/modules/docker_swarm_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_sequence": {"py/object": "struct4.Module", "name": "postgresql_sequence", "fqcn": "community.general.postgresql_sequence", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_sequence.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcpubsub_info": {"py/object": "struct4.Module", "name": "gcpubsub_info", "fqcn": "community.general.gcpubsub_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcpubsub_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.serverless": {"py/object": "struct4.Module", "name": "serverless", "fqcn": "community.general.serverless", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/serverless.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_domain_info": {"py/object": "struct4.Module", "name": "proxmox_domain_info", "fqcn": "community.general.proxmox_domain_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_domain_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_ca_host_key_cert": {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert", "fqcn": "community.general.utm_ca_host_key_cert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_ca_host_key_cert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.odbc": {"py/object": "struct4.Module", "name": "odbc", "fqcn": "community.general.odbc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/odbc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_host_facts": {"py/object": "struct4.Module", "name": "ovirt_host_facts", "fqcn": "community.general.ovirt_host_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_host_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_group": {"py/object": "struct4.Module", "name": "keycloak_group", "fqcn": "community.general.keycloak_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/keycloak_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_user": {"py/object": "struct4.Module", "name": "influxdb_user", "fqcn": "community.general.influxdb_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.online_server_facts": {"py/object": "struct4.Module", "name": "online_server_facts", "fqcn": "community.general.online_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.onepassword_info": {"py/object": "struct4.Module", "name": "onepassword_info", "fqcn": "community.general.onepassword_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/onepassword_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xbps": {"py/object": "struct4.Module", "name": "xbps", "fqcn": "community.general.xbps", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xbps.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cronvar": {"py/object": "struct4.Module", "name": "cronvar", "fqcn": "community.general.cronvar", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cronvar.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.osx_defaults": {"py/object": "struct4.Module", "name": "osx_defaults", "fqcn": "community.general.osx_defaults", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/osx_defaults.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkgutil": {"py/object": "struct4.Module", "name": "pkgutil", "fqcn": "community.general.pkgutil", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkgutil.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cdb_user": {"py/object": "struct4.Module", "name": "rax_cdb_user", "fqcn": "community.general.rax_cdb_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cdb_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mail": {"py/object": "struct4.Module", "name": "mail", "fqcn": "community.general.mail", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mail.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_datacenter": {"py/object": "struct4.Module", "name": "profitbricks_datacenter", "fqcn": "community.general.profitbricks_datacenter", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_datacenter.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_security_group": {"py/object": "struct4.Module", "name": "hwc_vpc_security_group", "fqcn": "community.general.hwc_vpc_security_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.matrix": {"py/object": "struct4.Module", "name": "matrix", "fqcn": "community.general.matrix", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/matrix.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_evs_disk": {"py/object": "struct4.Module", "name": "hwc_evs_disk", "fqcn": "community.general.hwc_evs_disk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_evs_disk.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hetzner_failover_ip": {"py/object": "struct4.Module", "name": "hetzner_failover_ip", "fqcn": "community.general.hetzner_failover_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_failover_ip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_prune": {"py/object": "struct4.Module", "name": "docker_prune", "fqcn": "community.general.docker_prune", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_prune.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bundler": {"py/object": "struct4.Module", "name": "bundler", "fqcn": "community.general.bundler", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bundler.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sf_snapshot_schedule_manager": {"py/object": "struct4.Module", "name": "sf_snapshot_schedule_manager", "fqcn": "community.general.sf_snapshot_schedule_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_snapshot_schedule_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nginx_status_facts": {"py/object": "struct4.Module", "name": "nginx_status_facts", "fqcn": "community.general.nginx_status_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nginx_status_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pacman": {"py/object": "struct4.Module", "name": "pacman", "fqcn": "community.general.pacman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pacman.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_ontap_gather_facts": {"py/object": "struct4.Module", "name": "na_ontap_gather_facts", "fqcn": "community.general.na_ontap_gather_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_ontap_gather_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_user": {"py/object": "struct4.Module", "name": "postgresql_user", "fqcn": "community.general.postgresql_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_dns_reload": {"py/object": "struct4.Module", "name": "memset_dns_reload", "fqcn": "community.general.memset_dns_reload", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_dns_reload.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_lvg": {"py/object": "struct4.Module", "name": "aix_lvg", "fqcn": "community.general.aix_lvg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_lvg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcp_target_proxy": {"py/object": "struct4.Module", "name": "gcp_target_proxy", "fqcn": "community.general.gcp_target_proxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_target_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhevm": {"py/object": "struct4.Module", "name": "rhevm", "fqcn": "community.general.rhevm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhevm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_permission_facts": {"py/object": "struct4.Module", "name": "ovirt_permission_facts", "fqcn": "community.general.ovirt_permission_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_permission_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_role": {"py/object": "struct4.Module", "name": "ipa_role", "fqcn": "community.general.ipa_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_check": {"py/object": "struct4.Module", "name": "sensu_check", "fqcn": "community.general.sensu_check", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_check.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_compute": {"py/object": "struct4.Module", "name": "scaleway_compute", "fqcn": "community.general.scaleway_compute", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_compute.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_svm": {"py/object": "struct4.Module", "name": "na_cdot_svm", "fqcn": "community.general.na_cdot_svm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_svm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxc_container": {"py/object": "struct4.Module", "name": "lxc_container", "fqcn": "community.general.lxc_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxc_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_role": {"py/object": "struct4.Module", "name": "vertica_role", "fqcn": "community.general.vertica_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_server_info": {"py/object": "struct4.Module", "name": "memset_server_info", "fqcn": "community.general.memset_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_user": {"py/object": "struct4.Module", "name": "udm_user", "fqcn": "community.general.udm_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_host": {"py/object": "struct4.Module", "name": "ibm_sa_host", "fqcn": "community.general.ibm_sa_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_memstore_facts": {"py/object": "struct4.Module", "name": "memset_memstore_facts", "fqcn": "community.general.memset_memstore_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_memstore_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.iptables_state": {"py/object": "struct4.Module", "name": "iptables_state", "fqcn": "community.general.iptables_state", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/iptables_state.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxd_container": {"py/object": "struct4.Module", "name": "lxd_container", "fqcn": "community.general.lxd_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxd_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_device": {"py/object": "struct4.Module", "name": "packet_device", "fqcn": "community.general.packet_device", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_device.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_pipeline_variable": {"py/object": "struct4.Module", "name": "bitbucket_pipeline_variable", "fqcn": "community.general.bitbucket_pipeline_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_pipeline_variable.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.python_requirements_facts": {"py/object": "struct4.Module", "name": "python_requirements_facts", "fqcn": "community.general.python_requirements_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/python_requirements_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_volume": {"py/object": "struct4.Module", "name": "scaleway_volume", "fqcn": "community.general.scaleway_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pulp_repo": {"py/object": "struct4.Module", "name": "pulp_repo", "fqcn": "community.general.pulp_repo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pulp_repo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_sshkey": {"py/object": "struct4.Module", "name": "scaleway_sshkey", "fqcn": "community.general.scaleway_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_lang": {"py/object": "struct4.Module", "name": "postgresql_lang", "fqcn": "community.general.postgresql_lang", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_lang.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.emc_vnx_sg_member": {"py/object": "struct4.Module", "name": "emc_vnx_sg_member", "fqcn": "community.general.emc_vnx_sg_member", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/emc_vnx_sg_member.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_organization_info": {"py/object": "struct4.Module", "name": "scaleway_organization_info", "fqcn": "community.general.scaleway_organization_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_organization_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_dns_record": {"py/object": "struct4.Module", "name": "rax_dns_record", "fqcn": "community.general.rax_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.etcd3": {"py/object": "struct4.Module", "name": "etcd3", "fqcn": "community.general.etcd3", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/etcd3.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_hbacrule": {"py/object": "struct4.Module", "name": "ipa_hbacrule", "fqcn": "community.general.ipa_hbacrule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_hbacrule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkgng": {"py/object": "struct4.Module", "name": "pkgng", "fqcn": "community.general.pkgng", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkgng.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ss_3par_cpg": {"py/object": "struct4.Module", "name": "ss_3par_cpg", "fqcn": "community.general.ss_3par_cpg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ss_3par_cpg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.katello": {"py/object": "struct4.Module", "name": "katello", "fqcn": "community.general.katello", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/katello.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_member": {"py/object": "struct4.Module", "name": "nios_member", "fqcn": "community.general.nios_member", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_member.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.imgadm": {"py/object": "struct4.Module", "name": "imgadm", "fqcn": "community.general.imgadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/imgadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_stack": {"py/object": "struct4.Module", "name": "docker_stack", "fqcn": "community.general.docker_stack", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_stack.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_notification": {"py/object": "struct4.Module", "name": "rax_mon_notification", "fqcn": "community.general.rax_mon_notification", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_notification.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_privs": {"py/object": "struct4.Module", "name": "postgresql_privs", "fqcn": "community.general.postgresql_privs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_privs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_volume": {"py/object": "struct4.Module", "name": "na_cdot_volume", "fqcn": "community.general.na_cdot_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_compose": {"py/object": "struct4.Module", "name": "docker_compose", "fqcn": "community.general.docker_compose", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_compose.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nagios": {"py/object": "struct4.Module", "name": "nagios", "fqcn": "community.general.nagios", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nagios.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_files_objects": {"py/object": "struct4.Module", "name": "rax_files_objects", "fqcn": "community.general.rax_files_objects", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_files_objects.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vexata_volume": {"py/object": "struct4.Module", "name": "vexata_volume", "fqcn": "community.general.vexata_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vexata_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_publication": {"py/object": "struct4.Module", "name": "postgresql_publication", "fqcn": "community.general.postgresql_publication", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_publication.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cbs": {"py/object": "struct4.Module", "name": "rax_cbs", "fqcn": "community.general.rax_cbs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cbs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.grove": {"py/object": "struct4.Module", "name": "grove", "fqcn": "community.general.grove", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/grove.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_share": {"py/object": "struct4.Module", "name": "udm_share", "fqcn": "community.general.udm_share", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_share.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_node": {"py/object": "struct4.Module", "name": "docker_node", "fqcn": "community.general.docker_node", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_node.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.selogin": {"py/object": "struct4.Module", "name": "selogin", "fqcn": "community.general.selogin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/selogin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_facts": {"py/object": "struct4.Module", "name": "rax_facts", "fqcn": "community.general.rax_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cloud_init_data_facts": {"py/object": "struct4.Module", "name": "cloud_init_data_facts", "fqcn": "community.general.cloud_init_data_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloud_init_data_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oci_vcn": {"py/object": "struct4.Module", "name": "oci_vcn", "fqcn": "community.general.oci_vcn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oci_vcn.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_san_manager": {"py/object": "struct4.Module", "name": "oneview_san_manager", "fqcn": "community.general.oneview_san_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_san_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dimensiondata_network": {"py/object": "struct4.Module", "name": "dimensiondata_network", "fqcn": "community.general.dimensiondata_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dimensiondata_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_domain": {"py/object": "struct4.Module", "name": "ibm_sa_domain", "fqcn": "community.general.ibm_sa_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_domain.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_mig": {"py/object": "struct4.Module", "name": "gce_mig", "fqcn": "community.general.gce_mig", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_mig.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.terraform": {"py/object": "struct4.Module", "name": "terraform", "fqcn": "community.general.terraform", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/terraform.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jabber": {"py/object": "struct4.Module", "name": "jabber", "fqcn": "community.general.jabber", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jabber.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_group_variable": {"py/object": "struct4.Module", "name": "gitlab_group_variable", "fqcn": "community.general.gitlab_group_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_group_variable.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zypper": {"py/object": "struct4.Module", "name": "zypper", "fqcn": "community.general.zypper", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zypper.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_ca_host_key_cert_info": {"py/object": "struct4.Module", "name": "utm_ca_host_key_cert_info", "fqcn": "community.general.utm_ca_host_key_cert_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_ca_host_key_cert_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sefcontext": {"py/object": "struct4.Module", "name": "sefcontext", "fqcn": "community.general.sefcontext", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sefcontext.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_deploy_key": {"py/object": "struct4.Module", "name": "github_deploy_key", "fqcn": "community.general.github_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nomad_job_info": {"py/object": "struct4.Module", "name": "nomad_job_info", "fqcn": "community.general.nomad_job_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nomad_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apt_repo": {"py/object": "struct4.Module", "name": "apt_repo", "fqcn": "community.general.apt_repo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apt_repo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pip_package_info": {"py/object": "struct4.Module", "name": "pip_package_info", "fqcn": "community.general.pip_package_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pip_package_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_files": {"py/object": "struct4.Module", "name": "rax_files", "fqcn": "community.general.rax_files", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_files.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_volume_info": {"py/object": "struct4.Module", "name": "docker_volume_info", "fqcn": "community.general.docker_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.circonus_annotation": {"py/object": "struct4.Module", "name": "circonus_annotation", "fqcn": "community.general.circonus_annotation", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/circonus_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_group": {"py/object": "struct4.Module", "name": "clc_group", "fqcn": "community.general.clc_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.easy_install": {"py/object": "struct4.Module", "name": "easy_install", "fqcn": "community.general.easy_install", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/easy_install.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_public_ip": {"py/object": "struct4.Module", "name": "oneandone_public_ip", "fqcn": "community.general.oneandone_public_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_public_ip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_user_facts": {"py/object": "struct4.Module", "name": "ovirt_user_facts", "fqcn": "community.general.ovirt_user_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_user_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gluster_volume": {"py/object": "struct4.Module", "name": "gluster_volume", "fqcn": "community.general.gluster_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gluster_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.online_server_info": {"py/object": "struct4.Module", "name": "online_server_info", "fqcn": "community.general.online_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.datadog_monitor": {"py/object": "struct4.Module", "name": "datadog_monitor", "fqcn": "community.general.datadog_monitor", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/datadog_monitor.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_webhook_info": {"py/object": "struct4.Module", "name": "github_webhook_info", "fqcn": "community.general.github_webhook_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_webhook_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_issue": {"py/object": "struct4.Module", "name": "github_issue", "fqcn": "community.general.github_issue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_issue.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_schema": {"py/object": "struct4.Module", "name": "postgresql_schema", "fqcn": "community.general.postgresql_schema", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_schema.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_image": {"py/object": "struct4.Module", "name": "one_image", "fqcn": "community.general.one_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_image.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_release": {"py/object": "struct4.Module", "name": "github_release", "fqcn": "community.general.github_release", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_release.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kibana_plugin": {"py/object": "struct4.Module", "name": "kibana_plugin", "fqcn": "community.general.kibana_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kibana_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_location_info": {"py/object": "struct4.Module", "name": "utm_proxy_location_info", "fqcn": "community.general.utm_proxy_location_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_location_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_node_info": {"py/object": "struct4.Module", "name": "docker_node_info", "fqcn": "community.general.docker_node_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_node_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vexata_eg": {"py/object": "struct4.Module", "name": "vexata_eg", "fqcn": "community.general.vexata_eg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vexata_eg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bigpanda": {"py/object": "struct4.Module", "name": "bigpanda", "fqcn": "community.general.bigpanda", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bigpanda.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_webhook": {"py/object": "struct4.Module", "name": "github_webhook", "fqcn": "community.general.github_webhook", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_webhook.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_job_facts": {"py/object": "struct4.Module", "name": "jenkins_job_facts", "fqcn": "community.general.jenkins_job_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_job_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fcoe_network": {"py/object": "struct4.Module", "name": "oneview_fcoe_network", "fqcn": "community.general.oneview_fcoe_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fcoe_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hetzner_failover_ip_info": {"py/object": "struct4.Module", "name": "hetzner_failover_ip_info", "fqcn": "community.general.hetzner_failover_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_failover_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcp_backend_service": {"py/object": "struct4.Module", "name": "gcp_backend_service", "fqcn": "community.general.gcp_backend_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_backend_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.netcup_dns": {"py/object": "struct4.Module", "name": "netcup_dns", "fqcn": "community.general.netcup_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/netcup_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.syspatch": {"py/object": "struct4.Module", "name": "syspatch", "fqcn": "community.general.syspatch", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/syspatch.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_group": {"py/object": "struct4.Module", "name": "udm_group", "fqcn": "community.general.udm_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fcoe_network_facts": {"py/object": "struct4.Module", "name": "oneview_fcoe_network_facts", "fqcn": "community.general.oneview_fcoe_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fcoe_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.crypttab": {"py/object": "struct4.Module", "name": "crypttab", "fqcn": "community.general.crypttab", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/crypttab.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_user": {"py/object": "struct4.Module", "name": "na_cdot_user", "fqcn": "community.general.na_cdot_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_service": {"py/object": "struct4.Module", "name": "docker_service", "fqcn": "community.general.docker_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_service.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 5}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 4}"], "annotations": {}}, "community.general.rax_queue": {"py/object": "struct4.Module", "name": "rax_queue", "fqcn": "community.general.rax_queue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_queue.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.infinity": {"py/object": "struct4.Module", "name": "infinity", "fqcn": "community.general.infinity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/infinity.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.swdepot": {"py/object": "struct4.Module", "name": "swdepot", "fqcn": "community.general.swdepot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/swdepot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_datacenter_facts": {"py/object": "struct4.Module", "name": "oneview_datacenter_facts", "fqcn": "community.general.oneview_datacenter_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_datacenter_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_server_info": {"py/object": "struct4.Module", "name": "scaleway_server_info", "fqcn": "community.general.scaleway_server_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_server_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gconftool2": {"py/object": "struct4.Module", "name": "gconftool2", "fqcn": "community.general.gconftool2", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gconftool2.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.read_csv": {"py/object": "struct4.Module", "name": "read_csv", "fqcn": "community.general.read_csv", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/read_csv.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_clb_nodes": {"py/object": "struct4.Module", "name": "rax_clb_nodes", "fqcn": "community.general.rax_clb_nodes", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_clb_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nictagadm": {"py/object": "struct4.Module", "name": "nictagadm", "fqcn": "community.general.nictagadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nictagadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_vm_facts": {"py/object": "struct4.Module", "name": "ovirt_vm_facts", "fqcn": "community.general.ovirt_vm_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_vm_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.statusio_maintenance": {"py/object": "struct4.Module", "name": "statusio_maintenance", "fqcn": "community.general.statusio_maintenance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/statusio_maintenance.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_pg_hba": {"py/object": "struct4.Module", "name": "postgresql_pg_hba", "fqcn": "community.general.postgresql_pg_hba", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_pg_hba.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_firewall_policy": {"py/object": "struct4.Module", "name": "clc_firewall_policy", "fqcn": "community.general.clc_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcdns_record": {"py/object": "struct4.Module", "name": "gcdns_record", "fqcn": "community.general.gcdns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcdns_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.supervisorctl": {"py/object": "struct4.Module", "name": "supervisorctl", "fqcn": "community.general.supervisorctl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/supervisorctl.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml\", \"index\": 1}"], "annotations": {}}, "community.general.flatpak_remote": {"py/object": "struct4.Module", "name": "flatpak_remote", "fqcn": "community.general.flatpak_remote", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/flatpak_remote.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ali_instance": {"py/object": "struct4.Module", "name": "ali_instance", "fqcn": "community.general.ali_instance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ali_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.spotinst_aws_elastigroup": {"py/object": "struct4.Module", "name": "spotinst_aws_elastigroup", "fqcn": "community.general.spotinst_aws_elastigroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/spotinst_aws_elastigroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_nic": {"py/object": "struct4.Module", "name": "profitbricks_nic", "fqcn": "community.general.profitbricks_nic", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_nic.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_host": {"py/object": "struct4.Module", "name": "ipa_host", "fqcn": "community.general.ipa_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.open_iscsi": {"py/object": "struct4.Module", "name": "open_iscsi", "fqcn": "community.general.open_iscsi", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/open_iscsi.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ali_instance_facts": {"py/object": "struct4.Module", "name": "ali_instance_facts", "fqcn": "community.general.ali_instance_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ali_instance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_license": {"py/object": "struct4.Module", "name": "na_cdot_license", "fqcn": "community.general.na_cdot_license", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_license.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.monit": {"py/object": "struct4.Module", "name": "monit", "fqcn": "community.general.monit", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/monit.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_image_info": {"py/object": "struct4.Module", "name": "one_image_info", "fqcn": "community.general.one_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.purefa_facts": {"py/object": "struct4.Module", "name": "purefa_facts", "fqcn": "community.general.purefa_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/purefa_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.atomic_image": {"py/object": "struct4.Module", "name": "atomic_image", "fqcn": "community.general.atomic_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/atomic_image.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_subnet": {"py/object": "struct4.Module", "name": "hwc_vpc_subnet", "fqcn": "community.general.hwc_vpc_subnet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_tags": {"py/object": "struct4.Module", "name": "manageiq_tags", "fqcn": "community.general.manageiq_tags", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_tags.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.composer": {"py/object": "struct4.Module", "name": "composer", "fqcn": "community.general.composer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/composer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_loadbalancer": {"py/object": "struct4.Module", "name": "clc_loadbalancer", "fqcn": "community.general.clc_loadbalancer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_enclosure_facts": {"py/object": "struct4.Module", "name": "oneview_enclosure_facts", "fqcn": "community.general.oneview_enclosure_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_enclosure_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.heroku_collaborator": {"py/object": "struct4.Module", "name": "heroku_collaborator", "fqcn": "community.general.heroku_collaborator", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/heroku_collaborator.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.snmp_facts": {"py/object": "struct4.Module", "name": "snmp_facts", "fqcn": "community.general.snmp_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/snmp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_project": {"py/object": "struct4.Module", "name": "packet_project", "fqcn": "community.general.packet_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_project.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.atomic_container": {"py/object": "struct4.Module", "name": "atomic_container", "fqcn": "community.general.atomic_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/atomic_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_inittab": {"py/object": "struct4.Module", "name": "aix_inittab", "fqcn": "community.general.aix_inittab", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_inittab.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_container_info": {"py/object": "struct4.Module", "name": "docker_container_info", "fqcn": "community.general.docker_container_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_container_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_server_facts": {"py/object": "struct4.Module", "name": "scaleway_server_facts", "fqcn": "community.general.scaleway_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_dns_view": {"py/object": "struct4.Module", "name": "nios_dns_view", "fqcn": "community.general.nios_dns_view", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_dns_view.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_guest": {"py/object": "struct4.Module", "name": "xenserver_guest", "fqcn": "community.general.xenserver_guest", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dpkg_divert": {"py/object": "struct4.Module", "name": "dpkg_divert", "fqcn": "community.general.dpkg_divert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dpkg_divert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_network": {"py/object": "struct4.Module", "name": "rax_network", "fqcn": "community.general.rax_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_redfish_facts": {"py/object": "struct4.Module", "name": "idrac_redfish_facts", "fqcn": "community.general.idrac_redfish_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kubevirt_preset": {"py/object": "struct4.Module", "name": "kubevirt_preset", "fqcn": "community.general.kubevirt_preset", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_preset.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bzr": {"py/object": "struct4.Module", "name": "bzr", "fqcn": "community.general.bzr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bzr.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_host_ports": {"py/object": "struct4.Module", "name": "ibm_sa_host_ports", "fqcn": "community.general.ibm_sa_host_ports", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_host_ports.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_zone": {"py/object": "struct4.Module", "name": "nios_zone", "fqcn": "community.general.nios_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_deploy_key": {"py/object": "struct4.Module", "name": "gitlab_deploy_key", "fqcn": "community.general.gitlab_deploy_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_deploy_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_storage_domain_facts": {"py/object": "struct4.Module", "name": "ovirt_storage_domain_facts", "fqcn": "community.general.ovirt_storage_domain_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_storage_domain_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovh_monthly_billing": {"py/object": "struct4.Module", "name": "ovh_monthly_billing", "fqcn": "community.general.ovh_monthly_billing", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovh_monthly_billing.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ohai": {"py/object": "struct4.Module", "name": "ohai", "fqcn": "community.general.ohai", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ohai.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.honeybadger_deployment": {"py/object": "struct4.Module", "name": "honeybadger_deployment", "fqcn": "community.general.honeybadger_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/honeybadger_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_meta": {"py/object": "struct4.Module", "name": "rax_meta", "fqcn": "community.general.rax_meta", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_meta.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.icinga2_host": {"py/object": "struct4.Module", "name": "icinga2_host", "fqcn": "community.general.icinga2_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/icinga2_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.layman": {"py/object": "struct4.Module", "name": "layman", "fqcn": "community.general.layman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/layman.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hipchat": {"py/object": "struct4.Module", "name": "hipchat", "fqcn": "community.general.hipchat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hipchat.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcdns_zone": {"py/object": "struct4.Module", "name": "gcdns_zone", "fqcn": "community.general.gcdns_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcdns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_security_group_rule": {"py/object": "struct4.Module", "name": "hwc_vpc_security_group_rule", "fqcn": "community.general.hwc_vpc_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_image_facts": {"py/object": "struct4.Module", "name": "docker_image_facts", "fqcn": "community.general.docker_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_group": {"py/object": "struct4.Module", "name": "ipa_group", "fqcn": "community.general.ipa_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bearychat": {"py/object": "struct4.Module", "name": "bearychat", "fqcn": "community.general.bearychat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bearychat.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aerospike_migrations": {"py/object": "struct4.Module", "name": "aerospike_migrations", "fqcn": "community.general.aerospike_migrations", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aerospike_migrations.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_redfish_config": {"py/object": "struct4.Module", "name": "idrac_redfish_config", "fqcn": "community.general.idrac_redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_network": {"py/object": "struct4.Module", "name": "nios_network", "fqcn": "community.general.nios_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_ip_subnet": {"py/object": "struct4.Module", "name": "packet_ip_subnet", "fqcn": "community.general.packet_ip_subnet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_ip_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.portage": {"py/object": "struct4.Module", "name": "portage", "fqcn": "community.general.portage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/portage.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_project_variable": {"py/object": "struct4.Module", "name": "gitlab_project_variable", "fqcn": "community.general.gitlab_project_variable", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_project_variable.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_txt_record": {"py/object": "struct4.Module", "name": "nios_txt_record", "fqcn": "community.general.nios_txt_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_txt_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ome_device_info": {"py/object": "struct4.Module", "name": "ome_device_info", "fqcn": "community.general.ome_device_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ome_device_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_zone_domain": {"py/object": "struct4.Module", "name": "memset_zone_domain", "fqcn": "community.general.memset_zone_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_zone_domain.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_user_info": {"py/object": "struct4.Module", "name": "proxmox_user_info", "fqcn": "community.general.proxmox_user_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.foreman": {"py/object": "struct4.Module", "name": "foreman", "fqcn": "community.general.foreman", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/foreman.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.maven_artifact": {"py/object": "struct4.Module", "name": "maven_artifact", "fqcn": "community.general.maven_artifact", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/maven_artifact.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.telegram": {"py/object": "struct4.Module", "name": "telegram", "fqcn": "community.general.telegram", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/telegram.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_monitoring_policy": {"py/object": "struct4.Module", "name": "oneandone_monitoring_policy", "fqcn": "community.general.oneandone_monitoring_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_monitoring_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_san_manager_facts": {"py/object": "struct4.Module", "name": "oneview_san_manager_facts", "fqcn": "community.general.oneview_san_manager_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_san_manager_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_handler": {"py/object": "struct4.Module", "name": "sensu_handler", "fqcn": "community.general.sensu_handler", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_handler.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xfconf": {"py/object": "struct4.Module", "name": "xfconf", "fqcn": "community.general.xfconf", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xfconf.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_scaling_policy": {"py/object": "struct4.Module", "name": "rax_scaling_policy", "fqcn": "community.general.rax_scaling_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_scaling_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.say": {"py/object": "struct4.Module", "name": "say", "fqcn": "community.general.say", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/say.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pushover": {"py/object": "struct4.Module", "name": "pushover", "fqcn": "community.general.pushover", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pushover.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.elasticsearch_plugin": {"py/object": "struct4.Module", "name": "elasticsearch_plugin", "fqcn": "community.general.elasticsearch_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/elasticsearch_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_naptr_record": {"py/object": "struct4.Module", "name": "nios_naptr_record", "fqcn": "community.general.nios_naptr_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_naptr_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hpilo_boot": {"py/object": "struct4.Module", "name": "hpilo_boot", "fqcn": "community.general.hpilo_boot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hpilo_boot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_dns_record": {"py/object": "struct4.Module", "name": "udm_dns_record", "fqcn": "community.general.udm_dns_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_dns_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.modprobe": {"py/object": "struct4.Module", "name": "modprobe", "fqcn": "community.general.modprobe", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/modprobe.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_logical_interconnect_group_info": {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_info", "fqcn": "community.general.oneview_logical_interconnect_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_logical_interconnect_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.filesystem": {"py/object": "struct4.Module", "name": "filesystem", "fqcn": "community.general.filesystem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/filesystem.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 2}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 3}"], "annotations": {}}, "community.general.linode": {"py/object": "struct4.Module", "name": "linode", "fqcn": "community.general.linode", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/linode.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.datadog_event": {"py/object": "struct4.Module", "name": "datadog_event", "fqcn": "community.general.datadog_event", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/datadog_event.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.htpasswd": {"py/object": "struct4.Module", "name": "htpasswd", "fqcn": "community.general.htpasswd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/htpasswd.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 3}"], "annotations": {}}, "community.general.stacki_host": {"py/object": "struct4.Module", "name": "stacki_host", "fqcn": "community.general.stacki_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/stacki_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cobbler_sync": {"py/object": "struct4.Module", "name": "cobbler_sync", "fqcn": "community.general.cobbler_sync", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cobbler_sync.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcp_healthcheck": {"py/object": "struct4.Module", "name": "gcp_healthcheck", "fqcn": "community.general.gcp_healthcheck", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_healthcheck.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_image": {"py/object": "struct4.Module", "name": "docker_image", "fqcn": "community.general.docker_image", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_image.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_ptr_record": {"py/object": "struct4.Module", "name": "nios_ptr_record", "fqcn": "community.general.nios_ptr_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_ptr_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.online_user_info": {"py/object": "struct4.Module", "name": "online_user_info", "fqcn": "community.general.online_user_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_user_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_clb": {"py/object": "struct4.Module", "name": "rax_clb", "fqcn": "community.general.rax_clb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_clb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apk": {"py/object": "struct4.Module", "name": "apk", "fqcn": "community.general.apk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apk.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_host_record": {"py/object": "struct4.Module", "name": "nios_host_record", "fqcn": "community.general.nios_host_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_host_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_host_storage_facts": {"py/object": "struct4.Module", "name": "ovirt_host_storage_facts", "fqcn": "community.general.ovirt_host_storage_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_host_storage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.snap": {"py/object": "struct4.Module", "name": "snap", "fqcn": "community.general.snap", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/snap.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_group_facts": {"py/object": "struct4.Module", "name": "ovirt_group_facts", "fqcn": "community.general.ovirt_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_user": {"py/object": "struct4.Module", "name": "manageiq_user", "fqcn": "community.general.manageiq_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_network_view": {"py/object": "struct4.Module", "name": "nios_network_view", "fqcn": "community.general.nios_network_view", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_network_view.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_entity": {"py/object": "struct4.Module", "name": "rax_mon_entity", "fqcn": "community.general.rax_mon_entity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_entity.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_logical_interconnect_group": {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group", "fqcn": "community.general.oneview_logical_interconnect_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_logical_interconnect_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pubnub_blocks": {"py/object": "struct4.Module", "name": "pubnub_blocks", "fqcn": "community.general.pubnub_blocks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pubnub_blocks.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.irc": {"py/object": "struct4.Module", "name": "irc", "fqcn": "community.general.irc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/irc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_net": {"py/object": "struct4.Module", "name": "gce_net", "fqcn": "community.general.gce_net", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_net.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.homebrew": {"py/object": "struct4.Module", "name": "homebrew", "fqcn": "community.general.homebrew", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/homebrew.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mattermost": {"py/object": "struct4.Module", "name": "mattermost", "fqcn": "community.general.mattermost", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mattermost.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax": {"py/object": "struct4.Module", "name": "rax", "fqcn": "community.general.rax", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_srv_record": {"py/object": "struct4.Module", "name": "nios_srv_record", "fqcn": "community.general.nios_srv_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_srv_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_event_facts": {"py/object": "struct4.Module", "name": "ovirt_event_facts", "fqcn": "community.general.ovirt_event_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_event_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcpubsub": {"py/object": "struct4.Module", "name": "gcpubsub", "fqcn": "community.general.gcpubsub", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcpubsub.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_secret": {"py/object": "struct4.Module", "name": "docker_secret", "fqcn": "community.general.docker_secret", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_secret.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_database_backup": {"py/object": "struct4.Module", "name": "scaleway_database_backup", "fqcn": "community.general.scaleway_database_backup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_database_backup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce": {"py/object": "struct4.Module", "name": "gce", "fqcn": "community.general.gce", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_network_set_info": {"py/object": "struct4.Module", "name": "oneview_network_set_info", "fqcn": "community.general.oneview_network_set_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_network_set_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.facter": {"py/object": "struct4.Module", "name": "facter", "fqcn": "community.general.facter", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/facter.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_site": {"py/object": "struct4.Module", "name": "webfaction_site", "fqcn": "community.general.webfaction_site", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_site.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_network_interface_address": {"py/object": "struct4.Module", "name": "utm_network_interface_address", "fqcn": "community.general.utm_network_interface_address", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_network_interface_address.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sf_check_connections": {"py/object": "struct4.Module", "name": "sf_check_connections", "fqcn": "community.general.sf_check_connections", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_check_connections.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_vault": {"py/object": "struct4.Module", "name": "ipa_vault", "fqcn": "community.general.ipa_vault", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_vault.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.logstash_plugin": {"py/object": "struct4.Module", "name": "logstash_plugin", "fqcn": "community.general.logstash_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/logstash_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dimensiondata_vlan": {"py/object": "struct4.Module", "name": "dimensiondata_vlan", "fqcn": "community.general.dimensiondata_vlan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dimensiondata_vlan.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.git_config": {"py/object": "struct4.Module", "name": "git_config", "fqcn": "community.general.git_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/git_config.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml\", \"index\": 2}"], "annotations": {}}, "community.general.postgresql_membership": {"py/object": "struct4.Module", "name": "postgresql_membership", "fqcn": "community.general.postgresql_membership", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_membership.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mas": {"py/object": "struct4.Module", "name": "mas", "fqcn": "community.general.mas", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mas.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xml": {"py/object": "struct4.Module", "name": "xml", "fqcn": "community.general.xml", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xml.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jboss": {"py/object": "struct4.Module", "name": "jboss", "fqcn": "community.general.jboss", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jboss.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.shutdown": {"py/object": "struct4.Module", "name": "shutdown", "fqcn": "community.general.shutdown", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/shutdown.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nexmo": {"py/object": "struct4.Module", "name": "nexmo", "fqcn": "community.general.nexmo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nexmo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_sudocmdgroup": {"py/object": "struct4.Module", "name": "ipa_sudocmdgroup", "fqcn": "community.general.ipa_sudocmdgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_sudocmdgroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_stack_info": {"py/object": "struct4.Module", "name": "docker_stack_info", "fqcn": "community.general.docker_stack_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_stack_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_keypair": {"py/object": "struct4.Module", "name": "rax_keypair", "fqcn": "community.general.rax_keypair", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_keypair.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_user_role": {"py/object": "struct4.Module", "name": "na_cdot_user_role", "fqcn": "community.general.na_cdot_user_role", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_user_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_policies": {"py/object": "struct4.Module", "name": "manageiq_policies", "fqcn": "community.general.manageiq_policies", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_policies.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipinfoio_facts": {"py/object": "struct4.Module", "name": "ipinfoio_facts", "fqcn": "community.general.ipinfoio_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipinfoio_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_table": {"py/object": "struct4.Module", "name": "postgresql_table", "fqcn": "community.general.postgresql_table", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_table.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_user": {"py/object": "struct4.Module", "name": "ipa_user", "fqcn": "community.general.ipa_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_api_facts": {"py/object": "struct4.Module", "name": "ovirt_api_facts", "fqcn": "community.general.ovirt_api_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_api_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_aggregate": {"py/object": "struct4.Module", "name": "na_cdot_aggregate", "fqcn": "community.general.na_cdot_aggregate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_aggregate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dconf": {"py/object": "struct4.Module", "name": "dconf", "fqcn": "community.general.dconf", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dconf.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_vol_map": {"py/object": "struct4.Module", "name": "ibm_sa_vol_map", "fqcn": "community.general.ibm_sa_vol_map", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_vol_map.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ip_netns": {"py/object": "struct4.Module", "name": "ip_netns", "fqcn": "community.general.ip_netns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ip_netns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_server": {"py/object": "struct4.Module", "name": "clc_server", "fqcn": "community.general.clc_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_server.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.beadm": {"py/object": "struct4.Module", "name": "beadm", "fqcn": "community.general.beadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/beadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kubevirt_vm": {"py/object": "struct4.Module", "name": "kubevirt_vm", "fqcn": "community.general.kubevirt_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_vm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_private_ip": {"py/object": "struct4.Module", "name": "hwc_vpc_private_ip", "fqcn": "community.general.hwc_vpc_private_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_private_ip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_san_manager_info": {"py/object": "struct4.Module", "name": "oneview_san_manager_info", "fqcn": "community.general.oneview_san_manager_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_san_manager_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_image_facts": {"py/object": "struct4.Module", "name": "one_image_facts", "fqcn": "community.general.one_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul_acl": {"py/object": "struct4.Module", "name": "consul_acl", "fqcn": "community.general.consul_acl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul_acl.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml\", \"index\": 2}"], "annotations": {}}, "community.general.kubevirt_template": {"py/object": "struct4.Module", "name": "kubevirt_template", "fqcn": "community.general.kubevirt_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_template.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_frontend": {"py/object": "struct4.Module", "name": "utm_proxy_frontend", "fqcn": "community.general.utm_proxy_frontend", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_frontend.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks": {"py/object": "struct4.Module", "name": "profitbricks", "fqcn": "community.general.profitbricks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redhat_subscription": {"py/object": "struct4.Module", "name": "redhat_subscription", "fqcn": "community.general.redhat_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redhat_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.openbsd_pkg": {"py/object": "struct4.Module", "name": "openbsd_pkg", "fqcn": "community.general.openbsd_pkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/openbsd_pkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zypper_repository": {"py/object": "struct4.Module", "name": "zypper_repository", "fqcn": "community.general.zypper_repository", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zypper_repository.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul_session": {"py/object": "struct4.Module", "name": "consul_session", "fqcn": "community.general.consul_session", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul_session.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.typetalk": {"py/object": "struct4.Module", "name": "typetalk", "fqcn": "community.general.typetalk", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/typetalk.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_storage_template_facts": {"py/object": "struct4.Module", "name": "ovirt_storage_template_facts", "fqcn": "community.general.ovirt_storage_template_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_storage_template_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_guest_facts": {"py/object": "struct4.Module", "name": "xenserver_guest_facts", "fqcn": "community.general.xenserver_guest_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_ethernet_network_facts": {"py/object": "struct4.Module", "name": "oneview_ethernet_network_facts", "fqcn": "community.general.oneview_ethernet_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_ethernet_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_guest_powerstate": {"py/object": "struct4.Module", "name": "xenserver_guest_powerstate", "fqcn": "community.general.xenserver_guest_powerstate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest_powerstate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_copy": {"py/object": "struct4.Module", "name": "postgresql_copy", "fqcn": "community.general.postgresql_copy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_copy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_client": {"py/object": "struct4.Module", "name": "keycloak_client", "fqcn": "community.general.keycloak_client", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/keycloak_client.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_aa_policy": {"py/object": "struct4.Module", "name": "clc_aa_policy", "fqcn": "community.general.clc_aa_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_aa_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.urpmi": {"py/object": "struct4.Module", "name": "urpmi", "fqcn": "community.general.urpmi", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/urpmi.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_user": {"py/object": "struct4.Module", "name": "vertica_user", "fqcn": "community.general.vertica_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_slot": {"py/object": "struct4.Module", "name": "postgresql_slot", "fqcn": "community.general.postgresql_slot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_slot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apache2_module": {"py/object": "struct4.Module", "name": "apache2_module", "fqcn": "community.general.apache2_module", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apache2_module.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 9}"], "annotations": {}}, "community.general.gcspanner": {"py/object": "struct4.Module", "name": "gcspanner", "fqcn": "community.general.gcspanner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcspanner.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_login": {"py/object": "struct4.Module", "name": "docker_login", "fqcn": "community.general.docker_login", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_login.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mqtt": {"py/object": "struct4.Module", "name": "mqtt", "fqcn": "community.general.mqtt", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mqtt.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hpilo_facts": {"py/object": "struct4.Module", "name": "hpilo_facts", "fqcn": "community.general.hpilo_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hpilo_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_pipeline_key_pair": {"py/object": "struct4.Module", "name": "bitbucket_pipeline_key_pair", "fqcn": "community.general.bitbucket_pipeline_key_pair", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_pipeline_key_pair.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_write": {"py/object": "struct4.Module", "name": "influxdb_write", "fqcn": "community.general.influxdb_write", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_write.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mksysb": {"py/object": "struct4.Module", "name": "mksysb", "fqcn": "community.general.mksysb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mksysb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cdb_database": {"py/object": "struct4.Module", "name": "rax_cdb_database", "fqcn": "community.general.rax_cdb_database", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.taiga_issue": {"py/object": "struct4.Module", "name": "taiga_issue", "fqcn": "community.general.taiga_issue", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/taiga_issue.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xfs_quota": {"py/object": "struct4.Module", "name": "xfs_quota", "fqcn": "community.general.xfs_quota", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xfs_quota.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_silence": {"py/object": "struct4.Module", "name": "sensu_silence", "fqcn": "community.general.sensu_silence", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_silence.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.npm": {"py/object": "struct4.Module", "name": "npm", "fqcn": "community.general.npm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/npm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ufw": {"py/object": "struct4.Module", "name": "ufw", "fqcn": "community.general.ufw", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ufw.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 6}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 3}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 13}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 14}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 23}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 6}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 8}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 9}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 4}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 7}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml\", \"index\": 1}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 0}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 12}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 0}"], "annotations": {}}, "community.general.zfs_facts": {"py/object": "struct4.Module", "name": "zfs_facts", "fqcn": "community.general.zfs_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zfs_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_volume": {"py/object": "struct4.Module", "name": "docker_volume", "fqcn": "community.general.docker_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_configuration": {"py/object": "struct4.Module", "name": "vertica_configuration", "fqcn": "community.general.vertica_configuration", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_configuration.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_query": {"py/object": "struct4.Module", "name": "influxdb_query", "fqcn": "community.general.influxdb_query", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_image_info": {"py/object": "struct4.Module", "name": "docker_image_info", "fqcn": "community.general.docker_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cloudflare_dns": {"py/object": "struct4.Module", "name": "cloudflare_dns", "fqcn": "community.general.cloudflare_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cloudflare_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_image_info": {"py/object": "struct4.Module", "name": "scaleway_image_info", "fqcn": "community.general.scaleway_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_nsgroup": {"py/object": "struct4.Module", "name": "nios_nsgroup", "fqcn": "community.general.nios_nsgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_nsgroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_runner": {"py/object": "struct4.Module", "name": "gitlab_runner", "fqcn": "community.general.gitlab_runner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_runner.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_publicip": {"py/object": "struct4.Module", "name": "clc_publicip", "fqcn": "community.general.clc_publicip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_publicip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fc_network_info": {"py/object": "struct4.Module", "name": "oneview_fc_network_info", "fqcn": "community.general.oneview_fc_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fc_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.solaris_zone": {"py/object": "struct4.Module", "name": "solaris_zone", "fqcn": "community.general.solaris_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/solaris_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcp_forwarding_rule": {"py/object": "struct4.Module", "name": "gcp_forwarding_rule", "fqcn": "community.general.gcp_forwarding_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_forwarding_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.listen_ports_facts": {"py/object": "struct4.Module", "name": "listen_ports_facts", "fqcn": "community.general.listen_ports_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/listen_ports_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nginx_status_info": {"py/object": "struct4.Module", "name": "nginx_status_info", "fqcn": "community.general.nginx_status_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nginx_status_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nosh": {"py/object": "struct4.Module", "name": "nosh", "fqcn": "community.general.nosh", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nosh.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.logentries": {"py/object": "struct4.Module", "name": "logentries", "fqcn": "community.general.logentries", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/logentries.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_nic_facts": {"py/object": "struct4.Module", "name": "ovirt_nic_facts", "fqcn": "community.general.ovirt_nic_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_nic_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty_alert": {"py/object": "struct4.Module", "name": "pagerduty_alert", "fqcn": "community.general.pagerduty_alert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty_alert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.haproxy": {"py/object": "struct4.Module", "name": "haproxy", "fqcn": "community.general.haproxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/haproxy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_dns": {"py/object": "struct4.Module", "name": "rax_dns", "fqcn": "community.general.rax_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_logical_interconnect_group_facts": {"py/object": "struct4.Module", "name": "oneview_logical_interconnect_group_facts", "fqcn": "community.general.oneview_logical_interconnect_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_logical_interconnect_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_group": {"py/object": "struct4.Module", "name": "manageiq_group", "fqcn": "community.general.manageiq_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.office_365_connector_card": {"py/object": "struct4.Module", "name": "office_365_connector_card", "fqcn": "community.general.office_365_connector_card", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/office_365_connector_card.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_clb_ssl": {"py/object": "struct4.Module", "name": "rax_clb_ssl", "fqcn": "community.general.rax_clb_ssl", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_clb_ssl.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_network_set": {"py/object": "struct4.Module", "name": "oneview_network_set", "fqcn": "community.general.oneview_network_set", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_network_set.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.syslogger": {"py/object": "struct4.Module", "name": "syslogger", "fqcn": "community.general.syslogger", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/syslogger.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_dnszone": {"py/object": "struct4.Module", "name": "ipa_dnszone", "fqcn": "community.general.ipa_dnszone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_template_facts": {"py/object": "struct4.Module", "name": "ovirt_template_facts", "fqcn": "community.general.ovirt_template_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_template_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_cluster_facts": {"py/object": "struct4.Module", "name": "ovirt_cluster_facts", "fqcn": "community.general.ovirt_cluster_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_cluster_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxca_nodes": {"py/object": "struct4.Module", "name": "lxca_nodes", "fqcn": "community.general.lxca_nodes", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxca_nodes.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_check": {"py/object": "struct4.Module", "name": "rax_mon_check", "fqcn": "community.general.rax_mon_check", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_check.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_ip": {"py/object": "struct4.Module", "name": "scaleway_ip", "fqcn": "community.general.scaleway_ip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_ip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_img": {"py/object": "struct4.Module", "name": "gce_img", "fqcn": "community.general.gce_img", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_img.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.swupd": {"py/object": "struct4.Module", "name": "swupd", "fqcn": "community.general.swupd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/swupd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fc_network": {"py/object": "struct4.Module", "name": "oneview_fc_network", "fqcn": "community.general.oneview_fc_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fc_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.smartos_image_facts": {"py/object": "struct4.Module", "name": "smartos_image_facts", "fqcn": "community.general.smartos_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/smartos_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipmi_boot": {"py/object": "struct4.Module", "name": "ipmi_boot", "fqcn": "community.general.ipmi_boot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipmi_boot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.homebrew_tap": {"py/object": "struct4.Module", "name": "homebrew_tap", "fqcn": "community.general.homebrew_tap", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/homebrew_tap.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt": {"py/object": "struct4.Module", "name": "ovirt", "fqcn": "community.general.ovirt", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ibm_sa_pool": {"py/object": "struct4.Module", "name": "ibm_sa_pool", "fqcn": "community.general.ibm_sa_pool", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_pool.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lbu": {"py/object": "struct4.Module", "name": "lbu", "fqcn": "community.general.lbu", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lbu.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_filesystem": {"py/object": "struct4.Module", "name": "aix_filesystem", "fqcn": "community.general.aix_filesystem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_filesystem.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pamd": {"py/object": "struct4.Module", "name": "pamd", "fqcn": "community.general.pamd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pamd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zfs": {"py/object": "struct4.Module", "name": "zfs", "fqcn": "community.general.zfs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zfs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.wakeonlan": {"py/object": "struct4.Module", "name": "wakeonlan", "fqcn": "community.general.wakeonlan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/wakeonlan.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sf_account_manager": {"py/object": "struct4.Module", "name": "sf_account_manager", "fqcn": "community.general.sf_account_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_account_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_domain": {"py/object": "struct4.Module", "name": "webfaction_domain", "fqcn": "community.general.webfaction_domain", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_domain.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_identity": {"py/object": "struct4.Module", "name": "rax_identity", "fqcn": "community.general.rax_identity", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_identity.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dnsimple": {"py/object": "struct4.Module", "name": "dnsimple", "fqcn": "community.general.dnsimple", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dnsimple.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_subscription": {"py/object": "struct4.Module", "name": "postgresql_subscription", "fqcn": "community.general.postgresql_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rundeck_project": {"py/object": "struct4.Module", "name": "rundeck_project", "fqcn": "community.general.rundeck_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rundeck_project.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_server_snapshot": {"py/object": "struct4.Module", "name": "clc_server_snapshot", "fqcn": "community.general.clc_server_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_server_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_lvol": {"py/object": "struct4.Module", "name": "aix_lvol", "fqcn": "community.general.aix_lvol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_lvol.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.riak": {"py/object": "struct4.Module", "name": "riak", "fqcn": "community.general.riak", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/riak.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_security_group": {"py/object": "struct4.Module", "name": "scaleway_security_group", "fqcn": "community.general.scaleway_security_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcp_url_map": {"py/object": "struct4.Module", "name": "gcp_url_map", "fqcn": "community.general.gcp_url_map", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcp_url_map.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_redfish_info": {"py/object": "struct4.Module", "name": "idrac_redfish_info", "fqcn": "community.general.idrac_redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul": {"py/object": "struct4.Module", "name": "consul", "fqcn": "community.general.consul", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.purefb_facts": {"py/object": "struct4.Module", "name": "purefb_facts", "fqcn": "community.general.purefb_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/purefb_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_passwd": {"py/object": "struct4.Module", "name": "ldap_passwd", "fqcn": "community.general.ldap_passwd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_passwd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_job_info": {"py/object": "struct4.Module", "name": "jenkins_job_info", "fqcn": "community.general.jenkins_job_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_job_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_lb": {"py/object": "struct4.Module", "name": "gce_lb", "fqcn": "community.general.gce_lb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_lb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_search": {"py/object": "struct4.Module", "name": "ldap_search", "fqcn": "community.general.ldap_search", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_search.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sysupgrade": {"py/object": "struct4.Module", "name": "sysupgrade", "fqcn": "community.general.sysupgrade", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sysupgrade.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.svc": {"py/object": "struct4.Module", "name": "svc", "fqcn": "community.general.svc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/svc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_swarm_service": {"py/object": "struct4.Module", "name": "docker_swarm_service", "fqcn": "community.general.docker_swarm_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhn_channel": {"py/object": "struct4.Module", "name": "rhn_channel", "fqcn": "community.general.rhn_channel", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhn_channel.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.omapi_host": {"py/object": "struct4.Module", "name": "omapi_host", "fqcn": "community.general.omapi_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/omapi_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty_user": {"py/object": "struct4.Module", "name": "pagerduty_user", "fqcn": "community.general.pagerduty_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kubevirt_pvc": {"py/object": "struct4.Module", "name": "kubevirt_pvc", "fqcn": "community.general.kubevirt_pvc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_pvc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gc_storage": {"py/object": "struct4.Module", "name": "gc_storage", "fqcn": "community.general.gc_storage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gc_storage.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.campfire": {"py/object": "struct4.Module", "name": "campfire", "fqcn": "community.general.campfire", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/campfire.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_security_group_info": {"py/object": "struct4.Module", "name": "scaleway_security_group_info", "fqcn": "community.general.scaleway_security_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.yarn": {"py/object": "struct4.Module", "name": "yarn", "fqcn": "community.general.yarn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/yarn.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkgin": {"py/object": "struct4.Module", "name": "pkgin", "fqcn": "community.general.pkgin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkgin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_group": {"py/object": "struct4.Module", "name": "gitlab_group", "fqcn": "community.general.gitlab_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_mx_record": {"py/object": "struct4.Module", "name": "nios_mx_record", "fqcn": "community.general.nios_mx_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_mx_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_pd": {"py/object": "struct4.Module", "name": "gce_pd", "fqcn": "community.general.gce_pd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_pd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_network": {"py/object": "struct4.Module", "name": "docker_network", "fqcn": "community.general.docker_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_network_interface_address_info": {"py/object": "struct4.Module", "name": "utm_network_interface_address_info", "fqcn": "community.general.utm_network_interface_address_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_network_interface_address_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.linode_v4": {"py/object": "struct4.Module", "name": "linode_v4", "fqcn": "community.general.linode_v4", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/linode_v4.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gunicorn": {"py/object": "struct4.Module", "name": "gunicorn", "fqcn": "community.general.gunicorn", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gunicorn.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zfs_delegate_admin": {"py/object": "struct4.Module", "name": "zfs_delegate_admin", "fqcn": "community.general.zfs_delegate_admin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zfs_delegate_admin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cdb": {"py/object": "struct4.Module", "name": "rax_cdb", "fqcn": "community.general.rax_cdb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cdb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_cname_record": {"py/object": "struct4.Module", "name": "nios_cname_record", "fqcn": "community.general.nios_cname_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_cname_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.smartos_image_info": {"py/object": "struct4.Module", "name": "smartos_image_info", "fqcn": "community.general.smartos_image_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/smartos_image_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox": {"py/object": "struct4.Module", "name": "proxmox", "fqcn": "community.general.proxmox", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fcoe_network_info": {"py/object": "struct4.Module", "name": "oneview_fcoe_network_info", "fqcn": "community.general.oneview_fcoe_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fcoe_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxd_profile": {"py/object": "struct4.Module", "name": "lxd_profile", "fqcn": "community.general.lxd_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxd_profile.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.svr4pkg": {"py/object": "struct4.Module", "name": "svr4pkg", "fqcn": "community.general.svr4pkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/svr4pkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vdo": {"py/object": "struct4.Module", "name": "vdo", "fqcn": "community.general.vdo", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vdo.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_ethernet_network": {"py/object": "struct4.Module", "name": "oneview_ethernet_network", "fqcn": "community.general.oneview_ethernet_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_ethernet_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redis": {"py/object": "struct4.Module", "name": "redis", "fqcn": "community.general.redis", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redis.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_query": {"py/object": "struct4.Module", "name": "postgresql_query", "fqcn": "community.general.postgresql_query", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.installp": {"py/object": "struct4.Module", "name": "installp", "fqcn": "community.general.installp", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/installp.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_location": {"py/object": "struct4.Module", "name": "utm_proxy_location", "fqcn": "community.general.utm_proxy_location", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_location.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.homebrew_cask": {"py/object": "struct4.Module", "name": "homebrew_cask", "fqcn": "community.general.homebrew_cask", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/homebrew_cask.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.openwrt_init": {"py/object": "struct4.Module", "name": "openwrt_init", "fqcn": "community.general.openwrt_init", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/openwrt_init.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_labels": {"py/object": "struct4.Module", "name": "gce_labels", "fqcn": "community.general.gce_labels", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_labels.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.newrelic_deployment": {"py/object": "struct4.Module", "name": "newrelic_deployment", "fqcn": "community.general.newrelic_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/newrelic_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sorcery": {"py/object": "struct4.Module", "name": "sorcery", "fqcn": "community.general.sorcery", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sorcery.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kubevirt_rs": {"py/object": "struct4.Module", "name": "kubevirt_rs", "fqcn": "community.general.kubevirt_rs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_rs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_user_data": {"py/object": "struct4.Module", "name": "scaleway_user_data", "fqcn": "community.general.scaleway_user_data", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_user_data.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gcpubsub_facts": {"py/object": "struct4.Module", "name": "gcpubsub_facts", "fqcn": "community.general.gcpubsub_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gcpubsub_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lldp": {"py/object": "struct4.Module", "name": "lldp", "fqcn": "community.general.lldp", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lldp.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.capabilities": {"py/object": "struct4.Module", "name": "capabilities", "fqcn": "community.general.capabilities", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/capabilities.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_ext": {"py/object": "struct4.Module", "name": "postgresql_ext", "fqcn": "community.general.postgresql_ext", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_ext.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.flowdock": {"py/object": "struct4.Module", "name": "flowdock", "fqcn": "community.general.flowdock", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/flowdock.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.java_keystore": {"py/object": "struct4.Module", "name": "java_keystore", "fqcn": "community.general.java_keystore", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/java_keystore.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_port": {"py/object": "struct4.Module", "name": "hwc_vpc_port", "fqcn": "community.general.hwc_vpc_port", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_port.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.uptimerobot": {"py/object": "struct4.Module", "name": "uptimerobot", "fqcn": "community.general.uptimerobot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/uptimerobot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vmadm": {"py/object": "struct4.Module", "name": "vmadm", "fqcn": "community.general.vmadm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vmadm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_script": {"py/object": "struct4.Module", "name": "jenkins_script", "fqcn": "community.general.jenkins_script", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_script.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_cbs_attachments": {"py/object": "struct4.Module", "name": "rax_cbs_attachments", "fqcn": "community.general.rax_cbs_attachments", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_cbs_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_sudorule": {"py/object": "struct4.Module", "name": "ipa_sudorule", "fqcn": "community.general.ipa_sudorule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_sudorule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_vmpool_facts": {"py/object": "struct4.Module", "name": "ovirt_vmpool_facts", "fqcn": "community.general.ovirt_vmpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_vmpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kubevirt_cdi_upload": {"py/object": "struct4.Module", "name": "kubevirt_cdi_upload", "fqcn": "community.general.kubevirt_cdi_upload", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kubevirt_cdi_upload.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_client": {"py/object": "struct4.Module", "name": "sensu_client", "fqcn": "community.general.sensu_client", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_client.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_firewall_policy": {"py/object": "struct4.Module", "name": "oneandone_firewall_policy", "fqcn": "community.general.oneandone_firewall_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_firewall_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.puppet": {"py/object": "struct4.Module", "name": "puppet", "fqcn": "community.general.puppet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/puppet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_service": {"py/object": "struct4.Module", "name": "ipa_service", "fqcn": "community.general.ipa_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_datacenter_facts": {"py/object": "struct4.Module", "name": "ovirt_datacenter_facts", "fqcn": "community.general.ovirt_datacenter_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_datacenter_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.librato_annotation": {"py/object": "struct4.Module", "name": "librato_annotation", "fqcn": "community.general.librato_annotation", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/librato_annotation.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.slackpkg": {"py/object": "struct4.Module", "name": "slackpkg", "fqcn": "community.general.slackpkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/slackpkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_template": {"py/object": "struct4.Module", "name": "proxmox_template", "fqcn": "community.general.proxmox_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_template.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nsupdate": {"py/object": "struct4.Module", "name": "nsupdate", "fqcn": "community.general.nsupdate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nsupdate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.runit": {"py/object": "struct4.Module", "name": "runit", "fqcn": "community.general.runit", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/runit.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.znode": {"py/object": "struct4.Module", "name": "znode", "fqcn": "community.general.znode", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/znode.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pam_limits": {"py/object": "struct4.Module", "name": "pam_limits", "fqcn": "community.general.pam_limits", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pam_limits.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_key": {"py/object": "struct4.Module", "name": "github_key", "fqcn": "community.general.github_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_user_obj_stat_info": {"py/object": "struct4.Module", "name": "postgresql_user_obj_stat_info", "fqcn": "community.general.postgresql_user_obj_stat_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_user_obj_stat_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.flatpak": {"py/object": "struct4.Module", "name": "flatpak", "fqcn": "community.general.flatpak", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/flatpak.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_snapshot": {"py/object": "struct4.Module", "name": "gce_snapshot", "fqcn": "community.general.gce_snapshot", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_snapshot.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sl_vm": {"py/object": "struct4.Module", "name": "sl_vm", "fqcn": "community.general.sl_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sl_vm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pids": {"py/object": "struct4.Module", "name": "pids", "fqcn": "community.general.pids", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pids.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_vm": {"py/object": "struct4.Module", "name": "one_vm", "fqcn": "community.general.one_vm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_vm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.awall": {"py/object": "struct4.Module", "name": "awall", "fqcn": "community.general.awall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/awall.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_a_record": {"py/object": "struct4.Module", "name": "nios_a_record", "fqcn": "community.general.nios_a_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_a_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_modify_server": {"py/object": "struct4.Module", "name": "clc_modify_server", "fqcn": "community.general.clc_modify_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_modify_server.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_lun": {"py/object": "struct4.Module", "name": "na_cdot_lun", "fqcn": "community.general.na_cdot_lun", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_lun.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.kernel_blacklist": {"py/object": "struct4.Module", "name": "kernel_blacklist", "fqcn": "community.general.kernel_blacklist", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/kernel_blacklist.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_external_provider_facts": {"py/object": "struct4.Module", "name": "ovirt_external_provider_facts", "fqcn": "community.general.ovirt_external_provider_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_external_provider_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hetzner_firewall": {"py/object": "struct4.Module", "name": "hetzner_firewall", "fqcn": "community.general.hetzner_firewall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_firewall.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_service": {"py/object": "struct4.Module", "name": "one_service", "fqcn": "community.general.one_service", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sensu_subscription": {"py/object": "struct4.Module", "name": "sensu_subscription", "fqcn": "community.general.sensu_subscription", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sensu_subscription.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_instance_template": {"py/object": "struct4.Module", "name": "gce_instance_template", "fqcn": "community.general.gce_instance_template", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_instance_template.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xattr": {"py/object": "struct4.Module", "name": "xattr", "fqcn": "community.general.xattr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xattr.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sf_volume_access_group_manager": {"py/object": "struct4.Module", "name": "sf_volume_access_group_manager", "fqcn": "community.general.sf_volume_access_group_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_volume_access_group_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.icinga2_feature": {"py/object": "struct4.Module", "name": "icinga2_feature", "fqcn": "community.general.icinga2_feature", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/icinga2_feature.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_network_set_facts": {"py/object": "struct4.Module", "name": "oneview_network_set_facts", "fqcn": "community.general.oneview_network_set_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_network_set_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gluster_heal_info": {"py/object": "struct4.Module", "name": "gluster_heal_info", "fqcn": "community.general.gluster_heal_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gluster_heal_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_server_facts": {"py/object": "struct4.Module", "name": "memset_server_facts", "fqcn": "community.general.memset_server_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_server_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.parted": {"py/object": "struct4.Module", "name": "parted", "fqcn": "community.general.parted", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/parted.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rollbar_deployment": {"py/object": "struct4.Module", "name": "rollbar_deployment", "fqcn": "community.general.rollbar_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rollbar_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lvol": {"py/object": "struct4.Module", "name": "lvol", "fqcn": "community.general.lvol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lvol.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_swarm": {"py/object": "struct4.Module", "name": "docker_swarm", "fqcn": "community.general.docker_swarm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.archive": {"py/object": "struct4.Module", "name": "archive", "fqcn": "community.general.archive", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/archive.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_set": {"py/object": "struct4.Module", "name": "postgresql_set", "fqcn": "community.general.postgresql_set", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_set.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_volume_attachment": {"py/object": "struct4.Module", "name": "packet_volume_attachment", "fqcn": "community.general.packet_volume_attachment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_volume_attachment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_quota_facts": {"py/object": "struct4.Module", "name": "ovirt_quota_facts", "fqcn": "community.general.ovirt_quota_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_quota_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nomad_job": {"py/object": "struct4.Module", "name": "nomad_job", "fqcn": "community.general.nomad_job", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nomad_job.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sendgrid": {"py/object": "struct4.Module", "name": "sendgrid", "fqcn": "community.general.sendgrid", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sendgrid.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.opendj_backendprop": {"py/object": "struct4.Module", "name": "opendj_backendprop", "fqcn": "community.general.opendj_backendprop", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/opendj_backendprop.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipwcli_dns": {"py/object": "struct4.Module", "name": "ipwcli_dns", "fqcn": "community.general.ipwcli_dns", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipwcli_dns.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.udm_dns_zone": {"py/object": "struct4.Module", "name": "udm_dns_zone", "fqcn": "community.general.udm_dns_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/udm_dns_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_attrs": {"py/object": "struct4.Module", "name": "ldap_attrs", "fqcn": "community.general.ldap_attrs", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_attrs.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_user": {"py/object": "struct4.Module", "name": "gitlab_user", "fqcn": "community.general.gitlab_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.airbrake_deployment": {"py/object": "struct4.Module", "name": "airbrake_deployment", "fqcn": "community.general.airbrake_deployment", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/airbrake_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redfish_config": {"py/object": "struct4.Module", "name": "redfish_config", "fqcn": "community.general.redfish_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_host_info": {"py/object": "struct4.Module", "name": "docker_host_info", "fqcn": "community.general.docker_host_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_host_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pacemaker_cluster": {"py/object": "struct4.Module", "name": "pacemaker_cluster", "fqcn": "community.general.pacemaker_cluster", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pacemaker_cluster.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_subca": {"py/object": "struct4.Module", "name": "ipa_subca", "fqcn": "community.general.ipa_subca", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_subca.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_aaaa_record": {"py/object": "struct4.Module", "name": "nios_aaaa_record", "fqcn": "community.general.nios_aaaa_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_aaaa_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_job": {"py/object": "struct4.Module", "name": "jenkins_job", "fqcn": "community.general.jenkins_job", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_job.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.django_manage": {"py/object": "struct4.Module", "name": "django_manage", "fqcn": "community.general.django_manage", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/django_manage.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 11}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 12}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 14}"], "annotations": {}}, "community.general.bower": {"py/object": "struct4.Module", "name": "bower", "fqcn": "community.general.bower", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bower.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_info": {"py/object": "struct4.Module", "name": "vertica_info", "fqcn": "community.general.vertica_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_volume_info": {"py/object": "struct4.Module", "name": "scaleway_volume_info", "fqcn": "community.general.scaleway_volume_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_volume_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_smn_topic": {"py/object": "struct4.Module", "name": "hwc_smn_topic", "fqcn": "community.general.hwc_smn_topic", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_smn_topic.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_datacenter_info": {"py/object": "struct4.Module", "name": "oneview_datacenter_info", "fqcn": "community.general.oneview_datacenter_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_datacenter_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.make": {"py/object": "struct4.Module", "name": "make", "fqcn": "community.general.make", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/make.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 16}"], "annotations": {}}, "community.general.ipify_facts": {"py/object": "struct4.Module", "name": "ipify_facts", "fqcn": "community.general.ipify_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipify_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.zpool_facts": {"py/object": "struct4.Module", "name": "zpool_facts", "fqcn": "community.general.zpool_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/zpool_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pingdom": {"py/object": "struct4.Module", "name": "pingdom", "fqcn": "community.general.pingdom", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pingdom.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_enclosure_info": {"py/object": "struct4.Module", "name": "oneview_enclosure_info", "fqcn": "community.general.oneview_enclosure_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_enclosure_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pear": {"py/object": "struct4.Module", "name": "pear", "fqcn": "community.general.pear", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pear.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_ethernet_network_info": {"py/object": "struct4.Module", "name": "oneview_ethernet_network_info", "fqcn": "community.general.oneview_ethernet_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_ethernet_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_provider": {"py/object": "struct4.Module", "name": "manageiq_provider", "fqcn": "community.general.manageiq_provider", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_provider.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_redfish_command": {"py/object": "struct4.Module", "name": "idrac_redfish_command", "fqcn": "community.general.idrac_redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.onepassword_facts": {"py/object": "struct4.Module", "name": "onepassword_facts", "fqcn": "community.general.onepassword_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/onepassword_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nmcli": {"py/object": "struct4.Module", "name": "nmcli", "fqcn": "community.general.nmcli", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nmcli.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.portinstall": {"py/object": "struct4.Module", "name": "portinstall", "fqcn": "community.general.portinstall", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/portinstall.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jira": {"py/object": "struct4.Module", "name": "jira", "fqcn": "community.general.jira", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jira.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_notification_plan": {"py/object": "struct4.Module", "name": "rax_mon_notification_plan", "fqcn": "community.general.rax_mon_notification_plan", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_notification_plan.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_disk_facts": {"py/object": "struct4.Module", "name": "ovirt_disk_facts", "fqcn": "community.general.ovirt_disk_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_disk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_network_info": {"py/object": "struct4.Module", "name": "docker_network_info", "fqcn": "community.general.docker_network_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_network_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_group_info": {"py/object": "struct4.Module", "name": "proxmox_group_info", "fqcn": "community.general.proxmox_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hg": {"py/object": "struct4.Module", "name": "hg", "fqcn": "community.general.hg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.jenkins_plugin": {"py/object": "struct4.Module", "name": "jenkins_plugin", "fqcn": "community.general.jenkins_plugin", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/jenkins_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_eip": {"py/object": "struct4.Module", "name": "gce_eip", "fqcn": "community.general.gce_eip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_eip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_info": {"py/object": "struct4.Module", "name": "postgresql_info", "fqcn": "community.general.postgresql_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhsm_repository": {"py/object": "struct4.Module", "name": "rhsm_repository", "fqcn": "community.general.rhsm_repository", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhsm_repository.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_organization_facts": {"py/object": "struct4.Module", "name": "scaleway_organization_facts", "fqcn": "community.general.scaleway_organization_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_organization_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apache2_mod_proxy": {"py/object": "struct4.Module", "name": "apache2_mod_proxy", "fqcn": "community.general.apache2_mod_proxy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apache2_mod_proxy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_hook": {"py/object": "struct4.Module", "name": "gitlab_hook", "fqcn": "community.general.gitlab_hook", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_hook.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.imc_rest": {"py/object": "struct4.Module", "name": "imc_rest", "fqcn": "community.general.imc_rest", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/imc_rest.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovh_ip_loadbalancing_backend": {"py/object": "struct4.Module", "name": "ovh_ip_loadbalancing_backend", "fqcn": "community.general.ovh_ip_loadbalancing_backend", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovh_ip_loadbalancing_backend.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cpanm": {"py/object": "struct4.Module", "name": "cpanm", "fqcn": "community.general.cpanm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cpanm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redfish_facts": {"py/object": "struct4.Module", "name": "redfish_facts", "fqcn": "community.general.redfish_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_server_config_profile": {"py/object": "struct4.Module", "name": "idrac_server_config_profile", "fqcn": "community.general.idrac_server_config_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_server_config_profile.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.launchd": {"py/object": "struct4.Module", "name": "launchd", "fqcn": "community.general.launchd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/launchd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_tag_facts": {"py/object": "struct4.Module", "name": "ovirt_tag_facts", "fqcn": "community.general.ovirt_tag_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_tag_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.deploy_helper": {"py/object": "struct4.Module", "name": "deploy_helper", "fqcn": "community.general.deploy_helper", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/deploy_helper.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.java_cert": {"py/object": "struct4.Module", "name": "java_cert", "fqcn": "community.general.java_cert", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/java_cert.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_zone_record": {"py/object": "struct4.Module", "name": "memset_zone_record", "fqcn": "community.general.memset_zone_record", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_zone_record.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_scaling_group": {"py/object": "struct4.Module", "name": "rax_scaling_group", "fqcn": "community.general.rax_scaling_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_scaling_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty": {"py/object": "struct4.Module", "name": "pagerduty", "fqcn": "community.general.pagerduty", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.keycloak_clienttemplate": {"py/object": "struct4.Module", "name": "keycloak_clienttemplate", "fqcn": "community.general.keycloak_clienttemplate", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/keycloak_clienttemplate.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_attr": {"py/object": "struct4.Module", "name": "ldap_attr", "fqcn": "community.general.ldap_attr", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_attr.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hpilo_info": {"py/object": "struct4.Module", "name": "hpilo_info", "fqcn": "community.general.hpilo_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hpilo_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ldap_entry": {"py/object": "struct4.Module", "name": "ldap_entry", "fqcn": "community.general.ldap_entry", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ldap_entry.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cisco_spark": {"py/object": "struct4.Module", "name": "cisco_spark", "fqcn": "community.general.cisco_spark", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cisco_spark.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_ecs_instance": {"py/object": "struct4.Module", "name": "hwc_ecs_instance", "fqcn": "community.general.hwc_ecs_instance", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_ecs_instance.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.nios_fixed_address": {"py/object": "struct4.Module", "name": "nios_fixed_address", "fqcn": "community.general.nios_fixed_address", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/nios_fixed_address.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.dnsmadeeasy": {"py/object": "struct4.Module", "name": "dnsmadeeasy", "fqcn": "community.general.dnsmadeeasy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/dnsmadeeasy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cisco_webex": {"py/object": "struct4.Module", "name": "cisco_webex", "fqcn": "community.general.cisco_webex", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cisco_webex.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_memstore_info": {"py/object": "struct4.Module", "name": "memset_memstore_info", "fqcn": "community.general.memset_memstore_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_memstore_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_blueprint_package": {"py/object": "struct4.Module", "name": "clc_blueprint_package", "fqcn": "community.general.clc_blueprint_package", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_blueprint_package.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lvg": {"py/object": "struct4.Module", "name": "lvg", "fqcn": "community.general.lvg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lvg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_volume": {"py/object": "struct4.Module", "name": "packet_volume", "fqcn": "community.general.packet_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_access_key": {"py/object": "struct4.Module", "name": "bitbucket_access_key", "fqcn": "community.general.bitbucket_access_key", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_access_key.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.packet_sshkey": {"py/object": "struct4.Module", "name": "packet_sshkey", "fqcn": "community.general.packet_sshkey", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/packet_sshkey.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_config": {"py/object": "struct4.Module", "name": "docker_config", "fqcn": "community.general.docker_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.lxca_cmms": {"py/object": "struct4.Module", "name": "lxca_cmms", "fqcn": "community.general.lxca_cmms", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/lxca_cmms.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.locale_gen": {"py/object": "struct4.Module", "name": "locale_gen", "fqcn": "community.general.locale_gen", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/locale_gen.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkg5": {"py/object": "struct4.Module", "name": "pkg5", "fqcn": "community.general.pkg5", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkg5.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_aaa_group_info": {"py/object": "struct4.Module", "name": "utm_aaa_group_info", "fqcn": "community.general.utm_aaa_group_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_aaa_group_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_aaa_group": {"py/object": "struct4.Module", "name": "utm_aaa_group", "fqcn": "community.general.utm_aaa_group", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_aaa_group.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.memset_zone": {"py/object": "struct4.Module", "name": "memset_zone", "fqcn": "community.general.memset_zone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/memset_zone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.bitbucket_pipeline_known_host": {"py/object": "struct4.Module", "name": "bitbucket_pipeline_known_host", "fqcn": "community.general.bitbucket_pipeline_known_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/bitbucket_pipeline_known_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_ip_info": {"py/object": "struct4.Module", "name": "scaleway_ip_info", "fqcn": "community.general.scaleway_ip_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_ip_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gem": {"py/object": "struct4.Module", "name": "gem", "fqcn": "community.general.gem", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gem.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.iso_create": {"py/object": "struct4.Module", "name": "iso_create", "fqcn": "community.general.iso_create", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/iso_create.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_image_facts": {"py/object": "struct4.Module", "name": "scaleway_image_facts", "fqcn": "community.general.scaleway_image_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.sf_volume_manager": {"py/object": "struct4.Module", "name": "sf_volume_manager", "fqcn": "community.general.sf_volume_manager", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/sf_volume_manager.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pagerduty_change": {"py/object": "struct4.Module", "name": "pagerduty_change", "fqcn": "community.general.pagerduty_change", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pagerduty_change.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.online_user_facts": {"py/object": "struct4.Module", "name": "online_user_facts", "fqcn": "community.general.online_user_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/online_user_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_db": {"py/object": "struct4.Module", "name": "postgresql_db", "fqcn": "community.general.postgresql_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_db.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_security_group_rule": {"py/object": "struct4.Module", "name": "scaleway_security_group_rule", "fqcn": "community.general.scaleway_security_group_rule", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group_rule.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_dns_host": {"py/object": "struct4.Module", "name": "utm_dns_host", "fqcn": "community.general.utm_dns_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_dns_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_swarm_info": {"py/object": "struct4.Module", "name": "docker_swarm_info", "fqcn": "community.general.docker_swarm_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipmi_power": {"py/object": "struct4.Module", "name": "ipmi_power", "fqcn": "community.general.ipmi_power", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipmi_power.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_tenant": {"py/object": "struct4.Module", "name": "manageiq_tenant", "fqcn": "community.general.manageiq_tenant", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_tenant.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_idx": {"py/object": "struct4.Module", "name": "postgresql_idx", "fqcn": "community.general.postgresql_idx", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_idx.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhsm_release": {"py/object": "struct4.Module", "name": "rhsm_release", "fqcn": "community.general.rhsm_release", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhsm_release.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_database": {"py/object": "struct4.Module", "name": "influxdb_database", "fqcn": "community.general.influxdb_database", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_database.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.iso_extract": {"py/object": "struct4.Module", "name": "iso_extract", "fqcn": "community.general.iso_extract", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/iso_extract.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_owner": {"py/object": "struct4.Module", "name": "postgresql_owner", "fqcn": "community.general.postgresql_owner", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_owner.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_snapshot_info": {"py/object": "struct4.Module", "name": "scaleway_snapshot_info", "fqcn": "community.general.scaleway_snapshot_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_snapshot_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovh_ip_failover": {"py/object": "struct4.Module", "name": "ovh_ip_failover", "fqcn": "community.general.ovh_ip_failover", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovh_ip_failover.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.timezone": {"py/object": "struct4.Module", "name": "timezone", "fqcn": "community.general.timezone", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/timezone.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_volume_attachments": {"py/object": "struct4.Module", "name": "profitbricks_volume_attachments", "fqcn": "community.general.profitbricks_volume_attachments", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_volume_attachments.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hetzner_firewall_info": {"py/object": "struct4.Module", "name": "hetzner_firewall_info", "fqcn": "community.general.hetzner_firewall_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hetzner_firewall_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.mssql_db": {"py/object": "struct4.Module", "name": "mssql_db", "fqcn": "community.general.mssql_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/mssql_db.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.seport": {"py/object": "struct4.Module", "name": "seport", "fqcn": "community.general.seport", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/seport.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.twilio": {"py/object": "struct4.Module", "name": "twilio", "fqcn": "community.general.twilio", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/twilio.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_tablespace": {"py/object": "struct4.Module", "name": "postgresql_tablespace", "fqcn": "community.general.postgresql_tablespace", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_tablespace.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_facts": {"py/object": "struct4.Module", "name": "xenserver_facts", "fqcn": "community.general.xenserver_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.xenserver_guest_info": {"py/object": "struct4.Module", "name": "xenserver_guest_info", "fqcn": "community.general.xenserver_guest_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/xenserver_guest_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.python_requirements_info": {"py/object": "struct4.Module", "name": "python_requirements_info", "fqcn": "community.general.python_requirements_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/python_requirements_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_storage_vm_facts": {"py/object": "struct4.Module", "name": "ovirt_storage_vm_facts", "fqcn": "community.general.ovirt_storage_vm_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_storage_vm_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.opkg": {"py/object": "struct4.Module", "name": "opkg", "fqcn": "community.general.opkg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/opkg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.github_hooks": {"py/object": "struct4.Module", "name": "github_hooks", "fqcn": "community.general.github_hooks", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/github_hooks.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.alternatives": {"py/object": "struct4.Module", "name": "alternatives", "fqcn": "community.general.alternatives", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/alternatives.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 9}"], "annotations": {}}, "community.general.ibm_sa_vol": {"py/object": "struct4.Module", "name": "ibm_sa_vol", "fqcn": "community.general.ibm_sa_vol", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ibm_sa_vol.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pkg5_publisher": {"py/object": "struct4.Module", "name": "pkg5_publisher", "fqcn": "community.general.pkg5_publisher", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pkg5_publisher.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redis_info": {"py/object": "struct4.Module", "name": "redis_info", "fqcn": "community.general.redis_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redis_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.one_host": {"py/object": "struct4.Module", "name": "one_host", "fqcn": "community.general.one_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/one_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_stack_task_info": {"py/object": "struct4.Module", "name": "docker_stack_task_info", "fqcn": "community.general.docker_stack_task_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_stack_task_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_network_vpc": {"py/object": "struct4.Module", "name": "hwc_network_vpc", "fqcn": "community.general.hwc_network_vpc", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_network_vpc.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_sudocmd": {"py/object": "struct4.Module", "name": "ipa_sudocmd", "fqcn": "community.general.ipa_sudocmd", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_sudocmd.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_facts": {"py/object": "struct4.Module", "name": "vertica_facts", "fqcn": "community.general.vertica_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_network_facts": {"py/object": "struct4.Module", "name": "ovirt_network_facts", "fqcn": "community.general.ovirt_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ali_instance_info": {"py/object": "struct4.Module", "name": "ali_instance_info", "fqcn": "community.general.ali_instance_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ali_instance_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.pushbullet": {"py/object": "struct4.Module", "name": "pushbullet", "fqcn": "community.general.pushbullet", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/pushbullet.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_eip": {"py/object": "struct4.Module", "name": "hwc_vpc_eip", "fqcn": "community.general.hwc_vpc_eip", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_eip.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.postgresql_ping": {"py/object": "struct4.Module", "name": "postgresql_ping", "fqcn": "community.general.postgresql_ping", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/postgresql_ping.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rundeck_acl_policy": {"py/object": "struct4.Module", "name": "rundeck_acl_policy", "fqcn": "community.general.rundeck_acl_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rundeck_acl_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneview_fc_network_facts": {"py/object": "struct4.Module", "name": "oneview_fc_network_facts", "fqcn": "community.general.oneview_fc_network_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneview_fc_network_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_volume_facts": {"py/object": "struct4.Module", "name": "scaleway_volume_facts", "fqcn": "community.general.scaleway_volume_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_volume_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_hostgroup": {"py/object": "struct4.Module", "name": "ipa_hostgroup", "fqcn": "community.general.ipa_hostgroup", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_hostgroup.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_snapshot_facts": {"py/object": "struct4.Module", "name": "scaleway_snapshot_facts", "fqcn": "community.general.scaleway_snapshot_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_snapshot_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_container": {"py/object": "struct4.Module", "name": "docker_container", "fqcn": "community.general.docker_container", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_container.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.slack": {"py/object": "struct4.Module", "name": "slack", "fqcn": "community.general.slack", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/slack.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.atomic_host": {"py/object": "struct4.Module", "name": "atomic_host", "fqcn": "community.general.atomic_host", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/atomic_host.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hponcfg": {"py/object": "struct4.Module", "name": "hponcfg", "fqcn": "community.general.hponcfg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hponcfg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_affinity_label_facts": {"py/object": "struct4.Module", "name": "ovirt_affinity_label_facts", "fqcn": "community.general.ovirt_affinity_label_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_affinity_label_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redfish_command": {"py/object": "struct4.Module", "name": "redfish_command", "fqcn": "community.general.redfish_command", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_command.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_route": {"py/object": "struct4.Module", "name": "hwc_vpc_route", "fqcn": "community.general.hwc_vpc_route", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_route.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.stackdriver": {"py/object": "struct4.Module", "name": "stackdriver", "fqcn": "community.general.stackdriver", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/stackdriver.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_project": {"py/object": "struct4.Module", "name": "gitlab_project", "fqcn": "community.general.gitlab_project", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_project.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.clc_alert_policy": {"py/object": "struct4.Module", "name": "clc_alert_policy", "fqcn": "community.general.clc_alert_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/clc_alert_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rocketchat": {"py/object": "struct4.Module", "name": "rocketchat", "fqcn": "community.general.rocketchat", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rocketchat.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rhn_register": {"py/object": "struct4.Module", "name": "rhn_register", "fqcn": "community.general.rhn_register", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rhn_register.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_db": {"py/object": "struct4.Module", "name": "webfaction_db", "fqcn": "community.general.webfaction_db", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_db.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.cobbler_system": {"py/object": "struct4.Module", "name": "cobbler_system", "fqcn": "community.general.cobbler_system", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/cobbler_system.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.hwc_vpc_peering_connect": {"py/object": "struct4.Module", "name": "hwc_vpc_peering_connect", "fqcn": "community.general.hwc_vpc_peering_connect", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/hwc_vpc_peering_connect.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.logentries_msg": {"py/object": "struct4.Module", "name": "logentries_msg", "fqcn": "community.general.logentries_msg", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/logentries_msg.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ini_file": {"py/object": "struct4.Module", "name": "ini_file", "fqcn": "community.general.ini_file", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ini_file.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 8}"], "annotations": {}}, "community.general.manageiq_alert_profiles": {"py/object": "struct4.Module", "name": "manageiq_alert_profiles", "fqcn": "community.general.manageiq_alert_profiles", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_alert_profiles.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.vertica_schema": {"py/object": "struct4.Module", "name": "vertica_schema", "fqcn": "community.general.vertica_schema", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/vertica_schema.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_frontend_info": {"py/object": "struct4.Module", "name": "utm_proxy_frontend_info", "fqcn": "community.general.utm_proxy_frontend_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_frontend_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.influxdb_retention_policy": {"py/object": "struct4.Module", "name": "influxdb_retention_policy", "fqcn": "community.general.influxdb_retention_policy", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/influxdb_retention_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.helm": {"py/object": "struct4.Module", "name": "helm", "fqcn": "community.general.helm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/helm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.rax_mon_alarm": {"py/object": "struct4.Module", "name": "rax_mon_alarm", "fqcn": "community.general.rax_mon_alarm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/rax_mon_alarm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.idrac_firmware": {"py/object": "struct4.Module", "name": "idrac_firmware", "fqcn": "community.general.idrac_firmware", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/idrac_firmware.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gce_tag": {"py/object": "struct4.Module", "name": "gce_tag", "fqcn": "community.general.gce_tag", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gce_tag.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_ip_facts": {"py/object": "struct4.Module", "name": "scaleway_ip_facts", "fqcn": "community.general.scaleway_ip_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_ip_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.na_cdot_qtree": {"py/object": "struct4.Module", "name": "na_cdot_qtree", "fqcn": "community.general.na_cdot_qtree", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/na_cdot_qtree.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_snapshot_facts": {"py/object": "struct4.Module", "name": "ovirt_snapshot_facts", "fqcn": "community.general.ovirt_snapshot_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_snapshot_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.apt_rpm": {"py/object": "struct4.Module", "name": "apt_rpm", "fqcn": "community.general.apt_rpm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/apt_rpm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_server": {"py/object": "struct4.Module", "name": "oneandone_server", "fqcn": "community.general.oneandone_server", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_server.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_dnsrecord": {"py/object": "struct4.Module", "name": "ipa_dnsrecord", "fqcn": "community.general.ipa_dnsrecord", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_dnsrecord.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.interfaces_file": {"py/object": "struct4.Module", "name": "interfaces_file", "fqcn": "community.general.interfaces_file", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/interfaces_file.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ejabberd_user": {"py/object": "struct4.Module", "name": "ejabberd_user", "fqcn": "community.general.ejabberd_user", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ejabberd_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gluster_peer": {"py/object": "struct4.Module", "name": "gluster_peer", "fqcn": "community.general.gluster_peer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gluster_peer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ovirt_scheduling_policy_facts": {"py/object": "struct4.Module", "name": "ovirt_scheduling_policy_facts", "fqcn": "community.general.ovirt_scheduling_policy_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ovirt_scheduling_policy_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_exception": {"py/object": "struct4.Module", "name": "utm_proxy_exception", "fqcn": "community.general.utm_proxy_exception", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_exception.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.aix_devices": {"py/object": "struct4.Module", "name": "aix_devices", "fqcn": "community.general.aix_devices", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/aix_devices.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_private_network": {"py/object": "struct4.Module", "name": "oneandone_private_network", "fqcn": "community.general.oneandone_private_network", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_private_network.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.utm_proxy_auth_profile": {"py/object": "struct4.Module", "name": "utm_proxy_auth_profile", "fqcn": "community.general.utm_proxy_auth_profile", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/utm_proxy_auth_profile.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.profitbricks_volume": {"py/object": "struct4.Module", "name": "profitbricks_volume", "fqcn": "community.general.profitbricks_volume", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/profitbricks_volume.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.catapult": {"py/object": "struct4.Module", "name": "catapult", "fqcn": "community.general.catapult", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/catapult.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.consul_kv": {"py/object": "struct4.Module", "name": "consul_kv", "fqcn": "community.general.consul_kv", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/consul_kv.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.ipa_config": {"py/object": "struct4.Module", "name": "ipa_config", "fqcn": "community.general.ipa_config", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/ipa_config.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_security_group_facts": {"py/object": "struct4.Module", "name": "scaleway_security_group_facts", "fqcn": "community.general.scaleway_security_group_facts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_security_group_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.gitlab_group_members": {"py/object": "struct4.Module", "name": "gitlab_group_members", "fqcn": "community.general.gitlab_group_members", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/gitlab_group_members.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.redfish_info": {"py/object": "struct4.Module", "name": "redfish_info", "fqcn": "community.general.redfish_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/redfish_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_mailbox": {"py/object": "struct4.Module", "name": "webfaction_mailbox", "fqcn": "community.general.webfaction_mailbox", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_mailbox.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.scaleway_lb": {"py/object": "struct4.Module", "name": "scaleway_lb", "fqcn": "community.general.scaleway_lb", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/scaleway_lb.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.manageiq_alerts": {"py/object": "struct4.Module", "name": "manageiq_alerts", "fqcn": "community.general.manageiq_alerts", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/manageiq_alerts.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.docker_swarm_service_info": {"py/object": "struct4.Module", "name": "docker_swarm_service_info", "fqcn": "community.general.docker_swarm_service_info", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/docker_swarm_service_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.webfaction_app": {"py/object": "struct4.Module", "name": "webfaction_app", "fqcn": "community.general.webfaction_app", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/webfaction_app.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.spectrum_device": {"py/object": "struct4.Module", "name": "spectrum_device", "fqcn": "community.general.spectrum_device", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/spectrum_device.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.macports": {"py/object": "struct4.Module", "name": "macports", "fqcn": "community.general.macports", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/macports.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.selinux_permissive": {"py/object": "struct4.Module", "name": "selinux_permissive", "fqcn": "community.general.selinux_permissive", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/selinux_permissive.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.proxmox_kvm": {"py/object": "struct4.Module", "name": "proxmox_kvm", "fqcn": "community.general.proxmox_kvm", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/proxmox_kvm.py", "builtin": false, "used_in": [], "annotations": {}}, "community.general.oneandone_load_balancer": {"py/object": "struct4.Module", "name": "oneandone_load_balancer", "fqcn": "community.general.oneandone_load_balancer", "collection": "community.general", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/general/plugins/modules/oneandone_load_balancer.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_exchange": {"py/object": "struct4.Module", "name": "rabbitmq_exchange", "fqcn": "community.rabbitmq.rabbitmq_exchange", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_exchange.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_policy": {"py/object": "struct4.Module", "name": "rabbitmq_policy", "fqcn": "community.rabbitmq.rabbitmq_policy", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_policy.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_user": {"py/object": "struct4.Module", "name": "rabbitmq_user", "fqcn": "community.rabbitmq.rabbitmq_user", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_user.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 15}", "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 18}"], "annotations": {}}, "community.rabbitmq.rabbitmq_publish": {"py/object": "struct4.Module", "name": "rabbitmq_publish", "fqcn": "community.rabbitmq.rabbitmq_publish", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_publish.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_user_limits": {"py/object": "struct4.Module", "name": "rabbitmq_user_limits", "fqcn": "community.rabbitmq.rabbitmq_user_limits", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_user_limits.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_binding": {"py/object": "struct4.Module", "name": "rabbitmq_binding", "fqcn": "community.rabbitmq.rabbitmq_binding", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_binding.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_vhost_limits": {"py/object": "struct4.Module", "name": "rabbitmq_vhost_limits", "fqcn": "community.rabbitmq.rabbitmq_vhost_limits", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_vhost_limits.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_vhost": {"py/object": "struct4.Module", "name": "rabbitmq_vhost", "fqcn": "community.rabbitmq.rabbitmq_vhost", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_vhost.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 19}"], "annotations": {}}, "community.rabbitmq.rabbitmq_queue": {"py/object": "struct4.Module", "name": "rabbitmq_queue", "fqcn": "community.rabbitmq.rabbitmq_queue", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_queue.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_upgrade": {"py/object": "struct4.Module", "name": "rabbitmq_upgrade", "fqcn": "community.rabbitmq.rabbitmq_upgrade", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_upgrade.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_parameter": {"py/object": "struct4.Module", "name": "rabbitmq_parameter", "fqcn": "community.rabbitmq.rabbitmq_parameter", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_parameter.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_feature_flag": {"py/object": "struct4.Module", "name": "rabbitmq_feature_flag", "fqcn": "community.rabbitmq.rabbitmq_feature_flag", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_feature_flag.py", "builtin": false, "used_in": [], "annotations": {}}, "community.rabbitmq.rabbitmq_plugin": {"py/object": "struct4.Module", "name": "rabbitmq_plugin", "fqcn": "community.rabbitmq.rabbitmq_plugin", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_plugin.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 14}"], "annotations": {}}, "community.rabbitmq.rabbitmq_global_parameter": {"py/object": "struct4.Module", "name": "rabbitmq_global_parameter", "fqcn": "community.rabbitmq.rabbitmq_global_parameter", "collection": "community.rabbitmq", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/rabbitmq/plugins/modules/rabbitmq_global_parameter.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_info": {"py/object": "struct4.Module", "name": "mysql_info", "fqcn": "community.mysql.mysql_info", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_variables": {"py/object": "struct4.Module", "name": "mysql_variables", "fqcn": "community.mysql.mysql_variables", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_variables.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_replication": {"py/object": "struct4.Module", "name": "mysql_replication", "fqcn": "community.mysql.mysql_replication", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_replication.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_query": {"py/object": "struct4.Module", "name": "mysql_query", "fqcn": "community.mysql.mysql_query", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_query.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_role": {"py/object": "struct4.Module", "name": "mysql_role", "fqcn": "community.mysql.mysql_role", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_role.py", "builtin": false, "used_in": [], "annotations": {}}, "community.mysql.mysql_db": {"py/object": "struct4.Module", "name": "mysql_db", "fqcn": "community.mysql.mysql_db", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_db.py", "builtin": false, "used_in": ["{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 6}"], "annotations": {}}, "community.mysql.mysql_user": {"py/object": "struct4.Module", "name": "mysql_user", "fqcn": "community.mysql.mysql_user", "collection": "community.mysql", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/mysql/plugins/modules/mysql_user.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_log": {"py/object": "struct4.Module", "name": "k8s_log", "fqcn": "community.kubernetes.k8s_log", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_log.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.helm_plugin": {"py/object": "struct4.Module", "name": "helm_plugin", "fqcn": "community.kubernetes.helm_plugin", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_plugin.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_info": {"py/object": "struct4.Module", "name": "k8s_info", "fqcn": "community.kubernetes.k8s_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.helm_template": {"py/object": "struct4.Module", "name": "helm_template", "fqcn": "community.kubernetes.helm_template", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_template.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_scale": {"py/object": "struct4.Module", "name": "k8s_scale", "fqcn": "community.kubernetes.k8s_scale", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_scale.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.helm_plugin_info": {"py/object": "struct4.Module", "name": "helm_plugin_info", "fqcn": "community.kubernetes.helm_plugin_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_plugin_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.helm_info": {"py/object": "struct4.Module", "name": "helm_info", "fqcn": "community.kubernetes.helm_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_exec": {"py/object": "struct4.Module", "name": "k8s_exec", "fqcn": "community.kubernetes.k8s_exec", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_exec.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_service": {"py/object": "struct4.Module", "name": "k8s_service", "fqcn": "community.kubernetes.k8s_service", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_service.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_rollback": {"py/object": "struct4.Module", "name": "k8s_rollback", "fqcn": "community.kubernetes.k8s_rollback", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_rollback.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.helm_repository": {"py/object": "struct4.Module", "name": "helm_repository", "fqcn": "community.kubernetes.helm_repository", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm_repository.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s": {"py/object": "struct4.Module", "name": "k8s", "fqcn": "community.kubernetes.k8s", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_cluster_info": {"py/object": "struct4.Module", "name": "k8s_cluster_info", "fqcn": "community.kubernetes.k8s_cluster_info", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_cluster_info.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.k8s_auth": {"py/object": "struct4.Module", "name": "k8s_auth", "fqcn": "community.kubernetes.k8s_auth", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/k8s_auth.py", "builtin": false, "used_in": [], "annotations": {}}, "community.kubernetes.helm": {"py/object": "struct4.Module", "name": "helm", "fqcn": "community.kubernetes.helm", "collection": "community.kubernetes", "role": "", "defined_in": "testdata3/installed_collections_path/ansible_collections/community/kubernetes/plugins/modules/helm.py", "builtin": false, "used_in": [], "annotations": {}}, "ansible.builtin.dpkg_selections": {"py/object": "struct4.Module", "name": "dpkg_selections", "fqcn": "ansible.builtin.dpkg_selections", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sequence": {"py/object": "struct4.Module", "name": "sequence", "fqcn": "ansible.builtin.sequence", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.ini": {"py/object": "struct4.Module", "name": "ini", "fqcn": "ansible.builtin.ini", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.tempfile": {"py/object": "struct4.Module", "name": "tempfile", "fqcn": "ansible.builtin.tempfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.replace": {"py/object": "struct4.Module", "name": "replace", "fqcn": "ansible.builtin.replace", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.su": {"py/object": "struct4.Module", "name": "su", "fqcn": "ansible.builtin.su", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.apt_repository": {"py/object": "struct4.Module", "name": "apt_repository", "fqcn": "ansible.builtin.apt_repository", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.runas": {"py/object": "struct4.Module", "name": "runas", "fqcn": "ansible.builtin.runas", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.default": {"py/object": "struct4.Module", "name": "default", "fqcn": "ansible.builtin.default", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.random_choice": {"py/object": "struct4.Module", "name": "random_choice", "fqcn": "ansible.builtin.random_choice", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.yum_repository": {"py/object": "struct4.Module", "name": "yum_repository", "fqcn": "ansible.builtin.yum_repository", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.script": {"py/object": "struct4.Module", "name": "script", "fqcn": "ansible.builtin.script", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.wait_for_connection": {"py/object": "struct4.Module", "name": "wait_for_connection", "fqcn": "ansible.builtin.wait_for_connection", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.paramiko_ssh": {"py/object": "struct4.Module", "name": "paramiko_ssh", "fqcn": "ansible.builtin.paramiko_ssh", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.pipe": {"py/object": "struct4.Module", "name": "pipe", "fqcn": "ansible.builtin.pipe", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.vars": {"py/object": "struct4.Module", "name": "vars", "fqcn": "ansible.builtin.vars", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.yum": {"py/object": "struct4.Module", "name": "yum", "fqcn": "ansible.builtin.yum", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.raw": {"py/object": "struct4.Module", "name": "raw", "fqcn": "ansible.builtin.raw", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.pause": {"py/object": "struct4.Module", "name": "pause", "fqcn": "ansible.builtin.pause", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.reboot": {"py/object": "struct4.Module", "name": "reboot", "fqcn": "ansible.builtin.reboot", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.stat": {"py/object": "struct4.Module", "name": "stat", "fqcn": "ansible.builtin.stat", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.jsonfile": {"py/object": "struct4.Module", "name": "jsonfile", "fqcn": "ansible.builtin.jsonfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.debconf": {"py/object": "struct4.Module", "name": "debconf", "fqcn": "ansible.builtin.debconf", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sysvinit": {"py/object": "struct4.Module", "name": "sysvinit", "fqcn": "ansible.builtin.sysvinit", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.powershell": {"py/object": "struct4.Module", "name": "powershell", "fqcn": "ansible.builtin.powershell", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.apt_key": {"py/object": "struct4.Module", "name": "apt_key", "fqcn": "ansible.builtin.apt_key", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.lineinfile": {"py/object": "struct4.Module", "name": "lineinfile", "fqcn": "ansible.builtin.lineinfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.subversion": {"py/object": "struct4.Module", "name": "subversion", "fqcn": "ansible.builtin.subversion", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.lines": {"py/object": "struct4.Module", "name": "lines", "fqcn": "ansible.builtin.lines", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.local": {"py/object": "struct4.Module", "name": "local", "fqcn": "ansible.builtin.local", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.blockinfile": {"py/object": "struct4.Module", "name": "blockinfile", "fqcn": "ansible.builtin.blockinfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.git": {"py/object": "struct4.Module", "name": "git", "fqcn": "ansible.builtin.git", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.password": {"py/object": "struct4.Module", "name": "password", "fqcn": "ansible.builtin.password", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sudo": {"py/object": "struct4.Module", "name": "sudo", "fqcn": "ansible.builtin.sudo", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.async_status": {"py/object": "struct4.Module", "name": "async_status", "fqcn": "ansible.builtin.async_status", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.dict": {"py/object": "struct4.Module", "name": "dict", "fqcn": "ansible.builtin.dict", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.csvfile": {"py/object": "struct4.Module", "name": "csvfile", "fqcn": "ansible.builtin.csvfile", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.group_by": {"py/object": "struct4.Module", "name": "group_by", "fqcn": "ansible.builtin.group_by", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.host_group_vars": {"py/object": "struct4.Module", "name": "host_group_vars", "fqcn": "ansible.builtin.host_group_vars", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.constructed": {"py/object": "struct4.Module", "name": "constructed", "fqcn": "ansible.builtin.constructed", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.inventory_hostnames": {"py/object": "struct4.Module", "name": "inventory_hostnames", "fqcn": "ansible.builtin.inventory_hostnames", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.pip": {"py/object": "struct4.Module", "name": "pip", "fqcn": "ansible.builtin.pip", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include_vars": {"py/object": "struct4.Module", "name": "include_vars", "fqcn": "ansible.builtin.include_vars", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.template": {"py/object": "struct4.Module", "name": "template", "fqcn": "ansible.builtin.template", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.env": {"py/object": "struct4.Module", "name": "env", "fqcn": "ansible.builtin.env", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.config": {"py/object": "struct4.Module", "name": "config", "fqcn": "ansible.builtin.config", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.yaml": {"py/object": "struct4.Module", "name": "yaml", "fqcn": "ansible.builtin.yaml", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.gather_facts": {"py/object": "struct4.Module", "name": "gather_facts", "fqcn": "ansible.builtin.gather_facts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include": {"py/object": "struct4.Module", "name": "include", "fqcn": "ansible.builtin.include", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.list": {"py/object": "struct4.Module", "name": "list", "fqcn": "ansible.builtin.list", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include_role": {"py/object": "struct4.Module", "name": "include_role", "fqcn": "ansible.builtin.include_role", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.dnf": {"py/object": "struct4.Module", "name": "dnf", "fqcn": "ansible.builtin.dnf", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.file": {"py/object": "struct4.Module", "name": "file", "fqcn": "ansible.builtin.file", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.slurp": {"py/object": "struct4.Module", "name": "slurp", "fqcn": "ansible.builtin.slurp", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.auto": {"py/object": "struct4.Module", "name": "auto", "fqcn": "ansible.builtin.auto", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.minimal": {"py/object": "struct4.Module", "name": "minimal", "fqcn": "ansible.builtin.minimal", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.known_hosts": {"py/object": "struct4.Module", "name": "known_hosts", "fqcn": "ansible.builtin.known_hosts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.fetch": {"py/object": "struct4.Module", "name": "fetch", "fqcn": "ansible.builtin.fetch", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.uri": {"py/object": "struct4.Module", "name": "uri", "fqcn": "ansible.builtin.uri", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.expect": {"py/object": "struct4.Module", "name": "expect", "fqcn": "ansible.builtin.expect", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.service": {"py/object": "struct4.Module", "name": "service", "fqcn": "ansible.builtin.service", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.ssh": {"py/object": "struct4.Module", "name": "ssh", "fqcn": "ansible.builtin.ssh", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.service_facts": {"py/object": "struct4.Module", "name": "service_facts", "fqcn": "ansible.builtin.service_facts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.package_facts": {"py/object": "struct4.Module", "name": "package_facts", "fqcn": "ansible.builtin.package_facts", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.assert": {"py/object": "struct4.Module", "name": "assert", "fqcn": "ansible.builtin.assert", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.varnames": {"py/object": "struct4.Module", "name": "varnames", "fqcn": "ansible.builtin.varnames", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.ping": {"py/object": "struct4.Module", "name": "ping", "fqcn": "ansible.builtin.ping", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.wait_for": {"py/object": "struct4.Module", "name": "wait_for", "fqcn": "ansible.builtin.wait_for", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.set_stats": {"py/object": "struct4.Module", "name": "set_stats", "fqcn": "ansible.builtin.set_stats", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.shell": {"py/object": "struct4.Module", "name": "shell", "fqcn": "ansible.builtin.shell", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.first_found": {"py/object": "struct4.Module", "name": "first_found", "fqcn": "ansible.builtin.first_found", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.iptables": {"py/object": "struct4.Module", "name": "iptables", "fqcn": "ansible.builtin.iptables", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.debug": {"py/object": "struct4.Module", "name": "debug", "fqcn": "ansible.builtin.debug", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.rpm_key": {"py/object": "struct4.Module", "name": "rpm_key", "fqcn": "ansible.builtin.rpm_key", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.add_host": {"py/object": "struct4.Module", "name": "add_host", "fqcn": "ansible.builtin.add_host", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.copy": {"py/object": "struct4.Module", "name": "copy", "fqcn": "ansible.builtin.copy", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.unarchive": {"py/object": "struct4.Module", "name": "unarchive", "fqcn": "ansible.builtin.unarchive", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.import_tasks": {"py/object": "struct4.Module", "name": "import_tasks", "fqcn": "ansible.builtin.import_tasks", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.items": {"py/object": "struct4.Module", "name": "items", "fqcn": "ansible.builtin.items", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.import_role": {"py/object": "struct4.Module", "name": "import_role", "fqcn": "ansible.builtin.import_role", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.tree": {"py/object": "struct4.Module", "name": "tree", "fqcn": "ansible.builtin.tree", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.sh": {"py/object": "struct4.Module", "name": "sh", "fqcn": "ansible.builtin.sh", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.assemble": {"py/object": "struct4.Module", "name": "assemble", "fqcn": "ansible.builtin.assemble", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.group": {"py/object": "struct4.Module", "name": "group", "fqcn": "ansible.builtin.group", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.junit": {"py/object": "struct4.Module", "name": "junit", "fqcn": "ansible.builtin.junit", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.toml": {"py/object": "struct4.Module", "name": "toml", "fqcn": "ansible.builtin.toml", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.find": {"py/object": "struct4.Module", "name": "find", "fqcn": "ansible.builtin.find", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.advanced_host_list": {"py/object": "struct4.Module", "name": "advanced_host_list", "fqcn": "ansible.builtin.advanced_host_list", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.indexed_items": {"py/object": "struct4.Module", "name": "indexed_items", "fqcn": "ansible.builtin.indexed_items", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.nested": {"py/object": "struct4.Module", "name": "nested", "fqcn": "ansible.builtin.nested", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.winrm": {"py/object": "struct4.Module", "name": "winrm", "fqcn": "ansible.builtin.winrm", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.generator": {"py/object": "struct4.Module", "name": "generator", "fqcn": "ansible.builtin.generator", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.psrp": {"py/object": "struct4.Module", "name": "psrp", "fqcn": "ansible.builtin.psrp", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.linear": {"py/object": "struct4.Module", "name": "linear", "fqcn": "ansible.builtin.linear", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.apt": {"py/object": "struct4.Module", "name": "apt", "fqcn": "ansible.builtin.apt", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.host_list": {"py/object": "struct4.Module", "name": "host_list", "fqcn": "ansible.builtin.host_list", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.cmd": {"py/object": "struct4.Module", "name": "cmd", "fqcn": "ansible.builtin.cmd", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.setup": {"py/object": "struct4.Module", "name": "setup", "fqcn": "ansible.builtin.setup", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.free": {"py/object": "struct4.Module", "name": "free", "fqcn": "ansible.builtin.free", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.set_fact": {"py/object": "struct4.Module", "name": "set_fact", "fqcn": "ansible.builtin.set_fact", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.url": {"py/object": "struct4.Module", "name": "url", "fqcn": "ansible.builtin.url", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.systemd": {"py/object": "struct4.Module", "name": "systemd", "fqcn": "ansible.builtin.systemd", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.oneline": {"py/object": "struct4.Module", "name": "oneline", "fqcn": "ansible.builtin.oneline", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.subelements": {"py/object": "struct4.Module", "name": "subelements", "fqcn": "ansible.builtin.subelements", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.command": {"py/object": "struct4.Module", "name": "command", "fqcn": "ansible.builtin.command", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.together": {"py/object": "struct4.Module", "name": "together", "fqcn": "ansible.builtin.together", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.user": {"py/object": "struct4.Module", "name": "user", "fqcn": "ansible.builtin.user", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.validate_argument_spec": {"py/object": "struct4.Module", "name": "validate_argument_spec", "fqcn": "ansible.builtin.validate_argument_spec", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.package": {"py/object": "struct4.Module", "name": "package", "fqcn": "ansible.builtin.package", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.fileglob": {"py/object": "struct4.Module", "name": "fileglob", "fqcn": "ansible.builtin.fileglob", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.meta": {"py/object": "struct4.Module", "name": "meta", "fqcn": "ansible.builtin.meta", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.getent": {"py/object": "struct4.Module", "name": "getent", "fqcn": "ansible.builtin.getent", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.fail": {"py/object": "struct4.Module", "name": "fail", "fqcn": "ansible.builtin.fail", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.cron": {"py/object": "struct4.Module", "name": "cron", "fqcn": "ansible.builtin.cron", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.memory": {"py/object": "struct4.Module", "name": "memory", "fqcn": "ansible.builtin.memory", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.host_pinned": {"py/object": "struct4.Module", "name": "host_pinned", "fqcn": "ansible.builtin.host_pinned", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.hostname": {"py/object": "struct4.Module", "name": "hostname", "fqcn": "ansible.builtin.hostname", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.get_url": {"py/object": "struct4.Module", "name": "get_url", "fqcn": "ansible.builtin.get_url", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.unvault": {"py/object": "struct4.Module", "name": "unvault", "fqcn": "ansible.builtin.unvault", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.include_tasks": {"py/object": "struct4.Module", "name": "include_tasks", "fqcn": "ansible.builtin.include_tasks", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}, "ansible.builtin.import_playbook": {"py/object": "struct4.Module", "name": "import_playbook", "fqcn": "ansible.builtin.import_playbook", "collection": "ansible.builtin", "role": "", "defined_in": "", "builtin": true, "used_in": [], "annotations": {}}}, "task_dict": {"{\"path\": \"testdata3/scm_repo/playbooks/ocim-vagrant.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "apt-get update, dist-upgrade and autoremove", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/ocim-vagrant.yml", "options": {"name": "apt-get update, dist-upgrade and autoremove"}, "module_options": {"update_cache": true, "upgrade": "dist", "cache_valid_time": 43200, "autoremove": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/ocim-vagrant.yml"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/ocim-vagrant.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "import_role", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/ocim-vagrant.yml", "options": {}, "module_options": {"name": "ocim", "tasks_from": "vagrant"}, "executable": "ocim", "executable_type": "Role", "fqcn": "ocim", "used_in": ["testdata3/scm_repo/playbooks/ocim-vagrant.yml"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/bootstrap-dedicated.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create ubuntu user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "create ubuntu user"}, "module_options": {"name": "ubuntu", "groups": "adm,sudo", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/bootstrap-dedicated.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "give passwordless sudo privileges to ubuntu user", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "give passwordless sudo privileges to ubuntu user"}, "module_options": {"content": "ubuntu ALL=(ALL) NOPASSWD:ALL\n", "dest": "/etc/sudoers.d/ubuntu_user", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/bootstrap-dedicated.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "generate SSH public key", "module": "", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "generate SSH public key", "local_action": "command ssh-keygen -y -f {{ ansible_ssh_private_key_file }}\n", "register": "common_public_ssh_key"}, "module_options": {}, "executable": "", "executable_type": "Module", "fqcn": "", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/bootstrap-dedicated.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "add SSH authorized key for user ubuntu", "module": "authorized_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "add SSH authorized key for user ubuntu"}, "module_options": {"user": "ubuntu", "key": "{{ common_public_ssh_key.stdout }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "ansible.posix.authorized_key", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/bootstrap-dedicated.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "disable root password", "module": "user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/bootstrap-dedicated.yml", "options": {"name": "disable root password"}, "module_options": {"name": "root", "password": "*", "update_password": "always"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/bootstrap-dedicated.yml"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/wordpress.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "mount /var/www", "module": "mount", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "options": {"name": "mount /var/www"}, "module_options": "name=/var/www src=/dev/vdb1 fstype=ext4 state=mounted", "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/wordpress.yml"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/wordpress.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "chown www-data /var/www", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "options": {"name": "chown www-data /var/www"}, "module_options": "path=/var/www mode=750 owner=www-data group=www-data state=directory", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/wordpress.yml"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/wordpress.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "mkdir /var/www/log", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/wordpress.yml", "options": {"name": "mkdir /var/www/log"}, "module_options": "path=/var/www/log mode=750 state=directory", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/wordpress.yml"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install prerequisites", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Install prerequisites"}, "module_options": {"name": "{{ pyenv_prerequisite_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure that the \"{{ pyenv_home }}\" directory is present and has the right permissions", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Ensure that the \"{{ pyenv_home }}\" directory is present and has the right permissions", "when": "pyenv_create_pyenv_home"}, "module_options": {"path": "{{ pyenv_home }}", "owner": "{{ pyenv_user }}", "group": "{{ pyenv_group }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Clone pyenv", "module": "git", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Clone pyenv"}, "module_options": {"repo": "https://github.com/pyenv/pyenv.git", "dest": "{{ pyenv_root }}", "version": "{{ pyenv_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Clone pyenv-virtualenv", "module": "git", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Clone pyenv-virtualenv"}, "module_options": {"repo": "https://github.com/pyenv/pyenv-virtualenv.git", "dest": "{{ pyenv_root }}/plugins/pyenv-virtualenv", "version": "{{ pyenv_virtualenv_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create shell configuration for pyenv", "module": "blockinfile", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Create shell configuration for pyenv"}, "module_options": {"path": "{{ pyenv_root }}/.pyenvrc", "create": true, "block": "export PYENV_ROOT=\"{{ pyenv_root }}\"\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\nif command -v pyenv 1>/dev/null 2>&1; then\neval \"$(pyenv init -)\"\nfi\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add code to load pyenv configuration in ~/.bashrc", "module": "blockinfile", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Add code to load pyenv configuration in ~/.bashrc"}, "module_options": {"create": true, "path": "{{ pyenv_home }}/.bashrc", "marker": "# {mark} ANSIBLE MANAGED BLOCK load_pyenv_configuration", "block": "source \"{{ pyenv_root }}/.pyenvrc\"\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install the requested python versions", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Install the requested python versions", "with_items": "{{ pyenv_python_versions }}"}, "module_options": "{{ pyenv_root }}/bin/pyenv install -s {{ item }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create a virtualenv environment", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Create a virtualenv environment", "with_items": "{{ pyenv_virtualenv_environments }}"}, "module_options": ". {{ pyenv_root }}/.pyenvrc\npyenv virtualenv -f {{ item.python_version }} {{ item.virtualenv_name }}\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy screen session configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Copy screen session configuration"}, "module_options": {"src": "accounting-screenrc", "dest": "{{ accounting_screenrc_path }}", "owner": "ubuntu", "group": "ubuntu"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "accounting-screen.service", "dest": "/etc/systemd/system/accounting-screen.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Enable the systemd service to start on boot automatically", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Enable the systemd service to start on boot automatically"}, "module_options": {"name": "accounting-screen.service", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Start the systemd service right now", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Start the systemd service right now"}, "module_options": {"name": "accounting-screen.service", "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy nginx site configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "options": {"name": "Copy nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "accounting-nginx.j2", "dest": "/etc/nginx/sites-available/accounting"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Enable nginx site configuration", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "options": {"name": "Enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/accounting", "dest": "/etc/nginx/sites-enabled/accounting", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy Google Crafty service account PEM contents to a file", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Copy Google Crafty service account PEM contents to a file", "become_user": "www-data"}, "module_options": {"content": "{{ GOOGLE_CRAFTY_SERVICE_ACCOUNT_PEM }}", "dest": "{{ www_data_home_dir }}/google-crafty.pem", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Turn PEM file format into PKCS12", "module": "command", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Turn PEM file format into PKCS12", "become_user": "www-data"}, "module_options": "openssl pkcs12 -export -in google-crafty.pem -out {{ accounting_root_dir }}/.p12 -passin pass:notasecret -passout pass:notasecret chdir='{{ www_data_home_dir }}'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Delete unneeded PEM file", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Delete unneeded PEM file"}, "module_options": {"path": "{{ www_data_home_dir }}/google-crafty.pem", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set login shell for user www-data", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Set login shell for user www-data"}, "module_options": {"name": "www-data", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create {{ www_data_home_dir }}", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Create {{ www_data_home_dir }}"}, "module_options": {"path": "{{ www_data_home_dir }}", "owner": "www-data", "group": "www-data", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy shell configuration for user www-data", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Copy shell configuration for user www-data"}, "module_options": {"src": "bashrc", "dest": "{{ www_data_home_dir }}/.bashrc", "owner": "www-data", "group": "www-data"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create directory {{ www_data_home_dir }}/.ssh", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Create directory {{ www_data_home_dir }}/.ssh", "become_user": "www-data"}, "module_options": {"path": "{{ www_data_home_dir }}/.ssh", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Unarchive the wkhtmltopdf .tar.xz file", "module": "unarchive", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Unarchive the wkhtmltopdf .tar.xz file", "become_user": "www-data"}, "module_options": {"src": "{{ wkhtmltopdf_url_path }}", "dest": "{{ www_data_home_dir }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Remove the .tar.xz file", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Remove the .tar.xz file"}, "module_options": {"path": "{{ www_data_home_dir }}/{{ wkhtmltopdf_zipped_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy the binary into the accounting repository root", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Copy the binary into the accounting repository root", "become_user": "www-data"}, "module_options": {"src": "{{ wkhtmltopdf_binary_path }}", "dest": "{{ accounting_root_dir }}/wkhtmltopdf", "mode": 365, "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove the decompressed directory", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Remove the decompressed directory"}, "module_options": {"path": "{{ www_data_home_dir }}/wkhtmltox", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Clone the accounting repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Clone the accounting repository", "become_user": "www-data"}, "module_options": {"repo": "https://github.com/open-craft/accounting.git", "version": "master", "dest": "{{ accounting_root_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04"}, "module_options": {"repo": "ppa:deadsnakes/ppa"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install system dependencies for the accounting service", "module": "command", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install system dependencies for the accounting service"}, "module_options": "make install_system_dependencies chdir=\"{{ accounting_root_dir }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install pew because pipenv requires it", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install pew because pipenv requires it", "become": true}, "module_options": {"name": "pew", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install pipenv to later install python dependencies and virtual environments.", "module": "pip", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install pipenv to later install python dependencies and virtual environments.", "become": true}, "module_options": {"name": "pipenv", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install all python dependencies and the virtual environment.", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install all python dependencies and the virtual environment.", "become_user": "www-data", "environment": {"LC_ALL": "C.UTF-8", "LANG": "C.UTF-8", "PYTHONIOENCODING": "utf-8"}}, "module_options": "pipenv install --python 3.6 chdir=\"{{ accounting_root_dir }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install the configuration/environment file for the accounting service", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install the configuration/environment file for the accounting service", "become_user": "www-data"}, "module_options": {"src": "env.accounting.j2", "dest": "{{ accounting_root_dir }}/.env", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "base.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "accounting.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "wkhtmltopdf.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {"when": "{{ ACCOUNTING_ENV_TOKENS.ENABLE_GOOGLE }}"}, "module_options": "google-integration.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "screen.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Open HTTPS port on the firewall", "module": "ufw", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {"name": "Open HTTPS port on the firewall", "with_items": [443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install system dependencies", "module": "command", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Install system dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}}, "module_options": "make install_system_dependencies", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install the python requirements", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Install the python requirements", "become_user": "{{ www_user }}"}, "module_options": ". \"{{ pyenv_root }}/.pyenvrc\"\npyenv activate opencraft\npip install -r \"{{ opencraft_root_dir }}/requirements.txt\"\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy archived_cleanup script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Copy archived_cleanup script"}, "module_options": {"src": "archived_cleanup.j2", "dest": "{{ opencraft_root_dir }}/bin/archived_cleanup.sh", "owner": "{{ www_user }}", "group": "{{ www_group }}", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add calling management command delete_archived to the crontab", "module": "cron", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Add calling management command delete_archived to the crontab"}, "module_options": {"name": "run delete_archived", "special_time": "weekly", "job": "{{ opencraft_root_dir }}/bin/archived_cleanup.sh >> {{ opencraft_root_dir }}/log/delete_archived.log", "user": "{{ www_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {}, "module_options": "common.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create settings file if it does not exist yet", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create settings file if it does not exist yet", "become_user": "{{ www_user }}"}, "module_options": {"src": "{{ opencraft_root_dir }}/.env.test", "remote_src": true, "dest": "{{ opencraft_root_dir }}/.env", "force": false}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set HUEY_ALWAYS_EAGER to false", "module": "replace", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Set HUEY_ALWAYS_EAGER to false"}, "module_options": {"path": "{{ opencraft_root_dir }}/.env", "regexp": "^HUEY_ALWAYS_EAGER=true$", "replace": "HUEY_ALWAYS_EAGER=false"}, "executable": "replace", "executable_type": "Module", "fqcn": "ansible.builtin.replace", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install javascript dependencies", "module": "shell", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Install javascript dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}, "become_user": "{{ www_user }}"}, "module_options": "DEBIAN_FRONTEND=noninteractive make install_js_dependencies", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install database dependencies", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Install database dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}}, "module_options": "DEBIAN_FRONTEND=noninteractive make install_system_db_dependencies", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Change directory to ~/opencraft on login", "module": "blockinfile", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Change directory to ~/opencraft on login", "become_user": "vagrant"}, "module_options": {"path": "~/.bashrc", "marker": "# {mark} ANSIBLE MANAGED BLOCK activate_virtualenv", "block": "pyenv activate opencraft\ncd ~/opencraft\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {}, "module_options": "echo \"update user set plugin='mysql_native_password' where user='root' and host='localhost'; flush privileges;\" | \\ sudo -H -u root mysql mysql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create Postgres user", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create Postgres user", "become_user": "postgres", "ignore_errors": true}, "module_options": "createuser -d vagrant", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Allow access to postgres from localhost without password", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Allow access to postgres from localhost without password"}, "module_options": {"dest": "/etc/postgresql/9.5/main/pg_hba.conf", "content": "local   all             postgres                                peer\nlocal   all             all                                     trust\nhost    all             all             127.0.0.1/32            trust\nhost    all             all             ::1/128                 trust\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Restart postgres", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Restart postgres"}, "module_options": "name=postgresql state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create postgres database", "module": "command", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create postgres database", "become_user": "vagrant"}, "module_options": "make create_db chdir={{ opencraft_root_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Print SWIFT deprecation warning", "module": "fail", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "Print SWIFT deprecation warning", "ignore_errors": true}, "module_options": {"msg": "SWIFT Backup module is deprecated and will be removed in a future version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "upload tarsnap key", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "upload tarsnap key"}, "module_options": {"src": "tarsnap.key.j2", "dest": "{{ OPENCRAFT_BACKUP_SWIFT_TARSNAP_KEY_LOCATION }}", "owner": "{{ www_user }}", "group": "root"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create backup folders", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "create backup folders", "with_items": ["{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "{{ OPENCRAFT_BACKUP_SWIFT_TARSNAP_CACHE_LOCATION }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ www_user }}", "group": "root", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "mount volume", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "mount volume", "when": "OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE"}, "module_options": {"fstype": "ext4", "state": "mounted", "name": "{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "src": "{{ OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE }}"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "chmod volume", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "chmod volume", "when": "OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE"}, "module_options": {"path": "{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "owner": "{{ www_user }}", "group": "root", "recurse": "yes", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set login shell for user {{ www_user }}", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Set login shell for user {{ www_user }}"}, "module_options": {"name": "{{ www_user }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create {{ www_data_home_dir }}", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Create {{ www_data_home_dir }}"}, "module_options": {"path": "{{ www_data_home_dir }}", "owner": "{{ www_user }}", "group": "{{ www_group }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy shell configuration for user {{ www_user }}", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy shell configuration for user {{ www_user }}"}, "module_options": {"src": "bashrc", "dest": "{{ www_data_home_dir }}/.bashrc", "owner": "{{ www_user }}", "group": "{{ www_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Clone the opencraft repository", "module": "git", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Clone the opencraft repository", "become_user": "{{ www_user }}"}, "module_options": {"repo": "https://github.com/open-craft/opencraft.git", "dest": "{{ opencraft_root_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install the configuration/environment file", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the configuration/environment file", "become_user": "{{ www_user }}", "tags": "ocim-env-file"}, "module_options": {"src": "env.j2", "dest": "{{ opencraft_root_dir }}/.env", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {}, "module_options": "common.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install the venv wrapper script", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the venv wrapper script", "become_user": "{{ www_user }}"}, "module_options": {"src": "venv_exec.j2", "dest": "{{ pyenv_root }}/shims/exec", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create directory {{ www_data_home_dir }}/.ssh", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Create directory {{ www_data_home_dir }}/.ssh", "become_user": "{{ www_user }}"}, "module_options": {"path": "{{ www_data_home_dir }}/.ssh", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install the SSH private key used for deploying instances.", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the SSH private key used for deploying instances.", "become_user": "{{ www_user }}"}, "module_options": {"content": "{{ OPENCRAFT_OPENSTACK_SSH_KEY }}", "dest": "{{ www_data_home_dir }}/.ssh/id_rsa", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Copy screen session configuration", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy screen session configuration"}, "module_options": {"src": "ocim-screenrc", "dest": "{{ opencraft_screenrc_path }}", "owner": "{{ session_user }}", "group": "{{ session_user_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "ocim-screen.service", "dest": "/etc/systemd/system/ocim-screen.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"daemon-reload": true, "name": "ocim-screen.service", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"when": "OPENCRAFT_BACKUP_SWIFT_ENABLED"}, "module_options": "configure-swift-backups.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install system packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install system packages", "become": true}, "module_options": {"update_cache": true, "cache_valid_time": 43200, "name": "{{ required_system_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure {{ servce_group }} service group exists", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure {{ servce_group }} service group exists"}, "module_options": {"name": "{{ service_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure {{ service_user }} service user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure {{ service_user }} service user"}, "module_options": {"name": "{{ service_user }}", "comment": "{{ service_name }} service user", "group": "{{ service_group }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create service directories", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create service directories", "become": true, "with_items": "{{ service_directories }}"}, "module_options": {"path": "{{ item }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create pre-backup script", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create pre-backup script", "become": true}, "module_options": {"src": "pre_backup.sh.j2", "dest": "{{ service_bin_dir }}/pre_backup", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 484, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create service initialization script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create service initialization script", "become": true}, "module_options": {"src": "init_service.py.j2", "dest": "{{ service_bin_dir }}/init_service.py", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Clone {{ service_name }} repository", "module": "git", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Clone {{ service_name }} repository", "become": true, "become_user": "{{ service_user }}"}, "module_options": {"repo": "{{ service_git_repo }}", "version": "{{ service_git_revision }}", "dest": "{{ service_install_dir }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create virtualenv for {{ service_name }}", "module": "pip", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create virtualenv for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "requirements": "{{ service_install_dir }}/requirements.txt", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install {{ service_name }} service", "module": "pip", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install {{ service_name }} service", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "name": ".", "editable": true}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create dotenv file for {{ service_name }}", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create dotenv file for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"src": "dotenv.j2", "dest": "{{ service_dotenv_path }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 416, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Ensure .bashrc set for {{ service_name }}", "module": "blockinfile", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure .bashrc set for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"dest": "/home/{{ service_user }}/.bashrc", "block": "export {{ service_name | upper }}_DOTENV_PATH={{ service_dotenv_path }}\nsource {{ service_virtualenv_dir }}/bin/activate\ncd {{ service_install_dir }}\n", "backup": true, "state": "present"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Collect static assets for {{ service_name }}", "module": "django_manage", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Collect static assets for {{ service_name }}", "become": true, "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "collectstatic"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Run migrations for {{ service_name }}", "module": "django_manage", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Run migrations for {{ service_name }}", "become": true, "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "migrate"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Initialize service for {{ service_name }}", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Initialize service for {{ service_name }}", "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": ". {{ service_virtualenv_dir }}/bin/activate\ncd {{ service_install_dir }}\npython manage.py shell < {{ service_bin_dir }}/init_service.py\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Create LTI consumer pair", "module": "django_manage", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create LTI consumer pair", "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}", "when": "lti_create_consumer_key_pair is defined and lti_create_consumer_key_pair"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "create_consumer_pair --consumer '{{ annotation_db_key }}' --secret '{{ annotation_db_secret }}' --expire_in_weeks 260"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Ensure cronjob exists to clear sessions", "module": "cron", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure cronjob exists to clear sessions"}, "module_options": {"name": "clear Django sessions", "user": "{{ service_user }}", "hour": "7", "minute": "0", "state": "present", "job": "{{ service_name | upper }}_DOTENV_PATH={{ service_dotenv_path }} {{ service_virtualenv_dir }}/bin/python {{ service_install_dir }}/manage.py clearsessions >> {{ service_data_dir }}/clearsessions.log 2>&1\n"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Install gunicorn in {{ service_name }} virtualenv", "module": "pip", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install gunicorn in {{ service_name }} virtualenv", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "name": "gunicorn==20.1.0", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Create gunicorn configuration", "module": "template", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create gunicorn configuration", "become_user": "{{ service_user }}"}, "module_options": {"src": "start_gunicorn.j2", "dest": "{{ service_bin_dir }}/start_gunicorn", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Ensure supervisor service is running", "module": "service", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure supervisor service is running"}, "module_options": {"name": "supervisor", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create supervisor config for {{ service_name }} service", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create supervisor config for {{ service_name }} service"}, "module_options": {"src": "{{ 'supervisor.conf.asgi.j2' if websockets is defined and websockets.service_daphne is defined else 'supervisor.conf.wsgi.j2' }}", "dest": "/etc/supervisor/conf.d/{{ service_name }}.conf", "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create socket direcotry", "module": "file", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create socket direcotry", "when": "websockets is defined and websockets.service_daphne is defined"}, "module_options": {"path": "{{ websockets.service_daphne.socket_dir }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Restart supervisor service", "module": "service", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Restart supervisor service"}, "module_options": {"name": "supervisor", "state": "restarted", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Set worker_connection in /etc/nginx/nginx.conf", "module": "lineinfile", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Set worker_connection in /etc/nginx/nginx.conf", "when": "websockets.nginx is defined"}, "module_options": {"path": "/etc/nginx/nginx.conf", "regexp": "worker_connections.*", "line": "worker_connections {{ websockets.nginx.worker_connections }};", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Set worker_rlimit_nofile in /etc/nginx/nginx.conf", "module": "lineinfile", "index": 23, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Set worker_rlimit_nofile in /etc/nginx/nginx.conf", "when": "websockets.nginx is defined"}, "module_options": {"path": "/etc/nginx/nginx.conf", "regexp": "worker_rlimit_nofile.*", "line": "worker_rlimit_nofile {{ websockets.nginx.worker_rlimit_nofile }};", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Ensure soft nproc is set in /etc/security/limits.conf", "module": "lineinfile", "index": 24, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure soft nproc is set in /etc/security/limits.conf", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/security/limits.conf", "regexp": "^\\*[ \\t]+soft[ \\t]+nproc[ \\t]+{{ websockets.system_limits_conf.soft_nproc }}", "line": "* soft nproc {{ websockets.system_limits_conf.soft_nproc }}", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Ensure soft nofile is set in /etc/security/limits.conf", "module": "lineinfile", "index": 25, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure soft nofile is set in /etc/security/limits.conf", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/security/limits.conf", "regexp": "^\\*[ \\t]+soft[ \\t]+nofile[ \\t]+{{ websockets.system_limits_conf.soft_nofile }}", "line": "* soft nofile {{ websockets.system_limits_conf.soft_nofile }}", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Ensure /etc/pam.d/common-session is configured", "module": "lineinfile", "index": 26, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure /etc/pam.d/common-session is configured", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/pam.d/common-session", "regexp": "session[ \\t]+required[ \\t]+pam_limits.so", "line": "session required pam_limits.so", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create link-shortener group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create link-shortener group"}, "module_options": {"name": "link-shortener"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create link-shortener user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create link-shortener user"}, "module_options": {"name": "link-shortener", "group": "link-shortener", "home": "{{ LINK_SHORTENER_HOME }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create ~/.ssh directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create ~/.ssh directory"}, "module_options": {"path": "{{ LINK_SHORTENER_HOME }}/.ssh", "state": "directory", "owner": "link-shortener", "group": "link-shortener"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "copy the deploy key for accessing the link shortener repository", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "copy the deploy key for accessing the link shortener repository"}, "module_options": {"content": "{{ LINK_SHORTENER_DEPLOY_KEY }}", "dest": "{{ LINK_SHORTENER_HOME }}/.ssh/id_rsa", "owner": "link-shortener", "group": "link-shortener", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "check out the link shortener git repository", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "check out the link shortener git repository", "become_user": "link-shortener"}, "module_options": {"repo": "{{ LINK_SHORTENER_REPO }}", "version": "{{ LINK_SHORTENER_BRANCH }}", "dest": "{{ LINK_SHORTENER_HOME }}/link-shortener", "ssh_opts": "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o CheckHostIP=no"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "create symlink to the nginx config", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create symlink to the nginx config", "notify": ["reload nginx"]}, "module_options": {"src": "{{ LINK_SHORTENER_HOME }}/link-shortener/nginx-configuration", "dest": "/etc/nginx/sites-available/link-shortener", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "create symlink to SSL certificate", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create symlink to SSL certificate"}, "module_options": {"src": "{{ LINK_SHORTENER_HOME }}/link-shortener/link-shortener-cert.pem", "dest": "/etc/ssl/certs/link-shortener-cert.pem", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "copy SSL private key", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "copy SSL private key"}, "module_options": {"content": "{{ LINK_SHORTENER_SSL_PRIVATE_KEY }}", "dest": "/etc/ssl/private/link-shortener-key.pem", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/link-shortener", "dest": "/etc/nginx/sites-enabled/link-shortener", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ensure /etc/newrelic-infra.yml is present", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure /etc/newrelic-infra.yml is present"}, "module_options": {"src": "newrelic-infra.yml.j2", "dest": "/etc/newrelic-infra.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ensure newrelic apt repository gpg key is added", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic apt repository gpg key is added"}, "module_options": {"url": "https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ensure newrelic apt repository is registered", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic apt repository is registered"}, "module_options": {"repo": "deb [arch=amd64] https://download.newrelic.com/infrastructure_agent/linux/apt xenial main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ensure newrelic infra plugin is installed", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic infra plugin is installed"}, "module_options": {"name": "newrelic-infra", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "apt-transport-https"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/7.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install Kibana", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install Kibana"}, "module_options": {"name": "kibana"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Configure Kibana directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Configure Kibana directories", "with_items": [{"path": "{{ kibana_config_dir }}", "owner": "root"}, {"path": "{{ kibana_data_dir }}", "owner": "kibana"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "kibana", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ kibana_config_dir }}/elasticsearch-ca.pem", "owner": "kibana", "group": "kibana", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Configure Kibana", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Configure Kibana", "notify": "restart kibana"}, "module_options": {"src": "kibana.yml.j2", "dest": "/etc/kibana/kibana.yml", "group": "kibana"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure Kibana is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Ensure Kibana is started and enabled at boot"}, "module_options": {"name": "kibana", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Allow web ports on firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Allow web ports on firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy nginx global configuration", "module": "synchronize", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Copy nginx global configuration"}, "module_options": "src=\"global/\" dest=/etc/nginx/global checksum=yes delete=yes owner=no group=no", "executable": "synchronize", "executable_type": "Module", "fqcn": "ansible.posix.synchronize", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "install passlib for htpasswd generation", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "install passlib for htpasswd generation"}, "module_options": {"name": "python3-passlib"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "generate htpasswd file", "module": "htpasswd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "generate htpasswd file"}, "module_options": {"path": "{{ NGINX_WP_AUTH_HTPASSWD_PATH }}", "username": "{{ NGINX_WP_AUTH_USERNAME }}", "password": "{{ NGINX_WP_AUTH_PASSWORD }}"}, "executable": "htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "add auth basic credentials to global configuration", "module": "command", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "add auth basic credentials to global configuration"}, "module_options": "sed -i '/try_files $uri $uri\\/ \\/index.php?$args;/a auth_basic \"Restricted\";\\nauth_basic_user_file {{ NGINX_WP_AUTH_HTPASSWD_PATH }};' /etc/nginx/global/wordpress.conf", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add site nginx configurations", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Add site nginx configurations", "with_items": [{"template": "wordpress", "hostname": "{{ LANDING_SITE_HOSTNAME }}"}, {"template": "maintenance", "hostname": "{{ MAINTENANCE_SITE_HOSTNAME }}"}, {"template": "default", "hostname": "{{ DEFAULT_SITE_HOSTNAME }}"}]}, "module_options": {"src": "../templates/{{ item.template }}-nginx.j2", "dest": "/etc/nginx/sites-available/{{ item.hostname }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Enable nginx site configurations", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Enable nginx site configurations", "with_items": ["{{ LANDING_SITE_HOSTNAME }}", "{{ MAINTENANCE_SITE_HOSTNAME }}", "{{ DEFAULT_SITE_HOSTNAME }}"], "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/{{ item }}.conf", "dest": "/etc/nginx/sites-enabled/{{ item }}.conf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Install dependencies", "with_items": ["unzip", "mysql-client", "build-essential", "python3-dev", "libmysqlclient-dev", "python3-mysqldb", "python3-pip"]}, "module_options": {"name": "{{ item }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install the Python MySQL module", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Install the Python MySQL module"}, "module_options": {"name": "mysqlclient"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure .ssh directory exists for www-data user", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Ensure .ssh directory exists for www-data user"}, "module_options": {"path": "/var/www/.ssh/", "state": "directory", "owner": "www-data", "group": "www-data"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create key file", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Create key file", "no_log": true}, "module_options": {"dest": "/var/www/.ssh/id_rsa", "content": "{{ WORDPRESS_THEME_DEPLOY_KEY }}", "owner": "www-data", "group": "www-data", "mode": "0600"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Evaluating the authentication agent & adding the key...", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Evaluating the authentication agent & adding the key..."}, "module_options": "eval \"$(ssh-agent)\"\nssh-add /var/www/.ssh/id_rsa\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Copy database dump", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Copy database dump", "when": "WORDPRESS_DATABASE_RESTORE"}, "module_options": "cp {{ WORDPRESS_DATABASE_RESTORE_BACKUP_PATH }} /tmp/db_dump.sql", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Restore database backup", "module": "mysql_db", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Restore database backup", "when": "WORDPRESS_DATABASE_RESTORE"}, "module_options": {"name": "{{ WORDPRESS_DATABASE_NAME }}", "login_user": "{{ WORDPRESS_DATABASE_USER }}", "login_password": "{{ WORDPRESS_DATABASE_PASSWORD }}", "login_host": "{{ WORDPRESS_DATABASE_HOST }}", "state": "import", "target": "/tmp/db_dump.sql"}, "executable": "mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"when": "WORDPRESS_DEPLOY", "notify": ["reload nginx"]}, "module_options": "deploy.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Copy content backup", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Copy content backup"}, "module_options": "cp {{ WORDPRESS_UPLOADS_RESTORE_BACKUP_PATH }} /tmp/uploads.zip", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Extract content backup", "module": "unarchive", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Extract content backup"}, "module_options": {"src": "/tmp/uploads.zip", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"when": "WORDPRESS_FULL_RESTORE", "notify": ["reload nginx"]}, "module_options": "restore.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy full backup", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "options": {"name": "Copy full backup"}, "module_options": {"src": "{{ WORDPRESS_FULL_BACKUP_PATH }}", "dest": "/tmp/uploads.zip"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Extract full backup", "module": "unarchive", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "options": {"name": "Extract full backup"}, "module_options": {"src": "/tmp/uploads.zip", "dest": "/var/www/", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create server directories", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Create server directories", "with_items": ["{{ LANDING_SITE_HOSTNAME }}", "{{ DEFAULT_SITE_HOSTNAME }}", "{{ MAINTENANCE_SITE_HOSTNAME }}"]}, "module_options": {"path": "/var/www/{{ item }}", "state": "directory", "owner": "www-data", "group": "www-data", "mode": 509}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Download and extract latest version of wordpress", "module": "unarchive", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Download and extract latest version of wordpress"}, "module_options": {"src": "https://wordpress.org/latest.zip", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Move files to correct directory", "module": "shell", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Move files to correct directory", "become_user": "www-data"}, "module_options": "cp -r /var/www/{{ LANDING_SITE_HOSTNAME }}/wordpress/. /var/www/{{ LANDING_SITE_HOSTNAME }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Create configuration file"}, "module_options": {"src": "../templates/wp-config.php.j2", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-config.php", "owner": "www-data", "group": "www-data", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Download and install plugins from list", "module": "unarchive", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Download and install plugins from list", "with_items": "{{ WORDPRESS_INSTALL_PLUGINS }}"}, "module_options": {"src": "{{ item }}", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/plugins", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Clone compiled theme", "module": "git", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Clone compiled theme", "become_user": "www-data", "when": "WORDPRESS_THEME_DEPLOY"}, "module_options": {"repo": "{{ WORDPRESS_THEME_REPO }}", "version": "{{ WORDPRESS_THEME_VERSION }}", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/themes/opencraftv2", "accept_hostkey": true, "force": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml", "options": {}, "module_options": "wordpress.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create the WordPress deployment and the document root directories", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Create the WordPress deployment and the document root directories", "with_items": ["{{ WORDPRESS_DOCKER_COMPOSE_DIR }}", "{{ WORDPRESS_DOCUMENT_ROOT }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install the docker-compose file"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ WORDPRESS_DOCKER_COMPOSE_DIR }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install the docker-compose environment configuration file", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install the docker-compose environment configuration file"}, "module_options": {"src": "wordpress.env.j2", "dest": "{{ WORDPRESS_DOCKER_COMPOSE_ENV_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install FPM's upload configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install FPM's upload configuration file"}, "module_options": {"src": "uploads.ini.j2", "dest": "{{ WORDPRESS_FPM_UPLOAD_SETTINGS_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Start the app with docker-compose", "module": "docker_service", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Start the app with docker-compose"}, "module_options": {"project_src": "{{ WORDPRESS_DOCKER_COMPOSE_DIR }}", "pull": true, "debug": true}, "executable": "docker_service", "executable_type": "Module", "fqcn": "community.general.docker_service", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install nginx", "module": "import_role", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install nginx"}, "module_options": {"name": "common-server-init", "tasks_from": "nginx"}, "executable": "common-server-init", "executable_type": "Role", "fqcn": "common-server-init", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Add nginx site configuration", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Add nginx site configuration"}, "module_options": {"src": "nginx.conf.j2", "dest": "/etc/nginx/sites-available/{{ WORDPRESS_SITE_DOMAIN }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Enable nginx site configuration", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Enable nginx site configuration"}, "module_options": {"src": "/etc/nginx/sites-available/{{ WORDPRESS_SITE_DOMAIN }}.conf", "dest": "/etc/nginx/sites-enabled/{{ WORDPRESS_SITE_DOMAIN }}.conf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Reload nginx", "module": "service", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Reload nginx"}, "module_options": {"name": "nginx", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "openjdk-8-jdk"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/7.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install Logstash", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Logstash"}, "module_options": {"name": "logstash"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install Logstash TLS details", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Logstash TLS details", "with_items": [{"content": "{{ logstash_ca_cert }}", "dest": "{{ logstash_config_dir }}/ca.crt"}, {"content": "{{ logstash_cert }}", "dest": "{{ logstash_config_dir }}/logstash.crt"}, {"content": "{{ logstash_key }}", "dest": "{{ logstash_config_dir }}/logstash.key"}], "no_log": true, "notify": "restart logstash"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}", "mode": 288, "group": "logstash"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ logstash_config_dir }}/elasticsearch-ca.pem", "owner": "logstash", "group": "logstash", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Configure Logstash", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Configure Logstash", "notify": "restart logstash"}, "module_options": {"src": "logstash.conf.j2", "dest": "{{ logstash_config_dir }}/conf.d/logstash.conf", "group": "logstash"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure Logstash is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Ensure Logstash is started and enabled at boot"}, "module_options": {"name": "logstash", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Open Logstash ports on the firewall", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Open Logstash ports on the firewall", "with_items": ["tcp", "udp"]}, "module_options": {"rule": "allow", "port": 5044, "proto": "{{ item }}"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install build dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "install build dependencies", "with_items": ["libssl-dev", "libjemalloc-dev", "build-essential"]}, "module_options": {"name": "{{item}}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "open redis port on the firewall", "module": "ufw", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "open redis port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ redis_port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "add redis backup script", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "add redis backup script"}, "module_options": {"src": "{{ REDIS_BACKUP_COMMAND }}", "dest": "{{ REDIS_SCRIPTS_DIR }}/{{ REDIS_BACKUP_COMMAND }}", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "apt-transport-https"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Elastic apt repository pin", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic apt repository pin"}, "module_options": {"src": "elastic.preferences.j2", "dest": "/etc/apt/preferences.d/artifacts_elastic_co_packages_6_x_apt"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/6.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install Filebeat", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat"}, "module_options": {"name": "filebeat"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install Filebeat TLS details", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat TLS details", "with_items": [{"content": "{{ filebeat_ca_cert }}", "dest": "{{ filebeat_config_dir }}/ca.crt"}, {"content": "{{ filebeat_cert }}", "dest": "{{ filebeat_config_dir }}/filebeat.crt"}, {"content": "{{ filebeat_key }}", "dest": "{{ filebeat_config_dir }}/filebeat.key"}], "no_log": true, "notify": "restart filebeat"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install Filebeat configuration", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat configuration", "notify": "restart filebeat"}, "module_options": {"src": "filebeat.yml.j2", "dest": "{{ filebeat_config_dir }}/filebeat.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure Filebeat is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Ensure Filebeat is started and enabled at boot"}, "module_options": {"name": "filebeat", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ FORWARD_MAIL_OS_PACKAGES }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "template postfix", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template postfix", "notify": ["restart postfix"]}, "module_options": {"src": "postfix.conf", "dest": "/etc/postfix/main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "template aliases", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template aliases", "register": "postfix_aliases", "notify": ["restart postfix"]}, "module_options": {"src": "aliases", "dest": "/etc/aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "update aliases", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "update aliases", "when": "postfix_aliases.changed"}, "module_options": "newaliases", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "template password", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template password", "register": "postfix_password", "notify": ["restart postfix"]}, "module_options": {"src": "sasl_passwd", "dest": "/etc/postfix/sasl_passwd", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "run postmap on sasl password", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "run postmap on sasl password", "when": "postfix_password.changed"}, "module_options": "postmap /etc/postfix/sasl_passwd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "template canonical", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template canonical", "register": "postfix_canonical", "notify": ["restart postfix"]}, "module_options": {"src": "canonical", "dest": "/etc/postfix/canonical"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "run postmap on canonical file", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "run postmap on canonical file", "when": "postfix_canonical.changed"}, "module_options": "postmap /etc/postfix/canonical", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "create server CA file", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "create server CA file", "notify": ["restart postfix"]}, "module_options": {"dest": "/etc/postfix/cacert.pem", "content": "{{ FORWARD_MAIL_SERVER_CERTIFICATE }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "mailman3 packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "mailman3 packages", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"name": ["mailman3-full"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "postfix packages", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "postfix packages", "notify": ["reload postfix"]}, "module_options": {"name": ["postfix"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Mailman3 mailman.cfg", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman.cfg", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman.cfg.j2", "dest": "/etc/mailman3/mailman.cfg"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Mailman3 mailman-web.py", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman-web.py", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman-web.py.j2", "dest": "/etc/mailman3/mailman-web.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Mailman3 mailman-hyperkitty.cfg", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman-hyperkitty.cfg", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman-hyperkitty.cfg.j2", "dest": "/etc/mailman3/mailman-hyperkitty.cfg"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Mailman3 web database migrations up to date", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 web database migrations up to date", "become_user": "www-data", "register": "mailman3_web_migrations", "changed_when": "'No migrations to apply' not in mailman3_web_migrations.stdout"}, "module_options": "/usr/share/mailman3-web/manage.py migrate", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Allow 443 tcp port for mailman3 web (nginx reverse proxy)", "module": "ufw", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow 443 tcp port for mailman3 web (nginx reverse proxy)"}, "module_options": {"rule": "allow", "port": "443", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Allow tcp port 25 for SMTP", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 25 for SMTP"}, "module_options": {"rule": "allow", "port": "25", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Allow tcp port 465 for SMTPS", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 465 for SMTPS"}, "module_options": {"rule": "allow", "port": "465", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Allow tcp port 587 for MSA", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 587 for MSA"}, "module_options": {"rule": "allow", "port": "587", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Mailman3 web nginx proxy config", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 web nginx proxy config", "notify": ["reload nginx"]}, "module_options": {"src": "mailman3-nginx-proxy.conf.j2", "dest": "/etc/nginx/sites-available/mailman3"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Mailman3 nginx proxy config sites-enabled", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 nginx proxy config sites-enabled", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/mailman3", "dest": "/etc/nginx/sites-enabled/mailman3", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Postfix transport maps", "module": "template", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix transport maps", "notify": ["postmap transport", "reload postfix"]}, "module_options": {"src": "postfix-transport.j2", "dest": "/etc/postfix/transport"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Postfix header check maps", "module": "template", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix header check maps", "when": "OPENCRAFT_HEADER_TOKEN", "notify": ["postmap header_checks", "reload postfix"]}, "module_options": {"src": "postfix-header-checks.j2", "dest": "/etc/postfix/header_checks"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Postfix aliases", "module": "template", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix aliases", "notify": ["newaliases"]}, "module_options": {"src": "postfix-aliases.j2", "dest": "/etc/aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Postfix is configured", "module": "template", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix is configured", "notify": "reload postfix"}, "module_options": {"src": "postfix-main.cf.j2", "dest": "/etc/postfix/main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "copy nginx default configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "copy nginx default configuration", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-default-server.j2", "dest": "/etc/nginx/sites-available/common-server"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/common-server", "dest": "/etc/nginx/sites-enabled/common-server", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "reload nginx if required", "module": "meta", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "reload nginx if required"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "open HTTP port on the firewall", "module": "ufw", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "open HTTP port on the firewall"}, "module_options": {"rule": "allow", "port": 80, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Remove certbot apt package if installed", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Remove certbot apt package if installed", "with_items": ["python-certbot-nginx", "certbot"]}, "module_options": {"name": "{{ item }}", "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install snapd", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Install snapd"}, "module_options": {"name": "snapd"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install certbot snap", "module": "command", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Install certbot snap"}, "module_options": "snap install certbot --classic", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create Certbot webroot directory", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create Certbot webroot directory"}, "module_options": {"path": "/var/www/certbot", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create Certbot deploy hooks directory", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create Certbot deploy hooks directory"}, "module_options": {"path": "/etc/letsencrypt/renewal-hooks/deploy", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Copy the Certbot deploy hook to restart nginx on renewal", "module": "copy", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Copy the Certbot deploy hook to restart nginx on renewal"}, "module_options": {"src": "restart-nginx.sh", "dest": "/etc/letsencrypt/renewal-hooks/deploy/restart-nginx.sh", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Disable systemd timer", "module": "systemd", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Disable systemd timer"}, "module_options": {"name": "snap.certbot.renew.timer", "state": "stopped", "enabled": false}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create cron job to periodically renew certificates", "module": "cron", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create cron job to periodically renew certificates"}, "module_options": {"name": "certbot renew", "user": "root", "job": "perl -e 'sleep int(rand(43200))' && /snap/bin/certbot -q renew", "minute": "0", "hour": "*/12", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Set MAILTO variable for certbot renew cron job", "module": "cron", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Set MAILTO variable for certbot renew cron job"}, "module_options": {"name": "MAILTO", "env": true, "job": "{{ CERTBOT_RENEW_OPS_EMAIL }}", "user": "root", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "generate SSL certificate with certbot", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "generate SSL certificate with certbot", "args": {"creates": "/etc/letsencrypt/live/{{ CERTBOT_DOMAIN_NAME }}/fullchain.pem"}}, "module_options": "certbot certonly --webroot --webroot-path /var/www/certbot --domain {{ CERTBOT_DOMAIN_NAME }} {% for domain in CERTBOT_ADDITIONAL_DOMAINS %} --domain {{ domain }} {% endfor %} --email {{ CERTBOT_OPS_EMAIL }} --non-interactive --agree-tos", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04", "module": "apt_repository", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04"}, "module_options": {"repo": "ppa:deadsnakes/ppa"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Download Python3.6", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download Python3.6"}, "module_options": {"name": "python3.6"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Download pip3.6", "module": "shell", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download pip3.6"}, "module_options": {"cmd": "curl https://bootstrap.pypa.io/get-pip.py | sudo -H python3.6"}, "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install pipenv to later install python dependencies and virtual environments.", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Install pipenv to later install python dependencies and virtual environments.", "become": true}, "module_options": {"name": "pipenv", "executable": "pip3.6"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Download cert-manager", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download cert-manager"}, "module_options": {"repo": "https://github.com/open-craft/cert-manager", "dest": "{{ cert_manager_path }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install cert-manager requirements", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Install cert-manager requirements", "args": {"chdir": "{{ cert_manager_path }}"}}, "module_options": "pipenv install --ignore-pipfile", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Copy over cert-manager script and service files", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Copy over cert-manager script and service files", "with_items": [{"src": "cert-manager.sh", "dest": "/usr/local/sbin/cert-manager.sh", "mode": "0755"}, {"src": "cert-manager.service", "dest": "/lib/systemd/system/cert-manager.service", "mode": "0644"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Copy the deploy_cert.sh script template", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Copy the deploy_cert.sh script template"}, "module_options": {"src": "deploy_cert.sh", "dest": "/usr/local/sbin/deploy_cert.sh", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Enable and start the cert-manager service", "module": "systemd", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Enable and start the cert-manager service"}, "module_options": {"daemon_reload": true, "enabled": true, "state": "restarted", "name": "cert-manager"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Open HTTP and HTTPS port on the firewall", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Open HTTP and HTTPS port on the firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy Vault policies to the server", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml", "options": {"name": "Copy Vault policies to the server", "with_items": "{{ vault_policies }}"}, "module_options": {"content": "{{ item.policy }}", "dest": "{{ vault_policy_dir }}/{{ item.name }}.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/vault-policy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Write Vault policies", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml", "options": {"name": "Write Vault policies", "with_items": "{{ vault_policies }}", "changed_when": false, "environment": "{{ vault_env_policy }}"}, "module_options": "vault policy write \\\n  {{ item.name }} \\\n  {{ vault_policy_dir }}/{{ item.name }}.json\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault-policy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install packages for catchpy", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "Install packages for catchpy", "become": true, "vars": {"packages": ["libapache2-mod-wsgi-py3", "postgresql", "postgresql-contrib", "libpq-dev", "python3-dev", "python3-pip", "python3-setuptools"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install psycopg2", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "Install psycopg2", "become": true}, "module_options": {"name": "psycopg2"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ensure database is created", "module": "postgresql_db", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure database is created", "become": true, "become_user": "postgres"}, "module_options": "name={{catchpy_dbname}}", "executable": "postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ensure user has access to database", "module": "postgresql_user", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure user has access to database", "become": true, "become_user": "postgres"}, "module_options": "db={{catchpy_dbname}} name={{catchpy_dbuser}} password={{catchpy_dbpassword}} priv=ALL", "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "ensure user does not have unnecessary privilege", "module": "postgresql_user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure user does not have unnecessary privilege", "become": true, "become_user": "postgres"}, "module_options": "name={{catchpy_dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB", "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "catchpy-pre-backup.sh", "dest": "/usr/local/sbin/catchpy-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "stat", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"register": "app_path"}, "module_options": "path={{ catchpy_app_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "clone repository and checkout correct version", "module": "git", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "clone repository and checkout correct version", "become": true, "when": "app_path.stat.exists == False"}, "module_options": {"repo": "{{ catchpy_app_repository }}", "dest": "{{ catchpy_app_path }}", "version": "{{ catchpy_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "change owner", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "change owner", "become": true}, "module_options": {"path": "{{ catchpy_app_path }}", "owner": "www-data", "group": "www-data", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "install python requirements", "module": "pip", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "install python requirements", "become": true}, "module_options": {"requirements": "{{ catchpy_app_path}}/requirements.txt", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "get settings from template", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "get settings from template", "become": true, "become_user": "www-data"}, "module_options": {"src": "prod.py.j2", "dest": "{{ catchpy_app_path }}/catchpy/settings/prod.py", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "setup django database", "module": "command", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "setup django database", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py migrate --noinput", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "collect django static", "module": "command", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "collect django static", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py collectstatic --noinput", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "create admin superuser", "module": "command", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "create admin superuser", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py create_user --username {{ catchpy_super_user }} --password {{ catchpy_super_pass }} --is_admin", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "disable default site", "module": "file", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "disable default site", "become": true}, "module_options": {"state": "absent", "path": "/etc/apache2/sites-enabled/000-default.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "make sure mod_wsgi is present", "module": "apache2_module", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "make sure mod_wsgi is present", "become": true}, "module_options": {"state": "present", "name": "wsgi"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "get apache conf from template", "module": "template", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "get apache conf from template", "become": true}, "module_options": {"src": "apache2.conf.j2", "dest": "/etc/apache2/sites-enabled/catchpy.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "ensure apache reload its configuration", "module": "service", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure apache reload its configuration", "become": true}, "module_options": {"name": "apache2", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install packages for tarsnapper", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "Install packages for tarsnapper", "vars": {"packages": ["python3-dev", "python3-pip", "python3-setuptools"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install gnu parallel", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install gnu parallel"}, "module_options": {"name": "parallel"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create dirs", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create dirs"}, "module_options": {"name": "/etc/tarsnap", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "upload keys", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "upload keys", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"src": "tarsnap.key", "dest": "/etc/tarsnap/{{ item.name }}.key", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create cache dirs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create cache dirs", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"name": "/var/cache/tarsnap/{{ item.name }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "install tarsnapper", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install tarsnapper"}, "module_options": "pip install tarsnapper==0.5.0", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "install pruner scripts", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install pruner scripts", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"src": "run-tarsnapper.sh", "dest": "/usr/local/sbin/tarsnap-{{ item.name }}.sh", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "create log dir", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create log dir"}, "module_options": {"name": "{{ BACKUP_PRUNER_LOG_DIR }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "add logrotate for individual pruner logs", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add logrotate for individual pruner logs"}, "module_options": {"src": "logrotate.conf", "dest": "/etc/logrotate.d/backup-pruner", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "add parallel pruner script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add parallel pruner script"}, "module_options": {"src": "backup-pruner.sh", "dest": "{{ BACKUP_PRUNER_SCRIPT }}", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "add backup pruner cron", "module": "cron", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add backup pruner cron"}, "module_options": {"name": "backup pruner", "minute": 40, "hour": "6,18", "job": "{{ BACKUP_PRUNER_SCRIPT }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb [arch=amd64] https://packages.elastic.co/curator/5/debian stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install Curator", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator"}, "module_options": {"name": "elasticsearch-curator"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create Curator config directory", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator config directory"}, "module_options": {"path": "{{ curator_config_dir }}", "state": "directory", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create Curator system group", "module": "group", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator system group"}, "module_options": {"name": "{{ curator_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create Curator system user", "module": "user", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator system user"}, "module_options": {"name": "{{ curator_user }}", "group": "{{ curator_group }}", "home": "{{ curator_config_dir }}", "system": true, "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates", "when": "elasticsearch_ca is defined"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ curator_config_dir }}/elasticsearch-ca.pem", "owner": "{{ curator_user }}", "group": "{{ curator_group }}", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install Curator configuration files", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator configuration files", "with_items": ["action.yml", "config.yml"]}, "module_options": {"src": "{{ item }}.j2", "dest": "{{ curator_config_dir }}/{{ item }}", "owner": "{{ curator_user }}", "group": "{{ curator_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Change Curator home owner", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Change Curator home owner"}, "module_options": {"path": "{{ curator_config_dir }}", "owner": "{{ curator_user }}", "group": "{{ curator_group }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Add curator elasticsearch role and user", "module": "include_tasks", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add curator elasticsearch role and user", "vars": {"elasticsearch_create_roles": [{"name": "curator_writer", "permissions": "{\n  \"cluster\" : [\n    \"monitor\",\n  ],\n  \"indices\" : [\n    {\n      \"names\" : [\n        \"{{ curator_delete_indices_prefix }}*\"\n      ],\n      \"privileges\" : [\n        \"manage\",\n        \"delete_index\",\n        \"delete\",\n        \"write\",\n        \"read\"\n      ],\n      \"allow_restricted_indices\" : false\n    }\n  ],\n  \"applications\" : [],\n  \"run_as\" : [],\n  \"metadata\" : {\n    \"version\" : 1\n  },\n  \"transient_metadata\" : {\n    \"enabled\" : true\n  }\n}"}], "elasticsearch_create_users": [{"username": "{{ curator_elasticsearch_username }}", "password": "{{ curator_elasticsearch_password }}", "roles": ["curator_writer"]}]}}, "module_options": "roles/elasticsearch/tasks/create_user_roles.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Install Curator cron job", "module": "cron", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator cron job"}, "module_options": {"name": "Delete {{ curator_delete_indices_prefix }}* indices older than {{ curator_delete_indices_days }} days", "job": "curator --config {{ curator_config_dir }}/config.yml {{ curator_config_dir }}/action.yml", "special_time": "daily", "user": "{{ curator_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fetch backend map from load balancer", "module": "slurp", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Fetch backend map from load balancer", "register": "backend_map"}, "module_options": {"src": "/etc/haproxy/backend.map"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Parse backend map for matching domains", "module": "set_fact", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Parse backend map for matching domains"}, "module_options": {"backend_matched_domains": "{{ (backend_map['content'] | b64decode).split('\n') | map('regex_replace', '^(\\S+)\\s+\\S+$', '\\1') | select('search', maintenance_base_domain) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Insert entries into the HAProxy maintenance map", "module": "lineinfile", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Insert entries into the HAProxy maintenance map", "loop": "{{ backend_matched_domains }}", "when": "backend_matched_domains", "notify": "reload haproxy"}, "module_options": {"path": "/etc/haproxy/maint.map", "line": "{{ item }} {{ maintenance_type }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "These domains were placed into maintenance mode", "module": "debug", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "These domains were placed into maintenance mode"}, "module_options": "msg=\"{{ backend_matched_domains }}\"", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Download HAProxy exporter", "module": "unarchive", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Download HAProxy exporter"}, "module_options": {"src": "{{ haproxy_exporter_download_url }}", "remote_src": true, "dest": "/opt", "creates": "{{ haproxy_exporter_binary }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy HAProxy exporter service definition", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Copy HAProxy exporter service definition"}, "module_options": {"src": "haproxy-exporter.service.j2", "dest": "/etc/systemd/system/haproxy-exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Start HAProxy exporter", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Start HAProxy exporter"}, "module_options": {"daemon-reload": true, "name": "haproxy-exporter.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ haproxy_exporter_consul_service | to_nice_json }}", "dest": "/etc/consul/haproxy-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fetch maintenance map from the load balancer", "module": "slurp", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Fetch maintenance map from the load balancer", "register": "maint_map"}, "module_options": {"src": "/etc/haproxy/maint.map"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Parse maintenance map for matching domains", "module": "set_fact", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Parse maintenance map for matching domains"}, "module_options": {"maint_matched_domains": "{{ (maint_map['content'] | b64decode).split('\n') | map('regex_replace', '^(\\S+)\\s+\\S+$', '\\1') | select('search', maintenance_base_domain) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Remove entries from the HAProxy maintenance map", "module": "lineinfile", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Remove entries from the HAProxy maintenance map", "loop": "{{ maint_matched_domains }}", "when": "maint_matched_domains", "notify": "reload haproxy"}, "module_options": {"path": "/etc/haproxy/maint.map", "state": "absent", "regexp": "^{{ item }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "These domains were removed from maintenance mode", "module": "debug", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "These domains were removed from maintenance mode"}, "module_options": "msg=\"{{ maint_matched_domains }}\"", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure that the maint map file exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Ensure that the maint map file exists"}, "module_options": {"path": "/etc/haproxy/maint.map", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure that {{ maintenance_server_static_root }} exists", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Ensure that {{ maintenance_server_static_root }} exists"}, "module_options": {"path": "{{ maintenance_server_static_root }}", "owner": "www-data", "group": "www-data", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy Nginx site configuration", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Copy Nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-maintenance.conf", "dest": "/etc/nginx/sites-available/maintenance"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Enable Nginx config", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Enable Nginx config", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/maintenance", "dest": "/etc/nginx/sites-enabled/maintenance", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install maintenance content", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Install maintenance content"}, "module_options": {"repo": "{{ maintenance_pages_repo }}", "dest": "{{ maintenance_server_static_root }}/default"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Add HAProxy PPA", "module": "apt_repository", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Add HAProxy PPA", "when": "haproxy_ppa != \"\""}, "module_options": {"repo": "{{ haproxy_ppa }}"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install HAProxy", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Install HAProxy"}, "module_options": {"name": "haproxy={{ haproxy_version }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install other essential or handy packages", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Install other essential or handy packages", "with_items": ["inotify-tools", "python3-openssl", "socat", "ssl-cert", "jq"]}, "module_options": {"name": "{{ item }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create directories", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Create directories", "with_items": ["/etc/haproxy/certs", "/etc/haproxy/certs/ocim", "/etc/haproxy/conf.d", "/etc/haproxy/backends", "/etc/letsencrypt/live"]}, "module_options": {"path": "{{ item }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Copy over Go templates for generating HAProxy configuration files", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Go templates for generating HAProxy configuration files", "with_items": [{"src": "backend.map.ctmpl", "dest": "/etc/consul-template/templates/backend.map.ctmpl", "mode": "0644"}, {"src": "haproxy.cfg.ctmpl", "dest": "/etc/consul-template/templates/haproxy.cfg.ctmpl", "mode": "0644"}], "tags": "haproxy-config"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Copy over Hashicorp Configuration Language files", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Hashicorp Configuration Language files", "with_items": [{"src": "backend.map.hcl.j2", "dest": "/etc/consul-template/config/backend.map.hcl", "mode": "0644"}, {"src": "haproxy.cfg.hcl.j2", "dest": "/etc/consul-template/config/haproxy.cfg.hcl", "mode": "0644"}], "tags": "haproxy-config"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Copy over Consul watcher scripts", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Consul watcher scripts", "with_items": [{"src": "consul-template-render.sh", "dest": "/usr/local/sbin/consul-template-render.sh", "mode": "0755"}, {"src": "consul-certificates-render.sh", "dest": "/usr/local/sbin/consul-certificates-render.sh", "mode": "0755"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Copy over the local filesystem watcher", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over the local filesystem watcher"}, "module_options": {"src": "cert-watcher", "dest": "/usr/local/sbin/cert-watcher", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Copy over systemd service files", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over systemd service files", "with_items": [{"src": "consul-template-render.service", "dest": "/lib/systemd/system/consul-template-render.service", "mode": "0644"}, {"src": "consul-certificates-render.service", "dest": "/lib/systemd/system/consul-certificates-render.service", "mode": "0644"}, {"src": "cert-watcher.service", "dest": "/lib/systemd/system/cert-watcher.service", "mode": "0644"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Copy over snakeoil certificate", "module": "shell", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over snakeoil certificate", "args": {"chdir": "/etc/ssl/certs/"}}, "module_options": "cat ssl-cert-snakeoil.pem ../private/ssl-cert-snakeoil.key > /etc/haproxy/certs.pem", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Copy over bespoke HAProxy config blocks", "module": "copy", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over bespoke HAProxy config blocks", "with_items": "{{ haproxy_custom_rules }}", "when": "haproxy_custom_rules"}, "module_options": {"content": "{{ item.rule }}", "dest": "/etc/haproxy/conf.d/{{ item.filename }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Copy over extra certs for prod", "module": "copy", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over extra certs for prod", "with_fileglob": ["prod/*.pem"], "when": "inventory_hostname in groups['load-balancer-v2-prod']"}, "module_options": {"src": "{{ item }}", "dest": "/etc/haproxy/certs/{{ item | basename | splitext | first | b64decode }}.pem", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Copy over extra certs for stage", "module": "copy", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over extra certs for stage", "with_fileglob": ["stage/*.pem"], "when": "inventory_hostname in groups['load-balancer-v2-stage']"}, "module_options": {"src": "{{ item }}", "dest": "/etc/haproxy/certs/{{ item | basename | splitext | first | b64decode }}.pem", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Ensure HAProxy picks up conf.d rules", "module": "lineinfile", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Ensure HAProxy picks up conf.d rules"}, "module_options": {"path": "/etc/default/haproxy", "line": "EXTRAOPTS=\"-f /etc/haproxy/conf.d\"", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Enable and start the services", "module": "systemd", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Enable and start the services", "with_items": ["cert-watcher", "consul-template-render", "consul-certificates-render"]}, "module_options": {"daemon_reload": true, "enabled": true, "state": "restarted", "name": "{{ item }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Check if we must bootstrap the local certificate", "module": "stat", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Check if we must bootstrap the local certificate", "register": "lb_cert_p"}, "module_options": {"path": "/etc/letsencrypt/live/{{ CERTBOT_DOMAIN_NAME }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": "site-is-down"}, "module_options": "maintenance.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Find config files that will stop nginx from reloading", "module": "find", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Find config files that will stop nginx from reloading", "register": "nginx_sites_enabled"}, "module_options": {"paths": "/etc/nginx/sites-enabled", "file_type": "link"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Disable config files that will stop nginx from reloading", "module": "file", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Disable config files that will stop nginx from reloading", "with_items": "{{ nginx_sites_enabled.files }}"}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "import_role", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": "certbot"}, "module_options": {"name": "certbot"}, "executable": "certbot", "executable_type": "Role", "fqcn": "certbot", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Restore config files after bootstrapping", "module": "file", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Restore config files after bootstrapping", "with_items": "{{ nginx_sites_enabled.files }}", "notify": ["reload nginx"], "when": "lb_cert_p.stat.exists == False"}, "module_options": {"src": "/etc/nginx/sites-available/{{ item.path | basename }}", "dest": "/etc/nginx/sites-enabled/{{ item.path | basename }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"when": "haproxy_exporter_enabled"}, "module_options": "exporter.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Restart rsyslog", "module": "service", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Restart rsyslog", "changed_when": false}, "module_options": {"name": "rsyslog", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Open HTTP and HTTPS port on the firewall", "module": "ufw", "index": 23, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Open HTTP and HTTPS port on the firewall", "with_items": [{"enabled": true, "port": 80}, {"enabled": true, "port": 443}, {"enabled": "{{ haproxy_enable_stats_page }}", "port": "{{ haproxy_stats_port }}"}], "when": "item.enabled"}, "module_options": {"rule": "allow", "port": "{{ item.port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 24, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": ["never", "site-is-down"]}, "module_options": "site-is-down.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 25, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": ["never", "site-is-up"]}, "module_options": "site-is-up.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install apt packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "install apt packages"}, "module_options": {"name": "{{ RABBITMQ_APT_PACKAGES }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Open RabbitMQ firewall ports", "module": "ufw", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Open RabbitMQ firewall ports", "with_items": ["{{ RABBITMQ_TLS_PORT }}", "{{ RABBITMQ_HTTPS_PORT }}"]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "add rabbitmq repositories", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq repositories", "with_items": ["{{ ERLANG_REPO }}", "{{ RABBITMQ_REPO }}"], "tags": ["install_rabbitmq"]}, "module_options": {"repo": "{{ item }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "add trusted repository keys", "module": "apt_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add trusted repository keys", "with_items": ["{{ ERLANG_REPO_KEY }}", "{{ RABBITMQ_REPO_KEY }}"], "tags": ["install_rabbitmq"]}, "module_options": {"url": "{{ item }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Unlock erlang and rabbitmq", "module": "dpkg_selections", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Unlock erlang and rabbitmq", "with_items": ["esl-erlang", "rabbitmq-server"], "ignore_errors": true, "tags": ["install_rabbitmq"]}, "module_options": {"name": "{{ item }}", "selection": "install"}, "executable": "dpkg_selections", "executable_type": "Module", "fqcn": "ansible.builtin.dpkg_selections", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "install rabbitmq", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "install rabbitmq", "tags": ["install_rabbitmq"]}, "module_options": {"name": ["esl-erlang={{ ERLANG_VERSION }}", "rabbitmq-server={{ RABBITMQ_VERSION }}"], "update_cache": true, "force": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Lock erlang and rabbitmq", "module": "dpkg_selections", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Lock erlang and rabbitmq", "with_items": ["esl-erlang", "rabbitmq-server"], "tags": ["install_rabbitmq"]}, "module_options": {"name": "{{ item }}", "selection": "hold"}, "executable": "dpkg_selections", "executable_type": "Module", "fqcn": "ansible.builtin.dpkg_selections", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create directory for RabbitMQ service overrides", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Create directory for RabbitMQ service overrides", "tags": ["fd_limit"]}, "module_options": {"path": "/etc/systemd/system/rabbitmq-server.service.d/", "state": "directory", "mode": 493, "owner": "root", "group": "root"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Set the file descriptor limit to a high value in the systemd service", "module": "ini_file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Set the file descriptor limit to a high value in the systemd service", "with_items": ["LimitNOFILE", "LimitNPROC"], "notify": ["reload systemd", "restart rabbitmq"], "tags": ["fd_limit"]}, "module_options": {"dest": "/etc/systemd/system/rabbitmq-server.service.d/limits.conf", "section": "Service", "option": "{{ item }}", "value": 65535, "mode": 420, "owner": "root", "group": "root"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "add rabbitmqadmin config", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmqadmin config"}, "module_options": {"src": "rabbitmqadmin.conf.j2", "dest": "/etc/rabbitmqadmin.conf", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "add rabbitmq import/export scripts", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq import/export scripts", "with_items": ["{{ RABBITMQ_BACKUP_COMMAND }}", "{{ RABBITMQ_RESTORE_COMMAND }}"]}, "module_options": {"src": "{{ item }}.j2", "dest": "{{ RABBITMQ_SCRIPTS_DIR }}/{{ item }}", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "add rabbitmq export directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq export directory"}, "module_options": {"path": "{{ RABBITMQ_EXPORT_DIR }}", "state": "directory", "owner": "root", "group": "root", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "set letsencrypt directory owner", "module": "file", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "set letsencrypt directory owner"}, "module_options": {"path": "/etc/letsencrypt", "owner": "rabbitmq", "state": "directory", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "write rabbitmq configuration", "module": "template", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "write rabbitmq configuration", "notify": ["restart rabbitmq"]}, "module_options": {"src": "rabbitmq.config.j2", "dest": "/etc/rabbitmq/rabbitmq.config"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "enable rabbitmq plugins", "module": "rabbitmq_plugin", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "enable rabbitmq plugins", "notify": ["restart rabbitmq"]}, "module_options": {"names": "rabbitmq_management,rabbitmq_tracing,rabbitmq_federation", "state": "enabled"}, "executable": "rabbitmq_plugin", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_plugin", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "create default admin user", "module": "rabbitmq_user", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "create default admin user"}, "module_options": {"user": "{{ RABBITMQ_ADMIN_USERNAME }}", "tags": "administrator,{{ RABBITMQ_ADMIN_USERNAME }}", "password": "{{ RABBITMQ_ADMIN_PASSWORD }}", "vhost": "/", "configure_priv": ".*", "write_priv": ".*", "read_priv": ".*", "state": "present"}, "executable": "rabbitmq_user", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_user", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "download rabbitmqadmin executable", "module": "command", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "download rabbitmqadmin executable", "args": {"creates": "{{ RABBITMQ_SCRIPTS_DIR }}/rabbitmqadmin"}}, "module_options": "wget -P \"{{ RABBITMQ_SCRIPTS_DIR }}\" \"{{ RABBITMQADMIN_URL }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "remove default guest user", "module": "rabbitmq_user", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "remove default guest user"}, "module_options": {"user": "guest", "state": "absent"}, "executable": "rabbitmq_user", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_user", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "ensure vhost /test is present", "module": "rabbitmq_vhost", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure vhost /test is present"}, "module_options": {"name": "/test", "state": "present"}, "executable": "rabbitmq_vhost", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_vhost", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "ensure newrelic rabbitmq monitoring is present", "module": "apt", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure newrelic rabbitmq monitoring is present", "register": "rabbit_newrelic", "tags": ["rabbitmq-newrelic"]}, "module_options": {"pkg": "nri-rabbitmq", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "ensure /etc/newrelic-infra/integrations.d/rabbitmq-config.yml is present", "module": "template", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure /etc/newrelic-infra/integrations.d/rabbitmq-config.yml is present", "register": "rabbit_newrelic_config", "tags": ["rabbitmq-newrelic"]}, "module_options": {"src": "rabbitmq-config-newrelic-infra.yml.j2", "dest": "/etc/newrelic-infra/integrations.d/rabbitmq-config.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "restart newrelic-infra if changed", "module": "systemd", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "restart newrelic-infra if changed", "when": "rabbit_newrelic.changed or rabbit_newrelic_config.changed", "tags": ["rabbitmq-newrelic"]}, "module_options": {"name": "newrelic-infra", "state": "restarted"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create mongodb group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create mongodb group"}, "module_options": {"name": "mongodb", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create mongodb user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create mongodb user"}, "module_options": {"name": "mongodb", "group": "mongodb", "home": "{{ MONGODB_HOME }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create a xfs filesystem on MONGODB_OPENSTACK_DB_DEVICE", "module": "filesystem", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create a xfs filesystem on MONGODB_OPENSTACK_DB_DEVICE"}, "module_options": {"fstype": "xfs", "dev": "{{ MONGODB_OPENSTACK_DB_DEVICE }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Mount MongoDB home", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Mount MongoDB home"}, "module_options": {"name": "{{ MONGODB_HOME }}", "src": "{{ MONGODB_OPENSTACK_DB_DEVICE }}", "fstype": "xfs", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create db and log directories for MongoDB home", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create db and log directories for MongoDB home", "with_items": ["db", "log"]}, "module_options": {"path": "{{ MONGODB_HOME }}/{{ item }}", "state": "directory", "mode": 488, "owner": "mongodb", "group": "mongodb"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Change MongoDB Home owner", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Change MongoDB Home owner"}, "module_options": {"path": "{{ MONGODB_HOME }}", "owner": "mongodb", "group": "mongodb", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Change MongoDB permissions", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Change MongoDB permissions"}, "module_options": {"path": "{{ MONGODB_HOME }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Open MongoDB port on the firewall", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Open MongoDB port on the firewall"}, "module_options": {"rule": "allow", "port": 27017, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "configure log rotation for the MongoDB log", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "configure log rotation for the MongoDB log"}, "module_options": {"src": "logrotate.conf.j2", "dest": "/etc/logrotate.d/mongodb.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-mongodb.sh", "dest": "/usr/local/sbin/backup-pre.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-mongodb.sh", "dest": "/usr/local/sbin/backup-post.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create custom fact directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create custom fact directory"}, "module_options": {"path": "/etc/ansible/facts.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create Go Path directory", "module": "file", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create Go Path directory"}, "module_options": {"path": "{{ GO_PATH }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Download golang", "module": "get_url", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Download golang"}, "module_options": {"url": "https://storage.googleapis.com/golang/go1.12.linux-amd64.tar.gz", "dest": "{{ GO_PATH }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Extract go into /tmp/mongo", "module": "unarchive", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Extract go into /tmp/mongo"}, "module_options": {"src": "{{ GO_PATH }}/go1.12.linux-amd64.tar.gz", "dest": "{{ GO_PATH }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Download MongoDB exporter", "module": "git", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Download MongoDB exporter"}, "module_options": {"repo": "{{ MONGODB_EXPORTER_REPO }}", "dest": "{{ MONGODB_EXPORTER_PATH }}", "version": "{{ MONGODB_EXPORTER_VERSION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Compile MongoDB exporter files", "module": "make", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Compile MongoDB exporter files", "environment": {"GOPATH": "{{ GO_PATH }}", "PATH": "{{ GO_PATH }}/go/bin:{{ ansible_env.PATH }}", "GO111MODULE": "on"}}, "module_options": {"chdir": "{{ MONGODB_EXPORTER_PATH }}", "target": "build"}, "executable": "make", "executable_type": "Module", "fqcn": "community.general.make", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Add MongoDB exporter binary to the path", "module": "copy", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Add MongoDB exporter binary to the path"}, "module_options": {"src": "{{ MONGODB_EXPORTER_PATH }}/mongodb_exporter", "dest": "/usr/local/bin/mongodb_exporter", "remote_src": true, "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create MongoDB exporter environment file", "module": "copy", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create MongoDB exporter environment file"}, "module_options": {"content": "MONGODB_URL=mongodb://{{ mongodb_root_admin_name }}:{{ mongodb_root_admin_password }}@localhost:27017\n", "dest": "/etc/mongodb_exporter.conf", "mode": 416, "owner": "root", "group": "mongodb"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Copy MongoDB exporter service definition", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy MongoDB exporter service definition"}, "module_options": {"src": "mongodb_exporter.service.j2", "dest": "/etc/systemd/system/mongodb_exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Start and enable MongoDB exporter", "module": "systemd", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Start and enable MongoDB exporter"}, "module_options": {"daemon-reload": true, "name": "mongodb_exporter.service", "state": "restarted", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Store MongoDB exporter version", "module": "copy", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Store MongoDB exporter version"}, "module_options": {"content": "{\"version\": \"{{ MONGODB_EXPORTER_VERSION }}\"}\n", "dest": "/etc/ansible/facts.d/mongodb_exporter.fact"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ MONGODB_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/mongodb-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set the hostname", "module": "hostname", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set the hostname"}, "module_options": {"name": "{{ COMMON_SERVER_HOSTNAME }}"}, "executable": "hostname", "executable_type": "Module", "fqcn": "ansible.builtin.hostname", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set system timezone to UTC", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set system timezone to UTC"}, "module_options": {"src": "timezone", "dest": "/etc/timezone", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set local timezone to UTC", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set local timezone to UTC"}, "module_options": {"src": "/usr/share/zoneinfo/Etc/UTC", "dest": "/etc/localtime", "state": "link", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "add Opencraft repository key", "module": "apt_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "add Opencraft repository key"}, "module_options": {"keyserver": "{{ COMMON_SERVER_OPENCRAFT_REPO_KEY_SERVER }}", "id": "{{ COMMON_SERVER_OPENCRAFT_REPO_KEY_ID }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "add Opencraft repository", "module": "apt_repository", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "add Opencraft repository"}, "module_options": {"repo": "{{ COMMON_SERVER_OPENCRAFT_REPO }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "set apt preferences to prioritize the opencraft repo", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "set apt preferences to prioritize the opencraft repo"}, "module_options": {"content": "Package: chkrootkit\nPin: Origin \"{{ COMMON_SERVER_OPENCRAFT_REPO_DOMAIN }}\"\nPin-Priority: 1001\n", "dest": "/etc/apt/preferences.d/opencraft"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "apt-get update, dist-upgrade and autoremove", "module": "apt", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "apt-get update, dist-upgrade and autoremove"}, "module_options": {"update_cache": true, "upgrade": "dist", "autoremove": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Install dependencies"}, "module_options": {"name": "{{ COMMON_SERVER_DEPENDENCIES }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Check if Python3 exists", "module": "stat", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Check if Python3 exists", "register": "python3_executable"}, "module_options": {"path": "/usr/bin/python3"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Default to python3", "module": "alternatives", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Default to python3", "when": "python3_executable.stat.exists"}, "module_options": {"name": "python", "link": "/usr/bin/python", "path": "/usr/bin/python3"}, "executable": "alternatives", "executable_type": "Module", "fqcn": "community.general.alternatives", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "tmpreaper is configured", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "tmpreaper is configured"}, "module_options": {"src": "tmpreaper.conf", "dest": "/etc/tmpreaper.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Copy security update check script", "module": "copy", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Copy security update check script"}, "module_options": {"src": "security_updates_checker.sh", "dest": "{{ SECURITY_UPDATE_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Schedule cron job to track security updates of held packages", "module": "cron", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Schedule cron job to track security updates of held packages"}, "module_options": {"name": "Track security updates", "minute": 0, "hour": 1, "job": "bash {{ SECURITY_UPDATE_SCRIPT_LOCATION }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "etckeeper - use git", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - use git"}, "module_options": {"src": "etckeeper.conf", "dest": "/etc/etckeeper/etckeeper.conf", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "etckeeper - init and initial commit", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - init and initial commit", "args": {"creates": "/etc/.git"}}, "module_options": "etckeeper init && etckeeper commit \"Initial commit.\"", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "etckeeper - configure git author settings", "module": "git_config", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - configure git author settings", "with_items": [{"name": "user.name", "value": "{{ COMMON_SERVER_ETCKEEPER_COMMIT_USER }}"}, {"name": "user.email", "value": "{{ COMMON_SERVER_ETCKEEPER_COMMIT_EMAIL }}"}]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "scope": "local", "repo": "/etc"}, "executable": "git_config", "executable_type": "Module", "fqcn": "community.general.git_config", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install nginx apt package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "install nginx apt package"}, "module_options": {"name": "nginx"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "disable nginx default site", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "disable nginx default site", "notify": ["reload nginx"]}, "module_options": {"path": "/etc/nginx/sites-enabled/default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "set up global nginx SSL settings", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "set up global nginx SSL settings", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-ssl", "dest": "/etc/nginx/conf.d/ssl.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "reload nginx if required", "module": "meta", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "reload nginx if required"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/sftp.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure sftp is enabled", "module": "lineinfile", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/sftp.yml", "options": {"name": "Ensure sftp is enabled", "notify": "Restart sshd"}, "module_options": {"dest": "/etc/ssh/sshd_config", "regexp": "^Subsystem(\\s+)sftp", "line": "Subsystem sftp internal-sftp", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "misc.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "networking.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "etckeeper.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "chkrootkit.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {"when": "COMMON_SERVER_INSTALL_SFTP"}, "module_options": "sftp.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Generate list of enabled chkrootkit tests", "module": "shell", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Generate list of enabled chkrootkit tests", "register": "enabled_tests_output"}, "module_options": "chkrootkit -l 2>&1 | cut -d ' ' -f 3- | sed -r 's/\\b({{CHKROOTKIT_DISABLED_TESTS | join(\"|\")}})\\b//g'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add chkrootkit config file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Add chkrootkit config file"}, "module_options": {"src": "chkrootkit.conf", "dest": "/etc/chkrootkit.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy expected output generator script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Copy expected output generator script"}, "module_options": {"src": "gen_chkrootkit_expected_output.sh", "dest": "{{ CHKROOTKIT_EXPECTED_OUTPUT_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Generate expected chkrootkit output", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Generate expected chkrootkit output"}, "module_options": "{{ CHKROOTKIT_EXPECTED_OUTPUT_SCRIPT_LOCATION }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add apt hook to update chkrootkit expected output after updates", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Add apt hook to update chkrootkit expected output after updates"}, "module_options": {"src": "100chrootkitupdate.j2", "dest": "/etc/apt/apt.conf.d/100chrootkitupdate"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Update expected output daily", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Update expected output daily"}, "module_options": {"src": "update-chkrootkit-log", "dest": "/etc/cron.daily/update-chkrootkit-log", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Add floating IP as network interface alias", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add floating IP as network interface alias"}, "module_options": {"src": "network/interfaces.d/floating-ip.cfg", "dest": "/etc/network/interfaces.d/floating-ip.cfg", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure floating alias is included in configuration file", "module": "lineinfile", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Ensure floating alias is included in configuration file"}, "module_options": {"dest": "/etc/network/interfaces", "state": "present", "line": "source /etc/network/interfaces.d/*.cfg"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Restart networking service", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Restart networking service"}, "module_options": {"name": "networking", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Bring up new interface", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Bring up new interface"}, "module_options": "ifup {{ COMMON_FLOATING_INTERFACE_NAME }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add floating IP as network interface alias", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add floating IP as network interface alias"}, "module_options": {"src": "netplan/floating-ip.yaml", "dest": "/etc/netplan/floating-ip.yaml", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Apply changes using netplan", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Apply changes using netplan", "become": true}, "module_options": "netplan apply", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Add fallback DNS servers to /etc/dhcp/dhclient.conf.", "module": "lineinfile", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add fallback DNS servers to /etc/dhcp/dhclient.conf.", "notify": "restart networking"}, "module_options": {"dest": "/etc/dhcp/dhclient.conf", "regexp": "^\\s*append\\s+domain-name-servers", "line": "append domain-name-servers {{ COMMON_FALLBACK_DNS_SERVERS | join(', ') }};"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Template hosts", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Template hosts"}, "module_options": {"src": "hosts", "dest": "/etc/hosts", "mode": 356}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "By default allow only ssh", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "By default allow only ssh"}, "module_options": {"rule": "allow", "port": 22, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Set firewall default policy", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Set firewall default policy"}, "module_options": {"state": "enabled", "policy": "reject"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Open memcached port on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml", "options": {"name": "Open memcached port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ memcached_port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/memcached"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create mattermail group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create mattermail group"}, "module_options": {"name": "mattermail"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create mattermail user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create mattermail user"}, "module_options": {"name": "mattermail", "group": "mattermail", "home": "{{ MATTERMAIL_HOME }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install golang package", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "Install golang package"}, "module_options": {"name": ["golang"], "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create config", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create config", "become_user": "mattermail"}, "module_options": {"src": "config.json.j2", "dest": "{{ MATTERMAIL_HOME }}/config.json"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create data dir", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create data dir"}, "module_options": {"path": "{{ MATTERMAIL_HOME }}/data", "state": "directory", "owner": "mattermail", "group": "mattermail"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "create systemd service", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create systemd service"}, "module_options": {"src": "mattermail.service.j2", "dest": "/etc/systemd/system/mattermail.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "fetch latest hash", "module": "git", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "fetch latest hash", "register": "githash"}, "module_options": {"repo": "https://{{ MATTERMAIL_REPO }}", "clone": false, "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "store git hash", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "store git hash", "register": "mattermail_version"}, "module_options": {"dest": "{{ MATTERMAIL_HOME }}/.hash", "content": "{{ githash.after }}", "owner": "mattermail", "group": "mattermail"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "build Mattermail binary", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "build Mattermail binary", "become_user": "mattermail", "environment": {"GOPATH": "{{ MATTERMAIL_HOME }}"}}, "module_options": "go get -u {{ MATTERMAIL_REPO }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "start and enable the mattermail service", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "start and enable the mattermail service"}, "module_options": {"name": "mattermail", "state": "restarted", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy the watch configuration file", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml", "options": {"name": "Copy the watch configuration file", "become_user": "www-data", "tags": "pr-watcher-notifier-watch-config"}, "module_options": {"src": "watch_config.yml", "dest": "{{ PR_WATCHER_NOTIFIER_ENV['WATCH_CONFIG_FILE'] }}", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Restart gunicorn via supervisor", "module": "supervisorctl", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml", "options": {"name": "Restart gunicorn via supervisor"}, "module_options": {"name": "pr_watcher_notifier", "state": "restarted"}, "executable": "supervisorctl", "executable_type": "Module", "fqcn": "community.general.supervisorctl", "used_in": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Consul ACL apt requirements", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Install Consul ACL apt requirements"}, "module_options": {"name": ["python3-pip"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install Consul ACL python requirements", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Install Consul ACL python requirements"}, "module_options": {"executable": "pip3", "name": ["python-consul==1.1.0", "pyhcl==0.3.10"]}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create Consul ACL tokens", "module": "consul_acl", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Create Consul ACL tokens", "with_items": "{{ consul_acl_tokens }}"}, "module_options": {"token": "{{ item.id }}", "rules": "{{ item.rules }}", "name": "{{ item.name | default(item.id) }}", "mgmt_token": "{{ consul_acl_mgmt_token }}"}, "executable": "consul_acl", "executable_type": "Module", "fqcn": "community.general.consul_acl", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install packages for loris", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Install packages for loris", "become": true, "vars": {"packages": ["libapache2-mod-wsgi", "libjpeg-turbo8-dev", "libfreetype6-dev", "liblcms2-dev", "liblcms2-utils", "libssl-dev", "libtiff5-dev", "libwebp-dev", "zlib1g-dev"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure group \"{{ loris_group }}\" exists", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Ensure group \"{{ loris_group }}\" exists", "become": true}, "module_options": {"name": "{{ loris_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure user \"{{ loris_user }}\" exists", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Ensure user \"{{ loris_user }}\" exists", "become": true}, "module_options": {"name": "{{ loris_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "stat", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"register": "app_path"}, "module_options": "path={{ loris_app_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "clone repository and checkout correct version", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "clone repository and checkout correct version", "become": true, "when": "app_path.stat.exists == False"}, "module_options": {"repo": "{{ loris_app_repository }}", "dest": "{{ loris_app_path }}", "version": "{{ loris_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "install configobj", "module": "pip", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "install configobj", "become": true}, "module_options": {"name": "configobj"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "install loris", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "install loris", "become": true, "args": {"chdir": "{{ loris_app_path }}", "creates": "/etc/loris2/loris2.conf"}}, "module_options": "python setup.py install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "disable default site", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "disable default site", "become": true}, "module_options": {"state": "absent", "path": "/etc/apache2/sites-enabled/000-default.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "make sure mod_expires is present", "module": "apache2_module", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "make sure mod_expires is present", "become": true}, "module_options": {"state": "present", "name": "expires"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "make sure mod_wsgi is present", "module": "apache2_module", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "make sure mod_wsgi is present", "become": true}, "module_options": {"state": "present", "name": "wsgi"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "get apache conf from template", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "get apache conf from template", "become": true}, "module_options": {"src": "apache2.conf.j2", "dest": "/etc/apache2/conf-available/loris.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "ensure apache reload its configuration", "module": "service", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "ensure apache reload its configuration", "become": true}, "module_options": {"name": "apache2", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Configure official PostgreSQL repository", "module": "shell", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Configure official PostgreSQL repository", "become": true}, "module_options": "echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install PostgreSQL repository key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Install PostgreSQL repository key"}, "module_options": {"id": "ACCC4CF8", "url": "https://www.postgresql.org/media/keys/ACCC4CF8.asc", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install required PostgreSQL packages", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Install required PostgreSQL packages"}, "module_options": {"name": ["postgresql-{{postgresql_version}}", "postgresql-contrib-{{postgresql_version}}", "postgresql-server-dev-{{postgresql_version}}", "postgresql-client-{{postgresql_version}}", "python3-psycopg2"], "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create postgres group", "module": "group", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Create postgres group"}, "module_options": {"name": "postgres", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create postgres user", "module": "user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Create postgres user"}, "module_options": {"name": "postgres", "group": "postgres", "home": "/var/lib/postgresql", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "mount /var/lib/postgresql", "module": "mount", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "mount /var/lib/postgresql", "when": "POSTGRES_OPENSTACK_DB_DEVICE != None"}, "module_options": {"name": "/var/lib/postgresql", "src": "{{ POSTGRES_OPENSTACK_DB_DEVICE }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "chown & chmod /var/lib/postgresql", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "chown & chmod /var/lib/postgresql"}, "module_options": {"path": "/var/lib/postgresql", "owner": "postgres", "group": "postgres", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Open Postgres port on the firewall", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Open Postgres port on the firewall", "with_items": [5432]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-postgres.sh", "dest": "/usr/local/sbin/backup-pre.sh", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-postgres.sh", "dest": "/usr/local/sbin/backup-post.sh", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install Jira dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "install Jira dependencies"}, "module_options": {"pkg": ["mysql-client"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "disable www-data shell", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "disable www-data shell"}, "module_options": {"name": "www-data", "shell": "/bin/false"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "copy jira service file", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "copy jira service file", "notify": ["restart jira"]}, "module_options": {"src": "jira.service", "dest": "/etc/systemd/system/jira.service"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "enable jira", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "enable jira"}, "module_options": {"name": "jira", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "add backup pruner cron job", "module": "cron", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "add backup pruner cron job"}, "module_options": {"name": "clean old Jira exports", "state": "present", "job": "find /var/www/jira/var/jira/export -maxdepth 2 -type f -mtime +150 -delete -regextype sed -regex '.*/[0-9]\\{4\\}-[A-Z][a-z]\\{2\\}-[0-9]\\{2\\}.*.zip'", "day": "*", "minute": "0", "hour": "0"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure that unzip is installed", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Ensure that unzip is installed"}, "module_options": {"name": "unzip", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create consul group", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul group"}, "module_options": {"name": "consul", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create consul user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul user"}, "module_options": {"name": "consul", "group": "consul", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Mount \"{{ consul_data_dir }}\"", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Mount \"{{ consul_data_dir }}\"", "when": "consul_server"}, "module_options": {"name": "{{ consul_data_dir }}", "src": "{{ consul_openstack_data_device }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create consul directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul directories", "with_items": [{"path": "{{ consul_config_dir }}", "owner": "root"}, {"path": "{{ consul_data_dir }}", "owner": "consul"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "consul", "recurse": true, "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Determine current Consul version", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Determine current Consul version", "register": "consul_current_version", "changed_when": false}, "module_options": "consul version | sed -n 's/Consul v\\(.*\\)/\\1/p'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Download and unarchive the Consul binary", "module": "unarchive", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Download and unarchive the Consul binary", "when": "consul_current_version.rc != 0 or consul_current_version.stdout != consul_version", "notify": "restart consul"}, "module_options": {"src": "{{ consul_url }}", "dest": "{{ consul_bin_dir }}", "owner": "consul", "group": "consul", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create Consul configuration file", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul configuration file", "notify": "restart consul"}, "module_options": {"src": "config.json.j2", "dest": "{{ consul_config_dir }}/config.json", "group": "consul"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul service definition file", "when": "consul_service_config != \"\"", "notify": "restart consul"}, "module_options": {"content": "{{ consul_service_config | to_nice_json }}", "dest": "{{ consul_config_dir }}/service.json", "group": "consul"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Copy the wrapper script files", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Copy the wrapper script files", "with_items": ["run_consul.sh", "update_consul_config.py"]}, "module_options": {"src": "{{ item }}.j2", "dest": "/usr/local/sbin/{{ item }}", "owner": "root", "group": "root", "mode": "755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Ensure that the consul configuration file is group-writeable", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Ensure that the consul configuration file is group-writeable"}, "module_options": {"path": "{{ consul_config_dir }}/config.json", "mode": "g+w"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create Consul systemd service file", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul systemd service file"}, "module_options": {"src": "consul.service.j2", "dest": "/etc/systemd/system/consul.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"name": "consul.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Open TCP/UDP ports on firewall needed for Consul RPC/gossip", "module": "ufw", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Open TCP/UDP ports on firewall needed for Consul RPC/gossip", "with_items": ["tcp", "udp"]}, "module_options": {"rule": "allow", "port": "8300:8302", "proto": "{{ item }}"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Copy pre- and post-backup scripts", "module": "template", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Copy pre- and post-backup scripts", "with_items": [{"src": "backup-pre-consul.sh", "dest": "/usr/local/sbin/backup-pre-consul.sh"}, {"src": "backup-post-consul.sh", "dest": "/usr/local/sbin/backup-post-consul.sh"}], "when": "consul_backup"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install passlib for htpasswd generation", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "install passlib for htpasswd generation"}, "module_options": {"name": "python3-passlib"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "generate htpasswd file", "module": "htpasswd", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "generate htpasswd file"}, "module_options": {"path": "{{ NGINX_PROXY_HTPASSWD_PATH }}", "username": "{{ NGINX_PROXY_USERNAME }}", "password": "{{ NGINX_PROXY_PASSWORD }}"}, "executable": "htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "set up nginx to reverse-proxy", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "set up nginx to reverse-proxy", "register": "sites_available"}, "module_options": {"src": "nginx-proxy.j2", "dest": "{{ NGINX_PROXY_CONFIG_PATH }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "enable nginx site configuration", "register": "sites_enabled"}, "module_options": {"src": "{{ NGINX_PROXY_CONFIG_PATH }}", "dest": "/etc/nginx/sites-enabled/{{ NGINX_PROXY_CONFIG_PATH | basename }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "open public port on the firewall", "module": "ufw", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "open public port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ NGINX_PROXY_PUBLIC_PORT }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "reload nginx", "module": "service", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "reload nginx", "when": "(sites_available.changed or sites_enabled.changed) and NGINX_PROXY_RELOAD_NGINX"}, "module_options": {"name": "nginx", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "copy ssl cert", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "copy ssl cert"}, "module_options": {"content": "{{ DALITE_SSL_CERT }}", "dest": "/etc/ssl/certs/ssl-cert.pem", "owner": "root", "group": "ssl-cert", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "copy ssl key", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "copy ssl key"}, "module_options": {"content": "{{ DALITE_SSL_KEY }}", "dest": "/etc/ssl/private/ssl-cert.key", "owner": "root", "group": "ssl-cert", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "prepare nginx site", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "prepare nginx site"}, "module_options": "src=dalite.site dest=/etc/nginx/sites-enabled/dalite", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "restart nginx", "module": "service", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "restart nginx"}, "module_options": "name=nginx state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "checkout repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "checkout repository"}, "module_options": {"repo": "{{ DALITE_REPOSITORY }}", "version": "{{ DALITE_REPOSITORY_VERSION }}", "dest": "{{ DALITE_APP_LOCATION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ DALITE_VENV }}", "state": "present", "requirements": "{{ DALITE_APP_LOCATION }}/requirements/prod-openstack.txt", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ DALITE_VENV }}", "state": "present", "name": "Gunicorn==17.5", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create settings", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create settings"}, "module_options": {"src": "dalite_settings.py", "dest": "{{ DALITE_APP_LOCATION }}/dalite/local_settings.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create static root", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create static root"}, "module_options": {"name": "{{ DALITE_STATICFILES_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "create media root", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create media root"}, "module_options": {"name": "{{ DALITE_MEDIA_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "collectstatic", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "collectstatic"}, "module_options": "{{ DALITE_MANAGE_PY }} collectstatic --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "migrate", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "migrate"}, "module_options": "{{ DALITE_MANAGE_PY }} migrate --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create log download user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create log download user"}, "module_options": {"name": "{{ DALITE_LOG_DOWNLOAD_USER }}", "home": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create ssh dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create ssh dir"}, "module_options": {"state": "directory", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{ DALITE_LOG_DOWNLOAD_USER }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create authorized keys", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create authorized keys"}, "module_options": {"state": "touch", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{ DALITE_LOG_DOWNLOAD_USER }}", "mode": 384}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "add authorized keys", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "add authorized keys", "with_items": ["{{ DALITE_LOG_DOWNLOAD_AUTHORIZED_KEYS }}"]}, "module_options": {"dest": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "line": "{{ item }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create directory for the logs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create directory for the logs", "with_items": ["{{ DALITE_LOG_DOWNLOAD_DB_DIR }}", "{{ DALITE_LOG_DOWNLOAD_LOG_DIR }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{DALITE_LOG_DOWNLOAD_USER}}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "dalite-pre-backup.sh", "dest": "/usr/local/sbin/dalite-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "copy logrotate", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "copy logrotate"}, "module_options": "src=logrotate.d dest=/etc/logrotate.d/dalite", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "format log download volume", "module": "filesystem", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "options": {"name": "format log download volume"}, "module_options": {"dev": "{{ DALITE_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "fstype": "{{ DALITE_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "resizefs": true}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "mount log download volume", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "options": {"name": "mount log download volume"}, "module_options": {"src": "{{ DALITE_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}", "fstype": "{{ DALITE_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "prepare config", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "options": {"name": "prepare config"}, "module_options": {"src": "dalite.gunicorn", "dest": "/etc/gunicorn.d/dalite"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "restart guncorn", "module": "service", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "options": {"name": "restart guncorn"}, "module_options": "name=gunicorn state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ DALITE_REQUIREMENTS }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install build deps", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "install build deps"}, "module_options": {"name": "{{ PYTHON_BUILD_DEP_REQIREMENTS }}", "state": "build-dep", "install_recommends": false}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create dalite user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Create dalite user"}, "module_options": {"name": "{{ DALITE_USER_NAME }}", "home": "{{ DALITE_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create log dir", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Create log dir"}, "module_options": {"name": "{{ DALITE_LOG_DIR }}", "state": "directory", "owner": "{{ DALITE_USER_NAME }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "deploy-app.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "deploy-gunicorn.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "configure_nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "log_volume.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "configure_log_download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Allow required ports", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "fail", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"when": "TARSNAP_BACKUP_FOLDERS is not defined or TARSNAP_BACKUP_FOLDERS == ''"}, "module_options": "msg=\"Please configure TARSNAP_BACKUP_FOLDERS, we want all servers to be backed up :)\"", "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy key file into place", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Copy key file into place"}, "module_options": {"src": "tarsnap.key", "dest": "{{ TARSNAP_KEY_REMOTE_LOCATION }}", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create cache directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Create cache directory"}, "module_options": {"state": "directory", "path": "{{ TARSNAP_CACHE }}", "owner": "root", "group": "root", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "template main backup script", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "template main backup script"}, "module_options": {"src": "backup.sh", "dest": "{{ TARSNAP_BACKUP_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install backup in cron", "module": "cron", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Install backup in cron"}, "module_options": {"name": "Backup for this server, archive: {{ TARSNAP_ARCHIVE_NAME }}", "job": "{{ TARSNAP_BACKUP_SCRIPT_LOCATION }} >> {{ TARSNAP_BACKUP_LOG_FILE }} 2>&1", "minute": "{{ TARSNAP_BACKUP_MINUTE }}", "hour": "{{ TARSNAP_BACKUP_HOUR }}", "day": "{{ TARSNAP_BACKUP_DAY }}", "month": "{{ TARSNAP_BACKUP_MONTH }}", "weekday": "{{ TARSNAP_BACKUP_WEEKDAY }}", "state": "{{ TARSNAP_CRONTAB_STATE }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set up log rotation for backup logs", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Set up log rotation for backup logs"}, "module_options": {"src": "logrotate", "dest": "{{ TARSNAP_BACKUP_LOGROTATE_CONFIG }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install dependencies for Tarsnap", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Install dependencies for Tarsnap", "with_items": ["e2fslibs-dev", "libssl-dev", "zlib1g-dev", "build-essential", "python-setuptools"]}, "module_options": "pkg={{ item }} state=installed", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check if tarsnap {{ tarsnap_version }} is installed", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Check if tarsnap {{ tarsnap_version }} is installed", "register": "tarnsap_installed", "changed_when": "tarnsap_installed.stderr != ''", "ignore_errors": true}, "module_options": "tarsnap --version | grep {{ tarsnap_version }} --color=never", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Download the current tarsnap code signing key", "module": "get_url", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download the current tarsnap code signing key", "when": "tarnsap_installed|failed"}, "module_options": "url=https://www.tarsnap.com/tarsnap-signing-key.asc dest=/root/tarsnap-signing-key.asc", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add the tarsnap code signing key to your list of keys", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Add the tarsnap code signing key to your list of keys", "when": "tarnsap_installed|failed"}, "module_options": "gpg --import tarsnap-signing-key.asc chdir=/root/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Download tarsnap SHA file", "module": "get_url", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download tarsnap SHA file", "when": "tarnsap_installed|failed"}, "module_options": "url=\"https://www.tarsnap.com/download/tarsnap-sigs-{{ tarsnap_version }}.asc\" dest=\"/root/tarsnap-sigs-{{ tarsnap_version }}.asc\"", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "get the SHA256sum for this tarsnap release", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "get the SHA256sum for this tarsnap release", "when": "tarnsap_installed|failed", "args": {"executable": "/bin/bash", "chdir": "/root"}, "register": "tarsnap_sha"}, "module_options": "gpgResult=`gpg --decrypt tarsnap-sigs-{{ tarsnap_version }}.asc 2>/dev/null`; echo ${gpgResult#*=};\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Download Tarsnap source", "module": "get_url", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download Tarsnap source", "when": "tarnsap_installed|failed"}, "module_options": "url=\"https://www.tarsnap.com/download/tarsnap-autoconf-{{ tarsnap_version }}.tgz\" dest=\"/root/tarsnap-autoconf-{{ tarsnap_version }}.tgz\" sha256sum={{ tarsnap_sha.stdout_lines[0] }}", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Decompress Tarsnap source", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Decompress Tarsnap source", "when": "tarnsap_installed|failed"}, "module_options": "tar xzf /root/tarsnap-autoconf-{{ tarsnap_version }}.tgz chdir=/root creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/COPYING", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Configure Tarsnap for local build", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Configure Tarsnap for local build", "when": "tarnsap_installed|failed"}, "module_options": "./configure chdir=/root/tarsnap-autoconf-{{ tarsnap_version }} creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/Makefile", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Build and install Tarsnap", "module": "command", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Build and install Tarsnap", "when": "tarnsap_installed|failed"}, "module_options": "make all install clean chdir=/root/tarsnap-autoconf-{{ tarsnap_version }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create Tarsnap cache directory", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Create Tarsnap cache directory"}, "module_options": "state=directory path={{ tarsnap_cache }}", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml", "options": {"tags": "tarsnap"}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml", "options": {"tarsnap_cache": "{{ TARSNAP_CACHE }}", "tarsnap_keyfile": "{{ TARSNAP_KEY_REMOTE_LOCATION }}", "when": "TARSNAP_KEY is defined and TARSNAP_KEY != ''", "tags": "tarsnap"}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install python3-mysqldb package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Install python3-mysqldb package"}, "module_options": {"name": "python3-mysqldb"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create mysql group", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create mysql group"}, "module_options": {"name": "mysql", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create mysql user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create mysql user"}, "module_options": {"name": "mysql", "group": "mysql", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create a ext4 filesystem on MYSQL_OPENSTACK_DB_DEVICE", "module": "filesystem", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create a ext4 filesystem on MYSQL_OPENSTACK_DB_DEVICE", "when": "MYSQL_OPENSTACK_DB_DEVICE is defined and MYSQL_OPENSTACK_DB_DEVICE != \"\""}, "module_options": {"fstype": "ext4", "dev": "{{ MYSQL_OPENSTACK_DB_DEVICE }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Mount MySQL home", "module": "mount", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Mount MySQL home", "when": "MYSQL_OPENSTACK_DB_DEVICE is defined and MYSQL_OPENSTACK_DB_DEVICE != \"\""}, "module_options": {"name": "/var/lib/mysql", "src": "{{ MYSQL_OPENSTACK_DB_DEVICE }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "chown -R /var/lib/mysql", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "chown -R /var/lib/mysql"}, "module_options": {"path": "/var/lib/mysql", "owner": "mysql", "group": "mysql", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "chmod /var/lib/mysql", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "chmod /var/lib/mysql"}, "module_options": {"path": "/var/lib/mysql", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Allow required ports"}, "module_options": {"rule": "allow", "port": 3306, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Creating directory for Mysql files limit configuration", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Creating directory for Mysql files limit configuration"}, "module_options": {"path": "/etc/systemd/system/mysql.service.d/", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Set open files limit in mysql through systemd", "module": "copy", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Set open files limit in mysql through systemd"}, "module_options": {"dest": "/etc/systemd/system/mysql.service.d/override.conf", "content": "# cf https://duntuk.com/how-raise-ulimit-open-files-and-mysql-openfileslimit\n[Service]\nLimitNOFILE={{ MYSQL_OPEN_FILES_LIMIT }}\nLimitNPROC={{ MYSQL_PROCESSES_LIMIT }}\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-mysql.sh", "dest": "/usr/local/sbin/backup-pre.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-mysql.sh", "dest": "/usr/local/sbin/backup-post.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Download MySQL exporter", "module": "unarchive", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Download MySQL exporter", "notify": "restart mysqld_exporter"}, "module_options": {"src": "{{ MYSQL_EXPORTER_DOWNLOAD_URL }}", "remote_src": true, "dest": "/opt", "creates": "{{ MYSQL_EXPORTER_BINARY }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Append MySQL exporter user to list of MySQL users", "module": "set_fact", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Append MySQL exporter user to list of MySQL users"}, "module_options": {"mysql_users": "{{ mysql_users + MYSQL_EXPORTER_MYSQL_USERS }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Create MySQL exporter environment file", "module": "copy", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create MySQL exporter environment file", "notify": "restart mysqld_exporter"}, "module_options": {"content": "DATA_SOURCE_NAME='exporter:{{ MYSQL_EXPORTER_MYSQL_PASSWORD }}@(localhost:3306)/'\n", "dest": "/etc/mysqld_exporter.conf", "mode": 416, "owner": "root", "group": "mysql"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Copy MySQL exporter service definition", "module": "template", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy MySQL exporter service definition", "notify": "restart mysqld_exporter"}, "module_options": {"src": "mysqld_exporter.service.j2", "dest": "/etc/systemd/system/mysqld_exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Start MySQL exporter", "module": "systemd", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Start MySQL exporter"}, "module_options": {"daemon-reload": true, "name": "mysqld_exporter.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create Consul service definition file", "when": "COMMON_SERVER_INSTALL_CONSUL is defined and COMMON_SERVER_INSTALL_CONSUL", "notify": ["reload consul"]}, "module_options": {"content": "{{ MYSQL_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/mysqld-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Install MySQL binaries from debian", "module": "apt", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Install MySQL binaries from debian", "with_items": ["{{MYSQL_URLS}}"]}, "module_options": {"deb": "{{item.url}}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Created pinned version file", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Created pinned version file", "when": "MYSQL_PINNED_VERSION != \"\""}, "module_options": {"src": "pinned_versions.j2", "dest": "/etc/apt/preferences.d/mysql", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install mailutils apt package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "install mailutils apt package"}, "module_options": {"name": "mailutils"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "copy sanity check script", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "copy sanity check script"}, "module_options": {"src": "sanity_check.py", "dest": "{{ SANITY_CHECK_SCRIPT_LOCATION }}", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "copy sanity check config", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "copy sanity check config"}, "module_options": {"content": "{{ sanity_check_control_file|to_json }}", "dest": "{{ SANITY_CHECK_CONFIG }}", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "install sanity checks crontab", "module": "cron", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "install sanity checks crontab"}, "module_options": {"job": "{{ SANITY_CHECK_SCRIPT_LOCATION }} {{ SANITY_CHECK_CONFIG }} > /dev/null 2>&1", "minute": "1,11,21,31,41,51", "name": "sanity checker for: {{ SANITY_CHECK_SUBJECT }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "mkdir /discourse", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse"}, "module_options": {"path": "/discourse", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "mount /discourse", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mount /discourse"}, "module_options": {"name": "/discourse", "src": "/dev/vdb1", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "mkdir /discourse/discourse (needed to have /var/discourse as a git repo, which can't use a mounted folder)", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse/discourse (needed to have /var/discourse as a git repo, which can't use a mounted folder)"}, "module_options": {"path": "/discourse/discourse", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ln -s /discourse/discourse /var/discourse", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "ln -s /discourse/discourse /var/discourse"}, "module_options": {"src": "/discourse/discourse", "dest": "/var/discourse", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "mkdir /discourse/docker", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse/docker"}, "module_options": {"path": "/discourse/docker", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "mkdir /etc/docker", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /etc/docker", "become": true}, "module_options": {"path": "/etc/docker", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "change docker root directory", "module": "copy", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "change docker root directory", "notify": ["restart docker", "reload systemd"]}, "module_options": {"src": "daemon.json", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "add discourse user", "module": "user", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "add discourse user"}, "module_options": {"name": "discourse", "groups": ["sudo", "admin"]}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "ensure docker is running", "module": "service", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "ensure docker is running", "become": true}, "module_options": {"name": "docker", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "check if discourse is running", "module": "shell", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "check if discourse is running", "become": true, "register": "discourse_running"}, "module_options": "docker ps", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "checkout discourse source", "module": "git", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "checkout discourse source", "notify": ["stop discourse", "rebuild discourse"]}, "module_options": {"repo": "https://github.com/discourse/discourse_docker.git", "dest": "/var/discourse", "update": false, "accept_hostkey": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "copy discourse configuration app.yml", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "copy discourse configuration app.yml", "notify": ["rebuild discourse"]}, "module_options": {"src": "app.yml.j2", "dest": "/var/discourse/containers/app.yml", "owner": "discourse", "group": "sudo"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "install dependencies"}, "module_options": {"name": "{{ BACKUP_SWIFT_CONTAINER_DEPS }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create backup dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "create backup dir"}, "module_options": {"name": "{{ BACKUP_SWIFT_LOCAL_DIR }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "save pre backup script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "save pre backup script"}, "module_options": {"src": "backup-swift-pre.sh", "dest": "{{ BACKUP_SWIFT_PRE_DEST }}", "mode": "0700"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "save local rc", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "save local rc"}, "module_options": {"content": "{{ BACKUP_SWIFT_RC }}", "dest": "{{ BACKUP_SWIFT_RC_DEST }}", "mode": "0500"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "open HTTPS port on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "open HTTPS port on the firewall", "with_items": [443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "copy nginx site configuration", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "copy nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "mattermost-nginx.j2", "dest": "/etc/nginx/sites-available/mattermost"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/mattermost", "dest": "/etc/nginx/sites-enabled/mattermost", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create mattermost group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create mattermost group"}, "module_options": {"name": "mattermost", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create mattermost user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create mattermost user"}, "module_options": {"name": "mattermost", "group": "mattermost", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create directories", "with_items": ["{{ MATTERMOST_STATUS_DIR }}", "{{ MATTERMOST_LOG_DIR }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create config file if it does not exist yet", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create config file if it does not exist yet"}, "module_options": {"src": "config.json.j2", "dest": "{{ MATTERMOST_CONFIG_FILE }}", "owner": "mattermost", "group": "mattermost", "force": false}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "generate autolink configuration", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "generate autolink configuration"}, "module_options": {"src": "autolink.json.j2", "dest": "{{ MATTERMOST_STATUS_DIR }}/autolink.json", "owner": "mattermost", "group": "mattermost"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "create Mattermost systemd service file", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create Mattermost systemd service file"}, "module_options": {"src": "mattermost.service.j2", "dest": "/etc/systemd/system/mattermost.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "check whether previous installation was completed", "module": "stat", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "check whether previous installation was completed", "register": "mattermost_installation_complete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "check installed version of Mattermost", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "check installed version of Mattermost", "register": "mattermost_version"}, "module_options": {"dest": "{{ MATTERMOST_VERSION_FILE }}", "content": "{{ MATTERMOST_VERSION }}", "owner": "mattermost", "group": "mattermost"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "mark Mattermost installation as incomplete", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "mark Mattermost installation as incomplete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "download Mattermost distribution tarball", "module": "get_url", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "download Mattermost distribution tarball"}, "module_options": {"url": "{{ MATTERMOST_DOWNLOAD_URL }}", "dest": "{{ MATTERMOST_DOWNLOAD_DEST }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "stop Mattermost service (if it is already running)", "module": "service", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "stop Mattermost service (if it is already running)"}, "module_options": {"name": "mattermost", "state": "stopped"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "remove Mattermost installation directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "remove Mattermost installation directory"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_DIR }}/mattermost", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "unpack Mattermost distribution tarball", "module": "unarchive", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "unpack Mattermost distribution tarball"}, "module_options": {"src": "{{ MATTERMOST_DOWNLOAD_DEST }}", "remote_src": true, "dest": "{{ MATTERMOST_INSTALL_DIR }}", "owner": "mattermost", "group": "mattermost"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "create symlink to config file", "module": "file", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create symlink to config file"}, "module_options": {"src": "{{ MATTERMOST_CONFIG_FILE }}", "dest": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/config/config.json", "state": "link", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "download Mattermost autolink distribution tarball", "module": "get_url", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "download Mattermost autolink distribution tarball"}, "module_options": {"url": "{{ MATTERMOST_UNLINK_DOWNLOAD_URL }}", "dest": "{{ MATTERMOST_UNLINK_DOWNLOAD_DEST }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "create plugin directory", "module": "file", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create plugin directory"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/plugins", "state": "directory", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "unpack Mattermost autolink plugin", "module": "unarchive", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "unpack Mattermost autolink plugin"}, "module_options": {"src": "{{ MATTERMOST_UNLINK_DOWNLOAD_DEST }}", "remote_src": true, "dest": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/plugins", "owner": "mattermost", "group": "mattermost"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "start Mattermost service", "module": "service", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "start Mattermost service"}, "module_options": {"name": "mattermost", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "mark Mattermost installation as complete", "module": "file", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "mark Mattermost installation as complete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}", "state": "touch", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "find old Mattermost autolink installer files in /tmp", "module": "find", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "find old Mattermost autolink installer files in /tmp", "register": "all_mm_autolink", "tags": ["cleanup_tmp"]}, "module_options": {"path": "/tmp", "pattern": "mattermost-autolink.+\\.tar\\.gz", "recurse": false, "use_regex": true}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "find old Mattermost team installer files in /tmp", "module": "find", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "find old Mattermost team installer files in /tmp", "register": "all_mm_team", "tags": ["cleanup_tmp"]}, "module_options": {"path": "/tmp", "pattern": "mattermost-team.+\\.tar\\.gz", "recurse": false, "use_regex": true}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "select all but the latest 2 installers for cleanup", "module": "set_fact", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "select all but the latest 2 installers for cleanup", "tags": ["cleanup_tmp"]}, "module_options": {"autolink_delete": "{{ (all_mm_autolink.files|sort(attribute='mtime')|map(attribute='path')|list)[:all_mm_autolink.matched-2] }}", "team_delete": "{{ (all_mm_team.files|sort(attribute='mtime')|map(attribute='path')|list)[:all_mm_team.matched-2] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "perform tmp cleanup of old installer files", "module": "file", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "perform tmp cleanup of old installer files", "with_items": ["{{ autolink_delete }}", "{{ team_delete }}"], "tags": ["cleanup_tmp"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml", "options": {}, "module_options": "mattermost.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ensure nginx config directory exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "ensure nginx config directory exists"}, "module_options": {"path": "/etc/nginx/sites-enabled", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "prepare nginx site", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "prepare nginx site"}, "module_options": "src=lpd.site dest=/etc/nginx/sites-enabled/lpd", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "restart nginx", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "restart nginx"}, "module_options": "name=nginx state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "checkout repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "checkout repository"}, "module_options": {"repo": "{{ LPD_REPOSITORY }}", "version": "{{ LPD_REPOSITORY_VERSION }}", "dest": "{{ LPD_APP_LOCATION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "requirements": "{{ LPD_APP_LOCATION }}/requirements/base.txt", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "install gunicorn", "module": "pip", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install gunicorn"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "name": "Gunicorn==19.4.5", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "install mysql client", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install mysql client"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "name": "mysqlclient", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create settings", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create settings"}, "module_options": {"src": "lpd_settings.py", "dest": "{{ LPD_APP_LOCATION }}/app/local_settings.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "create static root", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create static root"}, "module_options": {"name": "{{ LPD_STATICFILES_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "create media root", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create media root"}, "module_options": {"name": "{{ LPD_MEDIA_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "collectstatic", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "collectstatic"}, "module_options": "{{ LPD_MANAGE_PY }} collectstatic --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "migrate", "module": "shell", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "migrate"}, "module_options": "{{ LPD_MANAGE_PY }} migrate --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create log download user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create log download user"}, "module_options": {"name": "{{ LPD_LOG_DOWNLOAD_USER }}", "home": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create ssh dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create ssh dir"}, "module_options": {"state": "directory", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{ LPD_LOG_DOWNLOAD_USER }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create authorized keys", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create authorized keys"}, "module_options": {"state": "touch", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{ LPD_LOG_DOWNLOAD_USER }}", "mode": 384}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "add authorized keys", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "add authorized keys", "with_items": ["{{ LPD_LOG_DOWNLOAD_AUTHORIZED_KEYS }}"]}, "module_options": {"dest": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "line": "{{ item }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create directory for the logs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create directory for the logs", "with_items": ["{{ LPD_LOG_DOWNLOAD_DB_DIR }}", "{{ LPD_LOG_DOWNLOAD_LOG_DIR }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{LPD_LOG_DOWNLOAD_USER}}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "lpd-pre-backup.sh", "dest": "/usr/local/sbin/lpd-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "copy logrotate", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "copy logrotate"}, "module_options": "src=logrotate.d dest=/etc/logrotate.d/lpd", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "format log download volume", "module": "filesystem", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "options": {"name": "format log download volume"}, "module_options": {"dev": "{{ LPD_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "fstype": "{{ LPD_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "resizefs": true}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "mount log download volume", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "options": {"name": "mount log download volume"}, "module_options": {"src": "{{ LPD_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}", "fstype": "{{ LPD_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure Gunicorn config directory exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "Ensure Gunicorn config directory exists"}, "module_options": {"path": "/etc/gunicorn.d", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "prepare config", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "prepare config"}, "module_options": {"src": "lpd.gunicorn", "dest": "/etc/gunicorn.d/lpd"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "restart gunicorn", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "restart gunicorn"}, "module_options": "name=gunicorn state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ LPD_REQUIREMENTS }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "install build deps", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "install build deps"}, "module_options": {"name": "{{ PYTHON_BUILD_DEP_REQIREMENTS }}", "state": "build-dep"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create lpd user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Create lpd user"}, "module_options": {"name": "{{ LPD_USER_NAME }}", "home": "{{ LPD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create log dir", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Create log dir"}, "module_options": {"name": "{{ LPD_LOG_DIR }}", "state": "directory", "owner": "{{ LPD_USER_NAME }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "deploy-app.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "deploy-gunicorn.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "configure_nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "log_volume.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "configure_log_download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Allow required ports", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install common packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "install common packages", "vars": {"packages": ["apache2", "build-essential", "git", "libffi-dev", "openssl", "python-dev", "python-pip", "python-setuptools"]}}, "module_options": {"name": "{{ packages }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install snapd", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Install snapd"}, "module_options": {"name": "snapd"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install certbot snap", "module": "command", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Install certbot snap"}, "module_options": "snap install certbot --classic", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Disable systemd timer", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Disable systemd timer"}, "module_options": {"name": "snap.certbot.renew.timer", "state": "stopped", "enabled": false}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "include `certbot-renew.sh` script", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "include `certbot-renew.sh` script", "become": true}, "module_options": {"src": "certbot-renew.sh", "dest": "/root/certbot-renew.sh", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create cron job to periodically renew certificates", "module": "cron", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Create cron job to periodically renew certificates"}, "module_options": {"name": "certbot renew", "user": "root", "job": "perl -e 'sleep int(rand(43200))' && /root/certbot-renew.sh", "minute": "0", "hour": "*/12", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Set MAILTO variable for certbot renew cron job", "module": "cron", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Set MAILTO variable for certbot renew cron job"}, "module_options": {"name": "MAILTO", "env": true, "job": "ops@opencraft.com", "user": "root", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Grafana \u2013 add apt key", "module": "apt_key", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 add apt key"}, "module_options": {"url": "https://packages.grafana.com/gpg.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Grafana \u2013 add apt repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 add apt repository"}, "module_options": {"repo": "deb https://packages.grafana.com/oss/deb stable main", "filename": "grafana"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Grafana \u2013 install Debian package", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 install Debian package"}, "module_options": {"name": "grafana", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Grafana \u2013 only listen on localhost", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 only listen on localhost"}, "module_options": {"path": "/etc/grafana/grafana.ini", "regexp": "http_addr.*=", "line": "http_addr = 127.0.0.1"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Grafana \u2013 start server", "module": "service", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 start server"}, "module_options": {"name": "grafana-server", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "copy Let's Encrypt stage CA cert", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "copy Let's Encrypt stage CA cert"}, "module_options": {"src": "lets-encrypt-fake-cert.crt", "dest": "{{ PROMETHEUS_LETSENCRYPT_STAGE_CA }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "configure rsyslog to send Prometheus logs to a separate file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "configure rsyslog to send Prometheus logs to a separate file"}, "module_options": {"content": ":programname, isequal, \"prometheus\"    /var/log/prometheus.log\n", "dest": "/etc/rsyslog.d/prometheus.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "configure log rotation for the Prometheus logs", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "configure log rotation for the Prometheus logs"}, "module_options": {"src": "logrotate", "dest": "/etc/logrotate.d/prometheus"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ensure prometheus service directory exists", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "ensure prometheus service directory exists"}, "module_options": {"path": "/etc/systemd/system/prometheus.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "set the nofile limit for prometheus service to a high number", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "set the nofile limit for prometheus service to a high number"}, "module_options": {"content": "[Service]\nLimitNOFILE=infinity\n", "dest": "/etc/systemd/system/prometheus.service.d/override.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {}, "module_options": "grafana.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "install apt packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "install apt packages"}, "module_options": {"name": ["ca-certificates", "dovecot-core", "libsasl2-modules", "postfix", "sasl2-bin"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "copy TLS certificate", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "copy TLS certificate"}, "module_options": {"dest": "{{ POSTFIX_TLS_CERT }}", "content": "{{ POSTFIX_TLS_CERT_CONTENT }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "copy TLS private key", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "copy TLS private key"}, "module_options": {"dest": "{{ POSTFIX_TLS_KEY }}", "content": "{{ POSTFIX_TLS_KEY_CONTENT }}", "owner": "root", "group": "ssl-cert", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "write Postfix main.cf configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Postfix main.cf configuration file"}, "module_options": {"dest": "/etc/postfix/main.cf", "src": "main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "write /etc/mailname", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write /etc/mailname"}, "module_options": {"dest": "/etc/mailname", "content": "{{ POSTFIX_MAILNAME }}\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "write /etc/aliases", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write /etc/aliases"}, "module_options": {"dest": "/etc/aliases", "src": "aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "configure sasl client passwords", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "configure sasl client passwords"}, "module_options": {"src": "client-passwd.j2", "dest": "{{ POSTFIX_SASL_CLIENT_PASSWORD_FILE }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "call postmap on sasl client password file", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "call postmap on sasl client password file"}, "module_options": "postmap \"{{ POSTFIX_SASL_CLIENT_PASSWORD_FILE }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "configure relay maps", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "configure relay maps"}, "module_options": {"src": "relay_maps.j2", "dest": "{{ POSTFIX_RELAY_MAPS_FILE }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "call postmap on relay maps file", "module": "command", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "call postmap on relay maps file"}, "module_options": "postmap \"{{ POSTFIX_RELAY_MAPS_FILE }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "write Dovecot master configuration file", "module": "copy", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot master configuration file"}, "module_options": {"dest": "/etc/dovecot/conf.d/10-master.conf", "src": "dovecot-master.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "write Dovecot auth configuration file", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot auth configuration file"}, "module_options": {"dest": "/etc/dovecot/conf.d/10-auth.conf", "src": "dovecot-auth.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "generate Dovecot password hashes", "module": "command", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "generate Dovecot password hashes", "register": "dovecot_users", "with_items": "{{ POSTFIX_SASL_USERS }}"}, "module_options": "doveadm pw -s SHA512-CRYPT -p {{ item.password }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "write Dovecot password file", "module": "copy", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot password file"}, "module_options": {"dest": "{{ POSTFIX_SASL_SERVER_PASSWORD_FILE }}", "content": "{% for item in dovecot_users.results -%}\n{{ item.item.user }}:{{ item.stdout }}\n{% endfor %}\n", "owner": "root", "group": "dovecot", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "restart services", "module": "service", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "restart services", "with_items": ["dovecot", "postfix"]}, "module_options": {"name": "{{ item }}", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "open SMTP port on the firewall", "module": "ufw", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "open SMTP port on the firewall"}, "module_options": {"rule": "allow", "port": 25, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install unbound and resolvconf", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml", "options": {"name": "Install unbound and resolvconf", "with_items": ["unbound", "resolvconf"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/unbound"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy the configuration for caching and forwarding", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml", "options": {"name": "Copy the configuration for caching and forwarding", "notify": ["restart unbound"]}, "module_options": {"src": "cache-and-forward.conf.j2", "dest": "{{ unbound_config_dir }}/cache-and-forward.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/unbound"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install dependencies", "tags": ["docker"]}, "module_options": {"name": ["apt-transport-https", "ca-certificates", "curl", "gnupg-agent", "software-properties-common", "python3-pip"], "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Docker official GPG key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Add Docker official GPG key", "tags": ["docker"]}, "module_options": {"url": "https://download.docker.com/linux/ubuntu/gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Verify that we have the key with the fingerprint", "module": "apt_key", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Verify that we have the key with the fingerprint", "tags": ["docker"]}, "module_options": {"id": "0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set up the stable repository", "module": "apt_repository", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Set up the stable repository", "tags": ["docker"]}, "module_options": {"repo": "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Update apt packages", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Update apt packages", "tags": ["docker"]}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install docker", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install docker", "notify": "Start docker on boot", "tags": ["docker"]}, "module_options": {"name": ["docker-ce", "docker-ce-cli", "containerd.io"], "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install Docker Python dependencies", "module": "pip", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install Docker Python dependencies"}, "module_options": {"name": ["docker", "docker-compose"]}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create \"docker\" group", "module": "group", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Create \"docker\" group", "tags": ["docker"]}, "module_options": {"name": "docker", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Add remote \"ubuntu\" user to \"docker\" group", "module": "user", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Add remote \"ubuntu\" user to \"docker\" group", "tags": ["docker"]}, "module_options": {"name": "ubuntu", "group": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install docker-compose", "module": "uri", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install docker-compose", "tags": ["docker"]}, "module_options": {"url": "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture}}", "dest": "/usr/local/bin/docker-compose", "status_code": "200, 304"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Give permissions to docker-compose", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Give permissions to docker-compose"}, "module_options": {"path": "/usr/local/bin/docker-compose", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create consul group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul group"}, "module_options": {"name": "consul", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create consul user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul user"}, "module_options": {"name": "consul", "group": "consul", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create consul-template directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul-template directories", "with_items": [{"path": "/etc/consul-template/config", "owner": "root"}, {"path": "/etc/consul-template/templates", "owner": "root"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "consul", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Determine current consul-template version", "module": "shell", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Determine current consul-template version", "register": "consul_template_current_version", "changed_when": false}, "module_options": "consul-template --version 2>&1 >/dev/null | cut -d\" \" -f 2 - | cut -b 2- -", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Download and unarchive the consul-template binary", "module": "unarchive", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Download and unarchive the consul-template binary", "when": "consul_template_current_version.rc != 0 or consul_template_current_version.stdout != consul_template_version"}, "module_options": {"src": "{{ consul_template_url }}", "dest": "{{ consul_template_bin_dir }}", "owner": "consul", "group": "consul", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Allow web ports on firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Allow web ports on firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set authorized key for CircleCI", "module": "authorized_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Set authorized key for CircleCI"}, "module_options": {"user": "ubuntu", "state": "present", "key": "{{ CI_SSH_PUBLIC_KEY }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "ansible.posix.authorized_key", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create the app directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Create the app directory"}, "module_options": {"path": "{{ APP_PATH }}", "state": "directory", "owner": "ubuntu", "group": "ubuntu", "mode": 509}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy the deployment script", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Copy the deployment script", "become_user": "ubuntu"}, "module_options": {"src": "deploy.sh", "dest": "{{ APP_PATH }}/", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Install the docker-compose file", "become_user": "ubuntu"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ APP_PATH }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install Docker cleanup cron job", "module": "cron", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Install Docker cleanup cron job", "become_user": "ubuntu"}, "module_options": {"name": "Remove unused Docker data", "job": "docker system prune -f", "special_time": "daily"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Generate the environment file", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Generate the environment file", "become_user": "ubuntu", "tags": "configuration"}, "module_options": {"src": "env.j2", "dest": "{{ APP_PATH }}/.env", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Start SprintCraft with docker-compose", "module": "docker_compose", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Start SprintCraft with docker-compose", "become_user": "ubuntu"}, "module_options": {"project_src": "{{ APP_PATH }}", "pull": true}, "executable": "docker_compose", "executable_type": "Module", "fqcn": "community.docker.docker_compose", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Restart SprintCraft services after reconfiguring them", "module": "docker_compose", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Restart SprintCraft services after reconfiguring them", "tags": ["never", "configuration"]}, "module_options": {"project_src": "{{ APP_PATH }}", "restarted": true, "services": ["django", "celeryworker"]}, "executable": "docker_compose", "executable_type": "Module", "fqcn": "community.docker.docker_compose", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create Consul config directory", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml", "options": {"name": "create Consul config directory"}, "module_options": {"path": "/etc/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/redis-exporter"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create Consul service definition file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml", "options": {"name": "create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ REDIS_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/redis-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/redis-exporter"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set up Consul Connect proxy endpoints for memcached and Redis", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml", "options": {"name": "Set up Consul Connect proxy endpoints for memcached and Redis", "vars": {"upstream_specs": "{{ appserver_memcached_upstream_specs }}{{ appserver_redis_upstream_specs }}"}}, "module_options": {"src": "consul-connect.service.j2", "dest": "/etc/systemd/system/consul-connect.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/appserver"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Start and enable the Consul Connect proxy", "module": "systemd", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml", "options": {"name": "Start and enable the Consul Connect proxy"}, "module_options": {"name": "consul-connect.service", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/appserver"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set login shell for the {{ www_user }} user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Set login shell for the {{ www_user }} user"}, "module_options": {"name": "{{ www_user }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create the {{ www_dir }} directory", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Create the {{ www_dir }} directory"}, "module_options": {"path": "{{ www_dir }}", "owner": "{{ www_user }}", "group": "{{ www_user }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Clone the {{ app_name }} repository", "module": "git", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Clone the {{ app_name }} repository", "become_user": "{{ www_user }}"}, "module_options": {"repo": "{{ app_repo }}", "dest": "{{ app_deploy_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install the virtualenv package", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install the virtualenv package"}, "module_options": {"name": "virtualenv", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create the virtualenv environment and install the requirements", "module": "pip", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Create the virtualenv environment and install the requirements"}, "module_options": {"requirements": "{{ app_deploy_dir }}/requirements.txt", "virtualenv": "{{ app_virtualenv_dir }}", "virtualenv_python": "python3.6"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install gunicorn", "module": "pip", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install gunicorn"}, "module_options": {"name": "gunicorn=={{ gunicorn_version }}", "virtualenv": "{{ app_virtualenv_dir }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install the script for running the application", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install the script for running the application", "become_user": "{{ www_user }}", "tags": "wsgi-app-env-file"}, "module_options": {"src": "run.sh", "dest": "{{ www_dir }}/{{ app_name}}_run.sh", "mode": 448, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install supervisor", "module": "apt", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install supervisor"}, "module_options": {"name": "supervisor", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install supervisor configuration", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install supervisor configuration"}, "module_options": {"src": "supervisor.conf", "dest": "/etc/supervisor/conf.d/{{ app_name }}.conf", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Restart supervisor", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Restart supervisor"}, "module_options": {"name": "supervisor", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy alert script", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Copy alert script"}, "module_options": {"src": "kibana_email_alert.sh.j2", "dest": "/usr/local/sbin/kibana_email_alert.sh", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "kibana_email_alert.service.j2", "dest": "/etc/systemd/system/kibana_email_alert.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Enable and start the systemd service to start on boot automatically", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Enable and start the systemd service to start on boot automatically"}, "module_options": {"name": "kibana_email_alert.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create Elasticsearch role", "module": "uri", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Create Elasticsearch role", "with_items": "{{ elasticsearch_create_roles }}", "when": "elasticsearch_create_roles is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/role/{{ item.name }}", "method": "POST", "body_format": "json", "body": "{{ item.permissions }}", "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create Elasticsearch user", "module": "uri", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Create Elasticsearch user", "with_items": "{{ elasticsearch_create_users }}", "when": "elasticsearch_create_users is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/{{ item.username }}", "method": "POST", "body_format": "json", "body": {"password": "{{ item.password }}", "roles": "{{ item.roles }}"}, "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Update password for Elasticsearch user", "module": "uri", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Update password for Elasticsearch user", "with_items": "{{ elasticsearch_create_users }}", "when": "elasticsearch_create_users is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/{{ item.username }}/_password", "method": "POST", "body_format": "json", "body": {"password": "{{ item.password }}"}, "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "openjdk-8-jdk"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Elasticsearch apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Add Elasticsearch apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Elasticsearch repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Add Elasticsearch repository"}, "module_options": {"repo": "{{ elasticsearch_repo }}"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install Elasticsearch", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch"}, "module_options": {"name": "{{ elasticsearch_package }}", "force": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create Elasticsearch directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Create Elasticsearch directories", "with_items": ["{{ elasticsearch_data_dir }}", "{{ elasticsearch_log_dir }}", "{{ elasticsearch_cfg_dir }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "elasticsearch", "group": "elasticsearch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 1", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 1", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"src": "http.p12.b64.j2", "dest": "{{ elasticsearch_cfg_dir }}/http.p12.b64"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 2", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 2", "args": {"creates": "{{ elasticsearch_cfg_dir }}/http.p12"}, "when": "elasticsearch_keystore|length > 0"}, "module_options": "base64 -d {{ elasticsearch_cfg_dir }}/http.p12.b64 > {{ elasticsearch_cfg_dir }}/http.p12", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 3", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 3", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"path": "{{ elasticsearch_cfg_dir }}/http.p12", "owner": "elasticsearch", "group": "elasticsearch", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 4", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 4", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"path": "{{ elasticsearch_cfg_dir }}/http.p12.b64", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure Elasticsearch", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Configure Elasticsearch", "notify": "restart elasticsearch"}, "module_options": {"src": "elasticsearch.yml.j2", "dest": "/etc/elasticsearch/elasticsearch.yml", "group": "elasticsearch", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Elasticsearch extra jvm options", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Elasticsearch extra jvm options", "notify": "restart elasticsearch", "when": "elasticsearch_extra_jvm_options|length > 0"}, "module_options": {"src": "50-extra-jvm.options.j2", "dest": "/etc/elasticsearch/jvm.options.d/50-extra-jvm.options", "group": "elasticsearch", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Set bootstrap password", "module": "shell", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Set bootstrap password", "when": "elasticsearch_password|length > 0"}, "module_options": "echo \"{{ elasticsearch_password }}\" | {{ elasticsearch_bin_dir }}/elasticsearch-keystore add -f -x 'bootstrap.password'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Start Elasticsearch", "module": "service", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Start Elasticsearch"}, "module_options": {"name": "elasticsearch", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Setup password for user kibana_system", "module": "uri", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Setup password for user kibana_system", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/kibana_system/_password", "method": "POST", "body_format": "json", "body": "{ \"password\":\"{{ kibana_elasticsearch_password }}\" }", "status_code": 200, "user": "elastic", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Open Elasticsearch ports on the firewall", "module": "ufw", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Open Elasticsearch ports on the firewall", "with_items": ["{{ elasticsearch_http_port }}"]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create Consul config directory", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "create Consul config directory"}, "module_options": {"path": "/etc/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create Consul service definition file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ NODE_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/node-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "enable nodeexporter", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "enable nodeexporter"}, "module_options": {"name": "nodeexporter.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create vault group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault group"}, "module_options": {"name": "vault", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create vault user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault user"}, "module_options": {"name": "vault", "group": "vault", "createhome": "{{ vault_user_createhome }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create vault directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault directories", "with_items": [{"path": "{{ vault_bin_dir }}", "owner": "root"}, {"path": "{{ vault_log_dir }}", "owner": "vault"}, {"path": "{{ vault_config_dir }}", "owner": "vault"}, {"path": "{{ vault_policy_dir }}", "owner": "vault"}, {"path": "{{ vault_tls_dir }}", "owner": "vault"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "vault", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy over Vault private TLS content", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Copy over Vault private TLS content", "with_items": [{"content": "{{ vault_tls_cert }}", "dest": "{{ vault_tcp_tls_cert_file }}"}, {"content": "{{ vault_tls_key }}", "dest": "{{ vault_tcp_tls_key_file }}"}, {"content": "{{ vault_tls_ca }}", "dest": "{{ vault_tcp_tls_client_ca_file }}"}], "no_log": true, "notify": "restart vault"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Determine current Vault version", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Determine current Vault version", "register": "vault_current_version", "changed_when": false}, "module_options": "vault version | cut -d\" \" -f 2 - | cut -b 2- -", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Download and unarchive the Vault binary", "module": "unarchive", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Download and unarchive the Vault binary", "when": "vault_current_version.rc != 0 or vault_current_version.stdout != vault_version", "register": "vault_binary", "notify": "restart vault"}, "module_options": {"src": "{{ vault_url }}", "dest": "{{ vault_bin_dir }}", "owner": "vault", "group": "vault", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Configure `vault` autocomplete", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Configure `vault` autocomplete", "become": false, "when": "vault_binary.changed", "ignore_errors": true}, "module_options": "vault -autocomplete-install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install Vault environment variables", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Install Vault environment variables", "become": false}, "module_options": {"src": "vault-env.j2", "dest": "/home/{{ ansible_ssh_user }}/.vault-env"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Source Vault environment variables", "module": "lineinfile", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Source Vault environment variables", "become": false}, "module_options": {"path": "/home/{{ ansible_ssh_user }}/.bashrc", "line": "source $HOME/.vault-env"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create Vault configuration file", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create Vault configuration file", "notify": "restart vault"}, "module_options": {"src": "config.hcl.j2", "dest": "{{ vault_config_dir }}/config.hcl", "group": "vault"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create Vault systemd service file", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create Vault systemd service file"}, "module_options": {"src": "vault.service.j2", "dest": "/etc/systemd/system/vault.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"name": "vault.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Open TCP port on firewall needed for Vault server-to-server communication", "module": "ufw", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Open TCP port on firewall needed for Vault server-to-server communication", "when": "vault_ufw"}, "module_options": {"rule": "allow", "port": "8200:8201", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Allow the mlock syscall to be used by the Vault binary", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Allow the mlock syscall to be used by the Vault binary", "register": "result", "changed_when": "'cap_ipc_lock set' in result.stdout"}, "module_options": "if getcap $(readlink -f {{ vault_bin_dir }}/vault) | grep -q '= cap_ipc_lock+ep' ; then\n  echo already set\nelse\n  setcap cap_ipc_lock=+ep $(readlink -f {{ vault_bin_dir }}/vault)\n  echo cap_ipc_lock set\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Allow web ports on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Allow web ports on the firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create the Matomo deployment and configuration directories", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Create the Matomo deployment and configuration directories", "with_items": ["{{ MATOMO_DOCKER_COMPOSE_DIR }}", "{{ MATOMO_CONFIG_DIR }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the docker-compose file"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install the docker-compose environment configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the docker-compose environment configuration file"}, "module_options": {"src": "matomo.env.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_ENV_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install the Matomo archive reports script to use in the cron job", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the Matomo archive reports script to use in the cron job"}, "module_options": {"src": "matomo_archive_reports.sh.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/matomo_archive_reports.sh", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Start the app with docker-compose", "module": "docker_service", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Start the app with docker-compose"}, "module_options": {"project_src": "{{ MATOMO_DOCKER_COMPOSE_DIR }}", "pull": true, "debug": true}, "executable": "docker_service", "executable_type": "Module", "fqcn": "community.general.docker_service", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Install the Matomo archive script cron job", "module": "cron", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the Matomo archive script cron job"}, "module_options": {"name": "Run the Matomo archive script", "job": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/matomo_archive_reports.sh", "special_time": "hourly", "user": "root", "cron_file": "matomo_archive_reports"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcloud | Load Distro and OS specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "options": {"name": "gcloud | Load Distro and OS specific variables", "vars": {"params": {"files": ["os/{{ ansible_distribution|lower }}.yml", "os/{{ ansible_os_family|lower }}.yml", "main.yml"], "paths": ["vars"]}}}, "module_options": "{{ lookup('first_found', params) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "gcloud | Install the google-cloud-sdk from {{ gcloud_install_type }}", "module": "include_tasks", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "options": {"name": "gcloud | Install the google-cloud-sdk from {{ gcloud_install_type }}"}, "module_options": "{{ gcloud_install_type }}/main.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Debian | Ensure bash completion is installed", "module": "apt", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Debian | Ensure bash completion is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "when": "ansible_os_family == \"Debian\""}, "module_options": "name=bash-completion", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "gcloud | Archive | RedHat | Ensure bash completion is installed", "module": "yum", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | RedHat | Ensure bash completion is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": ["bash-completion"]}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Ensure bash_completion.d directory exists", "module": "file", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Ensure bash_completion.d directory exists"}, "module_options": {"path": "/etc/bash_completion.d", "owner": "root", "group": "root", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "module": "file", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Link binaries to /usr/bin (like package install)"}, "module_options": {"src": "{{ gcloud_library_path }}/completion.bash.inc", "dest": "/etc/bash_completion.d/gcloud", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Ensure temp path exists", "module": "file", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Ensure temp path exists"}, "module_options": "path={{ gcloud_archive_path }} state=directory", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Extract Cloud SDK archive", "module": "unarchive", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Extract Cloud SDK archive"}, "module_options": {"src": "{{ gcloud_archive_url }}", "dest": "{{ gcloud_archive_path }}", "remote_src": true, "creates": "{{ gcloud_library_path }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "module": "file", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "loop": ["bq", "docker-credential-gcloud", "gcloud", "git-credential-gcloud.sh", "gsutil"], "when": "not gcloud_install_script"}, "module_options": {"src": "{{ gcloud_library_path }}/bin/{{ item }}", "dest": "/usr/bin/{{ item }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Add command completion", "module": "include_tasks", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Add command completion", "when": "gcloud_command_completion"}, "module_options": "command_completion.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Install into Path", "module": "command", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Install into Path", "when": "gcloud_install_script"}, "module_options": "{{ gcloud_archive_path }}/install.sh --quiet --usage-reporting {{ gcloud_usage_reporting | lower }} {% if gcloud_profile_path %}\n  --rc-path {{ gcloud_profile_path }}\n{% endif %} --command-completion {{ gcloud_command_completion | lower }} --path-update {{ gcloud_update_path | lower }} {% if gcloud_override_components | length > 0 %}--override-components\n  {% for component in gcloud_override_components %}{{ component }}\n    {% if loop.index < gcloud_override_components | length  %}\n    {% endif %}\n  {% endfor %}\n{% endif %} {% if gcloud_additional_components | length > 0 %}--additional-components\n  {% for component in gcloud_additional_components %}{{ component }}\n    {% if loop.index < gcloud_additional_components | length %}\n    {% endif %}\n  {% endfor %}\n{% endif %}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Look for existing Google Cloud SDK installation", "module": "stat", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Look for existing Google Cloud SDK installation", "register": "gcloud_status"}, "module_options": {"path": "{{ gcloud_archive_path }}/google-cloud-sdk/VERSION"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {}, "module_options": "var=gcloud_status", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Importing contents of {{ gcloud_archive_path }}/google-cloud-sdk/VERSION", "module": "slurp", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Importing contents of {{ gcloud_archive_path }}/google-cloud-sdk/VERSION", "register": "gcloud_installed_version_data"}, "module_options": {"src": "{{ gcloud_archive_path }}/google-cloud-sdk/VERSION"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Setting the gcloud_installed_version variable/fact", "module": "set_fact", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Setting the gcloud_installed_version variable/fact"}, "module_options": {"gcloud_installed_version": "{{ (gcloud_installed_version_data.content|b64decode|trim) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {}, "module_options": {"msg": "google-cloud-sdk: {{ gcloud_installed_version }} is installed"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 5, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"when": "gcloud_version == gcloud_installed_version"}, "module_options": {"msg": "Skipping installation of google-cloud-sdk version {{ gcloud_version }} when {{ gcloud_installed_version }} is already installed."}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "gcloud | Archive | Start installation", "module": "include_tasks", "index": 6, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Start installation", "when": "gcloud_installed_version is undefined or gcloud_version is version(gcloud_installed_version, '>')"}, "module_options": "archive_install.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "command", "index": 7, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "gcloud_install_comp_status", "changed_when": "'All components are up to date.' not in gcloud_install_comp_status.stderr_lines", "loop": "{{ gcloud_additional_components }}"}, "module_options": "gcloud components install {{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcloud | RHEL | Add an Apt signing key, uses whichever key is at the URL", "module": "yum_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | RHEL | Add an Apt signing key, uses whichever key is at the URL"}, "module_options": {"name": "google-cloud-sdk", "description": "Google Cloud SDK", "file": "google-cloud-sdk", "baseurl": "https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": ["https://packages.cloud.google.com/yum/doc/yum-key.gpg", "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "gcloud | RHEL | Install the google-cloud-sdk package", "module": "yum", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | RHEL | Install the google-cloud-sdk package", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=google-cloud-sdk update_cache=yes", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "loop": "{{ gcloud_additional_components }}"}, "module_options": "name=google-cloud-sdk-{{ item }} update_cache=yes", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcloud | Debian | Add an Apt signing key, uses whichever key is at the URL", "module": "apt_key", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Add an Apt signing key, uses whichever key is at the URL"}, "module_options": {"url": "{{ gcloud_apt_key }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "gcloud | Debian | Add the gcloud repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Add the gcloud repository"}, "module_options": {"repo": "deb {{ gcloud_apt_url }} {{ gcloud_apt_repo }} main", "state": "present", "filename": "google-cloud-sdk"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk package", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk package", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=google-cloud-sdk update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "loop": "{{ gcloud_additional_components }}"}, "module_options": "name=google-cloud-sdk-{{ item }} update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcloud | Start package installation for specific distro", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/main.yml", "options": {"name": "gcloud | Start package installation for specific distro"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "gcsfuse | Ensure gpg is installed", "module": "apt", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Ensure gpg is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=gnupg", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "gcsfuse | Add an apt signing key", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Add an apt signing key"}, "module_options": {"url": "https://packages.cloud.google.com/apt/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "gcsfuse | Add the apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Add the apt repository"}, "module_options": {"repo": "deb http://packages.cloud.google.com/apt gcsfuse-{{ ansible_distribution_release }} main", "state": "present", "filename": "gcsfuse"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "gcsfuse | Install gcsfuse", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Install gcsfuse", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=gcsfuse update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/main.yml", "options": {}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "create a global address for the load balancer.", "module": "gcp_compute_global_address", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a global address for the load balancer.", "register": "globaladdress"}, "module_options": {"name": "{{ gcp_http_lb_globaladdress }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_global_address", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_global_address", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create a http health check to verify lb working", "module": "gcp_compute_http_health_check", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a http health check to verify lb working", "register": "healthcheck"}, "module_options": {"name": "{{ gcp_http_lb_healthcheck }}", "healthy_threshold": 10, "port": 80, "timeout_sec": 2, "unhealthy_threshold": 5, "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_http_health_check", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_http_health_check", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create a backend service", "module": "gcp_compute_backend_service", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a backend service", "register": "backendservice"}, "module_options": {"name": "{{ gcp_http_lb_backendservice }}", "backends": [{"group": "{{ gcp_http_lb_backend.selfLink }}"}], "health_checks": ["{{ healthcheck.selfLink }}"], "enable_cdn": "{{ gcp_http_lb_cdn }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_backend_service", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_backend_service", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create a url map", "module": "gcp_compute_url_map", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a url map", "register": "urlmap"}, "module_options": {"name": "{{ gcp_http_lb_urlmap }}", "default_service": "{{ backendservice }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_url_map", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_url_map", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create a target http proxy", "module": "gcp_compute_target_http_proxy", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a target http proxy", "register": "httpproxy"}, "module_options": {"name": "{{ gcp_http_lb_httpproxy }}", "url_map": "{{ urlmap }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_target_http_proxy", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_target_http_proxy", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "create a global forwarding rule", "module": "gcp_compute_global_forwarding_rule", "index": 5, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a global forwarding rule", "register": "result"}, "module_options": {"name": "{{ gcp_http_lb_forwardingrule }}", "ip_address": "{{ globaladdress.address }}", "load_balancing_scheme": "EXTERNAL", "ip_protocol": "TCP", "port_range": "80-80", "target": "{{ httpproxy.selfLink }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_global_forwarding_rule", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_global_forwarding_rule", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Install the Python bindings for SELinux", "module": "yum", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Install the Python bindings for SELinux"}, "module_options": "name=libselinux-python state=present", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Add the Stackdriver repository", "module": "yum_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Add the Stackdriver repository"}, "module_options": {"name": "google-cloud-logging", "description": "Google Cloud Logging Agent Repository", "baseurl": "{{ stackdriver_log_yum_repo }}", "file": "google-cloud-logging", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": "{{ stackdriver_log_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Install Stackdriver agent", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Install Stackdriver agent", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_log_package_name }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Add the Stackdriver repository", "module": "apt_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Add the Stackdriver repository"}, "module_options": {"repo": "deb {{ stackdriver_log_apt_repo_url }} {{ stackdriver_log_apt_repo_name }} main", "filename": "google-cloud-logging", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Ensure Stackdriver's GPG key is available.", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Ensure Stackdriver's GPG key is available."}, "module_options": {"url": "{{ stackdriver_log_apt_repo_url }}/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Install the Stackdriver agent", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Install the Stackdriver agent", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_log_package_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Install the Stackdriver catch all config", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Install the Stackdriver catch all config", "when": "stackdriver_log_catch_all_conf"}, "module_options": {"name": "{{ stackdriver_log_config_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | OS Based Installation", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | OS Based Installation"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | Install the Stackdriver defaults file", "module": "template", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | Install the Stackdriver defaults file", "when": "stackdriver_http_proxy is defined or stackdriver_https_proxy is defined"}, "module_options": {"src": "default/google-fluentd", "dest": "/etc/default/google-fluentd"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Stackdriver Logging | Install the logging files", "module": "template", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | Install the logging files", "loop": "{{ stackdriver_log_files }}", "when": "stackdriver_log_files is defined", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"src": "source.conf", "dest": "/etc/google-fluentd/config.d/{{ item.name }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Install the Python bindings for SELinux", "module": "yum", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Install the Python bindings for SELinux"}, "module_options": "name=libselinux-python state=present", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Add the Stackdriver repository", "module": "yum_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Add the Stackdriver repository"}, "module_options": {"name": "google-cloud-monitoring", "description": "Google Cloud Monitoring Agent Repository", "baseurl": "{{ stackdriver_mon_yum_repo }}", "file": "google-cloud-monitoring", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": "{{ stackdriver_mon_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Install Stackdriver agent", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Install Stackdriver agent", "notify": "Stackdriver Monitoring | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_mon_package_name }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Add the Stackdriver repository", "module": "apt_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Add the Stackdriver repository"}, "module_options": {"repo": "deb {{ stackdriver_mon_apt_repo_url }} {{ stackdriver_mon_apt_repo_name }} main", "filename": "google-cloud-monitoring", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Ensure Stackdriver's GPG key is available.", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Ensure Stackdriver's GPG key is available."}, "module_options": {"url": "{{ stackdriver_mon_apt_repo_url }}/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Install the Stackdriver agent", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Install the Stackdriver agent", "notify": "Stackdriver Monitoring | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_mon_package_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, "{\"path\": \"testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | OS Based Installation", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/main.yml", "options": {"name": "Stackdriver Monitoring | OS Based Installation"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}}, "role_dict": {"pyenv": {"py/object": "struct4.Role", "name": "pyenv", "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv", "fqcn": "pyenv", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install prerequisites", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Install prerequisites"}, "module_options": {"name": "{{ pyenv_prerequisite_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the \"{{ pyenv_home }}\" directory is present and has the right permissions", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Ensure that the \"{{ pyenv_home }}\" directory is present and has the right permissions", "when": "pyenv_create_pyenv_home"}, "module_options": {"path": "{{ pyenv_home }}", "owner": "{{ pyenv_user }}", "group": "{{ pyenv_group }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone pyenv", "module": "git", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Clone pyenv"}, "module_options": {"repo": "https://github.com/pyenv/pyenv.git", "dest": "{{ pyenv_root }}", "version": "{{ pyenv_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone pyenv-virtualenv", "module": "git", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Clone pyenv-virtualenv"}, "module_options": {"repo": "https://github.com/pyenv/pyenv-virtualenv.git", "dest": "{{ pyenv_root }}/plugins/pyenv-virtualenv", "version": "{{ pyenv_virtualenv_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create shell configuration for pyenv", "module": "blockinfile", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Create shell configuration for pyenv"}, "module_options": {"path": "{{ pyenv_root }}/.pyenvrc", "create": true, "block": "export PYENV_ROOT=\"{{ pyenv_root }}\"\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\nif command -v pyenv 1>/dev/null 2>&1; then\neval \"$(pyenv init -)\"\nfi\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add code to load pyenv configuration in ~/.bashrc", "module": "blockinfile", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Add code to load pyenv configuration in ~/.bashrc"}, "module_options": {"create": true, "path": "{{ pyenv_home }}/.bashrc", "marker": "# {mark} ANSIBLE MANAGED BLOCK load_pyenv_configuration", "block": "source \"{{ pyenv_root }}/.pyenvrc\"\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the requested python versions", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Install the requested python versions", "with_items": "{{ pyenv_python_versions }}"}, "module_options": "{{ pyenv_root }}/bin/pyenv install -s {{ item }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a virtualenv environment", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/pyenv/tasks/main.yml", "options": {"name": "Create a virtualenv environment", "with_items": "{{ pyenv_virtualenv_environments }}"}, "module_options": ". {{ pyenv_root }}/.pyenvrc\npyenv virtualenv -f {{ item.python_version }} {{ item.virtualenv_name }}\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/pyenv"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "accounting": {"py/object": "struct4.Role", "name": "accounting", "defined_in": "testdata3/scm_repo/playbooks/roles/accounting", "fqcn": "accounting", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy screen session configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Copy screen session configuration"}, "module_options": {"src": "accounting-screenrc", "dest": "{{ accounting_screenrc_path }}", "owner": "ubuntu", "group": "ubuntu"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "accounting-screen.service", "dest": "/etc/systemd/system/accounting-screen.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable the systemd service to start on boot automatically", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Enable the systemd service to start on boot automatically"}, "module_options": {"name": "accounting-screen.service", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the systemd service right now", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/screen.yml", "options": {"name": "Start the systemd service right now"}, "module_options": {"name": "accounting-screen.service", "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy nginx site configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "options": {"name": "Copy nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "accounting-nginx.j2", "dest": "/etc/nginx/sites-available/accounting"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nginx site configuration", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/nginx.yml", "options": {"name": "Enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/accounting", "dest": "/etc/nginx/sites-enabled/accounting", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy Google Crafty service account PEM contents to a file", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Copy Google Crafty service account PEM contents to a file", "become_user": "www-data"}, "module_options": {"content": "{{ GOOGLE_CRAFTY_SERVICE_ACCOUNT_PEM }}", "dest": "{{ www_data_home_dir }}/google-crafty.pem", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Turn PEM file format into PKCS12", "module": "command", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Turn PEM file format into PKCS12", "become_user": "www-data"}, "module_options": "openssl pkcs12 -export -in google-crafty.pem -out {{ accounting_root_dir }}/.p12 -passin pass:notasecret -passout pass:notasecret chdir='{{ www_data_home_dir }}'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unneeded PEM file", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/google-integration.yml", "options": {"name": "Delete unneeded PEM file"}, "module_options": {"path": "{{ www_data_home_dir }}/google-crafty.pem", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set login shell for user www-data", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Set login shell for user www-data"}, "module_options": {"name": "www-data", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create {{ www_data_home_dir }}", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Create {{ www_data_home_dir }}"}, "module_options": {"path": "{{ www_data_home_dir }}", "owner": "www-data", "group": "www-data", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy shell configuration for user www-data", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Copy shell configuration for user www-data"}, "module_options": {"src": "bashrc", "dest": "{{ www_data_home_dir }}/.bashrc", "owner": "www-data", "group": "www-data"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory {{ www_data_home_dir }}/.ssh", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/base.yml", "options": {"name": "Create directory {{ www_data_home_dir }}/.ssh", "become_user": "www-data"}, "module_options": {"path": "{{ www_data_home_dir }}/.ssh", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive the wkhtmltopdf .tar.xz file", "module": "unarchive", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Unarchive the wkhtmltopdf .tar.xz file", "become_user": "www-data"}, "module_options": {"src": "{{ wkhtmltopdf_url_path }}", "dest": "{{ www_data_home_dir }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove the .tar.xz file", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Remove the .tar.xz file"}, "module_options": {"path": "{{ www_data_home_dir }}/{{ wkhtmltopdf_zipped_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the binary into the accounting repository root", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Copy the binary into the accounting repository root", "become_user": "www-data"}, "module_options": {"src": "{{ wkhtmltopdf_binary_path }}", "dest": "{{ accounting_root_dir }}/wkhtmltopdf", "mode": 365, "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove the decompressed directory", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/wkhtmltopdf.yml", "options": {"name": "Remove the decompressed directory"}, "module_options": {"path": "{{ www_data_home_dir }}/wkhtmltox", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the accounting repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Clone the accounting repository", "become_user": "www-data"}, "module_options": {"repo": "https://github.com/open-craft/accounting.git", "version": "master", "dest": "{{ accounting_root_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04"}, "module_options": {"repo": "ppa:deadsnakes/ppa"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install system dependencies for the accounting service", "module": "command", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install system dependencies for the accounting service"}, "module_options": "make install_system_dependencies chdir=\"{{ accounting_root_dir }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pew because pipenv requires it", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install pew because pipenv requires it", "become": true}, "module_options": {"name": "pew", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pipenv to later install python dependencies and virtual environments.", "module": "pip", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install pipenv to later install python dependencies and virtual environments.", "become": true}, "module_options": {"name": "pipenv", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install all python dependencies and the virtual environment.", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install all python dependencies and the virtual environment.", "become_user": "www-data", "environment": {"LC_ALL": "C.UTF-8", "LANG": "C.UTF-8", "PYTHONIOENCODING": "utf-8"}}, "module_options": "pipenv install --python 3.6 chdir=\"{{ accounting_root_dir }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the configuration/environment file for the accounting service", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/accounting.yml", "options": {"name": "Install the configuration/environment file for the accounting service", "become_user": "www-data"}, "module_options": {"src": "env.accounting.j2", "dest": "{{ accounting_root_dir }}/.env", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "base.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "accounting.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "wkhtmltopdf.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {"when": "{{ ACCOUNTING_ENV_TOKENS.ENABLE_GOOGLE }}"}, "module_options": "google-integration.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {}, "module_options": "screen.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open HTTPS port on the firewall", "module": "ufw", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/accounting/tasks/main.yml", "options": {"name": "Open HTTPS port on the firewall", "with_items": [443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/accounting"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "ocim": {"py/object": "struct4.Role", "name": "ocim", "defined_in": "testdata3/scm_repo/playbooks/roles/ocim", "fqcn": "ocim", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install system dependencies", "module": "command", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Install system dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}}, "module_options": "make install_system_dependencies", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the python requirements", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Install the python requirements", "become_user": "{{ www_user }}"}, "module_options": ". \"{{ pyenv_root }}/.pyenvrc\"\npyenv activate opencraft\npip install -r \"{{ opencraft_root_dir }}/requirements.txt\"\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy archived_cleanup script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Copy archived_cleanup script"}, "module_options": {"src": "archived_cleanup.j2", "dest": "{{ opencraft_root_dir }}/bin/archived_cleanup.sh", "owner": "{{ www_user }}", "group": "{{ www_group }}", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add calling management command delete_archived to the crontab", "module": "cron", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/common.yml", "options": {"name": "Add calling management command delete_archived to the crontab"}, "module_options": {"name": "run delete_archived", "special_time": "weekly", "job": "{{ opencraft_root_dir }}/bin/archived_cleanup.sh >> {{ opencraft_root_dir }}/log/delete_archived.log", "user": "{{ www_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {}, "module_options": "common.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create settings file if it does not exist yet", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create settings file if it does not exist yet", "become_user": "{{ www_user }}"}, "module_options": {"src": "{{ opencraft_root_dir }}/.env.test", "remote_src": true, "dest": "{{ opencraft_root_dir }}/.env", "force": false}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set HUEY_ALWAYS_EAGER to false", "module": "replace", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Set HUEY_ALWAYS_EAGER to false"}, "module_options": {"path": "{{ opencraft_root_dir }}/.env", "regexp": "^HUEY_ALWAYS_EAGER=true$", "replace": "HUEY_ALWAYS_EAGER=false"}, "executable": "replace", "executable_type": "Module", "fqcn": "ansible.builtin.replace", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install javascript dependencies", "module": "shell", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Install javascript dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}, "become_user": "{{ www_user }}"}, "module_options": "DEBIAN_FRONTEND=noninteractive make install_js_dependencies", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install database dependencies", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Install database dependencies", "args": {"chdir": "{{ opencraft_root_dir }}"}}, "module_options": "DEBIAN_FRONTEND=noninteractive make install_system_db_dependencies", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change directory to ~/opencraft on login", "module": "blockinfile", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Change directory to ~/opencraft on login", "become_user": "vagrant"}, "module_options": {"path": "~/.bashrc", "marker": "# {mark} ANSIBLE MANAGED BLOCK activate_virtualenv", "block": "pyenv activate opencraft\ncd ~/opencraft\n"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {}, "module_options": "echo \"update user set plugin='mysql_native_password' where user='root' and host='localhost'; flush privileges;\" | \\ sudo -H -u root mysql mysql\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Postgres user", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create Postgres user", "become_user": "postgres", "ignore_errors": true}, "module_options": "createuser -d vagrant", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow access to postgres from localhost without password", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Allow access to postgres from localhost without password"}, "module_options": {"dest": "/etc/postgresql/9.5/main/pg_hba.conf", "content": "local   all             postgres                                peer\nlocal   all             all                                     trust\nhost    all             all             127.0.0.1/32            trust\nhost    all             all             ::1/128                 trust\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart postgres", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Restart postgres"}, "module_options": "name=postgresql state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create postgres database", "module": "command", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/vagrant.yml", "options": {"name": "Create postgres database", "become_user": "vagrant"}, "module_options": "make create_db chdir={{ opencraft_root_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Print SWIFT deprecation warning", "module": "fail", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "Print SWIFT deprecation warning", "ignore_errors": true}, "module_options": {"msg": "SWIFT Backup module is deprecated and will be removed in a future version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "upload tarsnap key", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "upload tarsnap key"}, "module_options": {"src": "tarsnap.key.j2", "dest": "{{ OPENCRAFT_BACKUP_SWIFT_TARSNAP_KEY_LOCATION }}", "owner": "{{ www_user }}", "group": "root"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup folders", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "create backup folders", "with_items": ["{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "{{ OPENCRAFT_BACKUP_SWIFT_TARSNAP_CACHE_LOCATION }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ www_user }}", "group": "root", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mount volume", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "mount volume", "when": "OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE"}, "module_options": {"fstype": "ext4", "state": "mounted", "name": "{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "src": "{{ OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE }}"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "chmod volume", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/configure-swift-backups.yml", "options": {"name": "chmod volume", "when": "OPENCRAFT_BACKUP_SWIFT_MOUNT_DEVICE"}, "module_options": {"path": "{{ OPENCRAFT_BACKUP_SWIFT_TARGET }}", "owner": "{{ www_user }}", "group": "root", "recurse": "yes", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set login shell for user {{ www_user }}", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Set login shell for user {{ www_user }}"}, "module_options": {"name": "{{ www_user }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create {{ www_data_home_dir }}", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Create {{ www_data_home_dir }}"}, "module_options": {"path": "{{ www_data_home_dir }}", "owner": "{{ www_user }}", "group": "{{ www_group }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy shell configuration for user {{ www_user }}", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy shell configuration for user {{ www_user }}"}, "module_options": {"src": "bashrc", "dest": "{{ www_data_home_dir }}/.bashrc", "owner": "{{ www_user }}", "group": "{{ www_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the opencraft repository", "module": "git", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Clone the opencraft repository", "become_user": "{{ www_user }}"}, "module_options": {"repo": "https://github.com/open-craft/opencraft.git", "dest": "{{ opencraft_root_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the configuration/environment file", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the configuration/environment file", "become_user": "{{ www_user }}", "tags": "ocim-env-file"}, "module_options": {"src": "env.j2", "dest": "{{ opencraft_root_dir }}/.env", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {}, "module_options": "common.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the venv wrapper script", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the venv wrapper script", "become_user": "{{ www_user }}"}, "module_options": {"src": "venv_exec.j2", "dest": "{{ pyenv_root }}/shims/exec", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory {{ www_data_home_dir }}/.ssh", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Create directory {{ www_data_home_dir }}/.ssh", "become_user": "{{ www_user }}"}, "module_options": {"path": "{{ www_data_home_dir }}/.ssh", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the SSH private key used for deploying instances.", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Install the SSH private key used for deploying instances.", "become_user": "{{ www_user }}"}, "module_options": {"content": "{{ OPENCRAFT_OPENSTACK_SSH_KEY }}", "dest": "{{ www_data_home_dir }}/.ssh/id_rsa", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy screen session configuration", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy screen session configuration"}, "module_options": {"src": "ocim-screenrc", "dest": "{{ opencraft_screenrc_path }}", "owner": "{{ session_user }}", "group": "{{ session_user_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "ocim-screen.service", "dest": "/etc/systemd/system/ocim-screen.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"daemon-reload": true, "name": "ocim-screen.service", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/ocim/tasks/main.yml", "options": {"when": "OPENCRAFT_BACKUP_SWIFT_ENABLED"}, "module_options": "configure-swift-backups.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/ocim"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "geerlingguy.memcached": {"py/object": "struct4.Role", "name": "geerlingguy.memcached", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.memcached", "fqcn": "geerlingguy.memcached", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "hx-annotations": {"py/object": "struct4.Role", "name": "hx-annotations", "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations", "fqcn": "hx-annotations", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install system packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install system packages", "become": true}, "module_options": {"update_cache": true, "cache_valid_time": 43200, "name": "{{ required_system_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ servce_group }} service group exists", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure {{ servce_group }} service group exists"}, "module_options": {"name": "{{ service_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ service_user }} service user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure {{ service_user }} service user"}, "module_options": {"name": "{{ service_user }}", "comment": "{{ service_name }} service user", "group": "{{ service_group }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create service directories", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create service directories", "become": true, "with_items": "{{ service_directories }}"}, "module_options": {"path": "{{ item }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pre-backup script", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create pre-backup script", "become": true}, "module_options": {"src": "pre_backup.sh.j2", "dest": "{{ service_bin_dir }}/pre_backup", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 484, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create service initialization script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create service initialization script", "become": true}, "module_options": {"src": "init_service.py.j2", "dest": "{{ service_bin_dir }}/init_service.py", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone {{ service_name }} repository", "module": "git", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Clone {{ service_name }} repository", "become": true, "become_user": "{{ service_user }}"}, "module_options": {"repo": "{{ service_git_repo }}", "version": "{{ service_git_revision }}", "dest": "{{ service_install_dir }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtualenv for {{ service_name }}", "module": "pip", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create virtualenv for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "requirements": "{{ service_install_dir }}/requirements.txt", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install {{ service_name }} service", "module": "pip", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install {{ service_name }} service", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "name": ".", "editable": true}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dotenv file for {{ service_name }}", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create dotenv file for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"src": "dotenv.j2", "dest": "{{ service_dotenv_path }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 416, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure .bashrc set for {{ service_name }}", "module": "blockinfile", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure .bashrc set for {{ service_name }}", "become_user": "{{ service_user }}"}, "module_options": {"dest": "/home/{{ service_user }}/.bashrc", "block": "export {{ service_name | upper }}_DOTENV_PATH={{ service_dotenv_path }}\nsource {{ service_virtualenv_dir }}/bin/activate\ncd {{ service_install_dir }}\n", "backup": true, "state": "present"}, "executable": "blockinfile", "executable_type": "Module", "fqcn": "ansible.builtin.blockinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect static assets for {{ service_name }}", "module": "django_manage", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Collect static assets for {{ service_name }}", "become": true, "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "collectstatic"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Run migrations for {{ service_name }}", "module": "django_manage", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Run migrations for {{ service_name }}", "become": true, "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "migrate"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Initialize service for {{ service_name }}", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Initialize service for {{ service_name }}", "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}"}, "module_options": ". {{ service_virtualenv_dir }}/bin/activate\ncd {{ service_install_dir }}\npython manage.py shell < {{ service_bin_dir }}/init_service.py\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create LTI consumer pair", "module": "django_manage", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create LTI consumer pair", "become_user": "{{ service_user }}", "environment": "{{ service_environment_settings }}", "when": "lti_create_consumer_key_pair is defined and lti_create_consumer_key_pair"}, "module_options": {"app_path": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "command": "create_consumer_pair --consumer '{{ annotation_db_key }}' --secret '{{ annotation_db_secret }}' --expire_in_weeks 260"}, "executable": "django_manage", "executable_type": "Module", "fqcn": "community.general.django_manage", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Ensure cronjob exists to clear sessions", "module": "cron", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure cronjob exists to clear sessions"}, "module_options": {"name": "clear Django sessions", "user": "{{ service_user }}", "hour": "7", "minute": "0", "state": "present", "job": "{{ service_name | upper }}_DOTENV_PATH={{ service_dotenv_path }} {{ service_virtualenv_dir }}/bin/python {{ service_install_dir }}/manage.py clearsessions >> {{ service_data_dir }}/clearsessions.log 2>&1\n"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gunicorn in {{ service_name }} virtualenv", "module": "pip", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Install gunicorn in {{ service_name }} virtualenv", "become_user": "{{ service_user }}"}, "module_options": {"chdir": "{{ service_install_dir }}", "virtualenv": "{{ service_virtualenv_dir }}", "name": "gunicorn==20.1.0", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create gunicorn configuration", "module": "template", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create gunicorn configuration", "become_user": "{{ service_user }}"}, "module_options": {"src": "start_gunicorn.j2", "dest": "{{ service_bin_dir }}/start_gunicorn", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure supervisor service is running", "module": "service", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure supervisor service is running"}, "module_options": {"name": "supervisor", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create supervisor config for {{ service_name }} service", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create supervisor config for {{ service_name }} service"}, "module_options": {"src": "{{ 'supervisor.conf.asgi.j2' if websockets is defined and websockets.service_daphne is defined else 'supervisor.conf.wsgi.j2' }}", "dest": "/etc/supervisor/conf.d/{{ service_name }}.conf", "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create socket direcotry", "module": "file", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Create socket direcotry", "when": "websockets is defined and websockets.service_daphne is defined"}, "module_options": {"path": "{{ websockets.service_daphne.socket_dir }}", "owner": "{{ service_user }}", "group": "{{ service_group }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart supervisor service", "module": "service", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Restart supervisor service"}, "module_options": {"name": "supervisor", "state": "restarted", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set worker_connection in /etc/nginx/nginx.conf", "module": "lineinfile", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Set worker_connection in /etc/nginx/nginx.conf", "when": "websockets.nginx is defined"}, "module_options": {"path": "/etc/nginx/nginx.conf", "regexp": "worker_connections.*", "line": "worker_connections {{ websockets.nginx.worker_connections }};", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set worker_rlimit_nofile in /etc/nginx/nginx.conf", "module": "lineinfile", "index": 23, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Set worker_rlimit_nofile in /etc/nginx/nginx.conf", "when": "websockets.nginx is defined"}, "module_options": {"path": "/etc/nginx/nginx.conf", "regexp": "worker_rlimit_nofile.*", "line": "worker_rlimit_nofile {{ websockets.nginx.worker_rlimit_nofile }};", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure soft nproc is set in /etc/security/limits.conf", "module": "lineinfile", "index": 24, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure soft nproc is set in /etc/security/limits.conf", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/security/limits.conf", "regexp": "^\\*[ \\t]+soft[ \\t]+nproc[ \\t]+{{ websockets.system_limits_conf.soft_nproc }}", "line": "* soft nproc {{ websockets.system_limits_conf.soft_nproc }}", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure soft nofile is set in /etc/security/limits.conf", "module": "lineinfile", "index": 25, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure soft nofile is set in /etc/security/limits.conf", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/security/limits.conf", "regexp": "^\\*[ \\t]+soft[ \\t]+nofile[ \\t]+{{ websockets.system_limits_conf.soft_nofile }}", "line": "* soft nofile {{ websockets.system_limits_conf.soft_nofile }}", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/pam.d/common-session is configured", "module": "lineinfile", "index": 26, "defined_in": "testdata3/scm_repo/playbooks/roles/hx-annotations/tasks/main.yml", "options": {"name": "Ensure /etc/pam.d/common-session is configured", "when": "websockets.system_limits_conf is defined"}, "module_options": {"path": "/etc/pam.d/common-session", "regexp": "session[ \\t]+required[ \\t]+pam_limits.so", "line": "session required pam_limits.so", "backup": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/hx-annotations"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "geerlingguy.postgresql": {"py/object": "struct4.Role", "name": "geerlingguy.postgresql", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.postgresql", "fqcn": "geerlingguy.postgresql", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "link-shortener": {"py/object": "struct4.Role", "name": "link-shortener", "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener", "fqcn": "link-shortener", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create link-shortener group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create link-shortener group"}, "module_options": {"name": "link-shortener"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create link-shortener user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create link-shortener user"}, "module_options": {"name": "link-shortener", "group": "link-shortener", "home": "{{ LINK_SHORTENER_HOME }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create ~/.ssh directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create ~/.ssh directory"}, "module_options": {"path": "{{ LINK_SHORTENER_HOME }}/.ssh", "state": "directory", "owner": "link-shortener", "group": "link-shortener"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy the deploy key for accessing the link shortener repository", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "copy the deploy key for accessing the link shortener repository"}, "module_options": {"content": "{{ LINK_SHORTENER_DEPLOY_KEY }}", "dest": "{{ LINK_SHORTENER_HOME }}/.ssh/id_rsa", "owner": "link-shortener", "group": "link-shortener", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check out the link shortener git repository", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "check out the link shortener git repository", "become_user": "link-shortener"}, "module_options": {"repo": "{{ LINK_SHORTENER_REPO }}", "version": "{{ LINK_SHORTENER_BRANCH }}", "dest": "{{ LINK_SHORTENER_HOME }}/link-shortener", "ssh_opts": "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o CheckHostIP=no"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create symlink to the nginx config", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create symlink to the nginx config", "notify": ["reload nginx"]}, "module_options": {"src": "{{ LINK_SHORTENER_HOME }}/link-shortener/nginx-configuration", "dest": "/etc/nginx/sites-available/link-shortener", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create symlink to SSL certificate", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "create symlink to SSL certificate"}, "module_options": {"src": "{{ LINK_SHORTENER_HOME }}/link-shortener/link-shortener-cert.pem", "dest": "/etc/ssl/certs/link-shortener-cert.pem", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy SSL private key", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "copy SSL private key"}, "module_options": {"content": "{{ LINK_SHORTENER_SSL_PRIVATE_KEY }}", "dest": "/etc/ssl/private/link-shortener-key.pem", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/link-shortener/tasks/main.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/link-shortener", "dest": "/etc/nginx/sites-enabled/link-shortener", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/link-shortener"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "newrelic_infra": {"py/object": "struct4.Role", "name": "newrelic_infra", "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra", "fqcn": "newrelic_infra", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "ensure /etc/newrelic-infra.yml is present", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure /etc/newrelic-infra.yml is present"}, "module_options": {"src": "newrelic-infra.yml.j2", "dest": "/etc/newrelic-infra.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure newrelic apt repository gpg key is added", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic apt repository gpg key is added"}, "module_options": {"url": "https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure newrelic apt repository is registered", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic apt repository is registered"}, "module_options": {"repo": "deb [arch=amd64] https://download.newrelic.com/infrastructure_agent/linux/apt xenial main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure newrelic infra plugin is installed", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/newrelic_infra/tasks/main.yml", "options": {"name": "ensure newrelic infra plugin is installed"}, "module_options": {"name": "newrelic-infra", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/newrelic_infra"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "kibana": {"py/object": "struct4.Role", "name": "kibana", "defined_in": "testdata3/scm_repo/playbooks/roles/kibana", "fqcn": "kibana", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "apt-transport-https"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/7.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Kibana", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install Kibana"}, "module_options": {"name": "kibana"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Kibana directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Configure Kibana directories", "with_items": [{"path": "{{ kibana_config_dir }}", "owner": "root"}, {"path": "{{ kibana_data_dir }}", "owner": "kibana"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "kibana", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ kibana_config_dir }}/elasticsearch-ca.pem", "owner": "kibana", "group": "kibana", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Kibana", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Configure Kibana", "notify": "restart kibana"}, "module_options": {"src": "kibana.yml.j2", "dest": "/etc/kibana/kibana.yml", "group": "kibana"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Kibana is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana/tasks/main.yml", "options": {"name": "Ensure Kibana is started and enabled at boot"}, "module_options": {"name": "kibana", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "wordpress": {"py/object": "struct4.Role", "name": "wordpress", "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress", "fqcn": "wordpress", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Allow web ports on firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Allow web ports on firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Copy nginx global configuration", "module": "synchronize", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Copy nginx global configuration"}, "module_options": "src=\"global/\" dest=/etc/nginx/global checksum=yes delete=yes owner=no group=no", "executable": "synchronize", "executable_type": "Module", "fqcn": "ansible.posix.synchronize", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "install passlib for htpasswd generation", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "install passlib for htpasswd generation"}, "module_options": {"name": "python3-passlib"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate htpasswd file", "module": "htpasswd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "generate htpasswd file"}, "module_options": {"path": "{{ NGINX_WP_AUTH_HTPASSWD_PATH }}", "username": "{{ NGINX_WP_AUTH_USERNAME }}", "password": "{{ NGINX_WP_AUTH_PASSWORD }}"}, "executable": "htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add auth basic credentials to global configuration", "module": "command", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "add auth basic credentials to global configuration"}, "module_options": "sed -i '/try_files $uri $uri\\/ \\/index.php?$args;/a auth_basic \"Restricted\";\\nauth_basic_user_file {{ NGINX_WP_AUTH_HTPASSWD_PATH }};' /etc/nginx/global/wordpress.conf", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add site nginx configurations", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Add site nginx configurations", "with_items": [{"template": "wordpress", "hostname": "{{ LANDING_SITE_HOSTNAME }}"}, {"template": "maintenance", "hostname": "{{ MAINTENANCE_SITE_HOSTNAME }}"}, {"template": "default", "hostname": "{{ DEFAULT_SITE_HOSTNAME }}"}]}, "module_options": {"src": "../templates/{{ item.template }}-nginx.j2", "dest": "/etc/nginx/sites-available/{{ item.hostname }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nginx site configurations", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/nginx.yml", "options": {"name": "Enable nginx site configurations", "with_items": ["{{ LANDING_SITE_HOSTNAME }}", "{{ MAINTENANCE_SITE_HOSTNAME }}", "{{ DEFAULT_SITE_HOSTNAME }}"], "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/{{ item }}.conf", "dest": "/etc/nginx/sites-enabled/{{ item }}.conf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Install dependencies", "with_items": ["unzip", "mysql-client", "build-essential", "python3-dev", "libmysqlclient-dev", "python3-mysqldb", "python3-pip"]}, "module_options": {"name": "{{ item }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Python MySQL module", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Install the Python MySQL module"}, "module_options": {"name": "mysqlclient"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure .ssh directory exists for www-data user", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Ensure .ssh directory exists for www-data user"}, "module_options": {"path": "/var/www/.ssh/", "state": "directory", "owner": "www-data", "group": "www-data"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create key file", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Create key file", "no_log": true}, "module_options": {"dest": "/var/www/.ssh/id_rsa", "content": "{{ WORDPRESS_THEME_DEPLOY_KEY }}", "owner": "www-data", "group": "www-data", "mode": "0600"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Evaluating the authentication agent & adding the key...", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Evaluating the authentication agent & adding the key..."}, "module_options": "eval \"$(ssh-agent)\"\nssh-add /var/www/.ssh/id_rsa\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy database dump", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Copy database dump", "when": "WORDPRESS_DATABASE_RESTORE"}, "module_options": "cp {{ WORDPRESS_DATABASE_RESTORE_BACKUP_PATH }} /tmp/db_dump.sql", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restore database backup", "module": "mysql_db", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Restore database backup", "when": "WORDPRESS_DATABASE_RESTORE"}, "module_options": {"name": "{{ WORDPRESS_DATABASE_NAME }}", "login_user": "{{ WORDPRESS_DATABASE_USER }}", "login_password": "{{ WORDPRESS_DATABASE_PASSWORD }}", "login_host": "{{ WORDPRESS_DATABASE_HOST }}", "state": "import", "target": "/tmp/db_dump.sql"}, "executable": "mysql_db", "executable_type": "Module", "fqcn": "community.mysql.mysql_db", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"when": "WORDPRESS_DEPLOY", "notify": ["reload nginx"]}, "module_options": "deploy.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy content backup", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Copy content backup"}, "module_options": "cp {{ WORDPRESS_UPLOADS_RESTORE_BACKUP_PATH }} /tmp/uploads.zip", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract content backup", "module": "unarchive", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"name": "Extract content backup"}, "module_options": {"src": "/tmp/uploads.zip", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/wordpress.yml", "options": {"when": "WORDPRESS_FULL_RESTORE", "notify": ["reload nginx"]}, "module_options": "restore.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy full backup", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "options": {"name": "Copy full backup"}, "module_options": {"src": "{{ WORDPRESS_FULL_BACKUP_PATH }}", "dest": "/tmp/uploads.zip"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract full backup", "module": "unarchive", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/restore.yml", "options": {"name": "Extract full backup"}, "module_options": {"src": "/tmp/uploads.zip", "dest": "/var/www/", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create server directories", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Create server directories", "with_items": ["{{ LANDING_SITE_HOSTNAME }}", "{{ DEFAULT_SITE_HOSTNAME }}", "{{ MAINTENANCE_SITE_HOSTNAME }}"]}, "module_options": {"path": "/var/www/{{ item }}", "state": "directory", "owner": "www-data", "group": "www-data", "mode": 509}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and extract latest version of wordpress", "module": "unarchive", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Download and extract latest version of wordpress"}, "module_options": {"src": "https://wordpress.org/latest.zip", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Move files to correct directory", "module": "shell", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Move files to correct directory", "become_user": "www-data"}, "module_options": "cp -r /var/www/{{ LANDING_SITE_HOSTNAME }}/wordpress/. /var/www/{{ LANDING_SITE_HOSTNAME }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Create configuration file"}, "module_options": {"src": "../templates/wp-config.php.j2", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-config.php", "owner": "www-data", "group": "www-data", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and install plugins from list", "module": "unarchive", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Download and install plugins from list", "with_items": "{{ WORDPRESS_INSTALL_PLUGINS }}"}, "module_options": {"src": "{{ item }}", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/plugins", "owner": "www-data", "group": "www-data", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone compiled theme", "module": "git", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/deploy.yml", "options": {"name": "Clone compiled theme", "become_user": "www-data", "when": "WORDPRESS_THEME_DEPLOY"}, "module_options": {"repo": "{{ WORDPRESS_THEME_REPO }}", "version": "{{ WORDPRESS_THEME_VERSION }}", "dest": "/var/www/{{ LANDING_SITE_HOSTNAME }}/wp-content/themes/opencraftv2", "accept_hostkey": true, "force": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress/tasks/main.yml", "options": {}, "module_options": "wordpress.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "wordpress-docker": {"py/object": "struct4.Role", "name": "wordpress-docker", "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker", "fqcn": "wordpress-docker", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create the WordPress deployment and the document root directories", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Create the WordPress deployment and the document root directories", "with_items": ["{{ WORDPRESS_DOCKER_COMPOSE_DIR }}", "{{ WORDPRESS_DOCUMENT_ROOT }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install the docker-compose file"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ WORDPRESS_DOCKER_COMPOSE_DIR }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose environment configuration file", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install the docker-compose environment configuration file"}, "module_options": {"src": "wordpress.env.j2", "dest": "{{ WORDPRESS_DOCKER_COMPOSE_ENV_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install FPM's upload configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install FPM's upload configuration file"}, "module_options": {"src": "uploads.ini.j2", "dest": "{{ WORDPRESS_FPM_UPLOAD_SETTINGS_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the app with docker-compose", "module": "docker_service", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Start the app with docker-compose"}, "module_options": {"project_src": "{{ WORDPRESS_DOCKER_COMPOSE_DIR }}", "pull": true, "debug": true}, "executable": "docker_service", "executable_type": "Module", "fqcn": "community.general.docker_service", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Install nginx", "module": "import_role", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Install nginx"}, "module_options": {"name": "common-server-init", "tasks_from": "nginx"}, "executable": "common-server-init", "executable_type": "Role", "fqcn": "common-server-init", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add nginx site configuration", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Add nginx site configuration"}, "module_options": {"src": "nginx.conf.j2", "dest": "/etc/nginx/sites-available/{{ WORDPRESS_SITE_DOMAIN }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable nginx site configuration", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Enable nginx site configuration"}, "module_options": {"src": "/etc/nginx/sites-available/{{ WORDPRESS_SITE_DOMAIN }}.conf", "dest": "/etc/nginx/sites-enabled/{{ WORDPRESS_SITE_DOMAIN }}.conf", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload nginx", "module": "service", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wordpress-docker/tasks/main.yml", "options": {"name": "Reload nginx"}, "module_options": {"name": "nginx", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/wordpress-docker"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "logstash": {"py/object": "struct4.Role", "name": "logstash", "defined_in": "testdata3/scm_repo/playbooks/roles/logstash", "fqcn": "logstash", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "openjdk-8-jdk"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/7.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Logstash", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Logstash"}, "module_options": {"name": "logstash"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Logstash TLS details", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Logstash TLS details", "with_items": [{"content": "{{ logstash_ca_cert }}", "dest": "{{ logstash_config_dir }}/ca.crt"}, {"content": "{{ logstash_cert }}", "dest": "{{ logstash_config_dir }}/logstash.crt"}, {"content": "{{ logstash_key }}", "dest": "{{ logstash_config_dir }}/logstash.key"}], "no_log": true, "notify": "restart logstash"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}", "mode": 288, "group": "logstash"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ logstash_config_dir }}/elasticsearch-ca.pem", "owner": "logstash", "group": "logstash", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Logstash", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Configure Logstash", "notify": "restart logstash"}, "module_options": {"src": "logstash.conf.j2", "dest": "{{ logstash_config_dir }}/conf.d/logstash.conf", "group": "logstash"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Logstash is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Ensure Logstash is started and enabled at boot"}, "module_options": {"name": "logstash", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open Logstash ports on the firewall", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/logstash/tasks/main.yml", "options": {"name": "Open Logstash ports on the firewall", "with_items": ["tcp", "udp"]}, "module_options": {"rule": "allow", "port": 5044, "proto": "{{ item }}"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/logstash"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "redis": {"py/object": "struct4.Role", "name": "redis", "defined_in": "testdata3/scm_repo/playbooks/roles/redis", "fqcn": "redis", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install build dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "install build dependencies", "with_items": ["libssl-dev", "libjemalloc-dev", "build-essential"]}, "module_options": {"name": "{{item}}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open redis port on the firewall", "module": "ufw", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "open redis port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ redis_port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add redis backup script", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/redis/tasks/main.yml", "options": {"name": "add redis backup script"}, "module_options": {"src": "{{ REDIS_BACKUP_COMMAND }}", "dest": "{{ REDIS_SCRIPTS_DIR }}/{{ REDIS_BACKUP_COMMAND }}", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/redis"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "filebeat": {"py/object": "struct4.Role", "name": "filebeat", "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat", "fqcn": "filebeat", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "apt-transport-https"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic apt repository pin", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic apt repository pin"}, "module_options": {"src": "elastic.preferences.j2", "dest": "/etc/apt/preferences.d/artifacts_elastic_co_packages_6_x_apt"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb https://artifacts.elastic.co/packages/6.x/apt stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Filebeat", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat"}, "module_options": {"name": "filebeat"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Filebeat TLS details", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat TLS details", "with_items": [{"content": "{{ filebeat_ca_cert }}", "dest": "{{ filebeat_config_dir }}/ca.crt"}, {"content": "{{ filebeat_cert }}", "dest": "{{ filebeat_config_dir }}/filebeat.crt"}, {"content": "{{ filebeat_key }}", "dest": "{{ filebeat_config_dir }}/filebeat.key"}], "no_log": true, "notify": "restart filebeat"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Filebeat configuration", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Install Filebeat configuration", "notify": "restart filebeat"}, "module_options": {"src": "filebeat.yml.j2", "dest": "{{ filebeat_config_dir }}/filebeat.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Filebeat is started and enabled at boot", "module": "service", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/filebeat/tasks/main.yml", "options": {"name": "Ensure Filebeat is started and enabled at boot"}, "module_options": {"name": "filebeat", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/filebeat"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "forward-server-mail": {"py/object": "struct4.Role", "name": "forward-server-mail", "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail", "fqcn": "forward-server-mail", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ FORWARD_MAIL_OS_PACKAGES }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template postfix", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template postfix", "notify": ["restart postfix"]}, "module_options": {"src": "postfix.conf", "dest": "/etc/postfix/main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template aliases", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template aliases", "register": "postfix_aliases", "notify": ["restart postfix"]}, "module_options": {"src": "aliases", "dest": "/etc/aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "update aliases", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "update aliases", "when": "postfix_aliases.changed"}, "module_options": "newaliases", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template password", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template password", "register": "postfix_password", "notify": ["restart postfix"]}, "module_options": {"src": "sasl_passwd", "dest": "/etc/postfix/sasl_passwd", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "run postmap on sasl password", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "run postmap on sasl password", "when": "postfix_password.changed"}, "module_options": "postmap /etc/postfix/sasl_passwd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template canonical", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "template canonical", "register": "postfix_canonical", "notify": ["restart postfix"]}, "module_options": {"src": "canonical", "dest": "/etc/postfix/canonical"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "run postmap on canonical file", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "run postmap on canonical file", "when": "postfix_canonical.changed"}, "module_options": "postmap /etc/postfix/canonical", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create server CA file", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/forward-server-mail/tasks/main.yml", "options": {"name": "create server CA file", "notify": ["restart postfix"]}, "module_options": {"dest": "/etc/postfix/cacert.pem", "content": "{{ FORWARD_MAIL_SERVER_CERTIFICATE }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/forward-server-mail"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "mail": {"py/object": "struct4.Role", "name": "mail", "defined_in": "testdata3/scm_repo/playbooks/roles/mail", "fqcn": "mail", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "mailman3 packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "mailman3 packages", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"name": ["mailman3-full"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "postfix packages", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "postfix packages", "notify": ["reload postfix"]}, "module_options": {"name": ["postfix"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 mailman.cfg", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman.cfg", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman.cfg.j2", "dest": "/etc/mailman3/mailman.cfg"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 mailman-web.py", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman-web.py", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman-web.py.j2", "dest": "/etc/mailman3/mailman-web.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 mailman-hyperkitty.cfg", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 mailman-hyperkitty.cfg", "notify": ["restart mailman3", "update mailman3 aliases"]}, "module_options": {"src": "mailman-hyperkitty.cfg.j2", "dest": "/etc/mailman3/mailman-hyperkitty.cfg"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 web database migrations up to date", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 web database migrations up to date", "become_user": "www-data", "register": "mailman3_web_migrations", "changed_when": "'No migrations to apply' not in mailman3_web_migrations.stdout"}, "module_options": "/usr/share/mailman3-web/manage.py migrate", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow 443 tcp port for mailman3 web (nginx reverse proxy)", "module": "ufw", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow 443 tcp port for mailman3 web (nginx reverse proxy)"}, "module_options": {"rule": "allow", "port": "443", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow tcp port 25 for SMTP", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 25 for SMTP"}, "module_options": {"rule": "allow", "port": "25", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow tcp port 465 for SMTPS", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 465 for SMTPS"}, "module_options": {"rule": "allow", "port": "465", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow tcp port 587 for MSA", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Allow tcp port 587 for MSA"}, "module_options": {"rule": "allow", "port": "587", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Mailman3 web nginx proxy config", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 web nginx proxy config", "notify": ["reload nginx"]}, "module_options": {"src": "mailman3-nginx-proxy.conf.j2", "dest": "/etc/nginx/sites-available/mailman3"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mailman3 nginx proxy config sites-enabled", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Mailman3 nginx proxy config sites-enabled", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/mailman3", "dest": "/etc/nginx/sites-enabled/mailman3", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix transport maps", "module": "template", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix transport maps", "notify": ["postmap transport", "reload postfix"]}, "module_options": {"src": "postfix-transport.j2", "dest": "/etc/postfix/transport"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix header check maps", "module": "template", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix header check maps", "when": "OPENCRAFT_HEADER_TOKEN", "notify": ["postmap header_checks", "reload postfix"]}, "module_options": {"src": "postfix-header-checks.j2", "dest": "/etc/postfix/header_checks"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix aliases", "module": "template", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix aliases", "notify": ["newaliases"]}, "module_options": {"src": "postfix-aliases.j2", "dest": "/etc/aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Postfix is configured", "module": "template", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mail/tasks/main.yml", "options": {"name": "Postfix is configured", "notify": "reload postfix"}, "module_options": {"src": "postfix-main.cf.j2", "dest": "/etc/postfix/main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mail"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "geerlingguy.java": {"py/object": "struct4.Role", "name": "geerlingguy.java", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.java", "fqcn": "geerlingguy.java", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "certbot": {"py/object": "struct4.Role", "name": "certbot", "defined_in": "testdata3/scm_repo/playbooks/roles/certbot", "fqcn": "certbot", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "copy nginx default configuration", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "copy nginx default configuration", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-default-server.j2", "dest": "/etc/nginx/sites-available/common-server"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/common-server", "dest": "/etc/nginx/sites-enabled/common-server", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "reload nginx if required", "module": "meta", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "reload nginx if required"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open HTTP port on the firewall", "module": "ufw", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "open HTTP port on the firewall"}, "module_options": {"rule": "allow", "port": 80, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove certbot apt package if installed", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Remove certbot apt package if installed", "with_items": ["python-certbot-nginx", "certbot"]}, "module_options": {"name": "{{ item }}", "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install snapd", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Install snapd"}, "module_options": {"name": "snapd"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install certbot snap", "module": "command", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Install certbot snap"}, "module_options": "snap install certbot --classic", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Certbot webroot directory", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create Certbot webroot directory"}, "module_options": {"path": "/var/www/certbot", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Certbot deploy hooks directory", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create Certbot deploy hooks directory"}, "module_options": {"path": "/etc/letsencrypt/renewal-hooks/deploy", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the Certbot deploy hook to restart nginx on renewal", "module": "copy", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Copy the Certbot deploy hook to restart nginx on renewal"}, "module_options": {"src": "restart-nginx.sh", "dest": "/etc/letsencrypt/renewal-hooks/deploy/restart-nginx.sh", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable systemd timer", "module": "systemd", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Disable systemd timer"}, "module_options": {"name": "snap.certbot.renew.timer", "state": "stopped", "enabled": false}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create cron job to periodically renew certificates", "module": "cron", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Create cron job to periodically renew certificates"}, "module_options": {"name": "certbot renew", "user": "root", "job": "perl -e 'sleep int(rand(43200))' && /snap/bin/certbot -q renew", "minute": "0", "hour": "*/12", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set MAILTO variable for certbot renew cron job", "module": "cron", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "Set MAILTO variable for certbot renew cron job"}, "module_options": {"name": "MAILTO", "env": true, "job": "{{ CERTBOT_RENEW_OPS_EMAIL }}", "user": "root", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate SSL certificate with certbot", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/certbot/tasks/main.yml", "options": {"name": "generate SSL certificate with certbot", "args": {"creates": "/etc/letsencrypt/live/{{ CERTBOT_DOMAIN_NAME }}/fullchain.pem"}}, "module_options": "certbot certonly --webroot --webroot-path /var/www/certbot --domain {{ CERTBOT_DOMAIN_NAME }} {% for domain in CERTBOT_ADDITIONAL_DOMAINS %} --domain {{ domain }} {% endfor %} --email {{ CERTBOT_OPS_EMAIL }} --non-interactive --agree-tos", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/certbot"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "cert-manager": {"py/object": "struct4.Role", "name": "cert-manager", "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager", "fqcn": "cert-manager", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04", "module": "apt_repository", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Add the `deadsnakes` PPA for getting Python3.6 on Ubuntu 16.04"}, "module_options": {"repo": "ppa:deadsnakes/ppa"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Python3.6", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download Python3.6"}, "module_options": {"name": "python3.6"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download pip3.6", "module": "shell", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download pip3.6"}, "module_options": {"cmd": "curl https://bootstrap.pypa.io/get-pip.py | sudo -H python3.6"}, "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pipenv to later install python dependencies and virtual environments.", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Install pipenv to later install python dependencies and virtual environments.", "become": true}, "module_options": {"name": "pipenv", "executable": "pip3.6"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download cert-manager", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Download cert-manager"}, "module_options": {"repo": "https://github.com/open-craft/cert-manager", "dest": "{{ cert_manager_path }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install cert-manager requirements", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Install cert-manager requirements", "args": {"chdir": "{{ cert_manager_path }}"}}, "module_options": "pipenv install --ignore-pipfile", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over cert-manager script and service files", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Copy over cert-manager script and service files", "with_items": [{"src": "cert-manager.sh", "dest": "/usr/local/sbin/cert-manager.sh", "mode": "0755"}, {"src": "cert-manager.service", "dest": "/lib/systemd/system/cert-manager.service", "mode": "0644"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the deploy_cert.sh script template", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Copy the deploy_cert.sh script template"}, "module_options": {"src": "deploy_cert.sh", "dest": "/usr/local/sbin/deploy_cert.sh", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start the cert-manager service", "module": "systemd", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Enable and start the cert-manager service"}, "module_options": {"daemon_reload": true, "enabled": true, "state": "restarted", "name": "cert-manager"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open HTTP and HTTPS port on the firewall", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/cert-manager/tasks/main.yml", "options": {"name": "Open HTTP and HTTPS port on the firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/cert-manager"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "geerlingguy.php": {"py/object": "struct4.Role", "name": "geerlingguy.php", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.php", "fqcn": "geerlingguy.php", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "vault-policy": {"py/object": "struct4.Role", "name": "vault-policy", "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy", "fqcn": "vault-policy", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy Vault policies to the server", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml", "options": {"name": "Copy Vault policies to the server", "with_items": "{{ vault_policies }}"}, "module_options": {"content": "{{ item.policy }}", "dest": "{{ vault_policy_dir }}/{{ item.name }}.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/vault-policy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Write Vault policies", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/vault-policy/tasks/main.yml", "options": {"name": "Write Vault policies", "with_items": "{{ vault_policies }}", "changed_when": false, "environment": "{{ vault_env_policy }}"}, "module_options": "vault policy write \\\n  {{ item.name }} \\\n  {{ vault_policy_dir }}/{{ item.name }}.json\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault-policy"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "common-server": {"py/object": "struct4.Role", "name": "common-server", "defined_in": "testdata3/scm_repo/playbooks/roles/common-server", "fqcn": "common-server", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "catchpy": {"py/object": "struct4.Role", "name": "catchpy", "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy", "fqcn": "catchpy", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install packages for catchpy", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "Install packages for catchpy", "become": true, "vars": {"packages": ["libapache2-mod-wsgi-py3", "postgresql", "postgresql-contrib", "libpq-dev", "python3-dev", "python3-pip", "python3-setuptools"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install psycopg2", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "Install psycopg2", "become": true}, "module_options": {"name": "psycopg2"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure database is created", "module": "postgresql_db", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure database is created", "become": true, "become_user": "postgres"}, "module_options": "name={{catchpy_dbname}}", "executable": "postgresql_db", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_db", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure user has access to database", "module": "postgresql_user", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure user has access to database", "become": true, "become_user": "postgres"}, "module_options": "db={{catchpy_dbname}} name={{catchpy_dbuser}} password={{catchpy_dbpassword}} priv=ALL", "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure user does not have unnecessary privilege", "module": "postgresql_user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure user does not have unnecessary privilege", "become": true, "become_user": "postgres"}, "module_options": "name={{catchpy_dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB", "executable": "postgresql_user", "executable_type": "Module", "fqcn": "community.postgresql.postgresql_user", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "catchpy-pre-backup.sh", "dest": "/usr/local/sbin/catchpy-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "stat", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"register": "app_path"}, "module_options": "path={{ catchpy_app_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "clone repository and checkout correct version", "module": "git", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "clone repository and checkout correct version", "become": true, "when": "app_path.stat.exists == False"}, "module_options": {"repo": "{{ catchpy_app_repository }}", "dest": "{{ catchpy_app_path }}", "version": "{{ catchpy_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "change owner", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "change owner", "become": true}, "module_options": {"path": "{{ catchpy_app_path }}", "owner": "www-data", "group": "www-data", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install python requirements", "module": "pip", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "install python requirements", "become": true}, "module_options": {"requirements": "{{ catchpy_app_path}}/requirements.txt", "executable": "pip3"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "get settings from template", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "get settings from template", "become": true, "become_user": "www-data"}, "module_options": {"src": "prod.py.j2", "dest": "{{ catchpy_app_path }}/catchpy/settings/prod.py", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "setup django database", "module": "command", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "setup django database", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py migrate --noinput", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "collect django static", "module": "command", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "collect django static", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py collectstatic --noinput", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create admin superuser", "module": "command", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "create admin superuser", "become": true, "become_user": "www-data", "args": {"chdir": "{{ catchpy_app_path }}"}, "environment": {"DJANGO_SETTINGS_MODULE": "catchpy.settings.prod"}}, "module_options": "python3 manage.py create_user --username {{ catchpy_super_user }} --password {{ catchpy_super_pass }} --is_admin", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable default site", "module": "file", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "disable default site", "become": true}, "module_options": {"state": "absent", "path": "/etc/apache2/sites-enabled/000-default.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure mod_wsgi is present", "module": "apache2_module", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "make sure mod_wsgi is present", "become": true}, "module_options": {"state": "present", "name": "wsgi"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "get apache conf from template", "module": "template", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "get apache conf from template", "become": true}, "module_options": {"src": "apache2.conf.j2", "dest": "/etc/apache2/sites-enabled/catchpy.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure apache reload its configuration", "module": "service", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/catchpy/tasks/main.yml", "options": {"name": "ensure apache reload its configuration", "become": true}, "module_options": {"name": "apache2", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/catchpy"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "backup-pruner": {"py/object": "struct4.Role", "name": "backup-pruner", "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner", "fqcn": "backup-pruner", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install packages for tarsnapper", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "Install packages for tarsnapper", "vars": {"packages": ["python3-dev", "python3-pip", "python3-setuptools"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install gnu parallel", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install gnu parallel"}, "module_options": {"name": "parallel"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create dirs", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create dirs"}, "module_options": {"name": "/etc/tarsnap", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "upload keys", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "upload keys", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"src": "tarsnap.key", "dest": "/etc/tarsnap/{{ item.name }}.key", "mode": 256}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create cache dirs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create cache dirs", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"name": "/var/cache/tarsnap/{{ item.name }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install tarsnapper", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install tarsnapper"}, "module_options": "pip install tarsnapper==0.5.0", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install pruner scripts", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "install pruner scripts", "no_log": true, "with_items": "{{ BACKUP_PRUNER_TARSNAPPER_JOBS }}"}, "module_options": {"src": "run-tarsnapper.sh", "dest": "/usr/local/sbin/tarsnap-{{ item.name }}.sh", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create log dir", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "create log dir"}, "module_options": {"name": "{{ BACKUP_PRUNER_LOG_DIR }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add logrotate for individual pruner logs", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add logrotate for individual pruner logs"}, "module_options": {"src": "logrotate.conf", "dest": "/etc/logrotate.d/backup-pruner", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add parallel pruner script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add parallel pruner script"}, "module_options": {"src": "backup-pruner.sh", "dest": "{{ BACKUP_PRUNER_SCRIPT }}", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add backup pruner cron", "module": "cron", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-pruner/tasks/main.yml", "options": {"name": "add backup pruner cron"}, "module_options": {"name": "backup pruner", "minute": 40, "hour": "6,18", "job": "{{ BACKUP_PRUNER_SCRIPT }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-pruner"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "curator": {"py/object": "struct4.Role", "name": "curator", "defined_in": "testdata3/scm_repo/playbooks/roles/curator", "fqcn": "curator", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Add Elastic's apt key", "module": "apt_key", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add Elastic's apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elastic's apt repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add Elastic's apt repository"}, "module_options": {"repo": "deb [arch=amd64] https://packages.elastic.co/curator/5/debian stable main"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Curator", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator"}, "module_options": {"name": "elasticsearch-curator"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Curator config directory", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator config directory"}, "module_options": {"path": "{{ curator_config_dir }}", "state": "directory", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Curator system group", "module": "group", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator system group"}, "module_options": {"name": "{{ curator_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Curator system user", "module": "user", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Create Curator system user"}, "module_options": {"name": "{{ curator_user }}", "group": "{{ curator_group }}", "home": "{{ curator_config_dir }}", "system": true, "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch Certificates", "module": "copy", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Elasticsearch Certificates", "when": "elasticsearch_ca is defined"}, "module_options": {"content": "{{ elasticsearch_ca }}", "dest": "{{ curator_config_dir }}/elasticsearch-ca.pem", "owner": "{{ curator_user }}", "group": "{{ curator_group }}", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Curator configuration files", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator configuration files", "with_items": ["action.yml", "config.yml"]}, "module_options": {"src": "{{ item }}.j2", "dest": "{{ curator_config_dir }}/{{ item }}", "owner": "{{ curator_user }}", "group": "{{ curator_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change Curator home owner", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Change Curator home owner"}, "module_options": {"path": "{{ curator_config_dir }}", "owner": "{{ curator_user }}", "group": "{{ curator_group }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add curator elasticsearch role and user", "module": "include_tasks", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Add curator elasticsearch role and user", "vars": {"elasticsearch_create_roles": [{"name": "curator_writer", "permissions": "{\n  \"cluster\" : [\n    \"monitor\",\n  ],\n  \"indices\" : [\n    {\n      \"names\" : [\n        \"{{ curator_delete_indices_prefix }}*\"\n      ],\n      \"privileges\" : [\n        \"manage\",\n        \"delete_index\",\n        \"delete\",\n        \"write\",\n        \"read\"\n      ],\n      \"allow_restricted_indices\" : false\n    }\n  ],\n  \"applications\" : [],\n  \"run_as\" : [],\n  \"metadata\" : {\n    \"version\" : 1\n  },\n  \"transient_metadata\" : {\n    \"enabled\" : true\n  }\n}"}], "elasticsearch_create_users": [{"username": "{{ curator_elasticsearch_username }}", "password": "{{ curator_elasticsearch_password }}", "roles": ["curator_writer"]}]}}, "module_options": "roles/elasticsearch/tasks/create_user_roles.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Curator cron job", "module": "cron", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/curator/tasks/main.yml", "options": {"name": "Install Curator cron job"}, "module_options": {"name": "Delete {{ curator_delete_indices_prefix }}* indices older than {{ curator_delete_indices_days }} days", "job": "curator --config {{ curator_config_dir }}/config.yml {{ curator_config_dir }}/action.yml", "special_time": "daily", "user": "{{ curator_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/curator"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "load-balancer-v2": {"py/object": "struct4.Role", "name": "load-balancer-v2", "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2", "fqcn": "load-balancer-v2", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Fetch backend map from load balancer", "module": "slurp", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Fetch backend map from load balancer", "register": "backend_map"}, "module_options": {"src": "/etc/haproxy/backend.map"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Parse backend map for matching domains", "module": "set_fact", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Parse backend map for matching domains"}, "module_options": {"backend_matched_domains": "{{ (backend_map['content'] | b64decode).split('\n') | map('regex_replace', '^(\\S+)\\s+\\S+$', '\\1') | select('search', maintenance_base_domain) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert entries into the HAProxy maintenance map", "module": "lineinfile", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "Insert entries into the HAProxy maintenance map", "loop": "{{ backend_matched_domains }}", "when": "backend_matched_domains", "notify": "reload haproxy"}, "module_options": {"path": "/etc/haproxy/maint.map", "line": "{{ item }} {{ maintenance_type }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "These domains were placed into maintenance mode", "module": "debug", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-down.yml", "options": {"name": "These domains were placed into maintenance mode"}, "module_options": "msg=\"{{ backend_matched_domains }}\"", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download HAProxy exporter", "module": "unarchive", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Download HAProxy exporter"}, "module_options": {"src": "{{ haproxy_exporter_download_url }}", "remote_src": true, "dest": "/opt", "creates": "{{ haproxy_exporter_binary }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy HAProxy exporter service definition", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Copy HAProxy exporter service definition"}, "module_options": {"src": "haproxy-exporter.service.j2", "dest": "/etc/systemd/system/haproxy-exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start HAProxy exporter", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Start HAProxy exporter"}, "module_options": {"daemon-reload": true, "name": "haproxy-exporter.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/exporter.yml", "options": {"name": "Create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ haproxy_exporter_consul_service | to_nice_json }}", "dest": "/etc/consul/haproxy-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch maintenance map from the load balancer", "module": "slurp", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Fetch maintenance map from the load balancer", "register": "maint_map"}, "module_options": {"src": "/etc/haproxy/maint.map"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Parse maintenance map for matching domains", "module": "set_fact", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Parse maintenance map for matching domains"}, "module_options": {"maint_matched_domains": "{{ (maint_map['content'] | b64decode).split('\n') | map('regex_replace', '^(\\S+)\\s+\\S+$', '\\1') | select('search', maintenance_base_domain) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove entries from the HAProxy maintenance map", "module": "lineinfile", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "Remove entries from the HAProxy maintenance map", "loop": "{{ maint_matched_domains }}", "when": "maint_matched_domains", "notify": "reload haproxy"}, "module_options": {"path": "/etc/haproxy/maint.map", "state": "absent", "regexp": "^{{ item }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "These domains were removed from maintenance mode", "module": "debug", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/site-is-up.yml", "options": {"name": "These domains were removed from maintenance mode"}, "module_options": "msg=\"{{ maint_matched_domains }}\"", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the maint map file exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Ensure that the maint map file exists"}, "module_options": {"path": "/etc/haproxy/maint.map", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that {{ maintenance_server_static_root }} exists", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Ensure that {{ maintenance_server_static_root }} exists"}, "module_options": {"path": "{{ maintenance_server_static_root }}", "owner": "www-data", "group": "www-data", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy Nginx site configuration", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Copy Nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-maintenance.conf", "dest": "/etc/nginx/sites-available/maintenance"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable Nginx config", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Enable Nginx config", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/maintenance", "dest": "/etc/nginx/sites-enabled/maintenance", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install maintenance content", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/maintenance.yml", "options": {"name": "Install maintenance content"}, "module_options": {"repo": "{{ maintenance_pages_repo }}", "dest": "{{ maintenance_server_static_root }}/default"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add HAProxy PPA", "module": "apt_repository", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Add HAProxy PPA", "when": "haproxy_ppa != \"\""}, "module_options": {"repo": "{{ haproxy_ppa }}"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install HAProxy", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Install HAProxy"}, "module_options": {"name": "haproxy={{ haproxy_version }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install other essential or handy packages", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Install other essential or handy packages", "with_items": ["inotify-tools", "python3-openssl", "socat", "ssl-cert", "jq"]}, "module_options": {"name": "{{ item }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Create directories", "with_items": ["/etc/haproxy/certs", "/etc/haproxy/certs/ocim", "/etc/haproxy/conf.d", "/etc/haproxy/backends", "/etc/letsencrypt/live"]}, "module_options": {"path": "{{ item }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Go templates for generating HAProxy configuration files", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Go templates for generating HAProxy configuration files", "with_items": [{"src": "backend.map.ctmpl", "dest": "/etc/consul-template/templates/backend.map.ctmpl", "mode": "0644"}, {"src": "haproxy.cfg.ctmpl", "dest": "/etc/consul-template/templates/haproxy.cfg.ctmpl", "mode": "0644"}], "tags": "haproxy-config"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Hashicorp Configuration Language files", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Hashicorp Configuration Language files", "with_items": [{"src": "backend.map.hcl.j2", "dest": "/etc/consul-template/config/backend.map.hcl", "mode": "0644"}, {"src": "haproxy.cfg.hcl.j2", "dest": "/etc/consul-template/config/haproxy.cfg.hcl", "mode": "0644"}], "tags": "haproxy-config"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Consul watcher scripts", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over Consul watcher scripts", "with_items": [{"src": "consul-template-render.sh", "dest": "/usr/local/sbin/consul-template-render.sh", "mode": "0755"}, {"src": "consul-certificates-render.sh", "dest": "/usr/local/sbin/consul-certificates-render.sh", "mode": "0755"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over the local filesystem watcher", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over the local filesystem watcher"}, "module_options": {"src": "cert-watcher", "dest": "/usr/local/sbin/cert-watcher", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over systemd service files", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over systemd service files", "with_items": [{"src": "consul-template-render.service", "dest": "/lib/systemd/system/consul-template-render.service", "mode": "0644"}, {"src": "consul-certificates-render.service", "dest": "/lib/systemd/system/consul-certificates-render.service", "mode": "0644"}, {"src": "cert-watcher.service", "dest": "/lib/systemd/system/cert-watcher.service", "mode": "0644"}]}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": "{{ item.mode }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over snakeoil certificate", "module": "shell", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over snakeoil certificate", "args": {"chdir": "/etc/ssl/certs/"}}, "module_options": "cat ssl-cert-snakeoil.pem ../private/ssl-cert-snakeoil.key > /etc/haproxy/certs.pem", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over bespoke HAProxy config blocks", "module": "copy", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over bespoke HAProxy config blocks", "with_items": "{{ haproxy_custom_rules }}", "when": "haproxy_custom_rules"}, "module_options": {"content": "{{ item.rule }}", "dest": "/etc/haproxy/conf.d/{{ item.filename }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over extra certs for prod", "module": "copy", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over extra certs for prod", "with_fileglob": ["prod/*.pem"], "when": "inventory_hostname in groups['load-balancer-v2-prod']"}, "module_options": {"src": "{{ item }}", "dest": "/etc/haproxy/certs/{{ item | basename | splitext | first | b64decode }}.pem", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over extra certs for stage", "module": "copy", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Copy over extra certs for stage", "with_fileglob": ["stage/*.pem"], "when": "inventory_hostname in groups['load-balancer-v2-stage']"}, "module_options": {"src": "{{ item }}", "dest": "/etc/haproxy/certs/{{ item | basename | splitext | first | b64decode }}.pem", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure HAProxy picks up conf.d rules", "module": "lineinfile", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Ensure HAProxy picks up conf.d rules"}, "module_options": {"path": "/etc/default/haproxy", "line": "EXTRAOPTS=\"-f /etc/haproxy/conf.d\"", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start the services", "module": "systemd", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Enable and start the services", "with_items": ["cert-watcher", "consul-template-render", "consul-certificates-render"]}, "module_options": {"daemon_reload": true, "enabled": true, "state": "restarted", "name": "{{ item }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if we must bootstrap the local certificate", "module": "stat", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Check if we must bootstrap the local certificate", "register": "lb_cert_p"}, "module_options": {"path": "/etc/letsencrypt/live/{{ CERTBOT_DOMAIN_NAME }}/fullchain.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": "site-is-down"}, "module_options": "maintenance.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Find config files that will stop nginx from reloading", "module": "find", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Find config files that will stop nginx from reloading", "register": "nginx_sites_enabled"}, "module_options": {"paths": "/etc/nginx/sites-enabled", "file_type": "link"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable config files that will stop nginx from reloading", "module": "file", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Disable config files that will stop nginx from reloading", "with_items": "{{ nginx_sites_enabled.files }}"}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_role", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": "certbot"}, "module_options": {"name": "certbot"}, "executable": "certbot", "executable_type": "Role", "fqcn": "certbot", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Restore config files after bootstrapping", "module": "file", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Restore config files after bootstrapping", "with_items": "{{ nginx_sites_enabled.files }}", "notify": ["reload nginx"], "when": "lb_cert_p.stat.exists == False"}, "module_options": {"src": "/etc/nginx/sites-available/{{ item.path | basename }}", "dest": "/etc/nginx/sites-enabled/{{ item.path | basename }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"when": "haproxy_exporter_enabled"}, "module_options": "exporter.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart rsyslog", "module": "service", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Restart rsyslog", "changed_when": false}, "module_options": {"name": "rsyslog", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open HTTP and HTTPS port on the firewall", "module": "ufw", "index": 23, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"name": "Open HTTP and HTTPS port on the firewall", "with_items": [{"enabled": true, "port": 80}, {"enabled": true, "port": 443}, {"enabled": "{{ haproxy_enable_stats_page }}", "port": "{{ haproxy_stats_port }}"}], "when": "item.enabled"}, "module_options": {"rule": "allow", "port": "{{ item.port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 24, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": ["never", "site-is-down"]}, "module_options": "site-is-down.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 25, "defined_in": "testdata3/scm_repo/playbooks/roles/load-balancer-v2/tasks/main.yml", "options": {"tags": ["never", "site-is-up"]}, "module_options": "site-is-up.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/load-balancer-v2"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "geerlingguy.php-versions": {"py/object": "struct4.Role", "name": "geerlingguy.php-versions", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.php-versions", "fqcn": "geerlingguy.php-versions", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "geerlingguy.php-mysql": {"py/object": "struct4.Role", "name": "geerlingguy.php-mysql", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.php-mysql", "fqcn": "geerlingguy.php-mysql", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "rabbitmq": {"py/object": "struct4.Role", "name": "rabbitmq", "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq", "fqcn": "rabbitmq", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install apt packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "install apt packages"}, "module_options": {"name": "{{ RABBITMQ_APT_PACKAGES }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open RabbitMQ firewall ports", "module": "ufw", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Open RabbitMQ firewall ports", "with_items": ["{{ RABBITMQ_TLS_PORT }}", "{{ RABBITMQ_HTTPS_PORT }}"]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add rabbitmq repositories", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq repositories", "with_items": ["{{ ERLANG_REPO }}", "{{ RABBITMQ_REPO }}"], "tags": ["install_rabbitmq"]}, "module_options": {"repo": "{{ item }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add trusted repository keys", "module": "apt_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add trusted repository keys", "with_items": ["{{ ERLANG_REPO_KEY }}", "{{ RABBITMQ_REPO_KEY }}"], "tags": ["install_rabbitmq"]}, "module_options": {"url": "{{ item }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Unlock erlang and rabbitmq", "module": "dpkg_selections", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Unlock erlang and rabbitmq", "with_items": ["esl-erlang", "rabbitmq-server"], "ignore_errors": true, "tags": ["install_rabbitmq"]}, "module_options": {"name": "{{ item }}", "selection": "install"}, "executable": "dpkg_selections", "executable_type": "Module", "fqcn": "ansible.builtin.dpkg_selections", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install rabbitmq", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "install rabbitmq", "tags": ["install_rabbitmq"]}, "module_options": {"name": ["esl-erlang={{ ERLANG_VERSION }}", "rabbitmq-server={{ RABBITMQ_VERSION }}"], "update_cache": true, "force": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Lock erlang and rabbitmq", "module": "dpkg_selections", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Lock erlang and rabbitmq", "with_items": ["esl-erlang", "rabbitmq-server"], "tags": ["install_rabbitmq"]}, "module_options": {"name": "{{ item }}", "selection": "hold"}, "executable": "dpkg_selections", "executable_type": "Module", "fqcn": "ansible.builtin.dpkg_selections", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for RabbitMQ service overrides", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Create directory for RabbitMQ service overrides", "tags": ["fd_limit"]}, "module_options": {"path": "/etc/systemd/system/rabbitmq-server.service.d/", "state": "directory", "mode": 493, "owner": "root", "group": "root"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the file descriptor limit to a high value in the systemd service", "module": "ini_file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "Set the file descriptor limit to a high value in the systemd service", "with_items": ["LimitNOFILE", "LimitNPROC"], "notify": ["reload systemd", "restart rabbitmq"], "tags": ["fd_limit"]}, "module_options": {"dest": "/etc/systemd/system/rabbitmq-server.service.d/limits.conf", "section": "Service", "option": "{{ item }}", "value": 65535, "mode": 420, "owner": "root", "group": "root"}, "executable": "ini_file", "executable_type": "Module", "fqcn": "community.general.ini_file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "add rabbitmqadmin config", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmqadmin config"}, "module_options": {"src": "rabbitmqadmin.conf.j2", "dest": "/etc/rabbitmqadmin.conf", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add rabbitmq import/export scripts", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq import/export scripts", "with_items": ["{{ RABBITMQ_BACKUP_COMMAND }}", "{{ RABBITMQ_RESTORE_COMMAND }}"]}, "module_options": {"src": "{{ item }}.j2", "dest": "{{ RABBITMQ_SCRIPTS_DIR }}/{{ item }}", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add rabbitmq export directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "add rabbitmq export directory"}, "module_options": {"path": "{{ RABBITMQ_EXPORT_DIR }}", "state": "directory", "owner": "root", "group": "root", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set letsencrypt directory owner", "module": "file", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "set letsencrypt directory owner"}, "module_options": {"path": "/etc/letsencrypt", "owner": "rabbitmq", "state": "directory", "recurse": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write rabbitmq configuration", "module": "template", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "write rabbitmq configuration", "notify": ["restart rabbitmq"]}, "module_options": {"src": "rabbitmq.config.j2", "dest": "/etc/rabbitmq/rabbitmq.config"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable rabbitmq plugins", "module": "rabbitmq_plugin", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "enable rabbitmq plugins", "notify": ["restart rabbitmq"]}, "module_options": {"names": "rabbitmq_management,rabbitmq_tracing,rabbitmq_federation", "state": "enabled"}, "executable": "rabbitmq_plugin", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_plugin", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create default admin user", "module": "rabbitmq_user", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "create default admin user"}, "module_options": {"user": "{{ RABBITMQ_ADMIN_USERNAME }}", "tags": "administrator,{{ RABBITMQ_ADMIN_USERNAME }}", "password": "{{ RABBITMQ_ADMIN_PASSWORD }}", "vhost": "/", "configure_priv": ".*", "write_priv": ".*", "read_priv": ".*", "state": "present"}, "executable": "rabbitmq_user", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_user", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "download rabbitmqadmin executable", "module": "command", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "download rabbitmqadmin executable", "args": {"creates": "{{ RABBITMQ_SCRIPTS_DIR }}/rabbitmqadmin"}}, "module_options": "wget -P \"{{ RABBITMQ_SCRIPTS_DIR }}\" \"{{ RABBITMQADMIN_URL }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "remove default guest user", "module": "rabbitmq_user", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "remove default guest user"}, "module_options": {"user": "guest", "state": "absent"}, "executable": "rabbitmq_user", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_user", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure vhost /test is present", "module": "rabbitmq_vhost", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure vhost /test is present"}, "module_options": {"name": "/test", "state": "present"}, "executable": "rabbitmq_vhost", "executable_type": "Module", "fqcn": "community.rabbitmq.rabbitmq_vhost", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "ensure newrelic rabbitmq monitoring is present", "module": "apt", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure newrelic rabbitmq monitoring is present", "register": "rabbit_newrelic", "tags": ["rabbitmq-newrelic"]}, "module_options": {"pkg": "nri-rabbitmq", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure /etc/newrelic-infra/integrations.d/rabbitmq-config.yml is present", "module": "template", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "ensure /etc/newrelic-infra/integrations.d/rabbitmq-config.yml is present", "register": "rabbit_newrelic_config", "tags": ["rabbitmq-newrelic"]}, "module_options": {"src": "rabbitmq-config-newrelic-infra.yml.j2", "dest": "/etc/newrelic-infra/integrations.d/rabbitmq-config.yml"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart newrelic-infra if changed", "module": "systemd", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/rabbitmq/tasks/main.yml", "options": {"name": "restart newrelic-infra if changed", "when": "rabbit_newrelic.changed or rabbit_newrelic_config.changed", "tags": ["rabbitmq-newrelic"]}, "module_options": {"name": "newrelic-infra", "state": "restarted"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/rabbitmq"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "mongodb": {"py/object": "struct4.Role", "name": "mongodb", "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb", "fqcn": "mongodb", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create mongodb group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create mongodb group"}, "module_options": {"name": "mongodb", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create mongodb user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create mongodb user"}, "module_options": {"name": "mongodb", "group": "mongodb", "home": "{{ MONGODB_HOME }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a xfs filesystem on MONGODB_OPENSTACK_DB_DEVICE", "module": "filesystem", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create a xfs filesystem on MONGODB_OPENSTACK_DB_DEVICE"}, "module_options": {"fstype": "xfs", "dev": "{{ MONGODB_OPENSTACK_DB_DEVICE }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Mount MongoDB home", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Mount MongoDB home"}, "module_options": {"name": "{{ MONGODB_HOME }}", "src": "{{ MONGODB_OPENSTACK_DB_DEVICE }}", "fstype": "xfs", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create db and log directories for MongoDB home", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create db and log directories for MongoDB home", "with_items": ["db", "log"]}, "module_options": {"path": "{{ MONGODB_HOME }}/{{ item }}", "state": "directory", "mode": 488, "owner": "mongodb", "group": "mongodb"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change MongoDB Home owner", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Change MongoDB Home owner"}, "module_options": {"path": "{{ MONGODB_HOME }}", "owner": "mongodb", "group": "mongodb", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Change MongoDB permissions", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Change MongoDB permissions"}, "module_options": {"path": "{{ MONGODB_HOME }}", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open MongoDB port on the firewall", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Open MongoDB port on the firewall"}, "module_options": {"rule": "allow", "port": 27017, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "configure log rotation for the MongoDB log", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "configure log rotation for the MongoDB log"}, "module_options": {"src": "logrotate.conf.j2", "dest": "/etc/logrotate.d/mongodb.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-mongodb.sh", "dest": "/usr/local/sbin/backup-pre.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-mongodb.sh", "dest": "/usr/local/sbin/backup-post.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom fact directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create custom fact directory"}, "module_options": {"path": "/etc/ansible/facts.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Go Path directory", "module": "file", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create Go Path directory"}, "module_options": {"path": "{{ GO_PATH }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download golang", "module": "get_url", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Download golang"}, "module_options": {"url": "https://storage.googleapis.com/golang/go1.12.linux-amd64.tar.gz", "dest": "{{ GO_PATH }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract go into /tmp/mongo", "module": "unarchive", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Extract go into /tmp/mongo"}, "module_options": {"src": "{{ GO_PATH }}/go1.12.linux-amd64.tar.gz", "dest": "{{ GO_PATH }}", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download MongoDB exporter", "module": "git", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Download MongoDB exporter"}, "module_options": {"repo": "{{ MONGODB_EXPORTER_REPO }}", "dest": "{{ MONGODB_EXPORTER_PATH }}", "version": "{{ MONGODB_EXPORTER_VERSION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Compile MongoDB exporter files", "module": "make", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Compile MongoDB exporter files", "environment": {"GOPATH": "{{ GO_PATH }}", "PATH": "{{ GO_PATH }}/go/bin:{{ ansible_env.PATH }}", "GO111MODULE": "on"}}, "module_options": {"chdir": "{{ MONGODB_EXPORTER_PATH }}", "target": "build"}, "executable": "make", "executable_type": "Module", "fqcn": "community.general.make", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add MongoDB exporter binary to the path", "module": "copy", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Add MongoDB exporter binary to the path"}, "module_options": {"src": "{{ MONGODB_EXPORTER_PATH }}/mongodb_exporter", "dest": "/usr/local/bin/mongodb_exporter", "remote_src": true, "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create MongoDB exporter environment file", "module": "copy", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create MongoDB exporter environment file"}, "module_options": {"content": "MONGODB_URL=mongodb://{{ mongodb_root_admin_name }}:{{ mongodb_root_admin_password }}@localhost:27017\n", "dest": "/etc/mongodb_exporter.conf", "mode": 416, "owner": "root", "group": "mongodb"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy MongoDB exporter service definition", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Copy MongoDB exporter service definition"}, "module_options": {"src": "mongodb_exporter.service.j2", "dest": "/etc/systemd/system/mongodb_exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable MongoDB exporter", "module": "systemd", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Start and enable MongoDB exporter"}, "module_options": {"daemon-reload": true, "name": "mongodb_exporter.service", "state": "restarted", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Store MongoDB exporter version", "module": "copy", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Store MongoDB exporter version"}, "module_options": {"content": "{\"version\": \"{{ MONGODB_EXPORTER_VERSION }}\"}\n", "dest": "/etc/ansible/facts.d/mongodb_exporter.fact"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/mongodb/tasks/main.yml", "options": {"name": "Create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ MONGODB_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/mongodb-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mongodb"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "common-server-init": {"py/object": "struct4.Role", "name": "common-server-init", "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init", "fqcn": "common-server-init", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/sftp.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Set the hostname", "module": "hostname", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set the hostname"}, "module_options": {"name": "{{ COMMON_SERVER_HOSTNAME }}"}, "executable": "hostname", "executable_type": "Module", "fqcn": "ansible.builtin.hostname", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system timezone to UTC", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set system timezone to UTC"}, "module_options": {"src": "timezone", "dest": "/etc/timezone", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local timezone to UTC", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Set local timezone to UTC"}, "module_options": {"src": "/usr/share/zoneinfo/Etc/UTC", "dest": "/etc/localtime", "state": "link", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add Opencraft repository key", "module": "apt_key", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "add Opencraft repository key"}, "module_options": {"keyserver": "{{ COMMON_SERVER_OPENCRAFT_REPO_KEY_SERVER }}", "id": "{{ COMMON_SERVER_OPENCRAFT_REPO_KEY_ID }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add Opencraft repository", "module": "apt_repository", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "add Opencraft repository"}, "module_options": {"repo": "{{ COMMON_SERVER_OPENCRAFT_REPO }}", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set apt preferences to prioritize the opencraft repo", "module": "copy", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "set apt preferences to prioritize the opencraft repo"}, "module_options": {"content": "Package: chkrootkit\nPin: Origin \"{{ COMMON_SERVER_OPENCRAFT_REPO_DOMAIN }}\"\nPin-Priority: 1001\n", "dest": "/etc/apt/preferences.d/opencraft"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "apt-get update, dist-upgrade and autoremove", "module": "apt", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "apt-get update, dist-upgrade and autoremove"}, "module_options": {"update_cache": true, "upgrade": "dist", "autoremove": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Install dependencies"}, "module_options": {"name": "{{ COMMON_SERVER_DEPENDENCIES }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if Python3 exists", "module": "stat", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Check if Python3 exists", "register": "python3_executable"}, "module_options": {"path": "/usr/bin/python3"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Default to python3", "module": "alternatives", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Default to python3", "when": "python3_executable.stat.exists"}, "module_options": {"name": "python", "link": "/usr/bin/python", "path": "/usr/bin/python3"}, "executable": "alternatives", "executable_type": "Module", "fqcn": "community.general.alternatives", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "tmpreaper is configured", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "tmpreaper is configured"}, "module_options": {"src": "tmpreaper.conf", "dest": "/etc/tmpreaper.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy security update check script", "module": "copy", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Copy security update check script"}, "module_options": {"src": "security_updates_checker.sh", "dest": "{{ SECURITY_UPDATE_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Schedule cron job to track security updates of held packages", "module": "cron", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/misc.yml", "options": {"name": "Schedule cron job to track security updates of held packages"}, "module_options": {"name": "Track security updates", "minute": 0, "hour": 1, "job": "bash {{ SECURITY_UPDATE_SCRIPT_LOCATION }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "etckeeper - use git", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - use git"}, "module_options": {"src": "etckeeper.conf", "dest": "/etc/etckeeper/etckeeper.conf", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "etckeeper - init and initial commit", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - init and initial commit", "args": {"creates": "/etc/.git"}}, "module_options": "etckeeper init && etckeeper commit \"Initial commit.\"", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "etckeeper - configure git author settings", "module": "git_config", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/etckeeper.yml", "options": {"name": "etckeeper - configure git author settings", "with_items": [{"name": "user.name", "value": "{{ COMMON_SERVER_ETCKEEPER_COMMIT_USER }}"}, {"name": "user.email", "value": "{{ COMMON_SERVER_ETCKEEPER_COMMIT_EMAIL }}"}]}, "module_options": {"name": "{{ item.name }}", "value": "{{ item.value }}", "scope": "local", "repo": "/etc"}, "executable": "git_config", "executable_type": "Module", "fqcn": "community.general.git_config", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "install nginx apt package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "install nginx apt package"}, "module_options": {"name": "nginx"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable nginx default site", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "disable nginx default site", "notify": ["reload nginx"]}, "module_options": {"path": "/etc/nginx/sites-enabled/default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set up global nginx SSL settings", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "set up global nginx SSL settings", "notify": ["reload nginx"]}, "module_options": {"src": "nginx-ssl", "dest": "/etc/nginx/conf.d/ssl.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "reload nginx if required", "module": "meta", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/nginx.yml", "options": {"name": "reload nginx if required"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure sftp is enabled", "module": "lineinfile", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/sftp.yml", "options": {"name": "Ensure sftp is enabled", "notify": "Restart sshd"}, "module_options": {"dest": "/etc/ssh/sshd_config", "regexp": "^Subsystem(\\s+)sftp", "line": "Subsystem sftp internal-sftp", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "misc.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "networking.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "etckeeper.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {}, "module_options": "chkrootkit.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/main.yml", "options": {"when": "COMMON_SERVER_INSTALL_SFTP"}, "module_options": "sftp.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate list of enabled chkrootkit tests", "module": "shell", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Generate list of enabled chkrootkit tests", "register": "enabled_tests_output"}, "module_options": "chkrootkit -l 2>&1 | cut -d ' ' -f 3- | sed -r 's/\\b({{CHKROOTKIT_DISABLED_TESTS | join(\"|\")}})\\b//g'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add chkrootkit config file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Add chkrootkit config file"}, "module_options": {"src": "chkrootkit.conf", "dest": "/etc/chkrootkit.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy expected output generator script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Copy expected output generator script"}, "module_options": {"src": "gen_chkrootkit_expected_output.sh", "dest": "{{ CHKROOTKIT_EXPECTED_OUTPUT_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate expected chkrootkit output", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Generate expected chkrootkit output"}, "module_options": "{{ CHKROOTKIT_EXPECTED_OUTPUT_SCRIPT_LOCATION }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add apt hook to update chkrootkit expected output after updates", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Add apt hook to update chkrootkit expected output after updates"}, "module_options": {"src": "100chrootkitupdate.j2", "dest": "/etc/apt/apt.conf.d/100chrootkitupdate"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Update expected output daily", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/chkrootkit.yml", "options": {"name": "Update expected output daily"}, "module_options": {"src": "update-chkrootkit-log", "dest": "/etc/cron.daily/update-chkrootkit-log", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add floating IP as network interface alias", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add floating IP as network interface alias"}, "module_options": {"src": "network/interfaces.d/floating-ip.cfg", "dest": "/etc/network/interfaces.d/floating-ip.cfg", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure floating alias is included in configuration file", "module": "lineinfile", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Ensure floating alias is included in configuration file"}, "module_options": {"dest": "/etc/network/interfaces", "state": "present", "line": "source /etc/network/interfaces.d/*.cfg"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart networking service", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Restart networking service"}, "module_options": {"name": "networking", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Bring up new interface", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Bring up new interface"}, "module_options": "ifup {{ COMMON_FLOATING_INTERFACE_NAME }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add floating IP as network interface alias", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add floating IP as network interface alias"}, "module_options": {"src": "netplan/floating-ip.yaml", "dest": "/etc/netplan/floating-ip.yaml", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Apply changes using netplan", "module": "command", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Apply changes using netplan", "become": true}, "module_options": "netplan apply", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add fallback DNS servers to /etc/dhcp/dhclient.conf.", "module": "lineinfile", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Add fallback DNS servers to /etc/dhcp/dhclient.conf.", "notify": "restart networking"}, "module_options": {"dest": "/etc/dhcp/dhclient.conf", "regexp": "^\\s*append\\s+domain-name-servers", "line": "append domain-name-servers {{ COMMON_FALLBACK_DNS_SERVERS | join(', ') }};"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Template hosts", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Template hosts"}, "module_options": {"src": "hosts", "dest": "/etc/hosts", "mode": 356}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {}}, {"py/object": "struct4.Task", "name": "By default allow only ssh", "module": "ufw", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "By default allow only ssh"}, "module_options": {"rule": "allow", "port": 22, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Set firewall default policy", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/common-server-init/tasks/networking.yml", "options": {"name": "Set firewall default policy"}, "module_options": {"state": "enabled", "policy": "reject"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/common-server-init"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "memcached": {"py/object": "struct4.Role", "name": "memcached", "defined_in": "testdata3/scm_repo/playbooks/roles/memcached", "fqcn": "memcached", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Open memcached port on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/memcached/tasks/main.yml", "options": {"name": "Open memcached port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ memcached_port }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/memcached"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "mattermail": {"py/object": "struct4.Role", "name": "mattermail", "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail", "fqcn": "mattermail", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create mattermail group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create mattermail group"}, "module_options": {"name": "mattermail"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create mattermail user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create mattermail user"}, "module_options": {"name": "mattermail", "group": "mattermail", "home": "{{ MATTERMAIL_HOME }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install golang package", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "Install golang package"}, "module_options": {"name": ["golang"], "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create config", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create config", "become_user": "mattermail"}, "module_options": {"src": "config.json.j2", "dest": "{{ MATTERMAIL_HOME }}/config.json"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create data dir", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create data dir"}, "module_options": {"path": "{{ MATTERMAIL_HOME }}/data", "state": "directory", "owner": "mattermail", "group": "mattermail"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create systemd service", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "create systemd service"}, "module_options": {"src": "mattermail.service.j2", "dest": "/etc/systemd/system/mattermail.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "fetch latest hash", "module": "git", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "fetch latest hash", "register": "githash"}, "module_options": {"repo": "https://{{ MATTERMAIL_REPO }}", "clone": false, "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "store git hash", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "store git hash", "register": "mattermail_version"}, "module_options": {"dest": "{{ MATTERMAIL_HOME }}/.hash", "content": "{{ githash.after }}", "owner": "mattermail", "group": "mattermail"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "build Mattermail binary", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "build Mattermail binary", "become_user": "mattermail", "environment": {"GOPATH": "{{ MATTERMAIL_HOME }}"}}, "module_options": "go get -u {{ MATTERMAIL_REPO }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}, {"py/object": "struct4.Task", "name": "start and enable the mattermail service", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermail/tasks/main.yml", "options": {"name": "start and enable the mattermail service"}, "module_options": {"name": "mattermail", "state": "restarted", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermail"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "pr-watcher-notifier": {"py/object": "struct4.Role", "name": "pr-watcher-notifier", "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier", "fqcn": "pr-watcher-notifier", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy the watch configuration file", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml", "options": {"name": "Copy the watch configuration file", "become_user": "www-data", "tags": "pr-watcher-notifier-watch-config"}, "module_options": {"src": "watch_config.yml", "dest": "{{ PR_WATCHER_NOTIFIER_ENV['WATCH_CONFIG_FILE'] }}", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart gunicorn via supervisor", "module": "supervisorctl", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/pr-watcher-notifier/tasks/main.yml", "options": {"name": "Restart gunicorn via supervisor"}, "module_options": {"name": "pr_watcher_notifier", "state": "restarted"}, "executable": "supervisorctl", "executable_type": "Module", "fqcn": "community.general.supervisorctl", "used_in": ["testdata3/scm_repo/playbooks/roles/pr-watcher-notifier"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "consul-acl": {"py/object": "struct4.Role", "name": "consul-acl", "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl", "fqcn": "consul-acl", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install Consul ACL apt requirements", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Install Consul ACL apt requirements"}, "module_options": {"name": ["python3-pip"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Consul ACL python requirements", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Install Consul ACL python requirements"}, "module_options": {"executable": "pip3", "name": ["python-consul==1.1.0", "pyhcl==0.3.10"]}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul ACL tokens", "module": "consul_acl", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-acl/tasks/main.yml", "options": {"name": "Create Consul ACL tokens", "with_items": "{{ consul_acl_tokens }}"}, "module_options": {"token": "{{ item.id }}", "rules": "{{ item.rules }}", "name": "{{ item.name | default(item.id) }}", "mgmt_token": "{{ consul_acl_mgmt_token }}"}, "executable": "consul_acl", "executable_type": "Module", "fqcn": "community.general.consul_acl", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-acl"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "loris": {"py/object": "struct4.Role", "name": "loris", "defined_in": "testdata3/scm_repo/playbooks/roles/loris", "fqcn": "loris", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install packages for loris", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Install packages for loris", "become": true, "vars": {"packages": ["libapache2-mod-wsgi", "libjpeg-turbo8-dev", "libfreetype6-dev", "liblcms2-dev", "liblcms2-utils", "libssl-dev", "libtiff5-dev", "libwebp-dev", "zlib1g-dev"]}}, "module_options": {"name": "{{ packages }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure group \"{{ loris_group }}\" exists", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Ensure group \"{{ loris_group }}\" exists", "become": true}, "module_options": {"name": "{{ loris_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure user \"{{ loris_user }}\" exists", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "Ensure user \"{{ loris_user }}\" exists", "become": true}, "module_options": {"name": "{{ loris_user }}", "state": "present"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "stat", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"register": "app_path"}, "module_options": "path={{ loris_app_path }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "clone repository and checkout correct version", "module": "git", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "clone repository and checkout correct version", "become": true, "when": "app_path.stat.exists == False"}, "module_options": {"repo": "{{ loris_app_repository }}", "dest": "{{ loris_app_path }}", "version": "{{ loris_version }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install configobj", "module": "pip", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "install configobj", "become": true}, "module_options": {"name": "configobj"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install loris", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "install loris", "become": true, "args": {"chdir": "{{ loris_app_path }}", "creates": "/etc/loris2/loris2.conf"}}, "module_options": "python setup.py install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable default site", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "disable default site", "become": true}, "module_options": {"state": "absent", "path": "/etc/apache2/sites-enabled/000-default.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure mod_expires is present", "module": "apache2_module", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "make sure mod_expires is present", "become": true}, "module_options": {"state": "present", "name": "expires"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "make sure mod_wsgi is present", "module": "apache2_module", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "make sure mod_wsgi is present", "become": true}, "module_options": {"state": "present", "name": "wsgi"}, "executable": "apache2_module", "executable_type": "Module", "fqcn": "community.general.apache2_module", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "get apache conf from template", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "get apache conf from template", "become": true}, "module_options": {"src": "apache2.conf.j2", "dest": "/etc/apache2/conf-available/loris.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure apache reload its configuration", "module": "service", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/loris/tasks/main.yml", "options": {"name": "ensure apache reload its configuration", "become": true}, "module_options": {"name": "apache2", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/loris"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "postgres": {"py/object": "struct4.Role", "name": "postgres", "defined_in": "testdata3/scm_repo/playbooks/roles/postgres", "fqcn": "postgres", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Configure official PostgreSQL repository", "module": "shell", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Configure official PostgreSQL repository", "become": true}, "module_options": "echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PostgreSQL repository key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Install PostgreSQL repository key"}, "module_options": {"id": "ACCC4CF8", "url": "https://www.postgresql.org/media/keys/ACCC4CF8.asc", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install required PostgreSQL packages", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Install required PostgreSQL packages"}, "module_options": {"name": ["postgresql-{{postgresql_version}}", "postgresql-contrib-{{postgresql_version}}", "postgresql-server-dev-{{postgresql_version}}", "postgresql-client-{{postgresql_version}}", "python3-psycopg2"], "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create postgres group", "module": "group", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Create postgres group"}, "module_options": {"name": "postgres", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create postgres user", "module": "user", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Create postgres user"}, "module_options": {"name": "postgres", "group": "postgres", "home": "/var/lib/postgresql", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mount /var/lib/postgresql", "module": "mount", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "mount /var/lib/postgresql", "when": "POSTGRES_OPENSTACK_DB_DEVICE != None"}, "module_options": {"name": "/var/lib/postgresql", "src": "{{ POSTGRES_OPENSTACK_DB_DEVICE }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "chown & chmod /var/lib/postgresql", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "chown & chmod /var/lib/postgresql"}, "module_options": {"path": "/var/lib/postgresql", "owner": "postgres", "group": "postgres", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open Postgres port on the firewall", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Open Postgres port on the firewall", "with_items": [5432]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-postgres.sh", "dest": "/usr/local/sbin/backup-pre.sh", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/postgres/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-postgres.sh", "dest": "/usr/local/sbin/backup-post.sh", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postgres"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "jira": {"py/object": "struct4.Role", "name": "jira", "defined_in": "testdata3/scm_repo/playbooks/roles/jira", "fqcn": "jira", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install Jira dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "install Jira dependencies"}, "module_options": {"pkg": ["mysql-client"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "disable www-data shell", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "disable www-data shell"}, "module_options": {"name": "www-data", "shell": "/bin/false"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy jira service file", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "copy jira service file", "notify": ["restart jira"]}, "module_options": {"src": "jira.service", "dest": "/etc/systemd/system/jira.service"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable jira", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "enable jira"}, "module_options": {"name": "jira", "enabled": true, "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add backup pruner cron job", "module": "cron", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/jira/tasks/main.yml", "options": {"name": "add backup pruner cron job"}, "module_options": {"name": "clean old Jira exports", "state": "present", "job": "find /var/www/jira/var/jira/export -maxdepth 2 -type f -mtime +150 -delete -regextype sed -regex '.*/[0-9]\\{4\\}-[A-Z][a-z]\\{2\\}-[0-9]\\{2\\}.*.zip'", "day": "*", "minute": "0", "hour": "0"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/jira"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "consul": {"py/object": "struct4.Role", "name": "consul", "defined_in": "testdata3/scm_repo/playbooks/roles/consul", "fqcn": "consul", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Ensure that unzip is installed", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Ensure that unzip is installed"}, "module_options": {"name": "unzip", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul group", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul group"}, "module_options": {"name": "consul", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul user"}, "module_options": {"name": "consul", "group": "consul", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Mount \"{{ consul_data_dir }}\"", "module": "mount", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Mount \"{{ consul_data_dir }}\"", "when": "consul_server"}, "module_options": {"name": "{{ consul_data_dir }}", "src": "{{ consul_openstack_data_device }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create consul directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create consul directories", "with_items": [{"path": "{{ consul_config_dir }}", "owner": "root"}, {"path": "{{ consul_data_dir }}", "owner": "consul"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "consul", "recurse": true, "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current Consul version", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Determine current Consul version", "register": "consul_current_version", "changed_when": false}, "module_options": "consul version | sed -n 's/Consul v\\(.*\\)/\\1/p'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unarchive the Consul binary", "module": "unarchive", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Download and unarchive the Consul binary", "when": "consul_current_version.rc != 0 or consul_current_version.stdout != consul_version", "notify": "restart consul"}, "module_options": {"src": "{{ consul_url }}", "dest": "{{ consul_bin_dir }}", "owner": "consul", "group": "consul", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul configuration file", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul configuration file", "notify": "restart consul"}, "module_options": {"src": "config.json.j2", "dest": "{{ consul_config_dir }}/config.json", "group": "consul"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul service definition file", "when": "consul_service_config != \"\"", "notify": "restart consul"}, "module_options": {"content": "{{ consul_service_config | to_nice_json }}", "dest": "{{ consul_config_dir }}/service.json", "group": "consul"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the wrapper script files", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Copy the wrapper script files", "with_items": ["run_consul.sh", "update_consul_config.py"]}, "module_options": {"src": "{{ item }}.j2", "dest": "/usr/local/sbin/{{ item }}", "owner": "root", "group": "root", "mode": "755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure that the consul configuration file is group-writeable", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Ensure that the consul configuration file is group-writeable"}, "module_options": {"path": "{{ consul_config_dir }}/config.json", "mode": "g+w"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul systemd service file", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Create Consul systemd service file"}, "module_options": {"src": "consul.service.j2", "dest": "/etc/systemd/system/consul.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"name": "consul.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open TCP/UDP ports on firewall needed for Consul RPC/gossip", "module": "ufw", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Open TCP/UDP ports on firewall needed for Consul RPC/gossip", "with_items": ["tcp", "udp"]}, "module_options": {"rule": "allow", "port": "8300:8302", "proto": "{{ item }}"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Copy pre- and post-backup scripts", "module": "template", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/consul/tasks/main.yml", "options": {"name": "Copy pre- and post-backup scripts", "with_items": [{"src": "backup-pre-consul.sh", "dest": "/usr/local/sbin/backup-pre-consul.sh"}, {"src": "backup-post-consul.sh", "dest": "/usr/local/sbin/backup-post-consul.sh"}], "when": "consul_backup"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ item.dest }}", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/consul"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "nginx-proxy": {"py/object": "struct4.Role", "name": "nginx-proxy", "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy", "fqcn": "nginx-proxy", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install passlib for htpasswd generation", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "install passlib for htpasswd generation"}, "module_options": {"name": "python3-passlib"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate htpasswd file", "module": "htpasswd", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "generate htpasswd file"}, "module_options": {"path": "{{ NGINX_PROXY_HTPASSWD_PATH }}", "username": "{{ NGINX_PROXY_USERNAME }}", "password": "{{ NGINX_PROXY_PASSWORD }}"}, "executable": "htpasswd", "executable_type": "Module", "fqcn": "community.general.htpasswd", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "set up nginx to reverse-proxy", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "set up nginx to reverse-proxy", "register": "sites_available"}, "module_options": {"src": "nginx-proxy.j2", "dest": "{{ NGINX_PROXY_CONFIG_PATH }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "enable nginx site configuration", "register": "sites_enabled"}, "module_options": {"src": "{{ NGINX_PROXY_CONFIG_PATH }}", "dest": "/etc/nginx/sites-enabled/{{ NGINX_PROXY_CONFIG_PATH | basename }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open public port on the firewall", "module": "ufw", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "open public port on the firewall"}, "module_options": {"rule": "allow", "port": "{{ NGINX_PROXY_PUBLIC_PORT }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "reload nginx", "module": "service", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/nginx-proxy/tasks/main.yml", "options": {"name": "reload nginx", "when": "(sites_available.changed or sites_enabled.changed) and NGINX_PROXY_RELOAD_NGINX"}, "module_options": {"name": "nginx", "state": "reloaded"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/nginx-proxy"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "dalite": {"py/object": "struct4.Role", "name": "dalite", "defined_in": "testdata3/scm_repo/playbooks/roles/dalite", "fqcn": "dalite", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "copy ssl cert", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "copy ssl cert"}, "module_options": {"content": "{{ DALITE_SSL_CERT }}", "dest": "/etc/ssl/certs/ssl-cert.pem", "owner": "root", "group": "ssl-cert", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy ssl key", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "copy ssl key"}, "module_options": {"content": "{{ DALITE_SSL_KEY }}", "dest": "/etc/ssl/private/ssl-cert.key", "owner": "root", "group": "ssl-cert", "mode": 288}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "prepare nginx site", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "prepare nginx site"}, "module_options": "src=dalite.site dest=/etc/nginx/sites-enabled/dalite", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart nginx", "module": "service", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_nginx.yml", "options": {"name": "restart nginx"}, "module_options": "name=nginx state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "checkout repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "checkout repository"}, "module_options": {"repo": "{{ DALITE_REPOSITORY }}", "version": "{{ DALITE_REPOSITORY_VERSION }}", "dest": "{{ DALITE_APP_LOCATION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ DALITE_VENV }}", "state": "present", "requirements": "{{ DALITE_APP_LOCATION }}/requirements/prod-openstack.txt", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ DALITE_VENV }}", "state": "present", "name": "Gunicorn==17.5", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create settings", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create settings"}, "module_options": {"src": "dalite_settings.py", "dest": "{{ DALITE_APP_LOCATION }}/dalite/local_settings.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create static root", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create static root"}, "module_options": {"name": "{{ DALITE_STATICFILES_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create media root", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "create media root"}, "module_options": {"name": "{{ DALITE_MEDIA_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "collectstatic", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "collectstatic"}, "module_options": "{{ DALITE_MANAGE_PY }} collectstatic --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "migrate", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-app.yml", "options": {"name": "migrate"}, "module_options": "{{ DALITE_MANAGE_PY }} migrate --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create log download user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create log download user"}, "module_options": {"name": "{{ DALITE_LOG_DOWNLOAD_USER }}", "home": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create ssh dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create ssh dir"}, "module_options": {"state": "directory", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{ DALITE_LOG_DOWNLOAD_USER }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create authorized keys", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create authorized keys"}, "module_options": {"state": "touch", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{ DALITE_LOG_DOWNLOAD_USER }}", "mode": 384}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add authorized keys", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "add authorized keys", "with_items": ["{{ DALITE_LOG_DOWNLOAD_AUTHORIZED_KEYS }}"]}, "module_options": {"dest": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "line": "{{ item }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create directory for the logs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "create directory for the logs", "with_items": ["{{ DALITE_LOG_DOWNLOAD_DB_DIR }}", "{{ DALITE_LOG_DOWNLOAD_LOG_DIR }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ DALITE_LOG_DOWNLOAD_USER }}", "group": "{{DALITE_LOG_DOWNLOAD_USER}}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "dalite-pre-backup.sh", "dest": "/usr/local/sbin/dalite-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy logrotate", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/configure_log_download.yml", "options": {"name": "copy logrotate"}, "module_options": "src=logrotate.d dest=/etc/logrotate.d/dalite", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "format log download volume", "module": "filesystem", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "options": {"name": "format log download volume"}, "module_options": {"dev": "{{ DALITE_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "fstype": "{{ DALITE_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "resizefs": true}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "mount log download volume", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/log_volume.yml", "options": {"name": "mount log download volume"}, "module_options": {"src": "{{ DALITE_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "name": "{{ DALITE_LOG_DOWNLOAD_USER_HOME }}", "fstype": "{{ DALITE_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "prepare config", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "options": {"name": "prepare config"}, "module_options": {"src": "dalite.gunicorn", "dest": "/etc/gunicorn.d/dalite"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart guncorn", "module": "service", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/deploy-gunicorn.yml", "options": {"name": "restart guncorn"}, "module_options": "name=gunicorn state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ DALITE_REQUIREMENTS }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install build deps", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "install build deps"}, "module_options": {"name": "{{ PYTHON_BUILD_DEP_REQIREMENTS }}", "state": "build-dep", "install_recommends": false}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create dalite user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Create dalite user"}, "module_options": {"name": "{{ DALITE_USER_NAME }}", "home": "{{ DALITE_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log dir", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Create log dir"}, "module_options": {"name": "{{ DALITE_LOG_DIR }}", "state": "directory", "owner": "{{ DALITE_USER_NAME }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "deploy-app.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "deploy-gunicorn.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "configure_nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "log_volume.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {}, "module_options": "configure_log_download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/dalite/tasks/main.yml", "options": {"name": "Allow required ports", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/dalite"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "tarsnap": {"py/object": "struct4.Role", "name": "tarsnap", "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap", "fqcn": "tarsnap", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "", "module": "fail", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"when": "TARSNAP_BACKUP_FOLDERS is not defined or TARSNAP_BACKUP_FOLDERS == ''"}, "module_options": "msg=\"Please configure TARSNAP_BACKUP_FOLDERS, we want all servers to be backed up :)\"", "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy key file into place", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Copy key file into place"}, "module_options": {"src": "tarsnap.key", "dest": "{{ TARSNAP_KEY_REMOTE_LOCATION }}", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create cache directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Create cache directory"}, "module_options": {"state": "directory", "path": "{{ TARSNAP_CACHE }}", "owner": "root", "group": "root", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "template main backup script", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "template main backup script"}, "module_options": {"src": "backup.sh", "dest": "{{ TARSNAP_BACKUP_SCRIPT_LOCATION }}", "owner": "root", "group": "root", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install backup in cron", "module": "cron", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Install backup in cron"}, "module_options": {"name": "Backup for this server, archive: {{ TARSNAP_ARCHIVE_NAME }}", "job": "{{ TARSNAP_BACKUP_SCRIPT_LOCATION }} >> {{ TARSNAP_BACKUP_LOG_FILE }} 2>&1", "minute": "{{ TARSNAP_BACKUP_MINUTE }}", "hour": "{{ TARSNAP_BACKUP_HOUR }}", "day": "{{ TARSNAP_BACKUP_DAY }}", "month": "{{ TARSNAP_BACKUP_MONTH }}", "weekday": "{{ TARSNAP_BACKUP_WEEKDAY }}", "state": "{{ TARSNAP_CRONTAB_STATE }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set up log rotation for backup logs", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/configure.yml", "options": {"name": "Set up log rotation for backup logs"}, "module_options": {"src": "logrotate", "dest": "{{ TARSNAP_BACKUP_LOGROTATE_CONFIG }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install dependencies for Tarsnap", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Install dependencies for Tarsnap", "with_items": ["e2fslibs-dev", "libssl-dev", "zlib1g-dev", "build-essential", "python-setuptools"]}, "module_options": "pkg={{ item }} state=installed", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if tarsnap {{ tarsnap_version }} is installed", "module": "shell", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Check if tarsnap {{ tarsnap_version }} is installed", "register": "tarnsap_installed", "changed_when": "tarnsap_installed.stderr != ''", "ignore_errors": true}, "module_options": "tarsnap --version | grep {{ tarsnap_version }} --color=never", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download the current tarsnap code signing key", "module": "get_url", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download the current tarsnap code signing key", "when": "tarnsap_installed|failed"}, "module_options": "url=https://www.tarsnap.com/tarsnap-signing-key.asc dest=/root/tarsnap-signing-key.asc", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the tarsnap code signing key to your list of keys", "module": "command", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Add the tarsnap code signing key to your list of keys", "when": "tarnsap_installed|failed"}, "module_options": "gpg --import tarsnap-signing-key.asc chdir=/root/", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download tarsnap SHA file", "module": "get_url", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download tarsnap SHA file", "when": "tarnsap_installed|failed"}, "module_options": "url=\"https://www.tarsnap.com/download/tarsnap-sigs-{{ tarsnap_version }}.asc\" dest=\"/root/tarsnap-sigs-{{ tarsnap_version }}.asc\"", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "get the SHA256sum for this tarsnap release", "module": "shell", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "get the SHA256sum for this tarsnap release", "when": "tarnsap_installed|failed", "args": {"executable": "/bin/bash", "chdir": "/root"}, "register": "tarsnap_sha"}, "module_options": "gpgResult=`gpg --decrypt tarsnap-sigs-{{ tarsnap_version }}.asc 2>/dev/null`; echo ${gpgResult#*=};\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Tarsnap source", "module": "get_url", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Download Tarsnap source", "when": "tarnsap_installed|failed"}, "module_options": "url=\"https://www.tarsnap.com/download/tarsnap-autoconf-{{ tarsnap_version }}.tgz\" dest=\"/root/tarsnap-autoconf-{{ tarsnap_version }}.tgz\" sha256sum={{ tarsnap_sha.stdout_lines[0] }}", "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Decompress Tarsnap source", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Decompress Tarsnap source", "when": "tarnsap_installed|failed"}, "module_options": "tar xzf /root/tarsnap-autoconf-{{ tarsnap_version }}.tgz chdir=/root creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/COPYING", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Tarsnap for local build", "module": "command", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Configure Tarsnap for local build", "when": "tarnsap_installed|failed"}, "module_options": "./configure chdir=/root/tarsnap-autoconf-{{ tarsnap_version }} creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/Makefile", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Build and install Tarsnap", "module": "command", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Build and install Tarsnap", "when": "tarnsap_installed|failed"}, "module_options": "make all install clean chdir=/root/tarsnap-autoconf-{{ tarsnap_version }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Tarsnap cache directory", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/install.yml", "options": {"name": "Create Tarsnap cache directory"}, "module_options": "state=directory path={{ tarsnap_cache }}", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml", "options": {"tags": "tarsnap"}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/tarsnap/tasks/main.yml", "options": {"tarsnap_cache": "{{ TARSNAP_CACHE }}", "tarsnap_keyfile": "{{ TARSNAP_KEY_REMOTE_LOCATION }}", "when": "TARSNAP_KEY is defined and TARSNAP_KEY != ''", "tags": "tarsnap"}, "module_options": "configure.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/tarsnap"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "mysql": {"py/object": "struct4.Role", "name": "mysql", "defined_in": "testdata3/scm_repo/playbooks/roles/mysql", "fqcn": "mysql", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install python3-mysqldb package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Install python3-mysqldb package"}, "module_options": {"name": "python3-mysqldb"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create mysql group", "module": "group", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create mysql group"}, "module_options": {"name": "mysql", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create mysql user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create mysql user"}, "module_options": {"name": "mysql", "group": "mysql", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a ext4 filesystem on MYSQL_OPENSTACK_DB_DEVICE", "module": "filesystem", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create a ext4 filesystem on MYSQL_OPENSTACK_DB_DEVICE", "when": "MYSQL_OPENSTACK_DB_DEVICE is defined and MYSQL_OPENSTACK_DB_DEVICE != \"\""}, "module_options": {"fstype": "ext4", "dev": "{{ MYSQL_OPENSTACK_DB_DEVICE }}"}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Mount MySQL home", "module": "mount", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Mount MySQL home", "when": "MYSQL_OPENSTACK_DB_DEVICE is defined and MYSQL_OPENSTACK_DB_DEVICE != \"\""}, "module_options": {"name": "/var/lib/mysql", "src": "{{ MYSQL_OPENSTACK_DB_DEVICE }}", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "chown -R /var/lib/mysql", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "chown -R /var/lib/mysql"}, "module_options": {"path": "/var/lib/mysql", "owner": "mysql", "group": "mysql", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "chmod /var/lib/mysql", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "chmod /var/lib/mysql"}, "module_options": {"path": "/var/lib/mysql", "mode": 448, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Allow required ports"}, "module_options": {"rule": "allow", "port": 3306, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Creating directory for Mysql files limit configuration", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Creating directory for Mysql files limit configuration"}, "module_options": {"path": "/etc/systemd/system/mysql.service.d/", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set open files limit in mysql through systemd", "module": "copy", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Set open files limit in mysql through systemd"}, "module_options": {"dest": "/etc/systemd/system/mysql.service.d/override.conf", "content": "# cf https://duntuk.com/how-raise-ulimit-open-files-and-mysql-openfileslimit\n[Service]\nLimitNOFILE={{ MYSQL_OPEN_FILES_LIMIT }}\nLimitNPROC={{ MYSQL_PROCESSES_LIMIT }}\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy pre-backup script", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy pre-backup script"}, "module_options": {"src": "backup-pre-mysql.sh", "dest": "/usr/local/sbin/backup-pre.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy post-backup script", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy post-backup script"}, "module_options": {"src": "backup-post-mysql.sh", "dest": "/usr/local/sbin/backup-post.sh", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download MySQL exporter", "module": "unarchive", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Download MySQL exporter", "notify": "restart mysqld_exporter"}, "module_options": {"src": "{{ MYSQL_EXPORTER_DOWNLOAD_URL }}", "remote_src": true, "dest": "/opt", "creates": "{{ MYSQL_EXPORTER_BINARY }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Append MySQL exporter user to list of MySQL users", "module": "set_fact", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Append MySQL exporter user to list of MySQL users"}, "module_options": {"mysql_users": "{{ mysql_users + MYSQL_EXPORTER_MYSQL_USERS }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create MySQL exporter environment file", "module": "copy", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create MySQL exporter environment file", "notify": "restart mysqld_exporter"}, "module_options": {"content": "DATA_SOURCE_NAME='exporter:{{ MYSQL_EXPORTER_MYSQL_PASSWORD }}@(localhost:3306)/'\n", "dest": "/etc/mysqld_exporter.conf", "mode": 416, "owner": "root", "group": "mysql"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy MySQL exporter service definition", "module": "template", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Copy MySQL exporter service definition", "notify": "restart mysqld_exporter"}, "module_options": {"src": "mysqld_exporter.service.j2", "dest": "/etc/systemd/system/mysqld_exporter.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start MySQL exporter", "module": "systemd", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Start MySQL exporter"}, "module_options": {"daemon-reload": true, "name": "mysqld_exporter.service", "state": "started", "enabled": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul service definition file", "module": "copy", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Create Consul service definition file", "when": "COMMON_SERVER_INSTALL_CONSUL is defined and COMMON_SERVER_INSTALL_CONSUL", "notify": ["reload consul"]}, "module_options": {"content": "{{ MYSQL_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/mysqld-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install MySQL binaries from debian", "module": "apt", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Install MySQL binaries from debian", "with_items": ["{{MYSQL_URLS}}"]}, "module_options": {"deb": "{{item.url}}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Created pinned version file", "module": "template", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mysql/tasks/main.yml", "options": {"name": "Created pinned version file", "when": "MYSQL_PINNED_VERSION != \"\""}, "module_options": {"src": "pinned_versions.j2", "dest": "/etc/apt/preferences.d/mysql", "mode": 320}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mysql"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "davidwittman.redis": {"py/object": "struct4.Role", "name": "davidwittman.redis", "defined_in": "testdata3/scm_repo/playbooks/roles/davidwittman.redis", "fqcn": "davidwittman.redis", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "prometheus_redis_exporter_role": {"py/object": "struct4.Role", "name": "prometheus_redis_exporter_role", "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus_redis_exporter_role", "fqcn": "prometheus_redis_exporter_role", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "geerlingguy.mysql": {"py/object": "struct4.Role", "name": "geerlingguy.mysql", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.mysql", "fqcn": "geerlingguy.mysql", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "sanity-checker": {"py/object": "struct4.Role", "name": "sanity-checker", "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker", "fqcn": "sanity-checker", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install mailutils apt package", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "install mailutils apt package"}, "module_options": {"name": "mailutils"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy sanity check script", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "copy sanity check script"}, "module_options": {"src": "sanity_check.py", "dest": "{{ SANITY_CHECK_SCRIPT_LOCATION }}", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy sanity check config", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "copy sanity check config"}, "module_options": {"content": "{{ sanity_check_control_file|to_json }}", "dest": "{{ SANITY_CHECK_CONFIG }}", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install sanity checks crontab", "module": "cron", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/sanity-checker/tasks/main.yml", "options": {"name": "install sanity checks crontab"}, "module_options": {"job": "{{ SANITY_CHECK_SCRIPT_LOCATION }} {{ SANITY_CHECK_CONFIG }} > /dev/null 2>&1", "minute": "1,11,21,31,41,51", "name": "sanity checker for: {{ SANITY_CHECK_SUBJECT }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/sanity-checker"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "discourse": {"py/object": "struct4.Role", "name": "discourse", "defined_in": "testdata3/scm_repo/playbooks/roles/discourse", "fqcn": "discourse", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "mkdir /discourse", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse"}, "module_options": {"path": "/discourse", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mount /discourse", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mount /discourse"}, "module_options": {"name": "/discourse", "src": "/dev/vdb1", "fstype": "ext4", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "mkdir /discourse/discourse (needed to have /var/discourse as a git repo, which can't use a mounted folder)", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse/discourse (needed to have /var/discourse as a git repo, which can't use a mounted folder)"}, "module_options": {"path": "/discourse/discourse", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ln -s /discourse/discourse /var/discourse", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "ln -s /discourse/discourse /var/discourse"}, "module_options": {"src": "/discourse/discourse", "dest": "/var/discourse", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mkdir /discourse/docker", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /discourse/docker"}, "module_options": {"path": "/discourse/docker", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mkdir /etc/docker", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "mkdir /etc/docker", "become": true}, "module_options": {"path": "/etc/docker", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "change docker root directory", "module": "copy", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "change docker root directory", "notify": ["restart docker", "reload systemd"]}, "module_options": {"src": "daemon.json", "dest": "/etc/docker/daemon.json", "owner": "root", "group": "root", "mode": 320}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add discourse user", "module": "user", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "add discourse user"}, "module_options": {"name": "discourse", "groups": ["sudo", "admin"]}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure docker is running", "module": "service", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "ensure docker is running", "become": true}, "module_options": {"name": "docker", "state": "started"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check if discourse is running", "module": "shell", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "check if discourse is running", "become": true, "register": "discourse_running"}, "module_options": "docker ps", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "checkout discourse source", "module": "git", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "checkout discourse source", "notify": ["stop discourse", "rebuild discourse"]}, "module_options": {"repo": "https://github.com/discourse/discourse_docker.git", "dest": "/var/discourse", "update": false, "accept_hostkey": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy discourse configuration app.yml", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {"name": "copy discourse configuration app.yml", "notify": ["rebuild discourse"]}, "module_options": {"src": "app.yml.j2", "dest": "/var/discourse/containers/app.yml", "owner": "discourse", "group": "sudo"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "meta", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/discourse/tasks/main.yml", "options": {}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "used_in": ["testdata3/scm_repo/playbooks/roles/discourse"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "backup-swift-container": {"py/object": "struct4.Role", "name": "backup-swift-container", "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container", "fqcn": "backup-swift-container", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "install dependencies"}, "module_options": {"name": "{{ BACKUP_SWIFT_CONTAINER_DEPS }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "create backup dir"}, "module_options": {"name": "{{ BACKUP_SWIFT_LOCAL_DIR }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, {"py/object": "struct4.Task", "name": "save pre backup script", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "save pre backup script"}, "module_options": {"src": "backup-swift-pre.sh", "dest": "{{ BACKUP_SWIFT_PRE_DEST }}", "mode": "0700"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}, {"py/object": "struct4.Task", "name": "save local rc", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/backup-swift-container/tasks/main.yml", "options": {"name": "save local rc"}, "module_options": {"content": "{{ BACKUP_SWIFT_RC }}", "dest": "{{ BACKUP_SWIFT_RC_DEST }}", "mode": "0500"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/backup-swift-container"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "mattermost": {"py/object": "struct4.Role", "name": "mattermost", "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost", "fqcn": "mattermost", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "open HTTPS port on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "open HTTPS port on the firewall", "with_items": [443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "copy nginx site configuration", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "copy nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "mattermost-nginx.j2", "dest": "/etc/nginx/sites-available/mattermost"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nginx site configuration", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/nginx.yml", "options": {"name": "enable nginx site configuration", "notify": ["reload nginx"]}, "module_options": {"src": "/etc/nginx/sites-available/mattermost", "dest": "/etc/nginx/sites-enabled/mattermost", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create mattermost group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create mattermost group"}, "module_options": {"name": "mattermost", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create mattermost user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create mattermost user"}, "module_options": {"name": "mattermost", "group": "mattermost", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create directories", "with_items": ["{{ MATTERMOST_STATUS_DIR }}", "{{ MATTERMOST_LOG_DIR }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create config file if it does not exist yet", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create config file if it does not exist yet"}, "module_options": {"src": "config.json.j2", "dest": "{{ MATTERMOST_CONFIG_FILE }}", "owner": "mattermost", "group": "mattermost", "force": false}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate autolink configuration", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "generate autolink configuration"}, "module_options": {"src": "autolink.json.j2", "dest": "{{ MATTERMOST_STATUS_DIR }}/autolink.json", "owner": "mattermost", "group": "mattermost"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create Mattermost systemd service file", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create Mattermost systemd service file"}, "module_options": {"src": "mattermost.service.j2", "dest": "/etc/systemd/system/mattermost.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check whether previous installation was completed", "module": "stat", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "check whether previous installation was completed", "register": "mattermost_installation_complete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "check installed version of Mattermost", "module": "copy", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "check installed version of Mattermost", "register": "mattermost_version"}, "module_options": {"dest": "{{ MATTERMOST_VERSION_FILE }}", "content": "{{ MATTERMOST_VERSION }}", "owner": "mattermost", "group": "mattermost"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mark Mattermost installation as incomplete", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "mark Mattermost installation as incomplete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "download Mattermost distribution tarball", "module": "get_url", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "download Mattermost distribution tarball"}, "module_options": {"url": "{{ MATTERMOST_DOWNLOAD_URL }}", "dest": "{{ MATTERMOST_DOWNLOAD_DEST }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "stop Mattermost service (if it is already running)", "module": "service", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "stop Mattermost service (if it is already running)"}, "module_options": {"name": "mattermost", "state": "stopped"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "remove Mattermost installation directory", "module": "file", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "remove Mattermost installation directory"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_DIR }}/mattermost", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "unpack Mattermost distribution tarball", "module": "unarchive", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "unpack Mattermost distribution tarball"}, "module_options": {"src": "{{ MATTERMOST_DOWNLOAD_DEST }}", "remote_src": true, "dest": "{{ MATTERMOST_INSTALL_DIR }}", "owner": "mattermost", "group": "mattermost"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create symlink to config file", "module": "file", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create symlink to config file"}, "module_options": {"src": "{{ MATTERMOST_CONFIG_FILE }}", "dest": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/config/config.json", "state": "link", "force": true}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "download Mattermost autolink distribution tarball", "module": "get_url", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "download Mattermost autolink distribution tarball"}, "module_options": {"url": "{{ MATTERMOST_UNLINK_DOWNLOAD_URL }}", "dest": "{{ MATTERMOST_UNLINK_DOWNLOAD_DEST }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create plugin directory", "module": "file", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "create plugin directory"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/plugins", "state": "directory", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "unpack Mattermost autolink plugin", "module": "unarchive", "index": 16, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "unpack Mattermost autolink plugin"}, "module_options": {"src": "{{ MATTERMOST_UNLINK_DOWNLOAD_DEST }}", "remote_src": true, "dest": "{{ MATTERMOST_INSTALL_DIR }}/mattermost/plugins", "owner": "mattermost", "group": "mattermost"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "start Mattermost service", "module": "service", "index": 17, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "start Mattermost service"}, "module_options": {"name": "mattermost", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "mark Mattermost installation as complete", "module": "file", "index": 18, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "mark Mattermost installation as complete"}, "module_options": {"path": "{{ MATTERMOST_INSTALL_TAG_FILE }}", "state": "touch", "owner": "mattermost", "group": "mattermost"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "find old Mattermost autolink installer files in /tmp", "module": "find", "index": 19, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "find old Mattermost autolink installer files in /tmp", "register": "all_mm_autolink", "tags": ["cleanup_tmp"]}, "module_options": {"path": "/tmp", "pattern": "mattermost-autolink.+\\.tar\\.gz", "recurse": false, "use_regex": true}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "find old Mattermost team installer files in /tmp", "module": "find", "index": 20, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "find old Mattermost team installer files in /tmp", "register": "all_mm_team", "tags": ["cleanup_tmp"]}, "module_options": {"path": "/tmp", "pattern": "mattermost-team.+\\.tar\\.gz", "recurse": false, "use_regex": true}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "select all but the latest 2 installers for cleanup", "module": "set_fact", "index": 21, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "select all but the latest 2 installers for cleanup", "tags": ["cleanup_tmp"]}, "module_options": {"autolink_delete": "{{ (all_mm_autolink.files|sort(attribute='mtime')|map(attribute='path')|list)[:all_mm_autolink.matched-2] }}", "team_delete": "{{ (all_mm_team.files|sort(attribute='mtime')|map(attribute='path')|list)[:all_mm_team.matched-2] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "perform tmp cleanup of old installer files", "module": "file", "index": 22, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/mattermost.yml", "options": {"name": "perform tmp cleanup of old installer files", "with_items": ["{{ autolink_delete }}", "{{ team_delete }}"], "tags": ["cleanup_tmp"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml", "options": {}, "module_options": "nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/mattermost/tasks/main.yml", "options": {}, "module_options": "mattermost.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/mattermost"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "learner-profile-dashboard": {"py/object": "struct4.Role", "name": "learner-profile-dashboard", "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard", "fqcn": "learner-profile-dashboard", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "ensure nginx config directory exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "ensure nginx config directory exists"}, "module_options": {"path": "/etc/nginx/sites-enabled", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "prepare nginx site", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "prepare nginx site"}, "module_options": "src=lpd.site dest=/etc/nginx/sites-enabled/lpd", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart nginx", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_nginx.yml", "options": {"name": "restart nginx"}, "module_options": "name=nginx state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "checkout repository", "module": "git", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "checkout repository"}, "module_options": {"repo": "{{ LPD_REPOSITORY }}", "version": "{{ LPD_REPOSITORY_VERSION }}", "dest": "{{ LPD_APP_LOCATION }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install dependencies", "module": "pip", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install dependencies"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "requirements": "{{ LPD_APP_LOCATION }}/requirements/base.txt", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install gunicorn", "module": "pip", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install gunicorn"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "name": "Gunicorn==19.4.5", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install mysql client", "module": "pip", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "install mysql client"}, "module_options": {"virtualenv": "{{ LPD_VENV }}", "state": "present", "name": "mysqlclient", "virtualenv_python": "/usr/bin/python2.7"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create settings", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create settings"}, "module_options": {"src": "lpd_settings.py", "dest": "{{ LPD_APP_LOCATION }}/app/local_settings.py"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create static root", "module": "file", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create static root"}, "module_options": {"name": "{{ LPD_STATICFILES_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create media root", "module": "file", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "create media root"}, "module_options": {"name": "{{ LPD_MEDIA_ROOT }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "collectstatic", "module": "shell", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "collectstatic"}, "module_options": "{{ LPD_MANAGE_PY }} collectstatic --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "migrate", "module": "shell", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-app.yml", "options": {"name": "migrate"}, "module_options": "{{ LPD_MANAGE_PY }} migrate --noinput", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create log download user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create log download user"}, "module_options": {"name": "{{ LPD_LOG_DOWNLOAD_USER }}", "home": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create ssh dir", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create ssh dir"}, "module_options": {"state": "directory", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{ LPD_LOG_DOWNLOAD_USER }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create authorized keys", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create authorized keys"}, "module_options": {"state": "touch", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{ LPD_LOG_DOWNLOAD_USER }}", "mode": 384}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "add authorized keys", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "add authorized keys", "with_items": ["{{ LPD_LOG_DOWNLOAD_AUTHORIZED_KEYS }}"]}, "module_options": {"dest": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}/.ssh/authorized_keys", "line": "{{ item }}", "state": "present"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create directory for the logs", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "create directory for the logs", "with_items": ["{{ LPD_LOG_DOWNLOAD_DB_DIR }}", "{{ LPD_LOG_DOWNLOAD_LOG_DIR }}"]}, "module_options": {"name": "{{ item }}", "owner": "{{ LPD_LOG_DOWNLOAD_USER }}", "group": "{{LPD_LOG_DOWNLOAD_USER}}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy pre backup script", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "copy pre backup script"}, "module_options": {"src": "lpd-pre-backup.sh", "dest": "/usr/local/sbin/lpd-pre-backup.sh", "owner": "root", "group": "root", "mode": 448}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy logrotate", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/configure_log_download.yml", "options": {"name": "copy logrotate"}, "module_options": "src=logrotate.d dest=/etc/logrotate.d/lpd", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "format log download volume", "module": "filesystem", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "options": {"name": "format log download volume"}, "module_options": {"dev": "{{ LPD_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "fstype": "{{ LPD_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "resizefs": true}, "executable": "filesystem", "executable_type": "Module", "fqcn": "community.general.filesystem", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "mount log download volume", "module": "mount", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/log_volume.yml", "options": {"name": "mount log download volume"}, "module_options": {"src": "{{ LPD_LOG_DOWNLOAD_VOLUME_DEVICE_ID }}", "name": "{{ LPD_LOG_DOWNLOAD_USER_HOME }}", "fstype": "{{ LPD_LOG_DOWNLOAD_VOLUME_FILESYSTEM }}", "state": "mounted"}, "executable": "mount", "executable_type": "Module", "fqcn": "ansible.posix.mount", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Ensure Gunicorn config directory exists", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "Ensure Gunicorn config directory exists"}, "module_options": {"path": "/etc/gunicorn.d", "recurse": true, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "prepare config", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "prepare config"}, "module_options": {"src": "lpd.gunicorn", "dest": "/etc/gunicorn.d/lpd"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart gunicorn", "module": "service", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/deploy-gunicorn.yml", "options": {"name": "restart gunicorn"}, "module_options": "name=gunicorn state=restarted", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install deps", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "install deps"}, "module_options": {"name": "{{ LPD_REQUIREMENTS }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "install build deps", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "install build deps"}, "module_options": {"name": "{{ PYTHON_BUILD_DEP_REQIREMENTS }}", "state": "build-dep"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create lpd user", "module": "user", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Create lpd user"}, "module_options": {"name": "{{ LPD_USER_NAME }}", "home": "{{ LPD_USER_HOME }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log dir", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Create log dir"}, "module_options": {"name": "{{ LPD_LOG_DIR }}", "state": "directory", "owner": "{{ LPD_USER_NAME }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "deploy-app.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "deploy-gunicorn.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "configure_nginx.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "log_volume.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {}, "module_options": "configure_log_download.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow required ports", "module": "ufw", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/learner-profile-dashboard/tasks/main.yml", "options": {"name": "Allow required ports", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/learner-profile-dashboard"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "common-apache2": {"py/object": "struct4.Role", "name": "common-apache2", "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2", "fqcn": "common-apache2", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install common packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "install common packages", "vars": {"packages": ["apache2", "build-essential", "git", "libffi-dev", "openssl", "python-dev", "python-pip", "python-setuptools"]}}, "module_options": {"name": "{{ packages }}", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install snapd", "module": "apt", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Install snapd"}, "module_options": {"name": "snapd"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install certbot snap", "module": "command", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Install certbot snap"}, "module_options": "snap install certbot --classic", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable systemd timer", "module": "systemd", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Disable systemd timer"}, "module_options": {"name": "snap.certbot.renew.timer", "state": "stopped", "enabled": false}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "include `certbot-renew.sh` script", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "include `certbot-renew.sh` script", "become": true}, "module_options": {"src": "certbot-renew.sh", "dest": "/root/certbot-renew.sh", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create cron job to periodically renew certificates", "module": "cron", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Create cron job to periodically renew certificates"}, "module_options": {"name": "certbot renew", "user": "root", "job": "perl -e 'sleep int(rand(43200))' && /root/certbot-renew.sh", "minute": "0", "hour": "*/12", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set MAILTO variable for certbot renew cron job", "module": "cron", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/common-apache2/tasks/main.yml", "options": {"name": "Set MAILTO variable for certbot renew cron job"}, "module_options": {"name": "MAILTO", "env": true, "job": "ops@opencraft.com", "user": "root", "cron_file": "certbot-renew"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/common-apache2"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "prometheus": {"py/object": "struct4.Role", "name": "prometheus", "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus", "fqcn": "prometheus", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Grafana \u2013 add apt key", "module": "apt_key", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 add apt key"}, "module_options": {"url": "https://packages.grafana.com/gpg.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 add apt repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 add apt repository"}, "module_options": {"repo": "deb https://packages.grafana.com/oss/deb stable main", "filename": "grafana"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 install Debian package", "module": "apt", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 install Debian package"}, "module_options": {"name": "grafana", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 only listen on localhost", "module": "lineinfile", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 only listen on localhost"}, "module_options": {"path": "/etc/grafana/grafana.ini", "regexp": "http_addr.*=", "line": "http_addr = 127.0.0.1"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Grafana \u2013 start server", "module": "service", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/grafana.yml", "options": {"name": "Grafana \u2013 start server"}, "module_options": {"name": "grafana-server", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy Let's Encrypt stage CA cert", "module": "copy", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "copy Let's Encrypt stage CA cert"}, "module_options": {"src": "lets-encrypt-fake-cert.crt", "dest": "{{ PROMETHEUS_LETSENCRYPT_STAGE_CA }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure rsyslog to send Prometheus logs to a separate file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "configure rsyslog to send Prometheus logs to a separate file"}, "module_options": {"content": ":programname, isequal, \"prometheus\"    /var/log/prometheus.log\n", "dest": "/etc/rsyslog.d/prometheus.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure log rotation for the Prometheus logs", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "configure log rotation for the Prometheus logs"}, "module_options": {"src": "logrotate", "dest": "/etc/logrotate.d/prometheus"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "ensure prometheus service directory exists", "module": "file", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "ensure prometheus service directory exists"}, "module_options": {"path": "/etc/systemd/system/prometheus.service.d", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "set the nofile limit for prometheus service to a high number", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {"name": "set the nofile limit for prometheus service to a high number"}, "module_options": {"content": "[Service]\nLimitNOFILE=infinity\n", "dest": "/etc/systemd/system/prometheus.service.d/override.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/prometheus/tasks/main.yml", "options": {}, "module_options": "grafana.yml", "executable": "import_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.import_tasks", "used_in": ["testdata3/scm_repo/playbooks/roles/prometheus"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "postfix": {"py/object": "struct4.Role", "name": "postfix", "defined_in": "testdata3/scm_repo/playbooks/roles/postfix", "fqcn": "postfix", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "install apt packages", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "install apt packages"}, "module_options": {"name": ["ca-certificates", "dovecot-core", "libsasl2-modules", "postfix", "sasl2-bin"]}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy TLS certificate", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "copy TLS certificate"}, "module_options": {"dest": "{{ POSTFIX_TLS_CERT }}", "content": "{{ POSTFIX_TLS_CERT_CONTENT }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "copy TLS private key", "module": "copy", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "copy TLS private key"}, "module_options": {"dest": "{{ POSTFIX_TLS_KEY }}", "content": "{{ POSTFIX_TLS_KEY_CONTENT }}", "owner": "root", "group": "ssl-cert", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Postfix main.cf configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Postfix main.cf configuration file"}, "module_options": {"dest": "/etc/postfix/main.cf", "src": "main.cf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write /etc/mailname", "module": "copy", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write /etc/mailname"}, "module_options": {"dest": "/etc/mailname", "content": "{{ POSTFIX_MAILNAME }}\n"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write /etc/aliases", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write /etc/aliases"}, "module_options": {"dest": "/etc/aliases", "src": "aliases"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure sasl client passwords", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "configure sasl client passwords"}, "module_options": {"src": "client-passwd.j2", "dest": "{{ POSTFIX_SASL_CLIENT_PASSWORD_FILE }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "call postmap on sasl client password file", "module": "command", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "call postmap on sasl client password file"}, "module_options": "postmap \"{{ POSTFIX_SASL_CLIENT_PASSWORD_FILE }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "configure relay maps", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "configure relay maps"}, "module_options": {"src": "relay_maps.j2", "dest": "{{ POSTFIX_RELAY_MAPS_FILE }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "call postmap on relay maps file", "module": "command", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "call postmap on relay maps file"}, "module_options": "postmap \"{{ POSTFIX_RELAY_MAPS_FILE }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Dovecot master configuration file", "module": "copy", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot master configuration file"}, "module_options": {"dest": "/etc/dovecot/conf.d/10-master.conf", "src": "dovecot-master.conf"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Dovecot auth configuration file", "module": "template", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot auth configuration file"}, "module_options": {"dest": "/etc/dovecot/conf.d/10-auth.conf", "src": "dovecot-auth.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "generate Dovecot password hashes", "module": "command", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "generate Dovecot password hashes", "register": "dovecot_users", "with_items": "{{ POSTFIX_SASL_USERS }}"}, "module_options": "doveadm pw -s SHA512-CRYPT -p {{ item.password }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "write Dovecot password file", "module": "copy", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "write Dovecot password file"}, "module_options": {"dest": "{{ POSTFIX_SASL_SERVER_PASSWORD_FILE }}", "content": "{% for item in dovecot_users.results -%}\n{{ item.item.user }}:{{ item.stdout }}\n{% endfor %}\n", "owner": "root", "group": "dovecot", "mode": 416}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "restart services", "module": "service", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "restart services", "with_items": ["dovecot", "postfix"]}, "module_options": {"name": "{{ item }}", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {}}, {"py/object": "struct4.Task", "name": "open SMTP port on the firewall", "module": "ufw", "index": 15, "defined_in": "testdata3/scm_repo/playbooks/roles/postfix/tasks/main.yml", "options": {"name": "open SMTP port on the firewall"}, "module_options": {"rule": "allow", "port": 25, "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/postfix"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "unbound": {"py/object": "struct4.Role", "name": "unbound", "defined_in": "testdata3/scm_repo/playbooks/roles/unbound", "fqcn": "unbound", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install unbound and resolvconf", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml", "options": {"name": "Install unbound and resolvconf", "with_items": ["unbound", "resolvconf"]}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/unbound"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the configuration for caching and forwarding", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/unbound/tasks/main.yml", "options": {"name": "Copy the configuration for caching and forwarding", "notify": ["restart unbound"]}, "module_options": {"src": "cache-and-forward.conf.j2", "dest": "{{ unbound_config_dir }}/cache-and-forward.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/unbound"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "docker-compose": {"py/object": "struct4.Role", "name": "docker-compose", "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose", "fqcn": "docker-compose", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Install dependencies", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install dependencies", "tags": ["docker"]}, "module_options": {"name": ["apt-transport-https", "ca-certificates", "curl", "gnupg-agent", "software-properties-common", "python3-pip"], "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker official GPG key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Add Docker official GPG key", "tags": ["docker"]}, "module_options": {"url": "https://download.docker.com/linux/ubuntu/gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify that we have the key with the fingerprint", "module": "apt_key", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Verify that we have the key with the fingerprint", "tags": ["docker"]}, "module_options": {"id": "0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set up the stable repository", "module": "apt_repository", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Set up the stable repository", "tags": ["docker"]}, "module_options": {"repo": "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt packages", "module": "apt", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Update apt packages", "tags": ["docker"]}, "module_options": {"update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install docker", "module": "apt", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install docker", "notify": "Start docker on boot", "tags": ["docker"]}, "module_options": {"name": ["docker-ce", "docker-ce-cli", "containerd.io"], "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Python dependencies", "module": "pip", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install Docker Python dependencies"}, "module_options": {"name": ["docker", "docker-compose"]}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create \"docker\" group", "module": "group", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Create \"docker\" group", "tags": ["docker"]}, "module_options": {"name": "docker", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add remote \"ubuntu\" user to \"docker\" group", "module": "user", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Add remote \"ubuntu\" user to \"docker\" group", "tags": ["docker"]}, "module_options": {"name": "ubuntu", "group": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install docker-compose", "module": "uri", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Install docker-compose", "tags": ["docker"]}, "module_options": {"url": "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture}}", "dest": "/usr/local/bin/docker-compose", "status_code": "200, 304"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Give permissions to docker-compose", "module": "file", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/docker-compose/tasks/main.yml", "options": {"name": "Give permissions to docker-compose"}, "module_options": {"path": "/usr/local/bin/docker-compose", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/docker-compose"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "consul-template": {"py/object": "struct4.Role", "name": "consul-template", "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template", "fqcn": "consul-template", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create consul group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul group"}, "module_options": {"name": "consul", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul user"}, "module_options": {"name": "consul", "group": "consul", "createhome": false, "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create consul-template directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Create consul-template directories", "with_items": [{"path": "/etc/consul-template/config", "owner": "root"}, {"path": "/etc/consul-template/templates", "owner": "root"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "consul", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current consul-template version", "module": "shell", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Determine current consul-template version", "register": "consul_template_current_version", "changed_when": false}, "module_options": "consul-template --version 2>&1 >/dev/null | cut -d\" \" -f 2 - | cut -b 2- -", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unarchive the consul-template binary", "module": "unarchive", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/consul-template/tasks/main.yml", "options": {"name": "Download and unarchive the consul-template binary", "when": "consul_template_current_version.rc != 0 or consul_template_current_version.stdout != consul_template_version"}, "module_options": {"src": "{{ consul_template_url }}", "dest": "{{ consul_template_bin_dir }}", "owner": "consul", "group": "consul", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/consul-template"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "ernestas-poskus.prometheus": {"py/object": "struct4.Role", "name": "ernestas-poskus.prometheus", "defined_in": "testdata3/scm_repo/playbooks/roles/ernestas-poskus.prometheus", "fqcn": "ernestas-poskus.prometheus", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "sprintcraft": {"py/object": "struct4.Role", "name": "sprintcraft", "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft", "fqcn": "sprintcraft", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Allow web ports on firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Allow web ports on firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Set authorized key for CircleCI", "module": "authorized_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Set authorized key for CircleCI"}, "module_options": {"user": "ubuntu", "state": "present", "key": "{{ CI_SSH_PUBLIC_KEY }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "ansible.posix.authorized_key", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create the app directory", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Create the app directory"}, "module_options": {"path": "{{ APP_PATH }}", "state": "directory", "owner": "ubuntu", "group": "ubuntu", "mode": 509}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the deployment script", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Copy the deployment script", "become_user": "ubuntu"}, "module_options": {"src": "deploy.sh", "dest": "{{ APP_PATH }}/", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Install the docker-compose file", "become_user": "ubuntu"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ APP_PATH }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker cleanup cron job", "module": "cron", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Install Docker cleanup cron job", "become_user": "ubuntu"}, "module_options": {"name": "Remove unused Docker data", "job": "docker system prune -f", "special_time": "daily"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate the environment file", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Generate the environment file", "become_user": "ubuntu", "tags": "configuration"}, "module_options": {"src": "env.j2", "dest": "{{ APP_PATH }}/.env", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start SprintCraft with docker-compose", "module": "docker_compose", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Start SprintCraft with docker-compose", "become_user": "ubuntu"}, "module_options": {"project_src": "{{ APP_PATH }}", "pull": true}, "executable": "docker_compose", "executable_type": "Module", "fqcn": "community.docker.docker_compose", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Restart SprintCraft services after reconfiguring them", "module": "docker_compose", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/sprintcraft/tasks/main.yml", "options": {"name": "Restart SprintCraft services after reconfiguring them", "tags": ["never", "configuration"]}, "module_options": {"project_src": "{{ APP_PATH }}", "restarted": true, "services": ["django", "celeryworker"]}, "executable": "docker_compose", "executable_type": "Module", "fqcn": "community.docker.docker_compose", "used_in": ["testdata3/scm_repo/playbooks/roles/sprintcraft"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "redis-exporter": {"py/object": "struct4.Role", "name": "redis-exporter", "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter", "fqcn": "redis-exporter", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create Consul config directory", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml", "options": {"name": "create Consul config directory"}, "module_options": {"path": "/etc/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/redis-exporter"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create Consul service definition file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/redis-exporter/tasks/main.yml", "options": {"name": "create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ REDIS_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/redis-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/redis-exporter"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "appserver": {"py/object": "struct4.Role", "name": "appserver", "defined_in": "testdata3/scm_repo/playbooks/roles/appserver", "fqcn": "appserver", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Set up Consul Connect proxy endpoints for memcached and Redis", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml", "options": {"name": "Set up Consul Connect proxy endpoints for memcached and Redis", "vars": {"upstream_specs": "{{ appserver_memcached_upstream_specs }}{{ appserver_redis_upstream_specs }}"}}, "module_options": {"src": "consul-connect.service.j2", "dest": "/etc/systemd/system/consul-connect.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/appserver"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start and enable the Consul Connect proxy", "module": "systemd", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/appserver/tasks/main.yml", "options": {"name": "Start and enable the Consul Connect proxy"}, "module_options": {"name": "consul-connect.service", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/appserver"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "wsgi-app": {"py/object": "struct4.Role", "name": "wsgi-app", "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app", "fqcn": "wsgi-app", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Set login shell for the {{ www_user }} user", "module": "user", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Set login shell for the {{ www_user }} user"}, "module_options": {"name": "{{ www_user }}", "shell": "/bin/bash"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the {{ www_dir }} directory", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Create the {{ www_dir }} directory"}, "module_options": {"path": "{{ www_dir }}", "owner": "{{ www_user }}", "group": "{{ www_user }}", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the {{ app_name }} repository", "module": "git", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Clone the {{ app_name }} repository", "become_user": "{{ www_user }}"}, "module_options": {"repo": "{{ app_repo }}", "dest": "{{ app_deploy_dir }}", "update": false}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the virtualenv package", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install the virtualenv package"}, "module_options": {"name": "virtualenv", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the virtualenv environment and install the requirements", "module": "pip", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Create the virtualenv environment and install the requirements"}, "module_options": {"requirements": "{{ app_deploy_dir }}/requirements.txt", "virtualenv": "{{ app_virtualenv_dir }}", "virtualenv_python": "python3.6"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gunicorn", "module": "pip", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install gunicorn"}, "module_options": {"name": "gunicorn=={{ gunicorn_version }}", "virtualenv": "{{ app_virtualenv_dir }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the script for running the application", "module": "template", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install the script for running the application", "become_user": "{{ www_user }}", "tags": "wsgi-app-env-file"}, "module_options": {"src": "run.sh", "dest": "{{ www_dir }}/{{ app_name}}_run.sh", "mode": 448, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install supervisor", "module": "apt", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install supervisor"}, "module_options": {"name": "supervisor", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install supervisor configuration", "module": "template", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Install supervisor configuration"}, "module_options": {"src": "supervisor.conf", "dest": "/etc/supervisor/conf.d/{{ app_name }}.conf", "mode": 420, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart supervisor", "module": "service", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/wsgi-app/tasks/main.yml", "options": {"name": "Restart supervisor"}, "module_options": {"name": "supervisor", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/wsgi-app"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "geerlingguy.security": {"py/object": "struct4.Role", "name": "geerlingguy.security", "defined_in": "testdata3/scm_repo/playbooks/roles/geerlingguy.security", "fqcn": "geerlingguy.security", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "greendayonfire.mongodb": {"py/object": "struct4.Role", "name": "greendayonfire.mongodb", "defined_in": "testdata3/scm_repo/playbooks/roles/greendayonfire.mongodb", "fqcn": "greendayonfire.mongodb", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "kibana-email-alert": {"py/object": "struct4.Role", "name": "kibana-email-alert", "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert", "fqcn": "kibana-email-alert", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Copy alert script", "module": "template", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Copy alert script"}, "module_options": {"src": "kibana_email_alert.sh.j2", "dest": "/usr/local/sbin/kibana_email_alert.sh", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy systemd service file", "module": "template", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Copy systemd service file"}, "module_options": {"src": "kibana_email_alert.service.j2", "dest": "/etc/systemd/system/kibana_email_alert.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start the systemd service to start on boot automatically", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/kibana-email-alert/tasks/main.yml", "options": {"name": "Enable and start the systemd service to start on boot automatically"}, "module_options": {"name": "kibana_email_alert.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/kibana-email-alert"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "elasticsearch": {"py/object": "struct4.Role", "name": "elasticsearch", "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch", "fqcn": "elasticsearch", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create Elasticsearch role", "module": "uri", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Create Elasticsearch role", "with_items": "{{ elasticsearch_create_roles }}", "when": "elasticsearch_create_roles is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/role/{{ item.name }}", "method": "POST", "body_format": "json", "body": "{{ item.permissions }}", "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Elasticsearch user", "module": "uri", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Create Elasticsearch user", "with_items": "{{ elasticsearch_create_users }}", "when": "elasticsearch_create_users is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/{{ item.username }}", "method": "POST", "body_format": "json", "body": {"password": "{{ item.password }}", "roles": "{{ item.roles }}"}, "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Update password for Elasticsearch user", "module": "uri", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/create_user_roles.yml", "options": {"name": "Update password for Elasticsearch user", "with_items": "{{ elasticsearch_create_users }}", "when": "elasticsearch_create_users is defined"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/{{ item.username }}/_password", "method": "POST", "body_format": "json", "body": {"password": "{{ item.password }}"}, "status_code": 200, "user": "{{ elasticsearch_username }}", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt package dependencies.", "module": "apt", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install apt package dependencies."}, "module_options": {"name": "openjdk-8-jdk"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elasticsearch apt key", "module": "apt_key", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Add Elasticsearch apt key"}, "module_options": {"url": "https://artifacts.elastic.co/GPG-KEY-elasticsearch"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Elasticsearch repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Add Elasticsearch repository"}, "module_options": {"repo": "{{ elasticsearch_repo }}"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch", "module": "apt", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch"}, "module_options": {"name": "{{ elasticsearch_package }}", "force": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Elasticsearch directories", "module": "file", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Create Elasticsearch directories", "with_items": ["{{ elasticsearch_data_dir }}", "{{ elasticsearch_log_dir }}", "{{ elasticsearch_cfg_dir }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "elasticsearch", "group": "elasticsearch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 1", "module": "template", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 1", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"src": "http.p12.b64.j2", "dest": "{{ elasticsearch_cfg_dir }}/http.p12.b64"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 2", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 2", "args": {"creates": "{{ elasticsearch_cfg_dir }}/http.p12"}, "when": "elasticsearch_keystore|length > 0"}, "module_options": "base64 -d {{ elasticsearch_cfg_dir }}/http.p12.b64 > {{ elasticsearch_cfg_dir }}/http.p12", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 3", "module": "file", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 3", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"path": "{{ elasticsearch_cfg_dir }}/http.p12", "owner": "elasticsearch", "group": "elasticsearch", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Elasticsearch certificates 4", "module": "file", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Install Elasticsearch certificates 4", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"path": "{{ elasticsearch_cfg_dir }}/http.p12.b64", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Elasticsearch", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Configure Elasticsearch", "notify": "restart elasticsearch"}, "module_options": {"src": "elasticsearch.yml.j2", "dest": "/etc/elasticsearch/elasticsearch.yml", "group": "elasticsearch", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Elasticsearch extra jvm options", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Elasticsearch extra jvm options", "notify": "restart elasticsearch", "when": "elasticsearch_extra_jvm_options|length > 0"}, "module_options": {"src": "50-extra-jvm.options.j2", "dest": "/etc/elasticsearch/jvm.options.d/50-extra-jvm.options", "group": "elasticsearch", "mode": 416}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Set bootstrap password", "module": "shell", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Set bootstrap password", "when": "elasticsearch_password|length > 0"}, "module_options": "echo \"{{ elasticsearch_password }}\" | {{ elasticsearch_bin_dir }}/elasticsearch-keystore add -f -x 'bootstrap.password'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Elasticsearch", "module": "service", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Start Elasticsearch"}, "module_options": {"name": "elasticsearch", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Setup password for user kibana_system", "module": "uri", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Setup password for user kibana_system", "when": "elasticsearch_keystore|length > 0"}, "module_options": {"url": "{{ es_api_uri }}/_security/user/kibana_system/_password", "method": "POST", "body_format": "json", "body": "{ \"password\":\"{{ kibana_elasticsearch_password }}\" }", "status_code": 200, "user": "elastic", "password": "{{ elasticsearch_password }}", "force_basic_auth": true, "validate_certs": false}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open Elasticsearch ports on the firewall", "module": "ufw", "index": 14, "defined_in": "testdata3/scm_repo/playbooks/roles/elasticsearch/tasks/main.yml", "options": {"name": "Open Elasticsearch ports on the firewall", "with_items": ["{{ elasticsearch_http_port }}"]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/elasticsearch"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "node-exporter": {"py/object": "struct4.Role", "name": "node-exporter", "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter", "fqcn": "node-exporter", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create Consul config directory", "module": "file", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "create Consul config directory"}, "module_options": {"path": "/etc/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}, {"py/object": "struct4.Task", "name": "create Consul service definition file", "module": "copy", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "create Consul service definition file", "notify": ["reload consul"]}, "module_options": {"content": "{{ NODE_EXPORTER_CONSUL_SERVICE | to_nice_json }}", "dest": "/etc/consul/node-exporter.json"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}, {"py/object": "struct4.Task", "name": "enable nodeexporter", "module": "systemd", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/node-exporter/tasks/main.yml", "options": {"name": "enable nodeexporter"}, "module_options": {"name": "nodeexporter.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/node-exporter"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "kamaln7.swapfile": {"py/object": "struct4.Role", "name": "kamaln7.swapfile", "defined_in": "testdata3/scm_repo/playbooks/roles/kamaln7.swapfile", "fqcn": "kamaln7.swapfile", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "vault": {"py/object": "struct4.Role", "name": "vault", "defined_in": "testdata3/scm_repo/playbooks/roles/vault", "fqcn": "vault", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Create vault group", "module": "group", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault group"}, "module_options": {"name": "vault", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create vault user", "module": "user", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault user"}, "module_options": {"name": "vault", "group": "vault", "createhome": "{{ vault_user_createhome }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create vault directories", "module": "file", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create vault directories", "with_items": [{"path": "{{ vault_bin_dir }}", "owner": "root"}, {"path": "{{ vault_log_dir }}", "owner": "vault"}, {"path": "{{ vault_config_dir }}", "owner": "vault"}, {"path": "{{ vault_policy_dir }}", "owner": "vault"}, {"path": "{{ vault_tls_dir }}", "owner": "vault"}]}, "module_options": {"path": "{{ item.path }}", "state": "directory", "owner": "{{ item.owner }}", "group": "vault", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over Vault private TLS content", "module": "copy", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Copy over Vault private TLS content", "with_items": [{"content": "{{ vault_tls_cert }}", "dest": "{{ vault_tcp_tls_cert_file }}"}, {"content": "{{ vault_tls_key }}", "dest": "{{ vault_tcp_tls_key_file }}"}, {"content": "{{ vault_tls_ca }}", "dest": "{{ vault_tcp_tls_client_ca_file }}"}], "no_log": true, "notify": "restart vault"}, "module_options": {"content": "{{ item.content }}", "dest": "{{ item.dest }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current Vault version", "module": "shell", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Determine current Vault version", "register": "vault_current_version", "changed_when": false}, "module_options": "vault version | cut -d\" \" -f 2 - | cut -b 2- -", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Download and unarchive the Vault binary", "module": "unarchive", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Download and unarchive the Vault binary", "when": "vault_current_version.rc != 0 or vault_current_version.stdout != vault_version", "register": "vault_binary", "notify": "restart vault"}, "module_options": {"src": "{{ vault_url }}", "dest": "{{ vault_bin_dir }}", "owner": "vault", "group": "vault", "remote_src": true}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure `vault` autocomplete", "module": "shell", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Configure `vault` autocomplete", "become": false, "when": "vault_binary.changed", "ignore_errors": true}, "module_options": "vault -autocomplete-install", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Vault environment variables", "module": "template", "index": 7, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Install Vault environment variables", "become": false}, "module_options": {"src": "vault-env.j2", "dest": "/home/{{ ansible_ssh_user }}/.vault-env"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Source Vault environment variables", "module": "lineinfile", "index": 8, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Source Vault environment variables", "become": false}, "module_options": {"path": "/home/{{ ansible_ssh_user }}/.bashrc", "line": "source $HOME/.vault-env"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Vault configuration file", "module": "template", "index": 9, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create Vault configuration file", "notify": "restart vault"}, "module_options": {"src": "config.hcl.j2", "dest": "{{ vault_config_dir }}/config.hcl", "group": "vault"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Vault systemd service file", "module": "template", "index": 10, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Create Vault systemd service file"}, "module_options": {"src": "vault.service.j2", "dest": "/etc/systemd/system/vault.service"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable and start systemd service to start on boot automatically", "module": "systemd", "index": 11, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Enable and start systemd service to start on boot automatically"}, "module_options": {"name": "vault.service", "enabled": true, "state": "started", "daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Open TCP port on firewall needed for Vault server-to-server communication", "module": "ufw", "index": 12, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Open TCP port on firewall needed for Vault server-to-server communication", "when": "vault_ufw"}, "module_options": {"rule": "allow", "port": "8200:8201", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Allow the mlock syscall to be used by the Vault binary", "module": "shell", "index": 13, "defined_in": "testdata3/scm_repo/playbooks/roles/vault/tasks/main.yml", "options": {"name": "Allow the mlock syscall to be used by the Vault binary", "register": "result", "changed_when": "'cap_ipc_lock set' in result.stdout"}, "module_options": "if getcap $(readlink -f {{ vault_bin_dir }}/vault) | grep -q '= cap_ipc_lock+ep' ; then\n  echo already set\nelse\n  setcap cap_ipc_lock=+ep $(readlink -f {{ vault_bin_dir }}/vault)\n  echo cap_ipc_lock set\nfi\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "used_in": ["testdata3/scm_repo/playbooks/roles/vault"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "matomo": {"py/object": "struct4.Role", "name": "matomo", "defined_in": "testdata3/scm_repo/playbooks/roles/matomo", "fqcn": "matomo", "collection": "", "task_yamls": ["testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Allow web ports on the firewall", "module": "ufw", "index": 0, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Allow web ports on the firewall", "with_items": [80, 443]}, "module_options": {"rule": "allow", "port": "{{ item }}", "proto": "tcp"}, "executable": "ufw", "executable_type": "Module", "fqcn": "community.general.ufw", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create the Matomo deployment and configuration directories", "module": "file", "index": 1, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Create the Matomo deployment and configuration directories", "with_items": ["{{ MATOMO_DOCKER_COMPOSE_DIR }}", "{{ MATOMO_CONFIG_DIR }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose file", "module": "template", "index": 2, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the docker-compose file"}, "module_options": {"src": "docker-compose.yml.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/docker-compose.yml", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the docker-compose environment configuration file", "module": "template", "index": 3, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the docker-compose environment configuration file"}, "module_options": {"src": "matomo.env.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_ENV_FILE }}", "mode": 384, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Matomo archive reports script to use in the cron job", "module": "template", "index": 4, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the Matomo archive reports script to use in the cron job"}, "module_options": {"src": "matomo_archive_reports.sh.j2", "dest": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/matomo_archive_reports.sh", "mode": 493, "backup": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the app with docker-compose", "module": "docker_service", "index": 5, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Start the app with docker-compose"}, "module_options": {"project_src": "{{ MATOMO_DOCKER_COMPOSE_DIR }}", "pull": true, "debug": true}, "executable": "docker_service", "executable_type": "Module", "fqcn": "community.general.docker_service", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Install the Matomo archive script cron job", "module": "cron", "index": 6, "defined_in": "testdata3/scm_repo/playbooks/roles/matomo/tasks/main.yml", "options": {"name": "Install the Matomo archive script cron job"}, "module_options": {"name": "Run the Matomo archive script", "job": "{{ MATOMO_DOCKER_COMPOSE_DIR }}/matomo_archive_reports.sh", "special_time": "hourly", "user": "root", "cron_file": "matomo_archive_reports"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "used_in": ["testdata3/scm_repo/playbooks/roles/matomo"], "annotations": {}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "elastic.elasticsearch": {"py/object": "struct4.Role", "name": "elastic.elasticsearch", "defined_in": "testdata3/scm_repo/playbooks/roles/elastic.elasticsearch", "fqcn": "elastic.elasticsearch", "collection": "", "task_yamls": [], "tasks": [], "modules": [], "source": "", "annotations": {}, "used_in": []}, "google.cloud.gcloud": {"py/object": "struct4.Role", "name": "gcloud", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud", "fqcn": "google.cloud.gcloud", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "gcloud | Load Distro and OS specific variables", "module": "include_vars", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "options": {"name": "gcloud | Load Distro and OS specific variables", "vars": {"params": {"files": ["os/{{ ansible_distribution|lower }}.yml", "os/{{ ansible_os_family|lower }}.yml", "main.yml"], "paths": ["vars"]}}}, "module_options": "{{ lookup('first_found', params) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Install the google-cloud-sdk from {{ gcloud_install_type }}", "module": "include_tasks", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/main.yml", "options": {"name": "gcloud | Install the google-cloud-sdk from {{ gcloud_install_type }}"}, "module_options": "{{ gcloud_install_type }}/main.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Debian | Ensure bash completion is installed", "module": "apt", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Debian | Ensure bash completion is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "when": "ansible_os_family == \"Debian\""}, "module_options": "name=bash-completion", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | RedHat | Ensure bash completion is installed", "module": "yum", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | RedHat | Ensure bash completion is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "when": "ansible_os_family == \"RedHat\""}, "module_options": {"name": ["bash-completion"]}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Ensure bash_completion.d directory exists", "module": "file", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Ensure bash_completion.d directory exists"}, "module_options": {"path": "/etc/bash_completion.d", "owner": "root", "group": "root", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "module": "file", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/command_completion.yml", "options": {"name": "gcloud | Archive | Link binaries to /usr/bin (like package install)"}, "module_options": {"src": "{{ gcloud_library_path }}/completion.bash.inc", "dest": "/etc/bash_completion.d/gcloud", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Ensure temp path exists", "module": "file", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Ensure temp path exists"}, "module_options": "path={{ gcloud_archive_path }} state=directory", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Extract Cloud SDK archive", "module": "unarchive", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Extract Cloud SDK archive"}, "module_options": {"src": "{{ gcloud_archive_url }}", "dest": "{{ gcloud_archive_path }}", "remote_src": true, "creates": "{{ gcloud_library_path }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "module": "file", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Link binaries to /usr/bin (like package install)", "loop": ["bq", "docker-credential-gcloud", "gcloud", "git-credential-gcloud.sh", "gsutil"], "when": "not gcloud_install_script"}, "module_options": {"src": "{{ gcloud_library_path }}/bin/{{ item }}", "dest": "/usr/bin/{{ item }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Add command completion", "module": "include_tasks", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Add command completion", "when": "gcloud_command_completion"}, "module_options": "command_completion.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Install into Path", "module": "command", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/archive_install.yml", "options": {"name": "gcloud | Archive | Install into Path", "when": "gcloud_install_script"}, "module_options": "{{ gcloud_archive_path }}/install.sh --quiet --usage-reporting {{ gcloud_usage_reporting | lower }} {% if gcloud_profile_path %}\n  --rc-path {{ gcloud_profile_path }}\n{% endif %} --command-completion {{ gcloud_command_completion | lower }} --path-update {{ gcloud_update_path | lower }} {% if gcloud_override_components | length > 0 %}--override-components\n  {% for component in gcloud_override_components %}{{ component }}\n    {% if loop.index < gcloud_override_components | length  %}\n    {% endif %}\n  {% endfor %}\n{% endif %} {% if gcloud_additional_components | length > 0 %}--additional-components\n  {% for component in gcloud_additional_components %}{{ component }}\n    {% if loop.index < gcloud_additional_components | length %}\n    {% endif %}\n  {% endfor %}\n{% endif %}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Look for existing Google Cloud SDK installation", "module": "stat", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Look for existing Google Cloud SDK installation", "register": "gcloud_status"}, "module_options": {"path": "{{ gcloud_archive_path }}/google-cloud-sdk/VERSION"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {}, "module_options": "var=gcloud_status", "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Importing contents of {{ gcloud_archive_path }}/google-cloud-sdk/VERSION", "module": "slurp", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Importing contents of {{ gcloud_archive_path }}/google-cloud-sdk/VERSION", "register": "gcloud_installed_version_data"}, "module_options": {"src": "{{ gcloud_archive_path }}/google-cloud-sdk/VERSION"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Setting the gcloud_installed_version variable/fact", "module": "set_fact", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Setting the gcloud_installed_version variable/fact"}, "module_options": {"gcloud_installed_version": "{{ (gcloud_installed_version_data.content|b64decode|trim) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {}, "module_options": {"msg": "google-cloud-sdk: {{ gcloud_installed_version }} is installed"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 5, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"when": "gcloud_version == gcloud_installed_version"}, "module_options": {"msg": "Skipping installation of google-cloud-sdk version {{ gcloud_version }} when {{ gcloud_installed_version }} is already installed."}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Archive | Start installation", "module": "include_tasks", "index": 6, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Archive | Start installation", "when": "gcloud_installed_version is undefined or gcloud_version is version(gcloud_installed_version, '>')"}, "module_options": "archive_install.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "command", "index": 7, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/archive/main.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "gcloud_install_comp_status", "changed_when": "'All components are up to date.' not in gcloud_install_comp_status.stderr_lines", "loop": "{{ gcloud_additional_components }}"}, "module_options": "gcloud components install {{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | RHEL | Add an Apt signing key, uses whichever key is at the URL", "module": "yum_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | RHEL | Add an Apt signing key, uses whichever key is at the URL"}, "module_options": {"name": "google-cloud-sdk", "description": "Google Cloud SDK", "file": "google-cloud-sdk", "baseurl": "https://packages.cloud.google.com/yum/repos/cloud-sdk-el7-x86_64", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": ["https://packages.cloud.google.com/yum/doc/yum-key.gpg", "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | RHEL | Install the google-cloud-sdk package", "module": "yum", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | RHEL | Install the google-cloud-sdk package", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=google-cloud-sdk update_cache=yes", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/redhat.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "loop": "{{ gcloud_additional_components }}"}, "module_options": "name=google-cloud-sdk-{{ item }} update_cache=yes", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Add an Apt signing key, uses whichever key is at the URL", "module": "apt_key", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Add an Apt signing key, uses whichever key is at the URL"}, "module_options": {"url": "{{ gcloud_apt_key }}", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Add the gcloud repository", "module": "apt_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Add the gcloud repository"}, "module_options": {"repo": "deb {{ gcloud_apt_url }} {{ gcloud_apt_repo }} main", "state": "present", "filename": "google-cloud-sdk"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk package", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk package", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=google-cloud-sdk update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Debian | Install the google-cloud-sdk additional components", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/debian.yml", "options": {"name": "gcloud | Debian | Install the google-cloud-sdk additional components", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2, "loop": "{{ gcloud_additional_components }}"}, "module_options": "name=google-cloud-sdk-{{ item }} update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcloud | Start package installation for specific distro", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud/tasks/package/main.yml", "options": {"name": "gcloud | Start package installation for specific distro"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcloud"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "google.cloud.gcsfuse": {"py/object": "struct4.Role", "name": "gcsfuse", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse", "fqcn": "google.cloud.gcsfuse", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "gcsfuse | Ensure gpg is installed", "module": "apt", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Ensure gpg is installed", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=gnupg", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcsfuse | Add an apt signing key", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Add an apt signing key"}, "module_options": {"url": "https://packages.cloud.google.com/apt/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcsfuse | Add the apt repository", "module": "apt_repository", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Add the apt repository"}, "module_options": {"repo": "deb http://packages.cloud.google.com/apt gcsfuse-{{ ansible_distribution_release }} main", "state": "present", "filename": "gcsfuse"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "gcsfuse | Install gcsfuse", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/debian.yml", "options": {"name": "gcsfuse | Install gcsfuse", "register": "task_result", "until": "task_result is success", "retries": 10, "delay": 2}, "module_options": "name=gcsfuse update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse/tasks/main.yml", "options": {}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcsfuse"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "google.cloud.gcp_http_lb": {"py/object": "struct4.Role", "name": "gcp_http_lb", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb", "fqcn": "google.cloud.gcp_http_lb", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "create a global address for the load balancer.", "module": "gcp_compute_global_address", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a global address for the load balancer.", "register": "globaladdress"}, "module_options": {"name": "{{ gcp_http_lb_globaladdress }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_global_address", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_global_address", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a http health check to verify lb working", "module": "gcp_compute_http_health_check", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a http health check to verify lb working", "register": "healthcheck"}, "module_options": {"name": "{{ gcp_http_lb_healthcheck }}", "healthy_threshold": 10, "port": 80, "timeout_sec": 2, "unhealthy_threshold": 5, "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_http_health_check", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_http_health_check", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a backend service", "module": "gcp_compute_backend_service", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a backend service", "register": "backendservice"}, "module_options": {"name": "{{ gcp_http_lb_backendservice }}", "backends": [{"group": "{{ gcp_http_lb_backend.selfLink }}"}], "health_checks": ["{{ healthcheck.selfLink }}"], "enable_cdn": "{{ gcp_http_lb_cdn }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_backend_service", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_backend_service", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a url map", "module": "gcp_compute_url_map", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a url map", "register": "urlmap"}, "module_options": {"name": "{{ gcp_http_lb_urlmap }}", "default_service": "{{ backendservice }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_url_map", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_url_map", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a target http proxy", "module": "gcp_compute_target_http_proxy", "index": 4, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a target http proxy", "register": "httpproxy"}, "module_options": {"name": "{{ gcp_http_lb_httpproxy }}", "url_map": "{{ urlmap }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_target_http_proxy", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_target_http_proxy", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a global forwarding rule", "module": "gcp_compute_global_forwarding_rule", "index": 5, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb/tasks/main.yml", "options": {"name": "create a global forwarding rule", "register": "result"}, "module_options": {"name": "{{ gcp_http_lb_forwardingrule }}", "ip_address": "{{ globaladdress.address }}", "load_balancing_scheme": "EXTERNAL", "ip_protocol": "TCP", "port_range": "80-80", "target": "{{ httpproxy.selfLink }}", "project": "{{ gcp_project }}", "auth_kind": "{{ gcp_cred_kind }}", "service_account_file": "{{ gcp_cred_file }}", "state": "{{ gcp_http_lb_state }}"}, "executable": "gcp_compute_global_forwarding_rule", "executable_type": "Module", "fqcn": "google.cloud.gcp_compute_global_forwarding_rule", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/gcp_http_lb"], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "google.cloud.stackdriver_logging": {"py/object": "struct4.Role", "name": "stackdriver_logging", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging", "fqcn": "google.cloud.stackdriver_logging", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Install the Python bindings for SELinux", "module": "yum", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Install the Python bindings for SELinux"}, "module_options": "name=libselinux-python state=present", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Add the Stackdriver repository", "module": "yum_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Add the Stackdriver repository"}, "module_options": {"name": "google-cloud-logging", "description": "Google Cloud Logging Agent Repository", "baseurl": "{{ stackdriver_log_yum_repo }}", "file": "google-cloud-logging", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": "{{ stackdriver_log_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | RedHat | Install Stackdriver agent", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/redhat.yml", "options": {"name": "Stackdriver Logging | RedHat | Install Stackdriver agent", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_log_package_name }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Add the Stackdriver repository", "module": "apt_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Add the Stackdriver repository"}, "module_options": {"repo": "deb {{ stackdriver_log_apt_repo_url }} {{ stackdriver_log_apt_repo_name }} main", "filename": "google-cloud-logging", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Ensure Stackdriver's GPG key is available.", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Ensure Stackdriver's GPG key is available."}, "module_options": {"url": "{{ stackdriver_log_apt_repo_url }}/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Install the Stackdriver agent", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Install the Stackdriver agent", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_log_package_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Debian | Install the Stackdriver catch all config", "module": "apt", "index": 3, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/debian.yml", "options": {"name": "Stackdriver Logging | Debian | Install the Stackdriver catch all config", "when": "stackdriver_log_catch_all_conf"}, "module_options": {"name": "{{ stackdriver_log_config_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | OS Based Installation", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | OS Based Installation"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Install the Stackdriver defaults file", "module": "template", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | Install the Stackdriver defaults file", "when": "stackdriver_http_proxy is defined or stackdriver_https_proxy is defined"}, "module_options": {"src": "default/google-fluentd", "dest": "/etc/default/google-fluentd"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Logging | Install the logging files", "module": "template", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging/tasks/main.yml", "options": {"name": "Stackdriver Logging | Install the logging files", "loop": "{{ stackdriver_log_files }}", "when": "stackdriver_log_files is defined", "notify": "Stackdriver Logging | Restart Stackdriver Agent"}, "module_options": {"src": "source.conf", "dest": "/etc/google-fluentd/config.d/{{ item.name }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_logging"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "google.cloud.stackdriver_monitoring": {"py/object": "struct4.Role", "name": "stackdriver_monitoring", "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring", "fqcn": "google.cloud.stackdriver_monitoring", "collection": "google.cloud", "task_yamls": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/main.yml"], "tasks": [{"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Install the Python bindings for SELinux", "module": "yum", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Install the Python bindings for SELinux"}, "module_options": "name=libselinux-python state=present", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Add the Stackdriver repository", "module": "yum_repository", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Add the Stackdriver repository"}, "module_options": {"name": "google-cloud-monitoring", "description": "Google Cloud Monitoring Agent Repository", "baseurl": "{{ stackdriver_mon_yum_repo }}", "file": "google-cloud-monitoring", "enabled": true, "gpgcheck": true, "repo_gpgcheck": true, "gpgkey": "{{ stackdriver_mon_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | RedHat | Install Stackdriver agent", "module": "yum", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/redhat.yml", "options": {"name": "Stackdriver Monitoring | RedHat | Install Stackdriver agent", "notify": "Stackdriver Monitoring | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_mon_package_name }}", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Add the Stackdriver repository", "module": "apt_repository", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Add the Stackdriver repository"}, "module_options": {"repo": "deb {{ stackdriver_mon_apt_repo_url }} {{ stackdriver_mon_apt_repo_name }} main", "filename": "google-cloud-monitoring", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Ensure Stackdriver's GPG key is available.", "module": "apt_key", "index": 1, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Ensure Stackdriver's GPG key is available."}, "module_options": {"url": "{{ stackdriver_mon_apt_repo_url }}/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | Debian | Install the Stackdriver agent", "module": "apt", "index": 2, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/debian.yml", "options": {"name": "Stackdriver Monitoring | Debian | Install the Stackdriver agent", "notify": "Stackdriver Monitoring | Restart Stackdriver Agent"}, "module_options": {"name": "{{ stackdriver_mon_package_name }}", "state": "present", "update_cache": true}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}, {"py/object": "struct4.Task", "name": "Stackdriver Monitoring | OS Based Installation", "module": "include_tasks", "index": 0, "defined_in": "testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring/tasks/main.yml", "options": {"name": "Stackdriver Monitoring | OS Based Installation"}, "module_options": "{{ ansible_os_family|lower }}.yml", "executable": "include_tasks", "executable_type": "Module", "fqcn": "ansible.builtin.include_tasks", "used_in": ["testdata3/installed_collections_path/ansible_collections/google/cloud/roles/stackdriver_monitoring"], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}