.. Copyright (C) 2022 Maciej Delmanowski <drybjed@gmail.com>
.. Copyright (C) 2022 DebOps <https://debops.org/>
.. SPDX-License-Identifier: GPL-3.0-only

Getting started
===============

.. only:: html

   .. contents::
      :local:


Upstream package is used by default
-----------------------------------

The :ref:`debops.metricbeat` role depends on the :ref:`debops.extrepo` Ansible
role to configure access to the Elastic.co APT repository. This means that
usually the latest available Metricbeat release will be installed by default.
If you require older releases, you can use the :ref:`debops.apt_preferences`
role to select the desired package version.

Alternatively, you can "mask" the
:envvar:`metricbeat__extrepo__dependent_sources` variable in the Ansible
inventory and configure the APT repositories yourself via the :ref:`debops.apt`
role. You can also use the :ref:`debops.elastic_co` role to configure Elastic
APT repositories specifically.


Default configuration
---------------------

The ``metricbeat`` role includes a basic configuration for Metricbeat which
will by default enable metrics in the ``system`` module.

The default configuration does not try to connect to any existing Elasticsearch
cluster. You should finish the configuration in the Ansible inventory to tailor
the role to your own environment. An example configuration for an Elasticsearch
+ Kibana environment is provided below:

.. literalinclude:: examples/metricbeat-deployment.yml
   :language: yaml
   :lines: 1,5-

For ease of use, the examples are provided in the :ref:`debops.metricbeat` role
documentation in the DebOps monorepo. Elasticsearch and Kibana services can be
configured using the :ref:`debops.elasticsearch` and :ref:`debops.kibana`
roles, respectively.

Check the `Metricbeat configuration`__ upstream documentation to learn more
about configuring Metricbeat for your environment and requirements.

.. __: https://www.elastic.co/guide/en/beats/metricbeat/current/configuring-howto-metricbeat.html


Role debugging tips
-------------------

Most of the configuration files generated by the role are protected by the
Ansible ``no_log`` keyword. To make debugging easier, you can use the
:envvar:`debops__no_log` variable in an inventory (in the development
environment) or with Ansible ``--extra-vars`` parameter (one time, for
production environment) to disable log protection. See the variable
documentation for more details.


Example inventory
-----------------

To install and configure Metricbeat on a host, it needs to be included in the
``[debops_service_metricbeat]`` Ansible inventory group:

.. code-block:: none

   [debops_all_hosts]
   hostname

   [debops_service_metricbeat]
   hostname

Fully-fledged Elastic stack can be deployed like this:

.. code-block:: none

   [debops_all_hosts]
   es1     ansible_host=es1.example.org
   es2     ansible_host=es2.example.org
   es3     ansible_host=es3.example.org
   kibana  ansible_host=kibana.example.org

   [debops_service_elasticsearch]
   es1
   es2
   es3

   [debops_service_kibana]
   kibana

   [debops_service_metricbeat:children]
   debops_service_elasticsearch
   debops_service_kibana

Example playbook
----------------

If you are using this role without DebOps, here's an example Ansible playbook
that uses the ``debops.metricbeat`` role:

.. literalinclude:: ../../../../ansible/playbooks/service/metricbeat.yml
   :language: yaml
   :lines: 1,5-


Ansible tags
------------

You can use Ansible ``--tags`` or ``--skip-tags`` parameters to limit what
tasks are performed during Ansible run. This can be used after host is first
configured to speed up playbook execution, when you are sure that most of the
configuration has not been changed.

Available role tags:

``role::metricbeat``
  Main role tag, should be used in the playbook to execute all of the role
  tasks as well as role dependencies.
