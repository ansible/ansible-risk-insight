---
# Copyright (C) 2014-2021 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2021 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Create reprepro spool directory
  ansible.builtin.file:
    path: '{{ reprepro__spool_root + "/" + repo.name }}'
    state: 'directory'
    owner: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    mode: '0755'
  when: repo.state|d('present') not in [ 'absent', 'ignore' ]

- name: Create directory for reprepro uploads
  ansible.builtin.file:
    path: '{{ reprepro__spool_root + "/" + repo.name + "/incoming" }}'
    state: 'directory'
    owner: '{{ reprepro__user }}'
    group: 'www-data'
    mode: '0730'
  when: repo.state|d('present') not in [ 'absent', 'ignore' ]

- name: Create reprepro internal directories
  ansible.builtin.file:
    path: '{{ reprepro__data_root + "/" + repo.name + "/" + item }}'
    state: 'directory'
    owner: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    mode: '0755'
  loop: [ 'conf/uploaders', 'tmp' ]
  when: repo.state|d('present') not in [ 'absent', 'ignore' ]

- name: Create public reprepro repository
  ansible.builtin.file:
    path: '{{ reprepro__public_root + "/sites/" + repo.name + "/public" }}'
    state: 'directory'
    owner: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    mode: '0755'
  when: repo.state|d('present') not in [ 'absent', 'ignore' ] and
        not repo.outdir|d()

- name: Copy GPG public key to public space
  ansible.builtin.copy:
    src: '{{ reprepro__home + "/" + reprepro__gpg_public_filename }}'
    dest: '{{ reprepro__public_root + "/sites/" + repo.name + "/public/" + reprepro__gpg_public_filename }}'
    remote_src: True
    owner: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    mode: '0644'
  when: repo.state|d('present') not in [ 'absent', 'ignore' ] and
        not repo.outdir|d()

- name: Manage reprepro configuration files
  ansible.builtin.template:
    src: 'home/reprepro/repositories/instance/conf/{{ item }}.j2'
    dest: '{{ reprepro__data_root + "/" + repo.name + "/conf/" + item }}'
    owner: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    mode: '0644'
  loop: [ 'distributions', 'incoming', 'options', 'pulls', 'updates' ]
  register: reprepro__register_config
  when: (repo.state|d('present') not in [ 'absent', 'ignore' ] and
         (item in repo.keys() or item in [ 'options' ]))

- name: Configure uploaders configuration files
  ansible.builtin.template:
    src: 'home/reprepro/repositories/instance/conf/uploaders/template.j2'
    dest: '{{ reprepro__data_root + "/" + repo.name + "/conf/uploaders/" + item.name }}'
    owner: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    mode: '0644'
  loop: '{{ repo.uploaders }}'
  register: reprepro__register_uploaders
  when: repo.state|d('present') not in [ 'absent', 'ignore' ] and 'uploaders' in repo.keys()

- name: Initialize reprepro repositories
  ansible.builtin.command: 'reprepro export'
  args:
    chdir: '{{ reprepro__data_root + "/" + repo.name }}'
  become: True
  become_user: '{{ reprepro__user }}'
  when: (repo.state|d('present') not in [ 'absent', 'ignore' ] and repo.distributions|d() and
         (reprepro__register_config is changed or reprepro__register_uploaders is changed))

- name: Generate symlinks
  ansible.builtin.command: 'reprepro --delete createsymlinks'
  args:
    chdir: '{{ reprepro__data_root + "/" + repo.name }}'
  become: True
  become_user: '{{ reprepro__user }}'
  changed_when: False
  when: (repo.state|d('present') not in [ 'absent', 'ignore' ] and repo.distributions|d())

- name: Enable incoming queue monitoring
  ansible.builtin.systemd:
    name: '{{ "reprepro-incoming@" + repo.name + ".path" }}'
    state: '{{ "started"
               if (repo.state|d("present") not in [ "absent", "ignore" ])
               else "stopped" }}'
    enabled: '{{ True
               if (repo.state|d("present") not in [ "absent", "ignore" ])
               else False }}'
  when: repo.incoming|d()

- name: Manage reprepro scripts
  ansible.builtin.template:
    src: 'home/reprepro/repositories/instance/conf/{{ item }}.j2'
    dest: '{{ reprepro__data_root + "/" + repo.name + "/conf/" + item }}'
    owner: '{{ reprepro__user }}'
    group: '{{ reprepro__group }}'
    mode: '0755'
  with_items: [ 'email-changes.sh' ]
  when: repo.state|d('present') not in [ 'absent', 'ignore' ]
