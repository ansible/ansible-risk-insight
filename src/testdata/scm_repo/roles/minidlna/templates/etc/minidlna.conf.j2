{# Copyright (C) 2021 Julien Lecomte <julien@lecomte.at>
 # Copyright (C) 2021 Maciej Delmanowski <drybjed@gmail.com>
 # Copyright (C) 2021 DebOps <https://debops.org/>
 # SPDX-License-Identifier: GPL-3.0-only
 #}
# {{ ansible_managed }}
#
# This is the configuration file for the MiniDLNA daemon, a DLNA/UPnP-AV media
# server.
#
# Unless otherwise noted, the commented out options show their default value.
#
# On Debian, you can also refer to the minidlna.conf(5) man page for
# documentation about this file.

{% for element in minidlna__combined_configuration | debops.debops.parse_kv_config %}
{%   if element.name|d() and element.state|d('present') not in [ 'absent', 'ignore', 'init' ] %}
{%     if element.comment|d() %}
{%       if not loop.first %}

{%       endif %}
{{       element.comment | regex_replace('\n$','') | comment(prefix='', postfix='') -}}
{%     endif %}
{%     set element_comment = ('#' if element.state|d('present') == 'comment' else '') %}
{%     if element.value is defined %}
{%       if element.value is string and not element.value | bool %}
{%         set element_value = element.value %}
{%       elif element.value | bool and element.value is not iterable %}
{%         if element.value | string == '1' %}
{%           set element_value = element.value %}
{%         else %}
{%           set element_value = 'yes' %}
{%         endif %}
{%       elif not element.value | bool and element.value is not iterable %}
{%         if element.value is not none %}
{%           if element.value | int %}
{%             set element_value = element.value %}
{%           else %}
{%             if element.value | string == '0' %}
{%               set element_value = element.value %}
{%             else %}
{%               set element_value = 'no' %}
{%             endif %}
{%           endif %}
{%         endif %}
{%       else %}
{%         set element_value = element.value | selectattr('state', 'equalto', 'present') | map(attribute='name') | list %}
{%       endif %}
{%     else %}
{%       set element_value = element.value|d() %}
{%     endif %}
{%     if element_value is not string and element_value is not mapping and element_value is iterable %}
{%       for thing in element_value %}
{{         '{}{}={}'.format(element_comment, element.name, thing) }}
{%       endfor %}
{%     else %}
{{       '{}{}={}'.format(element_comment, element.name, element_value) }}
{%     endif %}
{%   endif %}
{% endfor %}
