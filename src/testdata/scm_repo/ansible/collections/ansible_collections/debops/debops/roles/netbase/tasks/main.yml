---
# Copyright (C) 2018 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  ansible.builtin.import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Install required packages
  ansible.builtin.package:
    name: '{{ q("flattened", (netbase__base_packages
                              + netbase__packages)) }}'
    state: 'present'
  register: netbase__register_packages
  until: netbase__register_packages is succeeded
  when: netbase__enabled | bool

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save netbase local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/netbase.fact.j2'
    dest: '/etc/ansible/facts.d/netbase.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'

- name: Manage the hostname
  ansible.builtin.hostname:
    name: '{{ netbase__hostname }}'
  notify: [ 'Refresh host facts' ]
  when: netbase__enabled | bool and netbase__hostname_config_enabled | bool

- name: Generate /etc/hosts database
  ansible.builtin.template:
    src: 'etc/hosts.j2'
    dest: '/etc/hosts'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Refresh host facts' ]
  when: netbase__enabled | bool and netbase__hosts_config_type == 'template'

- name: Manage entries in /etc/hosts
  ansible.builtin.lineinfile:  # noqa no-tabs
    dest:    '/etc/hosts'
    regexp:  '^{{ item.name | replace(".","\.") }}\s+'
    line:    "{{ item.name }}\t{{ ('\t' if (item.name | string | length < 8) else '') }}{{ item.value
                 if (item.value is string)
                 else ((item.value | d()) | selectattr('name', 'defined') | map(attribute='name') | list | join(' ')) }}"
    state:   '{{ "present" if item.value | d() else "absent" }}'
    mode:    '0644'
  loop: '{{ netbase__combined_hosts | debops.debops.parse_kv_config }}'
  loop_control:
    label: '{{ {item.name: (item.value | d([])) | selectattr("name", "defined") | map(attribute="name") | list} }}'
  notify: [ 'Refresh host facts' ]
  when: netbase__enabled | bool and netbase__hosts_config_type == 'lineinfile' and item.name | d()

- name: Manage entries in /etc/networks
  ansible.builtin.lineinfile:  # noqa no-tabs
    dest:    '/etc/networks'
    regexp:  '^{{ item.key | replace(".","\.") }}\s+'
    line:    "{{ item.key }}\t{{ item.value if (item.value is string) else (item.value | d() | join(' ')) }}"
    state:   '{{ "present" if item.value | d() else "absent" }}'
    mode:    '0644'
  with_dict: '{{ netbase__networks | combine(netbase__group_networks, netbase__host_networks) }}'
  notify: [ 'Refresh host facts' ]
  when: netbase__enabled | bool

  # This task is here in case that the hostname or domain of the host was
  # changed, to ensure that the Ansible facts are updated
- name: Update Ansible facts if databases were modified
  ansible.builtin.meta: 'flush_handlers'
