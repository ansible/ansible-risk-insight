---
# Copyright (C) 2017-2019 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2017-2019 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

# The tasks below are a fix for an issue where Avahi service cannot start in an
# LXC container. Without this, installation of the 'avahi-daemon' package will
# result in a dpkg error. More information:
# https://lists.linuxcontainers.org/pipermail/lxc-devel/2012-April/002395.html

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Make sure that Avahi config directory exists
  ansible.builtin.file:
    path: '/etc/avahi'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Divert the avahi-daemon configuration
  dpkg_divert:
    path: '/etc/avahi/{{ item }}'
  loop:
    - 'avahi-daemon.conf'
    - 'hosts'
  register: avahi__register_divert
  notify: [ 'Restart avahi-daemon' ]

- name: Configure avahi-daemon
  ansible.builtin.template:
    src: 'etc/avahi/avahi-daemon.conf.j2'
    dest: '/etc/avahi/avahi-daemon.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart avahi-daemon' ]

- name: Create a stub mDNS hosts configuration file
  ansible.builtin.file:  # noqa no-handler
    state: 'touch'
    dest: '/etc/avahi/hosts'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: avahi__register_divert is changed

- name: Create avahi-daemon systemd override directory
  ansible.builtin.file:
    path: '/etc/systemd/system/avahi-daemon.service.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: ansible_service_mgr == 'systemd' and
        ansible_virtualization_type in [ 'lxc', 'docker' ] and
        ansible_virtualization_role == 'guest'

- name: Install avahi-daemon exec override on LXC guests
  ansible.builtin.template:
    src: 'etc/systemd/system/avahi-daemon.service.d/exec-override.conf.j2'
    dest: '/etc/systemd/system/avahi-daemon.service.d/exec-override.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: ansible_service_mgr == 'systemd' and
        ansible_virtualization_type in [ 'lxc', 'docker' ] and
        ansible_virtualization_role == 'guest'

# The rest of the role continues as normal.

- name: Install required packages
  ansible.builtin.package:
    name: '{{ q("flattened", (avahi__base_packages
                              + avahi__packages)) }}'
    state: 'present'
  register: avahi__register_packages
  until: avahi__register_packages is succeeded

- name: Manage advertisement of additional hosts over Avahi
  ansible.builtin.lineinfile:
    dest: '/etc/avahi/hosts'
    regexp: '{{ "^" + item.key + "\s+" }}'
    line: '{{ item.key }} {{ (item.value
                              if item.value.endswith("." + avahi__domain)
                              else (item.value + "." + avahi__domain)) }}'
    state: 'present'
    mode: '0644'
  with_dict: '{{ avahi__hosts | combine(avahi__group_hosts) | combine(avahi__host_hosts) }}'
  when: item.key | d() and item.value | d()

- name: Configure Avahi CNAME aliases
  ansible.builtin.include_tasks: avahi_alias.yml
  when: avahi__alias_enabled | bool
  tags: [ 'role::avahi:alias' ]

- name: Remove Avahi services if requested
  ansible.builtin.file:
    path: '/etc/avahi/services/{{ item.value.filename | d(item.key) }}.service'
    state: 'absent'
  with_dict: '{{ avahi__combined_services }}'
  when: item.value.filename | d(item.key) and item.value.state | d('present') == 'absent'
  tags: [ 'role::avahi:alias', 'role::avahi:services' ]

- name: Configure Avahi services
  ansible.builtin.template:
    src: 'etc/avahi/services/avahi.service.j2'
    dest: '/etc/avahi/services/{{ item.value.filename | d(item.key) }}.service'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_dict: '{{ avahi__combined_services }}'
  when: (item.value.filename | d(item.key) and item.value.state | d('present') != 'absent' and
         (item.value.services | d() or item.value.type | d()))
  tags: [ 'role::avahi:alias', 'role::avahi:services' ]

- name: Ensure that the avahi-daemon service in in the desired state
  ansible.builtin.service:
    name: 'avahi-daemon'
    enabled: '{{ avahi__enabled | bool }}'
    state: '{{ "started" if (avahi__enabled | bool) else "stopped" }}'

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save Avahi local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/avahi.fact.j2'
    dest: '/etc/ansible/facts.d/avahi.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'
