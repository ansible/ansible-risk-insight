---
# Copyright (C) 2015-2018 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2016-2017 Robin Schneider <ypid@riseup.net>
# Copyright (C) 2015-2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

# The 'sysctl' Ansible module was used previously, however using a template and
# 'sysctl --system' command is faster and doesn't create accidental idempotency
# loops when kernel parameters are modified in other configuration files.
#
# Check the role commit history for details.

- name: Import custom Ansible plugins
  ansible.builtin.import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  ansible.builtin.import_role:
    name: 'global_handlers'

- name: Pre hooks
  ansible.builtin.include_tasks: '{{ lookup("debops.debops.task_src", "sysctl/pre_main.yml") }}'
  when: sysctl__enabled|bool

- name: Make sure that Ansible local facts directory exists
  ansible.builtin.file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save sysctl local facts
  ansible.builtin.template:
    src: 'etc/ansible/facts.d/sysctl.fact.j2'
    dest: '/etc/ansible/facts.d/sysctl.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Refresh host facts' ]
  tags: [ 'meta::facts' ]

- name: Update Ansible facts if they were modified
  ansible.builtin.meta: 'flush_handlers'

- name: Add/remove diversion of custom sysctl configuration files
  dpkg_divert:
    path: '/etc/sysctl.d/{{ item.filename | d(item.weight|string + "-" + item.name + ".conf") }}'
    state: '{{ item.state|d("present") }}'
    delete: True
  loop: '{{ sysctl__combined_parameters | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ { "name": item.name, "state": item.state|d("present") } }}'
  when: (sysctl__enabled|bool and item.name|d() and
         item.state|d('present') in [ 'present', 'absent' ] and
         item.divert|d(False)|bool)

- name: Remove custom sysctl configuration files
  ansible.builtin.file:
    path: '/etc/sysctl.d/{{ item.filename | d(item.weight|string + "-" + item.name + ".conf") }}'
    state: 'absent'
  with_items: '{{ sysctl__combined_parameters | debops.debops.parse_kv_items }}'
  register: sysctl__register_config_removed
  when: sysctl__enabled|bool and item.name|d() and item.state|d('present') == 'absent'

- name: Generate custom sysctl configuration files
  ansible.builtin.template:
    src: 'etc/sysctl.d/parameters.conf.j2'
    dest: '/etc/sysctl.d/{{ item.filename | d(item.weight|string + "-" + item.name + ".conf") }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop: '{{ sysctl__combined_parameters | debops.debops.parse_kv_items }}'
  loop_control:
    label: '{{ item.name }}'
  register: sysctl__register_config_created
  when: sysctl__enabled|bool and item.name|d() and item.options|d() and item.state|d('present') not in [ 'absent', 'ignore', 'init' ]

- name: Check sysctl command capabilities
  ansible.builtin.shell: set -o nounset -o pipefail -o errexit &&
         sysctl --help | grep -E '^\s+\-\-system\s+' || true
  args:  # noqa no-handler
    executable: 'bash'
  register: sysctl__register_system
  when: (sysctl__enabled|bool and
         (sysctl__register_config_created is changed or
          sysctl__register_config_removed is changed))
  check_mode: False

- name: Apply kernel parameters if they were modified
  ansible.builtin.shell: |
    set -o nounset -o pipefail -o errexit &&
    {% if (sysctl__register_system.stdout|d()) %}
    sysctl --system
    {% else %}
    sysctl -e -p $(find /etc/sysctl.d -mindepth 1 -maxdepth 1 -name '*.conf' -print0 | sort -z | xargs -r0)
                 /etc/sysctl.conf
    {% endif %}
  args:  # noqa no-handler
    executable: 'bash'
  when: (sysctl__enabled|bool and
         (sysctl__register_config_created is changed or
          sysctl__register_config_removed is changed))

- name: Post hooks
  ansible.builtin.include_tasks: '{{ lookup("debops.debops.task_src", "sysctl/post_main.yml") }}'
  when: sysctl__enabled|bool
