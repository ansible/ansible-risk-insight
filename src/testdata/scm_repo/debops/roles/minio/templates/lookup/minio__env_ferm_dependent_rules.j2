{# Copyright (C) 2019-2022 Maciej Delmanowski <drybjed@gmail.com>
 # Copyright (C) 2019-2022 DebOps <https://debops.org/>
 # SPDX-License-Identifier: GPL-3.0-only
 #}
{% set minio__tpl_ferm_dependent_rules = [] %}
{% for element in minio__combined_instances | debops.debops.parse_kv_items %}
{%   if (element.name|d() and element.port|d() and element.state|d('present') not in [ 'ignore', 'init' ]) %}
{%     set rule = {'type': 'accept',
                   'rule_state': element.state,
                   'dport': [ element.port|string ],
                   'saddr': (( [ element.allow ] if (element.allow is string) else element.allow) if element.allow|d() else []),
                   'accept_any': True,
                   'weight': '50',
                   'by_role': 'debops.minio',
                   'name': ('minio-' + element.name)} %}
{%     set _ = minio__tpl_ferm_dependent_rules.append(rule) %}
{%   endif %}
{%   if (element.name|d() and element.console_port|d() and element.state|d('present') not in [ 'ignore', 'init' ]) %}
{%     set rule = {'type': 'accept',
                   'rule_state': element.state,
                   'dport': [ element.console_port|string ],
                   'saddr': (( [ element.allow ] if (element.allow is string) else element.allow) if element.allow|d() else []),
                   'accept_any': True,
                   'weight': '50',
                   'by_role': 'debops.minio',
                   'name': ('minio-' + element.name + '-console')} %}
{%     set _ = minio__tpl_ferm_dependent_rules.append(rule) %}
{%   endif %}
{% endfor %}
{{ minio__tpl_ferm_dependent_rules | to_yaml }}
