---
# Enable NGINX and NGINX modules.
# Variables for these options can be found below.
# Default is true.
nginx_enable: true

# Print NGINX configuration file to terminal after executing playbook.
nginx_debug_output: false

# Specify which type of NGINX you want to install.
# Options are 'opensource' or 'plus'.
# Default is 'opensource'.
nginx_type: opensource

# (Optional) Specify which version of NGINX you want to install.
# Default is to install the latest release.
# nginx_version: "=19-1~bionic"
# For NGINX Plus and modules you'll need a wilcard like below (which installs plus-20 and modules)
# nginx_version: "-20*"

# Start NGINX service.
# Default is true.
nginx_start: true

# Specify whether you want to install NGINX, upgrade to the latest version, or remove NGINX.
# Can be used with `nginx_version` to fine tune control which version of NGINX is installed/used on each playbook execution.
# Using 'install' will install the latest version (or 'nginx_version') of NGINX on a fresh install.
# Using 'upgrade' will upgrade NGINX to the latest version (that matches your 'nginx_version') of NGINX on every playbook execution. Does not work on Alpine Linux.
# Using 'uninstall' will remove NGINX from your system.
# Default is install.
nginx_setup: install

# Specify whether or not you want to manage the NGINX repositories.
# Using 'true' will manage NGINX repositories.
# Using 'false' will not manage the NGINX repositories, allowing them to be managed through other means.
# Default is true
nginx_manage_repo: true

# Specify repository origin for NGINX Open Source.
# Options are 'nginx_repository', 'source' or 'os_repository'.
# Only works if 'nginx_type' is set to 'opensource'.
# Default is nginx_repository.
nginx_install_from: nginx_repository

# Specify source install options for NGINX Open Source.
# Options represent whether to install from source also or to install from packages (default).
# These only apply if 'nginx_install_from' is set to 'source'.
# For the tools, true means we will install from a package and false means install from source.
# 'nginx_install_source_build_tools' will install compiler and build tools from packages.
# If false, you need to have these present.
nginx_install_source_build_tools: true
nginx_install_source_pcre: false
nginx_install_source_openssl: true
nginx_install_source_zlib: false

# Specify source install module for NGINX Open Source.
# You can select any of the static modules listed on http://nginx.org/en/docs/configure.html.
# Format is '--with-*' where '*' should be used as static module name in the list below. (see an example below).
# Default is 'http_ssl_module'. (DO NOT remove it if you need SSL support).
nginx_static_modules: ['http_ssl_module']
# nginx_static_modules: ['http_v2_module']  # Example for '--with-http_v2_module'

# (Optional) Choose where to fetch the NGINX signing key from.
# Default is the official NGINX signing key host.
# nginx_signing_key: http://nginx.org/keys/nginx_signing.key

# (Optional) Specify repository for NGINX Open Source or NGINX Plus.
# Only works if 'install_from' is set to 'nginx_repository' when installing NGINX Open Source.
# Defaults are the official NGINX repositories.
# nginx_repository: deb [arch=amd64] https://nginx.org/packages/mainline/debian/ buster nginx

# Specify which branch of NGINX Open Source you want to install.
# Options are 'mainline' or 'stable'.
# Only works if 'install_from' is set to 'nginx_repository' or 'source'.
# Default is mainline.
nginx_branch: mainline

# Location of your NGINX Plus license in your local machine.
# Default is the files folder within the NGINX Ansible role.
nginx_license:
  certificate: license/nginx-repo.crt
  key: license/nginx-repo.key

# Set up NGINX Plus license before installation.
# Default is true.
nginx_setup_license: true

# Remove NGINX Plus license and repository after installation for security purposes.
# Default is true.
nginx_remove_license: true

# Specify whether or not you want this role to install the EPEL package when installing certain NGINX Plus modules.
# Using 'true' will install EPEL.
# Using 'false' will not install EPEL.
# Default is true.
nginx_install_epel_release: true

# Install NGINX Dynamic Modules.
# You can select any of the dynamic modules listed below. Beware of NGINX Plus only dynamic modules (these are marked).
# Format is list with either the dynamic module name or a dictionary (see njs for an example).
# When using a dictionary, the default value for state is present, and for version it's nginx_version if specified.
# Default is an empty list (no dynamic modules are installed).
nginx_modules: []
  # - auth-spnego  # NGINX Plus
  # - brotli  # NGINX Plus
  # - cookie-flag  # NGINX Plus
  # - encrypted-session  # NGINX Plus
  # - geoip
  # - geoip2  # NGINX Plus
  # - headers-more  # NGINX Plus
  # - image-filter
  # - lua  # NGINX Plus
  # - name: njs  # Required
  #   state: present  # Optional
  #   version: =1.19.4+0.4.4-1~bionic  # Optional
  # - opentracing  # NGINX Plus
  # - passenger  # NGINX Plus
  # - perl  # NGINX Plus
  # - prometheus  # NGINX Plus
  # - rtmp
  # - subs-filter  # NGINX Plus
  # - waf  # NGINX Plus
  # - xslt
