---
- name: Verify
  hosts: all
  become: true
  tasks:
    - name: Test blast installation
      shell: # noqa 301 305
        cmd: "/usr/local/anaconda/envs/blast/bin/blastn -version"
      register: blast_command
      failed_when: blast_command.rc > 0
    - name: Test my_db
      shell: # noqa 301 305
        cmd: "/usr/local/anaconda/envs/blast/bin/blastdbcmd -db /tmp/test-data/my_db -entry all"
      register: blastdbcmd_command
      failed_when: blastdbcmd_command.rc > 0
    - name: Ubuntu 18 | Test SequenceServer installation
      shell: # noqa 301
        cmd: "export GEM_PATH=/usr/local/share/gems && /usr/local/share/gems/bin/sequenceserver --version"
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "18"
      register: sequenceserver_command
      failed_when: sequenceserver_command.rc > 0
    - name: Ubuntu 20 | Test SequenceServer installation
      shell: # noqa 301
        cmd: "export GEM_PATH=/usr/local/share/gems && /usr/local/share/gems/bin/sequenceserver --version"
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "20"
      register: sequenceserver_command
      failed_when: sequenceserver_command.rc > 0
    - name: CentOS 7 | Test SequenceServer installation
      shell: # noqa 301
        cmd: "export GEM_PATH=/opt/rh/rh-ruby25/root/usr/local/share/gems && export RH_RUBY25_SCLS_ENABLED=rh-ruby25 && /usr/bin/scl enable rh-ruby25 -- /opt/rh/rh-ruby25/root/usr/local/bin/sequenceserver --version" # noqa 204
      when: (ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version == "7"
      register: sequenceserver_command
      failed_when: sequenceserver_command.rc > 0
    - name: Get SequenceServer service logs
      slurp:
        src: "/var/log/sequenceserver/sequenceserver.log"
      register: log
    - name: Display SequenceServer service logs
      debug:
        msg: "{{ log.content | b64decode }}"
    - name: Test that SequenceServer service is running for my_db
      systemd:
        name: sequenceserver-my_db.service
      register: service_result
      failed_when: service_result.status.SubState != 'running'
