{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-certbot", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.certbot", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot", "fqcn": "geerlingguy.certbot", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "install-from-source.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "tasks": [{"py/object": "struct4.Task", "name": "Clone Certbot into configured directory.", "module": "git", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Clone Certbot into configured directory."}, "module_options": {"repo": "{{ certbot_repo }}", "dest": "{{ certbot_dir }}", "version": "{{ certbot_version }}", "update": "{{ certbot_keep_updated }}", "force": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_dir }}/certbot-auto"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure certbot-auto is executable.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Ensure certbot-auto is executable."}, "module_options": {"path": "{{ certbot_script }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "create-cert-webroot.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create webroot directory if it doesn't exist yet", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Create webroot directory if it doesn't exist yet"}, "module_options": {"path": "{{ cert_item.webroot | default(certbot_webroot) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "create-cert-standalone.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first | replace('*.', '') }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pre and post hook folders exist.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Ensure pre and post hook folders exist.", "with_items": ["pre", "post"]}, "module_options": {"path": "/etc/letsencrypt/renewal-hooks/{{ item }}", "state": "directory", "mode": 493, "owner": "root", "group": "root"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pre hook to stop services.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create pre hook to stop services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "stop_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/pre/stop_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create post hook to start services.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create post hook to start services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "start_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/post/start_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "renew-cron.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add cron job for certbot renewal (if configured).", "module": "cron", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml", "options": {"name": "Add cron job for certbot renewal (if configured)."}, "module_options": {"name": "Certbot automatic renewal.", "job": "{{ certbot_script }} renew {{ certbot_auto_renew_options }}", "minute": "{{ certbot_auto_renew_minute }}", "hour": "{{ certbot_auto_renew_hour }}", "user": "{{ certbot_auto_renew_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "include-vars.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Load a variable file based on the OS type, or a default if not found.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml", "options": {"name": "Load a variable file based on the OS type, or a default if not found.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "default.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-with-package.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Certbot.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Install Certbot."}, "module_options": "name={{ certbot_package }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_package }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-with-snap.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure snapd is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is installed.", "register": "snapd_install"}, "module_options": {"name": "snapd", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure snapd is enabled.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is enabled."}, "module_options": {"name": "snapd.socket", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable classic snap support.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Enable classic snap support.", "when": "ansible_os_family != \"Debian\""}, "module_options": {"src": "/var/lib/snapd/snap", "dest": "/snap", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update snap after install.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Update snap after install.", "changed_when": true, "failed_when": false, "when": "snapd_install is changed"}, "module_options": "snap install core; snap refresh core", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install certbot via snap.", "module": "snap", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Install certbot via snap."}, "module_options": {"name": "certbot", "classic": true}, "executable": "snap", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink certbot into place.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Symlink certbot into place.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"src": "/snap/bin/certbot", "dest": "/usr/bin/certbot", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "/usr/bin/certbot"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {}, "module_options": "include-vars.yml", "executable": "include-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'package'"}, "module_options": "install-with-package.yml", "executable": "install-with-package.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'snap'"}, "module_options": "install-with-snap.yml", "executable": "install-with-snap.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'source'"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'standalone'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-standalone.yml", "executable": "create-cert-standalone.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'webroot'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-webroot.yml", "executable": "create-cert-webroot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_auto_renew"}, "module_options": "renew-cron.yml", "executable": "renew-cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dnf-plugins are installed on CentOS 8+.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Ensure dnf-plugins are installed on CentOS 8+."}, "module_options": {"name": "dnf-plugins-core", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.3+.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.3+.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false, "when": "ansible_facts['distribution_version'] is version('8.3', '>=')"}, "module_options": "dnf config-manager --set-enabled powertools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.0\u20138.2.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.0\u20138.2.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false}, "module_options": "dnf config-manager --set-enabled PowerTools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Clone Certbot into configured directory.", "module": "git", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Clone Certbot into configured directory."}, "module_options": {"repo": "{{ certbot_repo }}", "dest": "{{ certbot_dir }}", "version": "{{ certbot_version }}", "update": "{{ certbot_keep_updated }}", "force": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_dir }}/certbot-auto"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure certbot-auto is executable.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Ensure certbot-auto is executable."}, "module_options": {"path": "{{ certbot_script }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create webroot directory if it doesn't exist yet", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Create webroot directory if it doesn't exist yet"}, "module_options": {"path": "{{ cert_item.webroot | default(certbot_webroot) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first | replace('*.', '') }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure pre and post hook folders exist.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Ensure pre and post hook folders exist.", "with_items": ["pre", "post"]}, "module_options": {"path": "/etc/letsencrypt/renewal-hooks/{{ item }}", "state": "directory", "mode": 493, "owner": "root", "group": "root"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create pre hook to stop services.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create pre hook to stop services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "stop_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/pre/stop_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create post hook to start services.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create post hook to start services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "start_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/post/start_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Add cron job for certbot renewal (if configured).", "module": "cron", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml", "options": {"name": "Add cron job for certbot renewal (if configured)."}, "module_options": {"name": "Certbot automatic renewal.", "job": "{{ certbot_script }} renew {{ certbot_auto_renew_options }}", "minute": "{{ certbot_auto_renew_minute }}", "hour": "{{ certbot_auto_renew_hour }}", "user": "{{ certbot_auto_renew_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Load a variable file based on the OS type, or a default if not found.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml", "options": {"name": "Load a variable file based on the OS type, or a default if not found.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "default.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Certbot.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Install Certbot."}, "module_options": "name={{ certbot_package }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_package }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure snapd is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is installed.", "register": "snapd_install"}, "module_options": {"name": "snapd", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure snapd is enabled.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is enabled."}, "module_options": {"name": "snapd.socket", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Enable classic snap support.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Enable classic snap support.", "when": "ansible_os_family != \"Debian\""}, "module_options": {"src": "/var/lib/snapd/snap", "dest": "/snap", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Update snap after install.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Update snap after install.", "changed_when": true, "failed_when": false, "when": "snapd_install is changed"}, "module_options": "snap install core; snap refresh core", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install certbot via snap.", "module": "snap", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Install certbot via snap."}, "module_options": {"name": "certbot", "classic": true}, "executable": "snap", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Symlink certbot into place.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Symlink certbot into place.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"src": "/snap/bin/certbot", "dest": "/usr/bin/certbot", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "/usr/bin/certbot"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {}, "module_options": "include-vars.yml", "executable": "include-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'package'"}, "module_options": "install-with-package.yml", "executable": "install-with-package.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'snap'"}, "module_options": "install-with-snap.yml", "executable": "install-with-snap.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'source'"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'standalone'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-standalone.yml", "executable": "create-cert-standalone.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'webroot'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-webroot.yml", "executable": "create-cert-webroot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_auto_renew"}, "module_options": "renew-cron.yml", "executable": "renew-cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure dnf-plugins are installed on CentOS 8+.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Ensure dnf-plugins are installed on CentOS 8+."}, "module_options": {"name": "dnf-plugins-core", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.3+.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.3+.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false, "when": "ansible_facts['distribution_version'] is version('8.3', '>=')"}, "module_options": "dnf config-manager --set-enabled powertools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.0\u20138.2.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.0\u20138.2.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false}, "module_options": "dnf config-manager --set-enabled PowerTools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml": {"py/object": "struct4.TaskFile", "name": "install-from-source.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "tasks": [{"py/object": "struct4.Task", "name": "Clone Certbot into configured directory.", "module": "git", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Clone Certbot into configured directory."}, "module_options": {"repo": "{{ certbot_repo }}", "dest": "{{ certbot_dir }}", "version": "{{ certbot_version }}", "update": "{{ certbot_keep_updated }}", "force": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_dir }}/certbot-auto"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure certbot-auto is executable.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Ensure certbot-auto is executable."}, "module_options": {"path": "{{ certbot_script }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml": {"py/object": "struct4.TaskFile", "name": "create-cert-webroot.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create webroot directory if it doesn't exist yet", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Create webroot directory if it doesn't exist yet"}, "module_options": {"path": "{{ cert_item.webroot | default(certbot_webroot) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml": {"py/object": "struct4.TaskFile", "name": "create-cert-standalone.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first | replace('*.', '') }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pre and post hook folders exist.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Ensure pre and post hook folders exist.", "with_items": ["pre", "post"]}, "module_options": {"path": "/etc/letsencrypt/renewal-hooks/{{ item }}", "state": "directory", "mode": 493, "owner": "root", "group": "root"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pre hook to stop services.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create pre hook to stop services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "stop_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/pre/stop_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create post hook to start services.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create post hook to start services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "start_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/post/start_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml": {"py/object": "struct4.TaskFile", "name": "renew-cron.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add cron job for certbot renewal (if configured).", "module": "cron", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml", "options": {"name": "Add cron job for certbot renewal (if configured)."}, "module_options": {"name": "Certbot automatic renewal.", "job": "{{ certbot_script }} renew {{ certbot_auto_renew_options }}", "minute": "{{ certbot_auto_renew_minute }}", "hour": "{{ certbot_auto_renew_hour }}", "user": "{{ certbot_auto_renew_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml": {"py/object": "struct4.TaskFile", "name": "include-vars.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Load a variable file based on the OS type, or a default if not found.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml", "options": {"name": "Load a variable file based on the OS type, or a default if not found.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "default.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml": {"py/object": "struct4.TaskFile", "name": "install-with-package.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Certbot.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Install Certbot."}, "module_options": "name={{ certbot_package }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_package }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml": {"py/object": "struct4.TaskFile", "name": "install-with-snap.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure snapd is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is installed.", "register": "snapd_install"}, "module_options": {"name": "snapd", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure snapd is enabled.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is enabled."}, "module_options": {"name": "snapd.socket", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable classic snap support.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Enable classic snap support.", "when": "ansible_os_family != \"Debian\""}, "module_options": {"src": "/var/lib/snapd/snap", "dest": "/snap", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update snap after install.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Update snap after install.", "changed_when": true, "failed_when": false, "when": "snapd_install is changed"}, "module_options": "snap install core; snap refresh core", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install certbot via snap.", "module": "snap", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Install certbot via snap."}, "module_options": {"name": "certbot", "classic": true}, "executable": "snap", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink certbot into place.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Symlink certbot into place.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"src": "/snap/bin/certbot", "dest": "/usr/bin/certbot", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "/usr/bin/certbot"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {}, "module_options": "include-vars.yml", "executable": "include-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'package'"}, "module_options": "install-with-package.yml", "executable": "install-with-package.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'snap'"}, "module_options": "install-with-snap.yml", "executable": "install-with-snap.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'source'"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'standalone'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-standalone.yml", "executable": "create-cert-standalone.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'webroot'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-webroot.yml", "executable": "create-cert-webroot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_auto_renew"}, "module_options": "renew-cron.yml", "executable": "renew-cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dnf-plugins are installed on CentOS 8+.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Ensure dnf-plugins are installed on CentOS 8+."}, "module_options": {"name": "dnf-plugins-core", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.3+.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.3+.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false, "when": "ansible_facts['distribution_version'] is version('8.3', '>=')"}, "module_options": "dnf config-manager --set-enabled powertools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.0\u20138.2.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.0\u20138.2.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false}, "module_options": "dnf config-manager --set-enabled PowerTools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.certbot": {"py/object": "struct4.Role", "name": "geerlingguy.certbot", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot", "fqcn": "geerlingguy.certbot", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "install-from-source.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "tasks": [{"py/object": "struct4.Task", "name": "Clone Certbot into configured directory.", "module": "git", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Clone Certbot into configured directory."}, "module_options": {"repo": "{{ certbot_repo }}", "dest": "{{ certbot_dir }}", "version": "{{ certbot_version }}", "update": "{{ certbot_keep_updated }}", "force": true}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_dir }}/certbot-auto"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure certbot-auto is executable.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-from-source.yml", "options": {"name": "Ensure certbot-auto is executable."}, "module_options": {"path": "{{ certbot_script }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "create-cert-webroot.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create webroot directory if it doesn't exist yet", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Create webroot directory if it doesn't exist yet"}, "module_options": {"path": "{{ cert_item.webroot | default(certbot_webroot) }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-webroot.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "create-cert-standalone.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if certificate already exists.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Check if certificate already exists.", "register": "letsencrypt_cert"}, "module_options": {"path": "/etc/letsencrypt/live/{{ cert_item.domains | first | replace('*.', '') }}/cert.pem"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pre and post hook folders exist.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Ensure pre and post hook folders exist.", "with_items": ["pre", "post"]}, "module_options": {"path": "/etc/letsencrypt/renewal-hooks/{{ item }}", "state": "directory", "mode": 493, "owner": "root", "group": "root"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pre hook to stop services.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create pre hook to stop services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "stop_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/pre/stop_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create post hook to start services.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Create post hook to start services.", "when": ["certbot_create_standalone_stop_services is defined", "certbot_create_standalone_stop_services"]}, "module_options": {"src": "start_services.j2", "dest": "/etc/letsencrypt/renewal-hooks/post/start_services", "owner": "root", "group": "root", "mode": 488}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate new certificate if one doesn't exist.", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/create-cert-standalone.yml", "options": {"name": "Generate new certificate if one doesn't exist.", "when": "not letsencrypt_cert.stat.exists"}, "module_options": "{{ certbot_create_command }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "renew-cron.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add cron job for certbot renewal (if configured).", "module": "cron", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/renew-cron.yml", "options": {"name": "Add cron job for certbot renewal (if configured)."}, "module_options": {"name": "Certbot automatic renewal.", "job": "{{ certbot_script }} renew {{ certbot_auto_renew_options }}", "minute": "{{ certbot_auto_renew_minute }}", "hour": "{{ certbot_auto_renew_hour }}", "user": "{{ certbot_auto_renew_user }}"}, "executable": "cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "include-vars.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Load a variable file based on the OS type, or a default if not found.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/include-vars.yml", "options": {"name": "Load a variable file based on the OS type, or a default if not found.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml", "default.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-with-package.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Certbot.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Install Certbot."}, "module_options": "name={{ certbot_package }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-package.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "{{ certbot_package }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-with-snap.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure snapd is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is installed.", "register": "snapd_install"}, "module_options": {"name": "snapd", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure snapd is enabled.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Ensure snapd is enabled."}, "module_options": {"name": "snapd.socket", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable classic snap support.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Enable classic snap support.", "when": "ansible_os_family != \"Debian\""}, "module_options": {"src": "/var/lib/snapd/snap", "dest": "/snap", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update snap after install.", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Update snap after install.", "changed_when": true, "failed_when": false, "when": "snapd_install is changed"}, "module_options": "snap install core; snap refresh core", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install certbot via snap.", "module": "snap", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Install certbot via snap."}, "module_options": {"name": "certbot", "classic": true}, "executable": "snap", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink certbot into place.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Symlink certbot into place.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"src": "/snap/bin/certbot", "dest": "/usr/bin/certbot", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Certbot script variable.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/install-with-snap.yml", "options": {"name": "Set Certbot script variable."}, "module_options": {"certbot_script": "/usr/bin/certbot"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {}, "module_options": "include-vars.yml", "executable": "include-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'package'"}, "module_options": "install-with-package.yml", "executable": "install-with-package.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'snap'"}, "module_options": "install-with-snap.yml", "executable": "install-with-snap.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_install_method == 'source'"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'standalone'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-standalone.yml", "executable": "create-cert-standalone.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"with_items": "{{ certbot_certs }}", "when": ["certbot_create_if_missing", "certbot_create_method == 'webroot'"], "loop_control": {"loop_var": "cert_item"}}, "module_options": "create-cert-webroot.yml", "executable": "create-cert-webroot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/main.yml", "options": {"when": "certbot_auto_renew"}, "module_options": "renew-cron.yml", "executable": "renew-cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dnf-plugins are installed on CentOS 8+.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Ensure dnf-plugins are installed on CentOS 8+."}, "module_options": {"name": "dnf-plugins-core", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.3+.", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.3+.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false, "when": "ansible_facts['distribution_version'] is version('8.3', '>=')"}, "module_options": "dnf config-manager --set-enabled powertools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable DNF module for CentOS 8.0\u20138.2.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-certbot/geerlingguy.certbot/tasks/setup-RedHat.yml", "options": {"name": "Enable DNF module for CentOS 8.0\u20138.2.", "args": {"warn": false}, "register": "dnf_module_enable", "changed_when": false}, "module_options": "dnf config-manager --set-enabled PowerTools\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.certbot", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}