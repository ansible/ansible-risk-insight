{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-security", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.security", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security", "fqcn": "geerlingguy.security", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "autoupdate-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL 8).", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL 8).", "when": "ansible_distribution_major_version | int == 8"}, "module_options": {"update_utility": "dnf-automatic", "update_service": "dnf-automatic-install.timer", "update_conf_path": "/etc/dnf/automatic.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL <= 7).", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL <= 7).", "when": "ansible_distribution_major_version | int <= 7"}, "module_options": {"update_utility": "yum-cron", "update_service": "yum-cron", "update_conf_path": "/etc/yum/yum-cron.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install automatic update utility.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Install automatic update utility."}, "module_options": {"name": "{{ update_utility }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure automatic update utility is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Ensure automatic update utility is running and enabled on boot."}, "module_options": {"name": "{{ update_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure autoupdates.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Configure autoupdates.", "when": ["security_autoupdate_enabled", "ansible_distribution_major_version | int in [7, 8]"]}, "module_options": {"dest": "{{ update_conf_path }}", "regexp": "^apply_updates = .+", "line": "apply_updates = yes", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "fail2ban.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install fail2ban (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": "fail2ban", "state": "present", "enablerepo": "epel"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install fail2ban (Debian).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": "fail2ban", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy fail2ban custom configuration file into place.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Copy fail2ban custom configuration file into place."}, "module_options": {"src": "{{ security_fail2ban_custom_configuration_template }}", "dest": "/etc/fail2ban/jail.local", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure fail2ban is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Ensure fail2ban is running and enabled on boot."}, "module_options": {"name": "fail2ban", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ssh.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure SSH daemon is running.", "module": "service", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Ensure SSH daemon is running."}, "module_options": {"name": "{{ security_sshd_name }}", "state": "{{ security_sshd_state }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update SSH configuration to be more secure.", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Update SSH configuration to be more secure.", "with_items": [{"regexp": "^PasswordAuthentication", "line": "PasswordAuthentication {{ security_ssh_password_authentication }}"}, {"regexp": "^PermitRootLogin", "line": "PermitRootLogin {{ security_ssh_permit_root_login }}"}, {"regexp": "^Port", "line": "Port {{ security_ssh_port }}"}, {"regexp": "^UseDNS", "line": "UseDNS {{ security_ssh_usedns }}"}, {"regexp": "^PermitEmptyPasswords", "line": "PermitEmptyPasswords {{ security_ssh_permit_empty_password }}"}, {"regexp": "^ChallengeResponseAuthentication", "line": "ChallengeResponseAuthentication {{ security_ssh_challenge_response_auth }}"}, {"regexp": "^GSSAPIAuthentication", "line": "GSSAPIAuthentication {{ security_ssh_gss_api_authentication }}"}, {"regexp": "^X11Forwarding", "line": "X11Forwarding {{ security_ssh_x11_forwarding }}"}], "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line }}", "state": "present", "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured users allowed to connect over ssh", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured users allowed to connect over ssh", "when": "security_ssh_allowed_users | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowUsers", "line": "AllowUsers {{ security_ssh_allowed_users | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured groups allowed to connect over ssh", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured groups allowed to connect over ssh", "when": "security_ssh_allowed_groups | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowGroups", "line": "AllowGroups {{ security_ssh_allowed_groups | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured user accounts to passwordless sudoers.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passwordless sudoers.", "with_items": "{{ security_sudoers_passwordless }}", "when": "security_sudoers_passwordless | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) NOPASSWD: ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured user accounts to passworded sudoers.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passworded sudoers.", "with_items": "{{ security_sudoers_passworded }}", "when": "security_sudoers_passworded | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "autoupdate-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install unattended upgrades package.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Install unattended upgrades package."}, "module_options": {"name": "unattended-upgrades", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy unattended-upgrades configuration files in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Copy unattended-upgrades configuration files in place.", "with_items": ["10periodic", "50unattended-upgrades"]}, "module_options": {"src": "{{ item }}.j2", "dest": "/etc/apt/apt.conf.d/{{ item }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": "security_fail2ban_enabled | bool"}, "module_options": "fail2ban.yml", "executable": "fail2ban.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {}, "module_options": "ssh.yml", "executable": "ssh.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'RedHat'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-RedHat.yml", "executable": "autoupdate-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'Debian'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-Debian.yml", "executable": "autoupdate-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL 8).", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL 8).", "when": "ansible_distribution_major_version | int == 8"}, "module_options": {"update_utility": "dnf-automatic", "update_service": "dnf-automatic-install.timer", "update_conf_path": "/etc/dnf/automatic.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL <= 7).", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL <= 7).", "when": "ansible_distribution_major_version | int <= 7"}, "module_options": {"update_utility": "yum-cron", "update_service": "yum-cron", "update_conf_path": "/etc/yum/yum-cron.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install automatic update utility.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Install automatic update utility."}, "module_options": {"name": "{{ update_utility }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure automatic update utility is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Ensure automatic update utility is running and enabled on boot."}, "module_options": {"name": "{{ update_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Configure autoupdates.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Configure autoupdates.", "when": ["security_autoupdate_enabled", "ansible_distribution_major_version | int in [7, 8]"]}, "module_options": {"dest": "{{ update_conf_path }}", "regexp": "^apply_updates = .+", "line": "apply_updates = yes", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install fail2ban (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": "fail2ban", "state": "present", "enablerepo": "epel"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install fail2ban (Debian).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": "fail2ban", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy fail2ban custom configuration file into place.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Copy fail2ban custom configuration file into place."}, "module_options": {"src": "{{ security_fail2ban_custom_configuration_template }}", "dest": "/etc/fail2ban/jail.local", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure fail2ban is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Ensure fail2ban is running and enabled on boot."}, "module_options": {"name": "fail2ban", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure SSH daemon is running.", "module": "service", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Ensure SSH daemon is running."}, "module_options": {"name": "{{ security_sshd_name }}", "state": "{{ security_sshd_state }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Update SSH configuration to be more secure.", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Update SSH configuration to be more secure.", "with_items": [{"regexp": "^PasswordAuthentication", "line": "PasswordAuthentication {{ security_ssh_password_authentication }}"}, {"regexp": "^PermitRootLogin", "line": "PermitRootLogin {{ security_ssh_permit_root_login }}"}, {"regexp": "^Port", "line": "Port {{ security_ssh_port }}"}, {"regexp": "^UseDNS", "line": "UseDNS {{ security_ssh_usedns }}"}, {"regexp": "^PermitEmptyPasswords", "line": "PermitEmptyPasswords {{ security_ssh_permit_empty_password }}"}, {"regexp": "^ChallengeResponseAuthentication", "line": "ChallengeResponseAuthentication {{ security_ssh_challenge_response_auth }}"}, {"regexp": "^GSSAPIAuthentication", "line": "GSSAPIAuthentication {{ security_ssh_gss_api_authentication }}"}, {"regexp": "^X11Forwarding", "line": "X11Forwarding {{ security_ssh_x11_forwarding }}"}], "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line }}", "state": "present", "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add configured users allowed to connect over ssh", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured users allowed to connect over ssh", "when": "security_ssh_allowed_users | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowUsers", "line": "AllowUsers {{ security_ssh_allowed_users | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add configured groups allowed to connect over ssh", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured groups allowed to connect over ssh", "when": "security_ssh_allowed_groups | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowGroups", "line": "AllowGroups {{ security_ssh_allowed_groups | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add configured user accounts to passwordless sudoers.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passwordless sudoers.", "with_items": "{{ security_sudoers_passwordless }}", "when": "security_sudoers_passwordless | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) NOPASSWD: ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add configured user accounts to passworded sudoers.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passworded sudoers.", "with_items": "{{ security_sudoers_passworded }}", "when": "security_sudoers_passworded | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install unattended upgrades package.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Install unattended upgrades package."}, "module_options": {"name": "unattended-upgrades", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy unattended-upgrades configuration files in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Copy unattended-upgrades configuration files in place.", "with_items": ["10periodic", "50unattended-upgrades"]}, "module_options": {"src": "{{ item }}.j2", "dest": "/etc/apt/apt.conf.d/{{ item }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": "security_fail2ban_enabled | bool"}, "module_options": "fail2ban.yml", "executable": "fail2ban.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {}, "module_options": "ssh.yml", "executable": "ssh.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'RedHat'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-RedHat.yml", "executable": "autoupdate-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'Debian'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-Debian.yml", "executable": "autoupdate-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "autoupdate-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL 8).", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL 8).", "when": "ansible_distribution_major_version | int == 8"}, "module_options": {"update_utility": "dnf-automatic", "update_service": "dnf-automatic-install.timer", "update_conf_path": "/etc/dnf/automatic.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL <= 7).", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL <= 7).", "when": "ansible_distribution_major_version | int <= 7"}, "module_options": {"update_utility": "yum-cron", "update_service": "yum-cron", "update_conf_path": "/etc/yum/yum-cron.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install automatic update utility.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Install automatic update utility."}, "module_options": {"name": "{{ update_utility }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure automatic update utility is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Ensure automatic update utility is running and enabled on boot."}, "module_options": {"name": "{{ update_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure autoupdates.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Configure autoupdates.", "when": ["security_autoupdate_enabled", "ansible_distribution_major_version | int in [7, 8]"]}, "module_options": {"dest": "{{ update_conf_path }}", "regexp": "^apply_updates = .+", "line": "apply_updates = yes", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml": {"py/object": "struct4.TaskFile", "name": "fail2ban.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install fail2ban (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": "fail2ban", "state": "present", "enablerepo": "epel"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install fail2ban (Debian).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": "fail2ban", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy fail2ban custom configuration file into place.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Copy fail2ban custom configuration file into place."}, "module_options": {"src": "{{ security_fail2ban_custom_configuration_template }}", "dest": "/etc/fail2ban/jail.local", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure fail2ban is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Ensure fail2ban is running and enabled on boot."}, "module_options": {"name": "fail2ban", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml": {"py/object": "struct4.TaskFile", "name": "ssh.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure SSH daemon is running.", "module": "service", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Ensure SSH daemon is running."}, "module_options": {"name": "{{ security_sshd_name }}", "state": "{{ security_sshd_state }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update SSH configuration to be more secure.", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Update SSH configuration to be more secure.", "with_items": [{"regexp": "^PasswordAuthentication", "line": "PasswordAuthentication {{ security_ssh_password_authentication }}"}, {"regexp": "^PermitRootLogin", "line": "PermitRootLogin {{ security_ssh_permit_root_login }}"}, {"regexp": "^Port", "line": "Port {{ security_ssh_port }}"}, {"regexp": "^UseDNS", "line": "UseDNS {{ security_ssh_usedns }}"}, {"regexp": "^PermitEmptyPasswords", "line": "PermitEmptyPasswords {{ security_ssh_permit_empty_password }}"}, {"regexp": "^ChallengeResponseAuthentication", "line": "ChallengeResponseAuthentication {{ security_ssh_challenge_response_auth }}"}, {"regexp": "^GSSAPIAuthentication", "line": "GSSAPIAuthentication {{ security_ssh_gss_api_authentication }}"}, {"regexp": "^X11Forwarding", "line": "X11Forwarding {{ security_ssh_x11_forwarding }}"}], "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line }}", "state": "present", "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured users allowed to connect over ssh", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured users allowed to connect over ssh", "when": "security_ssh_allowed_users | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowUsers", "line": "AllowUsers {{ security_ssh_allowed_users | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured groups allowed to connect over ssh", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured groups allowed to connect over ssh", "when": "security_ssh_allowed_groups | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowGroups", "line": "AllowGroups {{ security_ssh_allowed_groups | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured user accounts to passwordless sudoers.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passwordless sudoers.", "with_items": "{{ security_sudoers_passwordless }}", "when": "security_sudoers_passwordless | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) NOPASSWD: ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured user accounts to passworded sudoers.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passworded sudoers.", "with_items": "{{ security_sudoers_passworded }}", "when": "security_sudoers_passworded | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml": {"py/object": "struct4.TaskFile", "name": "autoupdate-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install unattended upgrades package.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Install unattended upgrades package."}, "module_options": {"name": "unattended-upgrades", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy unattended-upgrades configuration files in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Copy unattended-upgrades configuration files in place.", "with_items": ["10periodic", "50unattended-upgrades"]}, "module_options": {"src": "{{ item }}.j2", "dest": "/etc/apt/apt.conf.d/{{ item }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": "security_fail2ban_enabled | bool"}, "module_options": "fail2ban.yml", "executable": "fail2ban.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {}, "module_options": "ssh.yml", "executable": "ssh.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'RedHat'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-RedHat.yml", "executable": "autoupdate-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'Debian'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-Debian.yml", "executable": "autoupdate-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.security": {"py/object": "struct4.Role", "name": "geerlingguy.security", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security", "fqcn": "geerlingguy.security", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "autoupdate-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL 8).", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL 8).", "when": "ansible_distribution_major_version | int == 8"}, "module_options": {"update_utility": "dnf-automatic", "update_service": "dnf-automatic-install.timer", "update_conf_path": "/etc/dnf/automatic.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set correct automatic update utility vars (RHEL <= 7).", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Set correct automatic update utility vars (RHEL <= 7).", "when": "ansible_distribution_major_version | int <= 7"}, "module_options": {"update_utility": "yum-cron", "update_service": "yum-cron", "update_conf_path": "/etc/yum/yum-cron.conf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install automatic update utility.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Install automatic update utility."}, "module_options": {"name": "{{ update_utility }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure automatic update utility is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Ensure automatic update utility is running and enabled on boot."}, "module_options": {"name": "{{ update_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure autoupdates.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-RedHat.yml", "options": {"name": "Configure autoupdates.", "when": ["security_autoupdate_enabled", "ansible_distribution_major_version | int in [7, 8]"]}, "module_options": {"dest": "{{ update_conf_path }}", "regexp": "^apply_updates = .+", "line": "apply_updates = yes", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "fail2ban.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install fail2ban (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": "fail2ban", "state": "present", "enablerepo": "epel"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install fail2ban (Debian).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Install fail2ban (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": "fail2ban", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy fail2ban custom configuration file into place.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Copy fail2ban custom configuration file into place."}, "module_options": {"src": "{{ security_fail2ban_custom_configuration_template }}", "dest": "/etc/fail2ban/jail.local", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure fail2ban is running and enabled on boot.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/fail2ban.yml", "options": {"name": "Ensure fail2ban is running and enabled on boot."}, "module_options": {"name": "fail2ban", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ssh.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure SSH daemon is running.", "module": "service", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Ensure SSH daemon is running."}, "module_options": {"name": "{{ security_sshd_name }}", "state": "{{ security_sshd_state }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update SSH configuration to be more secure.", "module": "lineinfile", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Update SSH configuration to be more secure.", "with_items": [{"regexp": "^PasswordAuthentication", "line": "PasswordAuthentication {{ security_ssh_password_authentication }}"}, {"regexp": "^PermitRootLogin", "line": "PermitRootLogin {{ security_ssh_permit_root_login }}"}, {"regexp": "^Port", "line": "Port {{ security_ssh_port }}"}, {"regexp": "^UseDNS", "line": "UseDNS {{ security_ssh_usedns }}"}, {"regexp": "^PermitEmptyPasswords", "line": "PermitEmptyPasswords {{ security_ssh_permit_empty_password }}"}, {"regexp": "^ChallengeResponseAuthentication", "line": "ChallengeResponseAuthentication {{ security_ssh_challenge_response_auth }}"}, {"regexp": "^GSSAPIAuthentication", "line": "GSSAPIAuthentication {{ security_ssh_gss_api_authentication }}"}, {"regexp": "^X11Forwarding", "line": "X11Forwarding {{ security_ssh_x11_forwarding }}"}], "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line }}", "state": "present", "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured users allowed to connect over ssh", "module": "lineinfile", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured users allowed to connect over ssh", "when": "security_ssh_allowed_users | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowUsers", "line": "AllowUsers {{ security_ssh_allowed_users | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured groups allowed to connect over ssh", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured groups allowed to connect over ssh", "when": "security_ssh_allowed_groups | length > 0", "notify": "restart ssh"}, "module_options": {"dest": "{{ security_ssh_config_path }}", "regexp": "^AllowGroups", "line": "AllowGroups {{ security_ssh_allowed_groups | join(' ') }}", "state": "present", "create": true, "validate": "sshd -T -f %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured user accounts to passwordless sudoers.", "module": "lineinfile", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passwordless sudoers.", "with_items": "{{ security_sudoers_passwordless }}", "when": "security_sudoers_passwordless | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) NOPASSWD: ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add configured user accounts to passworded sudoers.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/ssh.yml", "options": {"name": "Add configured user accounts to passworded sudoers.", "with_items": "{{ security_sudoers_passworded }}", "when": "security_sudoers_passworded | length > 0"}, "module_options": {"dest": "/etc/sudoers", "regexp": "^{{ item }}", "line": "{{ item }} ALL=(ALL) ALL", "state": "present", "validate": "visudo -cf %s", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "autoupdate-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install unattended upgrades package.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Install unattended upgrades package."}, "module_options": {"name": "unattended-upgrades", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy unattended-upgrades configuration files in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/autoupdate-Debian.yml", "options": {"name": "Copy unattended-upgrades configuration files in place.", "with_items": ["10periodic", "50unattended-upgrades"]}, "module_options": {"src": "{{ item }}.j2", "dest": "/etc/apt/apt.conf.d/{{ item }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": "security_fail2ban_enabled | bool"}, "module_options": "fail2ban.yml", "executable": "fail2ban.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {}, "module_options": "ssh.yml", "executable": "ssh.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'RedHat'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-RedHat.yml", "executable": "autoupdate-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-security/geerlingguy.security/tasks/main.yml", "options": {"when": ["ansible_os_family == 'Debian'", "security_autoupdate_enabled | bool"]}, "module_options": "autoupdate-Debian.yml", "executable": "autoupdate-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.security", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}