{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-docker_arm", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.docker_arm", "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm", "fqcn": "geerlingguy.docker_arm", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if Docker is already present.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Check if Docker is already present.", "failed_when": false, "changed_when": false, "check_mode": false, "register": "docker_command_result"}, "module_options": "which docker", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Docker install convenience script.", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Download Docker install convenience script.", "when": "docker_command_result.rc == 1"}, "module_options": {"url": "https://get.docker.com/", "dest": "/tmp/get-docker.sh", "mode": 509}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run Docker install convenience script.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Run Docker install convenience script.", "environment": {"CHANNEL": "stable"}, "when": "docker_command_result.rc == 1"}, "module_options": "/tmp/get-docker.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Docker CE is the version specified.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Make sure Docker CE is the version specified.", "when": "docker_version != 'latest'"}, "module_options": {"name": "docker-ce={{ docker_version }}", "state": "present", "force": true, "install_recommends": "{{ docker_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker is started.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure Docker is started."}, "module_options": {"name": "docker", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose using Pip.", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Install Docker Compose using Pip.", "when": "docker_install_compose | bool"}, "module_options": {"name": "docker-compose", "state": "present", "executable": "{{ docker_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "geerlingguy.docker_arm", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check if Docker is already present.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Check if Docker is already present.", "failed_when": false, "changed_when": false, "check_mode": false, "register": "docker_command_result"}, "module_options": "which docker", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Download Docker install convenience script.", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Download Docker install convenience script.", "when": "docker_command_result.rc == 1"}, "module_options": {"url": "https://get.docker.com/", "dest": "/tmp/get-docker.sh", "mode": 509}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Run Docker install convenience script.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Run Docker install convenience script.", "environment": {"CHANNEL": "stable"}, "when": "docker_command_result.rc == 1"}, "module_options": "/tmp/get-docker.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Make sure Docker CE is the version specified.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Make sure Docker CE is the version specified.", "when": "docker_version != 'latest'"}, "module_options": {"name": "docker-ce={{ docker_version }}", "state": "present", "force": true, "install_recommends": "{{ docker_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure Docker is started.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure Docker is started."}, "module_options": {"name": "docker", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install Docker Compose using Pip.", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Install Docker Compose using Pip.", "when": "docker_install_compose | bool"}, "module_options": {"name": "docker-compose", "state": "present", "executable": "{{ docker_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if Docker is already present.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Check if Docker is already present.", "failed_when": false, "changed_when": false, "check_mode": false, "register": "docker_command_result"}, "module_options": "which docker", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Docker install convenience script.", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Download Docker install convenience script.", "when": "docker_command_result.rc == 1"}, "module_options": {"url": "https://get.docker.com/", "dest": "/tmp/get-docker.sh", "mode": 509}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run Docker install convenience script.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Run Docker install convenience script.", "environment": {"CHANNEL": "stable"}, "when": "docker_command_result.rc == 1"}, "module_options": "/tmp/get-docker.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Docker CE is the version specified.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Make sure Docker CE is the version specified.", "when": "docker_version != 'latest'"}, "module_options": {"name": "docker-ce={{ docker_version }}", "state": "present", "force": true, "install_recommends": "{{ docker_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker is started.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure Docker is started."}, "module_options": {"name": "docker", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose using Pip.", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Install Docker Compose using Pip.", "when": "docker_install_compose | bool"}, "module_options": {"name": "docker-compose", "state": "present", "executable": "{{ docker_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "geerlingguy.docker_arm", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.docker_arm": {"py/object": "struct4.Role", "name": "geerlingguy.docker_arm", "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm", "fqcn": "geerlingguy.docker_arm", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if Docker is already present.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Check if Docker is already present.", "failed_when": false, "changed_when": false, "check_mode": false, "register": "docker_command_result"}, "module_options": "which docker", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Docker install convenience script.", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Download Docker install convenience script.", "when": "docker_command_result.rc == 1"}, "module_options": {"url": "https://get.docker.com/", "dest": "/tmp/get-docker.sh", "mode": 509}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run Docker install convenience script.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Run Docker install convenience script.", "environment": {"CHANNEL": "stable"}, "when": "docker_command_result.rc == 1"}, "module_options": "/tmp/get-docker.sh", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure Docker CE is the version specified.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Make sure Docker CE is the version specified.", "when": "docker_version != 'latest'"}, "module_options": {"name": "docker-ce={{ docker_version }}", "state": "present", "force": true, "install_recommends": "{{ docker_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker is started.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure Docker is started."}, "module_options": {"name": "docker", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose using Pip.", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Install Docker Compose using Pip.", "when": "docker_install_compose | bool"}, "module_options": {"name": "docker-compose", "state": "present", "executable": "{{ docker_pip_executable }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker_arm/geerlingguy.docker_arm/tasks/main.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "geerlingguy.docker_arm", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}