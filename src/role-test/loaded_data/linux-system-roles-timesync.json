{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/linux-system-roles-timesync", "installed_roles": [{"py/object": "struct4.Role", "name": "linux-system-roles.timesync", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync", "fqcn": "linux-system-roles.timesync", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "set_vars.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure ansible_facts used by role", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Ensure ansible_facts used by role", "when": "not ansible_facts.keys() | list | intersect(__timesync_required_facts) == __timesync_required_facts"}, "module_options": {"gather_subset": "min"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set platform/version specific variables", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Set platform/version specific variables", "vars": {"ffparams": {"files": ["{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml", "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml", "{{ ansible_facts['distribution'] }}.yml", "{{ ansible_facts['os_family'] }}.yml", "default.yml"], "paths": ["{{ role_path }}/vars"]}}}, "module_options": "{{ lookup('first_found', ffparams) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set version specific variables", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set version specific variables"}, "module_options": "tasks/set_vars.yml", "executable": "tasks/set_vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set variable `timesync_services` with filtered uniq service names", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set variable `timesync_services` with filtered uniq service names"}, "module_options": {"timesync_services": "{{ ansible_facts.services.values() | selectattr('name', 'defined') | selectattr('status', 'defined') | rejectattr('status', 'match', '^not-found$') | rejectattr('status', 'match', '^masked$') | rejectattr('status', 'match', '^failed$') | map(attribute='name') | map('regex_replace', '[.]service.*$', '') | map('regex_replace', '@$', '') | unique | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that variable 'timesync_services' is defined", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check that variable 'timesync_services' is defined"}, "module_options": {"that": "timesync_services is defined", "fail_msg": "Variable 'timesync_services' is not defined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if only NTP is needed", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if only NTP is needed", "when": "timesync_ptp_domains|length == 0"}, "module_options": {"timesync_mode": 1}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if single PTP is needed", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if single PTP is needed", "when": ["timesync_mode is not defined", "timesync_ntp_servers|length == 0", "timesync_ptp_domains|length == 1", "timesync_ptp_domains[0].interfaces|length == 1"]}, "module_options": {"timesync_mode": 2}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if both NTP and PTP are needed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if both NTP and PTP are needed", "when": "timesync_mode is not defined"}, "module_options": {"timesync_mode": 3}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current NTP provider", "module": "timesync_provider", "index": 7, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Determine current NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": null, "executable": "timesync_provider", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select NTP provider", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Select NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": {"timesync_ntp_provider": "{{ timesync_ntp_provider_current| default(timesync_ntp_provider_os_default, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install chrony", "module": "package", "index": 9, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install chrony", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chrony", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ntp", "module": "package", "index": 10, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install ntp", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linuxptp", "module": "package", "index": 11, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install linuxptp", "when": "timesync_mode != 1"}, "module_options": {"name": "linuxptp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather package facts", "module": "package_facts", "index": 12, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Gather package facts"}, "module_options": {"manager": "auto"}, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run phc_ctl on PTP interface", "module": "command", "index": 13, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Run phc_ctl on PTP interface", "register": "timesync_phc_ctl_output", "changed_when": false, "check_mode": false, "when": "timesync_mode == 2", "ignore_errors": true}, "module_options": "phc_ctl -q {{ timesync_ptp_domains[0].interfaces[0] }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PTP interface supports HW timestamping", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if PTP interface supports HW timestamping", "when": "timesync_mode == 2"}, "module_options": {"timesync_mode2_hwts": "{{ timesync_phc_ctl_output.rc == 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chrony.conf file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chrony.conf file", "notify": "restart {{ 'chronyd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chrony.conf.j2", "dest": "/etc/chrony.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chronyd sysconfig file", "module": "template", "index": 16, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chronyd sysconfig file", "notify": "restart chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chronyd.sysconfig.j2", "dest": "{{ timesync_chrony_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntp.conf file", "module": "template", "index": 17, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntp.conf file", "notify": "restart {{ 'ntpd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntp.conf.j2", "dest": "/etc/ntp.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntpd sysconfig file", "module": "template", "index": 18, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntpd sysconfig file", "notify": "restart ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntpd.sysconfig.j2", "dest": "{{ timesync_ntp_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l.conf file", "module": "template", "index": 19, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l.conf file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "ptp4l.conf.j2", "dest": "/etc/ptp4l.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l sysconfig file", "module": "template", "index": 20, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l sysconfig file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages", "timesync_ptp4l_sysconfig_path | length > 0"]}, "module_options": {"src": "ptp4l.sysconfig.j2", "dest": "{{ timesync_ptp4l_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate phc2sys sysconfig file", "module": "template", "index": 21, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate phc2sys sysconfig file", "notify": "restart phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts", "'linuxptp' in ansible_facts.packages", "timesync_phc2sys_sysconfig_path | length > 0"]}, "module_options": {"src": "phc2sys.sysconfig.j2", "dest": "/etc/sysconfig/phc2sys", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate timemaster.conf file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate timemaster.conf file", "notify": "restart timemaster", "when": ["timesync_mode == 3", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "timemaster.conf.j2", "dest": "{{ timesync_timemaster_config_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update network sysconfig file", "module": "lineinfile", "index": 23, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Update network sysconfig file", "notify": "restart {{ timesync_ntp_provider + 'd' }}", "when": ["timesync_mode == 1", "ansible_facts['os_family'] == 'RedHat'"]}, "module_options": {"dest": "/etc/sysconfig/network", "create": true, "backup": true, "mode": 420, "regexp": "^PEERNTP=", "line": "PEERNTP=no", "state": "{{ 'absent' if timesync_dhcp_ntp_servers else 'present' }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable chronyd", "module": "service", "index": 24, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable chronyd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'chrony'", "'chronyd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service chronyd:')"]}, "module_options": {"name": "chronyd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpd", "module": "service", "index": 25, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'ntp'", "'ntpd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpd:')"]}, "module_options": {"name": "ntpd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpdate", "module": "service", "index": 26, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpdate", "when": "'ntpdate' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpdate:')"]}, "module_options": {"name": "ntpdate", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable sntp", "module": "service", "index": 27, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable sntp", "when": "'sntp' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service sntp:')"]}, "module_options": {"name": "sntp", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ptp4l", "module": "service", "index": 28, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ptp4l", "when": ["timesync_mode != 2", "'ptp4l' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ptp4l:')"]}, "module_options": {"name": "ptp4l", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable phc2sys", "module": "service", "index": 29, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable phc2sys", "when": ["timesync_mode != 2 or not timesync_mode2_hwts", "'phc2sys' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service phc2sys:')"]}, "module_options": {"name": "phc2sys", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable timemaster", "module": "service", "index": 30, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable timemaster", "when": ["timesync_mode != 3", "'timemaster' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service timemaster:')"]}, "module_options": {"name": "timemaster", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable chronyd", "module": "service", "index": 31, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chronyd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ntpd", "module": "service", "index": 32, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntpd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ptp4l", "module": "service", "index": 33, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ptp4l", "when": "timesync_mode == 2"}, "module_options": {"name": "ptp4l", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable phc2sys", "module": "service", "index": 34, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts"]}, "module_options": {"name": "phc2sys", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable timemaster", "module": "service", "index": 35, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable timemaster", "when": "timesync_mode == 3"}, "module_options": {"name": "timemaster", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "linux-system-roles.timesync", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync", "fqcn": "linux-system-roles.timesync", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "set_vars.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure ansible_facts used by role", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Ensure ansible_facts used by role", "when": "not ansible_facts.keys() | list | intersect(__timesync_required_facts) == __timesync_required_facts"}, "module_options": {"gather_subset": "min"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set platform/version specific variables", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Set platform/version specific variables", "vars": {"ffparams": {"files": ["{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml", "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml", "{{ ansible_facts['distribution'] }}.yml", "{{ ansible_facts['os_family'] }}.yml", "default.yml"], "paths": ["{{ role_path }}/vars"]}}}, "module_options": "{{ lookup('first_found', ffparams) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set version specific variables", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set version specific variables"}, "module_options": "tasks/set_vars.yml", "executable": "tasks/set_vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set variable `timesync_services` with filtered uniq service names", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set variable `timesync_services` with filtered uniq service names"}, "module_options": {"timesync_services": "{{ ansible_facts.services.values() | selectattr('name', 'defined') | selectattr('status', 'defined') | rejectattr('status', 'match', '^not-found$') | rejectattr('status', 'match', '^masked$') | rejectattr('status', 'match', '^failed$') | map(attribute='name') | map('regex_replace', '[.]service.*$', '') | map('regex_replace', '@$', '') | unique | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that variable 'timesync_services' is defined", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check that variable 'timesync_services' is defined"}, "module_options": {"that": "timesync_services is defined", "fail_msg": "Variable 'timesync_services' is not defined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if only NTP is needed", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if only NTP is needed", "when": "timesync_ptp_domains|length == 0"}, "module_options": {"timesync_mode": 1}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if single PTP is needed", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if single PTP is needed", "when": ["timesync_mode is not defined", "timesync_ntp_servers|length == 0", "timesync_ptp_domains|length == 1", "timesync_ptp_domains[0].interfaces|length == 1"]}, "module_options": {"timesync_mode": 2}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if both NTP and PTP are needed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if both NTP and PTP are needed", "when": "timesync_mode is not defined"}, "module_options": {"timesync_mode": 3}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current NTP provider", "module": "timesync_provider", "index": 7, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Determine current NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": null, "executable": "timesync_provider", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select NTP provider", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Select NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": {"timesync_ntp_provider": "{{ timesync_ntp_provider_current| default(timesync_ntp_provider_os_default, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install chrony", "module": "package", "index": 9, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install chrony", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chrony", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ntp", "module": "package", "index": 10, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install ntp", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linuxptp", "module": "package", "index": 11, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install linuxptp", "when": "timesync_mode != 1"}, "module_options": {"name": "linuxptp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather package facts", "module": "package_facts", "index": 12, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Gather package facts"}, "module_options": {"manager": "auto"}, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run phc_ctl on PTP interface", "module": "command", "index": 13, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Run phc_ctl on PTP interface", "register": "timesync_phc_ctl_output", "changed_when": false, "check_mode": false, "when": "timesync_mode == 2", "ignore_errors": true}, "module_options": "phc_ctl -q {{ timesync_ptp_domains[0].interfaces[0] }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PTP interface supports HW timestamping", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if PTP interface supports HW timestamping", "when": "timesync_mode == 2"}, "module_options": {"timesync_mode2_hwts": "{{ timesync_phc_ctl_output.rc == 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chrony.conf file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chrony.conf file", "notify": "restart {{ 'chronyd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chrony.conf.j2", "dest": "/etc/chrony.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chronyd sysconfig file", "module": "template", "index": 16, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chronyd sysconfig file", "notify": "restart chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chronyd.sysconfig.j2", "dest": "{{ timesync_chrony_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntp.conf file", "module": "template", "index": 17, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntp.conf file", "notify": "restart {{ 'ntpd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntp.conf.j2", "dest": "/etc/ntp.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntpd sysconfig file", "module": "template", "index": 18, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntpd sysconfig file", "notify": "restart ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntpd.sysconfig.j2", "dest": "{{ timesync_ntp_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l.conf file", "module": "template", "index": 19, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l.conf file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "ptp4l.conf.j2", "dest": "/etc/ptp4l.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l sysconfig file", "module": "template", "index": 20, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l sysconfig file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages", "timesync_ptp4l_sysconfig_path | length > 0"]}, "module_options": {"src": "ptp4l.sysconfig.j2", "dest": "{{ timesync_ptp4l_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate phc2sys sysconfig file", "module": "template", "index": 21, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate phc2sys sysconfig file", "notify": "restart phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts", "'linuxptp' in ansible_facts.packages", "timesync_phc2sys_sysconfig_path | length > 0"]}, "module_options": {"src": "phc2sys.sysconfig.j2", "dest": "/etc/sysconfig/phc2sys", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate timemaster.conf file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate timemaster.conf file", "notify": "restart timemaster", "when": ["timesync_mode == 3", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "timemaster.conf.j2", "dest": "{{ timesync_timemaster_config_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update network sysconfig file", "module": "lineinfile", "index": 23, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Update network sysconfig file", "notify": "restart {{ timesync_ntp_provider + 'd' }}", "when": ["timesync_mode == 1", "ansible_facts['os_family'] == 'RedHat'"]}, "module_options": {"dest": "/etc/sysconfig/network", "create": true, "backup": true, "mode": 420, "regexp": "^PEERNTP=", "line": "PEERNTP=no", "state": "{{ 'absent' if timesync_dhcp_ntp_servers else 'present' }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable chronyd", "module": "service", "index": 24, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable chronyd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'chrony'", "'chronyd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service chronyd:')"]}, "module_options": {"name": "chronyd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpd", "module": "service", "index": 25, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'ntp'", "'ntpd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpd:')"]}, "module_options": {"name": "ntpd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpdate", "module": "service", "index": 26, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpdate", "when": "'ntpdate' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpdate:')"]}, "module_options": {"name": "ntpdate", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable sntp", "module": "service", "index": 27, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable sntp", "when": "'sntp' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service sntp:')"]}, "module_options": {"name": "sntp", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ptp4l", "module": "service", "index": 28, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ptp4l", "when": ["timesync_mode != 2", "'ptp4l' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ptp4l:')"]}, "module_options": {"name": "ptp4l", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable phc2sys", "module": "service", "index": 29, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable phc2sys", "when": ["timesync_mode != 2 or not timesync_mode2_hwts", "'phc2sys' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service phc2sys:')"]}, "module_options": {"name": "phc2sys", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable timemaster", "module": "service", "index": 30, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable timemaster", "when": ["timesync_mode != 3", "'timemaster' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service timemaster:')"]}, "module_options": {"name": "timemaster", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable chronyd", "module": "service", "index": 31, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chronyd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ntpd", "module": "service", "index": 32, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntpd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ptp4l", "module": "service", "index": 33, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ptp4l", "when": "timesync_mode == 2"}, "module_options": {"name": "ptp4l", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable phc2sys", "module": "service", "index": 34, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts"]}, "module_options": {"name": "phc2sys", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable timemaster", "module": "service", "index": 35, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable timemaster", "when": "timesync_mode == 3"}, "module_options": {"name": "timemaster", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure ansible_facts used by role", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Ensure ansible_facts used by role", "when": "not ansible_facts.keys() | list | intersect(__timesync_required_facts) == __timesync_required_facts"}, "module_options": {"gather_subset": "min"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set platform/version specific variables", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Set platform/version specific variables", "vars": {"ffparams": {"files": ["{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml", "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml", "{{ ansible_facts['distribution'] }}.yml", "{{ ansible_facts['os_family'] }}.yml", "default.yml"], "paths": ["{{ role_path }}/vars"]}}}, "module_options": "{{ lookup('first_found', ffparams) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set version specific variables", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set version specific variables"}, "module_options": "tasks/set_vars.yml", "executable": "tasks/set_vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set variable `timesync_services` with filtered uniq service names", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set variable `timesync_services` with filtered uniq service names"}, "module_options": {"timesync_services": "{{ ansible_facts.services.values() | selectattr('name', 'defined') | selectattr('status', 'defined') | rejectattr('status', 'match', '^not-found$') | rejectattr('status', 'match', '^masked$') | rejectattr('status', 'match', '^failed$') | map(attribute='name') | map('regex_replace', '[.]service.*$', '') | map('regex_replace', '@$', '') | unique | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check that variable 'timesync_services' is defined", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check that variable 'timesync_services' is defined"}, "module_options": {"that": "timesync_services is defined", "fail_msg": "Variable 'timesync_services' is not defined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check if only NTP is needed", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if only NTP is needed", "when": "timesync_ptp_domains|length == 0"}, "module_options": {"timesync_mode": 1}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check if single PTP is needed", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if single PTP is needed", "when": ["timesync_mode is not defined", "timesync_ntp_servers|length == 0", "timesync_ptp_domains|length == 1", "timesync_ptp_domains[0].interfaces|length == 1"]}, "module_options": {"timesync_mode": 2}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check if both NTP and PTP are needed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if both NTP and PTP are needed", "when": "timesync_mode is not defined"}, "module_options": {"timesync_mode": 3}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Determine current NTP provider", "module": "timesync_provider", "index": 7, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Determine current NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": null, "executable": "timesync_provider", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Select NTP provider", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Select NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": {"timesync_ntp_provider": "{{ timesync_ntp_provider_current| default(timesync_ntp_provider_os_default, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install chrony", "module": "package", "index": 9, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install chrony", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chrony", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Install ntp", "module": "package", "index": 10, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install ntp", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Install linuxptp", "module": "package", "index": 11, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install linuxptp", "when": "timesync_mode != 1"}, "module_options": {"name": "linuxptp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Gather package facts", "module": "package_facts", "index": 12, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Gather package facts"}, "module_options": {"manager": "auto"}, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Run phc_ctl on PTP interface", "module": "command", "index": 13, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Run phc_ctl on PTP interface", "register": "timesync_phc_ctl_output", "changed_when": false, "check_mode": false, "when": "timesync_mode == 2", "ignore_errors": true}, "module_options": "phc_ctl -q {{ timesync_ptp_domains[0].interfaces[0] }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Check if PTP interface supports HW timestamping", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if PTP interface supports HW timestamping", "when": "timesync_mode == 2"}, "module_options": {"timesync_mode2_hwts": "{{ timesync_phc_ctl_output.rc == 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Generate chrony.conf file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chrony.conf file", "notify": "restart {{ 'chronyd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chrony.conf.j2", "dest": "/etc/chrony.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Generate chronyd sysconfig file", "module": "template", "index": 16, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chronyd sysconfig file", "notify": "restart chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chronyd.sysconfig.j2", "dest": "{{ timesync_chrony_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Generate ntp.conf file", "module": "template", "index": 17, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntp.conf file", "notify": "restart {{ 'ntpd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntp.conf.j2", "dest": "/etc/ntp.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Generate ntpd sysconfig file", "module": "template", "index": 18, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntpd sysconfig file", "notify": "restart ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntpd.sysconfig.j2", "dest": "{{ timesync_ntp_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Generate ptp4l.conf file", "module": "template", "index": 19, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l.conf file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "ptp4l.conf.j2", "dest": "/etc/ptp4l.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Generate ptp4l sysconfig file", "module": "template", "index": 20, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l sysconfig file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages", "timesync_ptp4l_sysconfig_path | length > 0"]}, "module_options": {"src": "ptp4l.sysconfig.j2", "dest": "{{ timesync_ptp4l_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Generate phc2sys sysconfig file", "module": "template", "index": 21, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate phc2sys sysconfig file", "notify": "restart phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts", "'linuxptp' in ansible_facts.packages", "timesync_phc2sys_sysconfig_path | length > 0"]}, "module_options": {"src": "phc2sys.sysconfig.j2", "dest": "/etc/sysconfig/phc2sys", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Generate timemaster.conf file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate timemaster.conf file", "notify": "restart timemaster", "when": ["timesync_mode == 3", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "timemaster.conf.j2", "dest": "{{ timesync_timemaster_config_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Update network sysconfig file", "module": "lineinfile", "index": 23, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Update network sysconfig file", "notify": "restart {{ timesync_ntp_provider + 'd' }}", "when": ["timesync_mode == 1", "ansible_facts['os_family'] == 'RedHat'"]}, "module_options": {"dest": "/etc/sysconfig/network", "create": true, "backup": true, "mode": 420, "regexp": "^PEERNTP=", "line": "PEERNTP=no", "state": "{{ 'absent' if timesync_dhcp_ntp_servers else 'present' }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Disable chronyd", "module": "service", "index": 24, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable chronyd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'chrony'", "'chronyd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service chronyd:')"]}, "module_options": {"name": "chronyd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Disable ntpd", "module": "service", "index": 25, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'ntp'", "'ntpd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpd:')"]}, "module_options": {"name": "ntpd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Disable ntpdate", "module": "service", "index": 26, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpdate", "when": "'ntpdate' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpdate:')"]}, "module_options": {"name": "ntpdate", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Disable sntp", "module": "service", "index": 27, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable sntp", "when": "'sntp' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service sntp:')"]}, "module_options": {"name": "sntp", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Disable ptp4l", "module": "service", "index": 28, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ptp4l", "when": ["timesync_mode != 2", "'ptp4l' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ptp4l:')"]}, "module_options": {"name": "ptp4l", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Disable phc2sys", "module": "service", "index": 29, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable phc2sys", "when": ["timesync_mode != 2 or not timesync_mode2_hwts", "'phc2sys' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service phc2sys:')"]}, "module_options": {"name": "phc2sys", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Disable timemaster", "module": "service", "index": 30, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable timemaster", "when": ["timesync_mode != 3", "'timemaster' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service timemaster:')"]}, "module_options": {"name": "timemaster", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Enable chronyd", "module": "service", "index": 31, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chronyd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Enable ntpd", "module": "service", "index": 32, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntpd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Enable ptp4l", "module": "service", "index": 33, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ptp4l", "when": "timesync_mode == 2"}, "module_options": {"name": "ptp4l", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Enable phc2sys", "module": "service", "index": 34, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts"]}, "module_options": {"name": "phc2sys", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Enable timemaster", "module": "service", "index": 35, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable timemaster", "when": "timesync_mode == 3"}, "module_options": {"name": "timemaster", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure ansible_facts used by role", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Ensure ansible_facts used by role", "when": "not ansible_facts.keys() | list | intersect(__timesync_required_facts) == __timesync_required_facts"}, "module_options": {"gather_subset": "min"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set platform/version specific variables", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Set platform/version specific variables", "vars": {"ffparams": {"files": ["{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml", "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml", "{{ ansible_facts['distribution'] }}.yml", "{{ ansible_facts['os_family'] }}.yml", "default.yml"], "paths": ["{{ role_path }}/vars"]}}}, "module_options": "{{ lookup('first_found', ffparams) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set version specific variables", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set version specific variables"}, "module_options": "tasks/set_vars.yml", "executable": "tasks/set_vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set variable `timesync_services` with filtered uniq service names", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set variable `timesync_services` with filtered uniq service names"}, "module_options": {"timesync_services": "{{ ansible_facts.services.values() | selectattr('name', 'defined') | selectattr('status', 'defined') | rejectattr('status', 'match', '^not-found$') | rejectattr('status', 'match', '^masked$') | rejectattr('status', 'match', '^failed$') | map(attribute='name') | map('regex_replace', '[.]service.*$', '') | map('regex_replace', '@$', '') | unique | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check that variable 'timesync_services' is defined", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check that variable 'timesync_services' is defined"}, "module_options": {"that": "timesync_services is defined", "fail_msg": "Variable 'timesync_services' is not defined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check if only NTP is needed", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if only NTP is needed", "when": "timesync_ptp_domains|length == 0"}, "module_options": {"timesync_mode": 1}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check if single PTP is needed", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if single PTP is needed", "when": ["timesync_mode is not defined", "timesync_ntp_servers|length == 0", "timesync_ptp_domains|length == 1", "timesync_ptp_domains[0].interfaces|length == 1"]}, "module_options": {"timesync_mode": 2}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check if both NTP and PTP are needed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if both NTP and PTP are needed", "when": "timesync_mode is not defined"}, "module_options": {"timesync_mode": 3}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Determine current NTP provider", "module": "timesync_provider", "index": 7, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Determine current NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": null, "executable": "timesync_provider", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Select NTP provider", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Select NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": {"timesync_ntp_provider": "{{ timesync_ntp_provider_current| default(timesync_ntp_provider_os_default, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install chrony", "module": "package", "index": 9, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install chrony", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chrony", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Install ntp", "module": "package", "index": 10, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install ntp", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Install linuxptp", "module": "package", "index": 11, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install linuxptp", "when": "timesync_mode != 1"}, "module_options": {"name": "linuxptp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Gather package facts", "module": "package_facts", "index": 12, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Gather package facts"}, "module_options": {"manager": "auto"}, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Run phc_ctl on PTP interface", "module": "command", "index": 13, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Run phc_ctl on PTP interface", "register": "timesync_phc_ctl_output", "changed_when": false, "check_mode": false, "when": "timesync_mode == 2", "ignore_errors": true}, "module_options": "phc_ctl -q {{ timesync_ptp_domains[0].interfaces[0] }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Check if PTP interface supports HW timestamping", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if PTP interface supports HW timestamping", "when": "timesync_mode == 2"}, "module_options": {"timesync_mode2_hwts": "{{ timesync_phc_ctl_output.rc == 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Generate chrony.conf file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chrony.conf file", "notify": "restart {{ 'chronyd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chrony.conf.j2", "dest": "/etc/chrony.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Generate chronyd sysconfig file", "module": "template", "index": 16, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chronyd sysconfig file", "notify": "restart chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chronyd.sysconfig.j2", "dest": "{{ timesync_chrony_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Generate ntp.conf file", "module": "template", "index": 17, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntp.conf file", "notify": "restart {{ 'ntpd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntp.conf.j2", "dest": "/etc/ntp.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Generate ntpd sysconfig file", "module": "template", "index": 18, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntpd sysconfig file", "notify": "restart ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntpd.sysconfig.j2", "dest": "{{ timesync_ntp_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Generate ptp4l.conf file", "module": "template", "index": 19, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l.conf file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "ptp4l.conf.j2", "dest": "/etc/ptp4l.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Generate ptp4l sysconfig file", "module": "template", "index": 20, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l sysconfig file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages", "timesync_ptp4l_sysconfig_path | length > 0"]}, "module_options": {"src": "ptp4l.sysconfig.j2", "dest": "{{ timesync_ptp4l_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Generate phc2sys sysconfig file", "module": "template", "index": 21, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate phc2sys sysconfig file", "notify": "restart phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts", "'linuxptp' in ansible_facts.packages", "timesync_phc2sys_sysconfig_path | length > 0"]}, "module_options": {"src": "phc2sys.sysconfig.j2", "dest": "/etc/sysconfig/phc2sys", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Generate timemaster.conf file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate timemaster.conf file", "notify": "restart timemaster", "when": ["timesync_mode == 3", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "timemaster.conf.j2", "dest": "{{ timesync_timemaster_config_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Update network sysconfig file", "module": "lineinfile", "index": 23, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Update network sysconfig file", "notify": "restart {{ timesync_ntp_provider + 'd' }}", "when": ["timesync_mode == 1", "ansible_facts['os_family'] == 'RedHat'"]}, "module_options": {"dest": "/etc/sysconfig/network", "create": true, "backup": true, "mode": 420, "regexp": "^PEERNTP=", "line": "PEERNTP=no", "state": "{{ 'absent' if timesync_dhcp_ntp_servers else 'present' }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Disable chronyd", "module": "service", "index": 24, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable chronyd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'chrony'", "'chronyd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service chronyd:')"]}, "module_options": {"name": "chronyd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Disable ntpd", "module": "service", "index": 25, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'ntp'", "'ntpd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpd:')"]}, "module_options": {"name": "ntpd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Disable ntpdate", "module": "service", "index": 26, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpdate", "when": "'ntpdate' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpdate:')"]}, "module_options": {"name": "ntpdate", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Disable sntp", "module": "service", "index": 27, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable sntp", "when": "'sntp' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service sntp:')"]}, "module_options": {"name": "sntp", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Disable ptp4l", "module": "service", "index": 28, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ptp4l", "when": ["timesync_mode != 2", "'ptp4l' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ptp4l:')"]}, "module_options": {"name": "ptp4l", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Disable phc2sys", "module": "service", "index": 29, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable phc2sys", "when": ["timesync_mode != 2 or not timesync_mode2_hwts", "'phc2sys' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service phc2sys:')"]}, "module_options": {"name": "phc2sys", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Disable timemaster", "module": "service", "index": 30, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable timemaster", "when": ["timesync_mode != 3", "'timemaster' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service timemaster:')"]}, "module_options": {"name": "timemaster", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Enable chronyd", "module": "service", "index": 31, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chronyd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Enable ntpd", "module": "service", "index": 32, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntpd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Enable ptp4l", "module": "service", "index": 33, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ptp4l", "when": "timesync_mode == 2"}, "module_options": {"name": "ptp4l", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Enable phc2sys", "module": "service", "index": 34, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts"]}, "module_options": {"name": "phc2sys", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Enable timemaster", "module": "service", "index": 35, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable timemaster", "when": "timesync_mode == 3"}, "module_options": {"name": "timemaster", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml": {"py/object": "struct4.TaskFile", "name": "set_vars.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure ansible_facts used by role", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Ensure ansible_facts used by role", "when": "not ansible_facts.keys() | list | intersect(__timesync_required_facts) == __timesync_required_facts"}, "module_options": {"gather_subset": "min"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set platform/version specific variables", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Set platform/version specific variables", "vars": {"ffparams": {"files": ["{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml", "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml", "{{ ansible_facts['distribution'] }}.yml", "{{ ansible_facts['os_family'] }}.yml", "default.yml"], "paths": ["{{ role_path }}/vars"]}}}, "module_options": "{{ lookup('first_found', ffparams) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}, "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set version specific variables", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set version specific variables"}, "module_options": "tasks/set_vars.yml", "executable": "tasks/set_vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set variable `timesync_services` with filtered uniq service names", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set variable `timesync_services` with filtered uniq service names"}, "module_options": {"timesync_services": "{{ ansible_facts.services.values() | selectattr('name', 'defined') | selectattr('status', 'defined') | rejectattr('status', 'match', '^not-found$') | rejectattr('status', 'match', '^masked$') | rejectattr('status', 'match', '^failed$') | map(attribute='name') | map('regex_replace', '[.]service.*$', '') | map('regex_replace', '@$', '') | unique | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that variable 'timesync_services' is defined", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check that variable 'timesync_services' is defined"}, "module_options": {"that": "timesync_services is defined", "fail_msg": "Variable 'timesync_services' is not defined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if only NTP is needed", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if only NTP is needed", "when": "timesync_ptp_domains|length == 0"}, "module_options": {"timesync_mode": 1}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if single PTP is needed", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if single PTP is needed", "when": ["timesync_mode is not defined", "timesync_ntp_servers|length == 0", "timesync_ptp_domains|length == 1", "timesync_ptp_domains[0].interfaces|length == 1"]}, "module_options": {"timesync_mode": 2}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if both NTP and PTP are needed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if both NTP and PTP are needed", "when": "timesync_mode is not defined"}, "module_options": {"timesync_mode": 3}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current NTP provider", "module": "timesync_provider", "index": 7, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Determine current NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": null, "executable": "timesync_provider", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select NTP provider", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Select NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": {"timesync_ntp_provider": "{{ timesync_ntp_provider_current| default(timesync_ntp_provider_os_default, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install chrony", "module": "package", "index": 9, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install chrony", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chrony", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ntp", "module": "package", "index": 10, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install ntp", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linuxptp", "module": "package", "index": 11, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install linuxptp", "when": "timesync_mode != 1"}, "module_options": {"name": "linuxptp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather package facts", "module": "package_facts", "index": 12, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Gather package facts"}, "module_options": {"manager": "auto"}, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run phc_ctl on PTP interface", "module": "command", "index": 13, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Run phc_ctl on PTP interface", "register": "timesync_phc_ctl_output", "changed_when": false, "check_mode": false, "when": "timesync_mode == 2", "ignore_errors": true}, "module_options": "phc_ctl -q {{ timesync_ptp_domains[0].interfaces[0] }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PTP interface supports HW timestamping", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if PTP interface supports HW timestamping", "when": "timesync_mode == 2"}, "module_options": {"timesync_mode2_hwts": "{{ timesync_phc_ctl_output.rc == 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chrony.conf file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chrony.conf file", "notify": "restart {{ 'chronyd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chrony.conf.j2", "dest": "/etc/chrony.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chronyd sysconfig file", "module": "template", "index": 16, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chronyd sysconfig file", "notify": "restart chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chronyd.sysconfig.j2", "dest": "{{ timesync_chrony_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntp.conf file", "module": "template", "index": 17, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntp.conf file", "notify": "restart {{ 'ntpd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntp.conf.j2", "dest": "/etc/ntp.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntpd sysconfig file", "module": "template", "index": 18, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntpd sysconfig file", "notify": "restart ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntpd.sysconfig.j2", "dest": "{{ timesync_ntp_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l.conf file", "module": "template", "index": 19, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l.conf file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "ptp4l.conf.j2", "dest": "/etc/ptp4l.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l sysconfig file", "module": "template", "index": 20, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l sysconfig file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages", "timesync_ptp4l_sysconfig_path | length > 0"]}, "module_options": {"src": "ptp4l.sysconfig.j2", "dest": "{{ timesync_ptp4l_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate phc2sys sysconfig file", "module": "template", "index": 21, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate phc2sys sysconfig file", "notify": "restart phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts", "'linuxptp' in ansible_facts.packages", "timesync_phc2sys_sysconfig_path | length > 0"]}, "module_options": {"src": "phc2sys.sysconfig.j2", "dest": "/etc/sysconfig/phc2sys", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate timemaster.conf file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate timemaster.conf file", "notify": "restart timemaster", "when": ["timesync_mode == 3", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "timemaster.conf.j2", "dest": "{{ timesync_timemaster_config_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update network sysconfig file", "module": "lineinfile", "index": 23, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Update network sysconfig file", "notify": "restart {{ timesync_ntp_provider + 'd' }}", "when": ["timesync_mode == 1", "ansible_facts['os_family'] == 'RedHat'"]}, "module_options": {"dest": "/etc/sysconfig/network", "create": true, "backup": true, "mode": 420, "regexp": "^PEERNTP=", "line": "PEERNTP=no", "state": "{{ 'absent' if timesync_dhcp_ntp_servers else 'present' }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable chronyd", "module": "service", "index": 24, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable chronyd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'chrony'", "'chronyd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service chronyd:')"]}, "module_options": {"name": "chronyd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpd", "module": "service", "index": 25, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'ntp'", "'ntpd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpd:')"]}, "module_options": {"name": "ntpd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpdate", "module": "service", "index": 26, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpdate", "when": "'ntpdate' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpdate:')"]}, "module_options": {"name": "ntpdate", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable sntp", "module": "service", "index": 27, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable sntp", "when": "'sntp' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service sntp:')"]}, "module_options": {"name": "sntp", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ptp4l", "module": "service", "index": 28, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ptp4l", "when": ["timesync_mode != 2", "'ptp4l' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ptp4l:')"]}, "module_options": {"name": "ptp4l", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable phc2sys", "module": "service", "index": 29, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable phc2sys", "when": ["timesync_mode != 2 or not timesync_mode2_hwts", "'phc2sys' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service phc2sys:')"]}, "module_options": {"name": "phc2sys", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable timemaster", "module": "service", "index": 30, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable timemaster", "when": ["timesync_mode != 3", "'timemaster' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service timemaster:')"]}, "module_options": {"name": "timemaster", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable chronyd", "module": "service", "index": 31, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chronyd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ntpd", "module": "service", "index": 32, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntpd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ptp4l", "module": "service", "index": 33, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ptp4l", "when": "timesync_mode == 2"}, "module_options": {"name": "ptp4l", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable phc2sys", "module": "service", "index": 34, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts"]}, "module_options": {"name": "phc2sys", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable timemaster", "module": "service", "index": 35, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable timemaster", "when": "timesync_mode == 3"}, "module_options": {"name": "timemaster", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}, "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml": {"py/object": "struct4.TaskFile", "name": "set_vars.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure ansible_facts used by role", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Ensure ansible_facts used by role", "when": "not ansible_facts.keys() | list | intersect(__timesync_required_facts) == __timesync_required_facts"}, "module_options": {"gather_subset": "min"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set platform/version specific variables", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Set platform/version specific variables", "vars": {"ffparams": {"files": ["{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml", "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml", "{{ ansible_facts['distribution'] }}.yml", "{{ ansible_facts['os_family'] }}.yml", "default.yml"], "paths": ["{{ role_path }}/vars"]}}}, "module_options": "{{ lookup('first_found', ffparams) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}, "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set version specific variables", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set version specific variables"}, "module_options": "tasks/set_vars.yml", "executable": "tasks/set_vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set variable `timesync_services` with filtered uniq service names", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set variable `timesync_services` with filtered uniq service names"}, "module_options": {"timesync_services": "{{ ansible_facts.services.values() | selectattr('name', 'defined') | selectattr('status', 'defined') | rejectattr('status', 'match', '^not-found$') | rejectattr('status', 'match', '^masked$') | rejectattr('status', 'match', '^failed$') | map(attribute='name') | map('regex_replace', '[.]service.*$', '') | map('regex_replace', '@$', '') | unique | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that variable 'timesync_services' is defined", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check that variable 'timesync_services' is defined"}, "module_options": {"that": "timesync_services is defined", "fail_msg": "Variable 'timesync_services' is not defined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if only NTP is needed", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if only NTP is needed", "when": "timesync_ptp_domains|length == 0"}, "module_options": {"timesync_mode": 1}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if single PTP is needed", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if single PTP is needed", "when": ["timesync_mode is not defined", "timesync_ntp_servers|length == 0", "timesync_ptp_domains|length == 1", "timesync_ptp_domains[0].interfaces|length == 1"]}, "module_options": {"timesync_mode": 2}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if both NTP and PTP are needed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if both NTP and PTP are needed", "when": "timesync_mode is not defined"}, "module_options": {"timesync_mode": 3}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current NTP provider", "module": "timesync_provider", "index": 7, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Determine current NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": null, "executable": "timesync_provider", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select NTP provider", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Select NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": {"timesync_ntp_provider": "{{ timesync_ntp_provider_current| default(timesync_ntp_provider_os_default, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install chrony", "module": "package", "index": 9, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install chrony", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chrony", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ntp", "module": "package", "index": 10, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install ntp", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linuxptp", "module": "package", "index": 11, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install linuxptp", "when": "timesync_mode != 1"}, "module_options": {"name": "linuxptp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather package facts", "module": "package_facts", "index": 12, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Gather package facts"}, "module_options": {"manager": "auto"}, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run phc_ctl on PTP interface", "module": "command", "index": 13, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Run phc_ctl on PTP interface", "register": "timesync_phc_ctl_output", "changed_when": false, "check_mode": false, "when": "timesync_mode == 2", "ignore_errors": true}, "module_options": "phc_ctl -q {{ timesync_ptp_domains[0].interfaces[0] }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PTP interface supports HW timestamping", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if PTP interface supports HW timestamping", "when": "timesync_mode == 2"}, "module_options": {"timesync_mode2_hwts": "{{ timesync_phc_ctl_output.rc == 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chrony.conf file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chrony.conf file", "notify": "restart {{ 'chronyd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chrony.conf.j2", "dest": "/etc/chrony.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chronyd sysconfig file", "module": "template", "index": 16, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chronyd sysconfig file", "notify": "restart chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chronyd.sysconfig.j2", "dest": "{{ timesync_chrony_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntp.conf file", "module": "template", "index": 17, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntp.conf file", "notify": "restart {{ 'ntpd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntp.conf.j2", "dest": "/etc/ntp.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntpd sysconfig file", "module": "template", "index": 18, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntpd sysconfig file", "notify": "restart ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntpd.sysconfig.j2", "dest": "{{ timesync_ntp_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l.conf file", "module": "template", "index": 19, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l.conf file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "ptp4l.conf.j2", "dest": "/etc/ptp4l.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l sysconfig file", "module": "template", "index": 20, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l sysconfig file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages", "timesync_ptp4l_sysconfig_path | length > 0"]}, "module_options": {"src": "ptp4l.sysconfig.j2", "dest": "{{ timesync_ptp4l_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate phc2sys sysconfig file", "module": "template", "index": 21, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate phc2sys sysconfig file", "notify": "restart phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts", "'linuxptp' in ansible_facts.packages", "timesync_phc2sys_sysconfig_path | length > 0"]}, "module_options": {"src": "phc2sys.sysconfig.j2", "dest": "/etc/sysconfig/phc2sys", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate timemaster.conf file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate timemaster.conf file", "notify": "restart timemaster", "when": ["timesync_mode == 3", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "timemaster.conf.j2", "dest": "{{ timesync_timemaster_config_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update network sysconfig file", "module": "lineinfile", "index": 23, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Update network sysconfig file", "notify": "restart {{ timesync_ntp_provider + 'd' }}", "when": ["timesync_mode == 1", "ansible_facts['os_family'] == 'RedHat'"]}, "module_options": {"dest": "/etc/sysconfig/network", "create": true, "backup": true, "mode": 420, "regexp": "^PEERNTP=", "line": "PEERNTP=no", "state": "{{ 'absent' if timesync_dhcp_ntp_servers else 'present' }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable chronyd", "module": "service", "index": 24, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable chronyd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'chrony'", "'chronyd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service chronyd:')"]}, "module_options": {"name": "chronyd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpd", "module": "service", "index": 25, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'ntp'", "'ntpd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpd:')"]}, "module_options": {"name": "ntpd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpdate", "module": "service", "index": 26, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpdate", "when": "'ntpdate' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpdate:')"]}, "module_options": {"name": "ntpdate", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable sntp", "module": "service", "index": 27, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable sntp", "when": "'sntp' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service sntp:')"]}, "module_options": {"name": "sntp", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ptp4l", "module": "service", "index": 28, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ptp4l", "when": ["timesync_mode != 2", "'ptp4l' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ptp4l:')"]}, "module_options": {"name": "ptp4l", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable phc2sys", "module": "service", "index": 29, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable phc2sys", "when": ["timesync_mode != 2 or not timesync_mode2_hwts", "'phc2sys' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service phc2sys:')"]}, "module_options": {"name": "phc2sys", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable timemaster", "module": "service", "index": 30, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable timemaster", "when": ["timesync_mode != 3", "'timemaster' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service timemaster:')"]}, "module_options": {"name": "timemaster", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable chronyd", "module": "service", "index": 31, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chronyd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ntpd", "module": "service", "index": 32, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntpd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ptp4l", "module": "service", "index": 33, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ptp4l", "when": "timesync_mode == 2"}, "module_options": {"name": "ptp4l", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable phc2sys", "module": "service", "index": 34, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts"]}, "module_options": {"name": "phc2sys", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable timemaster", "module": "service", "index": 35, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tests/roles/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable timemaster", "when": "timesync_mode == 3"}, "module_options": {"name": "timemaster", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}}, "role_dict": {"linux-system-roles.timesync": {"py/object": "struct4.Role", "name": "linux-system-roles.timesync", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync", "fqcn": "linux-system-roles.timesync", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "set_vars.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure ansible_facts used by role", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Ensure ansible_facts used by role", "when": "not ansible_facts.keys() | list | intersect(__timesync_required_facts) == __timesync_required_facts"}, "module_options": {"gather_subset": "min"}, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set platform/version specific variables", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/set_vars.yml", "options": {"name": "Set platform/version specific variables", "vars": {"ffparams": {"files": ["{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_version'] }}.yml", "{{ ansible_facts['distribution'] }}_{{ ansible_facts['distribution_major_version'] }}.yml", "{{ ansible_facts['distribution'] }}.yml", "{{ ansible_facts['os_family'] }}.yml", "default.yml"], "paths": ["{{ role_path }}/vars"]}}}, "module_options": "{{ lookup('first_found', ffparams) }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set version specific variables", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set version specific variables"}, "module_options": "tasks/set_vars.yml", "executable": "tasks/set_vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 1, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set variable `timesync_services` with filtered uniq service names", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Set variable `timesync_services` with filtered uniq service names"}, "module_options": {"timesync_services": "{{ ansible_facts.services.values() | selectattr('name', 'defined') | selectattr('status', 'defined') | rejectattr('status', 'match', '^not-found$') | rejectattr('status', 'match', '^masked$') | rejectattr('status', 'match', '^failed$') | map(attribute='name') | map('regex_replace', '[.]service.*$', '') | map('regex_replace', '@$', '') | unique | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that variable 'timesync_services' is defined", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check that variable 'timesync_services' is defined"}, "module_options": {"that": "timesync_services is defined", "fail_msg": "Variable 'timesync_services' is not defined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if only NTP is needed", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if only NTP is needed", "when": "timesync_ptp_domains|length == 0"}, "module_options": {"timesync_mode": 1}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if single PTP is needed", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if single PTP is needed", "when": ["timesync_mode is not defined", "timesync_ntp_servers|length == 0", "timesync_ptp_domains|length == 1", "timesync_ptp_domains[0].interfaces|length == 1"]}, "module_options": {"timesync_mode": 2}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if both NTP and PTP are needed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if both NTP and PTP are needed", "when": "timesync_mode is not defined"}, "module_options": {"timesync_mode": 3}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Determine current NTP provider", "module": "timesync_provider", "index": 7, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Determine current NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": null, "executable": "timesync_provider", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Select NTP provider", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Select NTP provider", "when": ["timesync_mode != 2", "timesync_ntp_provider | length == 0"]}, "module_options": {"timesync_ntp_provider": "{{ timesync_ntp_provider_current| default(timesync_ntp_provider_os_default, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install chrony", "module": "package", "index": 9, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install chrony", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chrony", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install ntp", "module": "package", "index": 10, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install ntp", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install linuxptp", "module": "package", "index": 11, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Install linuxptp", "when": "timesync_mode != 1"}, "module_options": {"name": "linuxptp", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather package facts", "module": "package_facts", "index": 12, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Gather package facts"}, "module_options": {"manager": "auto"}, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run phc_ctl on PTP interface", "module": "command", "index": 13, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Run phc_ctl on PTP interface", "register": "timesync_phc_ctl_output", "changed_when": false, "check_mode": false, "when": "timesync_mode == 2", "ignore_errors": true}, "module_options": "phc_ctl -q {{ timesync_ptp_domains[0].interfaces[0] }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PTP interface supports HW timestamping", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Check if PTP interface supports HW timestamping", "when": "timesync_mode == 2"}, "module_options": {"timesync_mode2_hwts": "{{ timesync_phc_ctl_output.rc == 0 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chrony.conf file", "module": "template", "index": 15, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chrony.conf file", "notify": "restart {{ 'chronyd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chrony.conf.j2", "dest": "/etc/chrony.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate chronyd sysconfig file", "module": "template", "index": 16, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate chronyd sysconfig file", "notify": "restart chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'", "'chrony' in ansible_facts.packages"]}, "module_options": {"src": "chronyd.sysconfig.j2", "dest": "{{ timesync_chrony_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntp.conf file", "module": "template", "index": 17, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntp.conf file", "notify": "restart {{ 'ntpd' if timesync_mode == 1 else 'timemaster' }}", "when": ["timesync_mode != 2", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntp.conf.j2", "dest": "/etc/ntp.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ntpd sysconfig file", "module": "template", "index": 18, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ntpd sysconfig file", "notify": "restart ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'", "'ntp' in ansible_facts.packages"]}, "module_options": {"src": "ntpd.sysconfig.j2", "dest": "{{ timesync_ntp_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l.conf file", "module": "template", "index": 19, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l.conf file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "ptp4l.conf.j2", "dest": "/etc/ptp4l.conf", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ptp4l sysconfig file", "module": "template", "index": 20, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate ptp4l sysconfig file", "notify": "restart ptp4l", "when": ["timesync_mode == 2", "'linuxptp' in ansible_facts.packages", "timesync_ptp4l_sysconfig_path | length > 0"]}, "module_options": {"src": "ptp4l.sysconfig.j2", "dest": "{{ timesync_ptp4l_sysconfig_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate phc2sys sysconfig file", "module": "template", "index": 21, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate phc2sys sysconfig file", "notify": "restart phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts", "'linuxptp' in ansible_facts.packages", "timesync_phc2sys_sysconfig_path | length > 0"]}, "module_options": {"src": "phc2sys.sysconfig.j2", "dest": "/etc/sysconfig/phc2sys", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate timemaster.conf file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Generate timemaster.conf file", "notify": "restart timemaster", "when": ["timesync_mode == 3", "'linuxptp' in ansible_facts.packages"]}, "module_options": {"src": "timemaster.conf.j2", "dest": "{{ timesync_timemaster_config_path }}", "backup": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update network sysconfig file", "module": "lineinfile", "index": 23, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Update network sysconfig file", "notify": "restart {{ timesync_ntp_provider + 'd' }}", "when": ["timesync_mode == 1", "ansible_facts['os_family'] == 'RedHat'"]}, "module_options": {"dest": "/etc/sysconfig/network", "create": true, "backup": true, "mode": 420, "regexp": "^PEERNTP=", "line": "PEERNTP=no", "state": "{{ 'absent' if timesync_dhcp_ntp_servers else 'present' }}"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable chronyd", "module": "service", "index": 24, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable chronyd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'chrony'", "'chronyd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service chronyd:')"]}, "module_options": {"name": "chronyd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpd", "module": "service", "index": 25, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpd", "when": ["timesync_mode != 1 or timesync_ntp_provider != 'ntp'", "'ntpd' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpd:')"]}, "module_options": {"name": "ntpd", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ntpdate", "module": "service", "index": 26, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ntpdate", "when": "'ntpdate' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ntpdate:')"]}, "module_options": {"name": "ntpdate", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable sntp", "module": "service", "index": 27, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable sntp", "when": "'sntp' in timesync_services", "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service sntp:')"]}, "module_options": {"name": "sntp", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable ptp4l", "module": "service", "index": 28, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable ptp4l", "when": ["timesync_mode != 2", "'ptp4l' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service ptp4l:')"]}, "module_options": {"name": "ptp4l", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable phc2sys", "module": "service", "index": 29, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable phc2sys", "when": ["timesync_mode != 2 or not timesync_mode2_hwts", "'phc2sys' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service phc2sys:')"]}, "module_options": {"name": "phc2sys", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable timemaster", "module": "service", "index": 30, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Disable timemaster", "when": ["timesync_mode != 3", "'timemaster' in timesync_services"], "register": "__disable_result", "failed_when": ["__disable_result is failed", "not __disable_result.msg is match( 'Could not find the requested service timemaster:')"]}, "module_options": {"name": "timemaster", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable chronyd", "module": "service", "index": 31, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable chronyd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'chrony'"]}, "module_options": {"name": "chronyd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ntpd", "module": "service", "index": 32, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ntpd", "when": ["timesync_mode == 1", "timesync_ntp_provider == 'ntp'"]}, "module_options": {"name": "ntpd", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable ptp4l", "module": "service", "index": 33, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable ptp4l", "when": "timesync_mode == 2"}, "module_options": {"name": "ptp4l", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable phc2sys", "module": "service", "index": 34, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable phc2sys", "when": ["timesync_mode == 2", "timesync_mode2_hwts"]}, "module_options": {"name": "phc2sys", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable timemaster", "module": "service", "index": 35, "defined_in": "./role-test/testdata/linux-system-roles-timesync/linux-system-roles.timesync/tasks/main.yml", "options": {"name": "Enable timemaster", "when": "timesync_mode == 3"}, "module_options": {"name": "timemaster", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "linux-system-roles.timesync", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}