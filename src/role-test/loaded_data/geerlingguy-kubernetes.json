{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-kubernetes", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.kubernetes", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes", "fqcn": "geerlingguy.kubernetes", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "node-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Join node to Kubernetes master", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml", "options": {"name": "Join node to Kubernetes master", "tags": ["skip_ansible_lint"]}, "module_options": "{{ kubernetes_join_command }} creates=/etc/kubernetes/kubelet.conf\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "master-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the directory for the kubernetes_config_file", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Create the directory for the kubernetes_config_file"}, "module_options": {"path": "{{ kubernetes_kubeadm_kubelet_config_file_path | dirname }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy the config-file for kubeadm and kubelet", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Deploy the config-file for kubeadm and kubelet"}, "module_options": {"src": "kubeadm-kubelet-config.j2", "dest": "{{ kubernetes_kubeadm_kubelet_config_file_path }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is not defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print the init output to screen.", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Print the init output to screen.", "when": "not kubernetes_init_stat.stat.exists"}, "module_options": {"var": "kubeadmin_init.stdout", "verbosity": 2}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure .kube directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Ensure .kube directory exists."}, "module_options": {"path": "~/.kube", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink the kubectl admin.conf to ~/.kube/conf.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Symlink the kubectl admin.conf to ~/.kube/conf."}, "module_options": {"src": "/etc/kubernetes/admin.conf", "dest": "~/.kube/config", "state": "link", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Flannel networking.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Flannel networking.", "with_items": ["kubectl apply -f {{ kubernetes_flannel_manifest_file_rbac }}", "kubectl apply -f {{ kubernetes_flannel_manifest_file }}"], "register": "flannel_result", "changed_when": "'created' in flannel_result.stdout", "when": "kubernetes_pod_network.cni == 'flannel'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Calico networking.", "module": "command", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Calico networking.", "with_items": ["kubectl apply -f {{ kubernetes_calico_manifest_file }}"], "register": "calico_result", "changed_when": "'created' in calico_result.stdout", "when": "kubernetes_pod_network.cni == 'calico'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Kubernetes version for Weave installation.", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Get Kubernetes version for Weave installation.", "changed_when": false, "register": "kubectl_version", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "kubectl version | base64 | tr -d '\\n'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Weave networking.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Weave networking.", "with_items": ["kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version={{ kubectl_version.stdout_lines[0] }}"], "register": "weave_result", "changed_when": "'created' in weave_result.stdout", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow pods on master node (if configured).", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Allow pods on master node (if configured).", "when": ["kubernetes_allow_pods_on_master | bool", "not kubernetes_init_stat.stat.exists"]}, "module_options": "kubectl taint nodes --all node-role.kubernetes.io/master-", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "kubelet-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existence of kubelet environment file. (deprecated)", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Check for existence of kubelet environment file. (deprecated)", "register": "kubelet_environment_file"}, "module_options": {"path": "{{ kubelet_environment_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "when": "kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "{{ kubelet_environment_file_path }}", "kubelet_args_line": "{{ 'KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args }}", "kubelet_args_regexp": "^KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "when": "not kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf", "kubelet_args_line": "{{ 'Environment=\"KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args + '\"' }}", "kubelet_args_regexp": "^Environment=\"KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "register": "kubelet_extra_args", "when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": {"path": "{{ kubelet_args_path }}", "line": "{{ kubelet_args_line }}", "regexp": "{{ kubelet_args_regexp }}", "state": "present", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd unit if args were changed. (deprecated)", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Reload systemd unit if args were changed. (deprecated)", "when": "kubelet_extra_args is changed"}, "module_options": {"state": "restarted", "daemon_reload": true, "name": "kubelet"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "sysctl-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure procps is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Ensure procps is installed.", "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ procps_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let iptables see bridged traffic.", "module": "sysctl", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Let iptables see bridged traffic.", "loop": ["net.bridge.bridge-nf-call-iptables", "net.bridge.bridge-nf-call-ip6tables"], "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ item }}", "value": "1", "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt key.", "register": "add_repository_key", "ignore_errors": "{{ kubernetes_apt_ignore_key_error }}"}, "module_options": {"url": "https://packages.cloud.google.com/apt/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes repository."}, "module_options": {"repo": "{{ kubernetes_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes apt preferences file to pin a version.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt preferences file to pin a version."}, "module_options": {"src": "apt-preferences-kubernetes.j2", "dest": "/etc/apt/preferences.d/kubernetes", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Kubernetes packages.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Install Kubernetes packages.", "notify": "restart kubelet", "with_items": "{{ kubernetes_packages }}"}, "module_options": {"name": "{{ item.name | default(item) }}", "state": "{{ item.state | default('present') }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {}, "module_options": "sysctl-setup.yml", "executable": "sysctl-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": "kubelet-setup.yml", "executable": "kubelet-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure kubelet is started and enabled at boot.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure kubelet is started and enabled at boot."}, "module_options": {"name": "kubelet", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if Kubernetes has already been initialized.", "module": "stat", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Check if Kubernetes has already been initialized.", "register": "kubernetes_init_stat"}, "module_options": {"path": "/etc/kubernetes/admin.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'master'"}, "module_options": "master-setup.yml", "executable": "master-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the kubeadm join command from the Kubernetes master.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Get the kubeadm join command from the Kubernetes master.", "changed_when": false, "when": "kubernetes_role == 'master'", "register": "kubernetes_join_command_result"}, "module_options": "kubeadm token create --print-join-command", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the kubeadm join command globally.", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Set the kubeadm join command globally.", "when": "kubernetes_join_command_result.stdout is defined", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ groups['all'] }}"}, "module_options": {"kubernetes_join_command": "{{ kubernetes_join_command_result.stdout }} {{ kubernetes_join_command_extra_opts }}\n"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'node'"}, "module_options": "node-setup.yml", "executable": "node-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Kubernetes repository exists.", "module": "yum_repository", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Ensure Kubernetes repository exists."}, "module_options": {"name": "kubernetes", "description": "Kubernetes", "enabled": true, "gpgcheck": "{{ kubernetes_yum_gpg_check }}", "repo_gpgcheck": "{{ kubernetes_yum_repo_gpg_check }}", "baseurl": "{{ kubernetes_yum_base_url }}", "gpgkey": "{{ kubernetes_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes GPG keys.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Add Kubernetes GPG keys.", "register": "kubernetes_rpm_key", "with_items": "{{ kubernetes_yum_gpg_key }}"}, "module_options": {"key": "{{ item }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make cache if Kubernetes GPG key changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Make cache if Kubernetes GPG key changed.", "when": "kubernetes_rpm_key is changed", "args": {"warn": false}}, "module_options": "yum -q makecache -y --disablerepo='*' --enablerepo='kubernetes'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Join node to Kubernetes master", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml", "options": {"name": "Join node to Kubernetes master", "tags": ["skip_ansible_lint"]}, "module_options": "{{ kubernetes_join_command }} creates=/etc/kubernetes/kubelet.conf\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create the directory for the kubernetes_config_file", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Create the directory for the kubernetes_config_file"}, "module_options": {"path": "{{ kubernetes_kubeadm_kubelet_config_file_path | dirname }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Deploy the config-file for kubeadm and kubelet", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Deploy the config-file for kubeadm and kubelet"}, "module_options": {"src": "kubeadm-kubelet-config.j2", "dest": "{{ kubernetes_kubeadm_kubelet_config_file_path }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is not defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Print the init output to screen.", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Print the init output to screen.", "when": "not kubernetes_init_stat.stat.exists"}, "module_options": {"var": "kubeadmin_init.stdout", "verbosity": 2}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure .kube directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Ensure .kube directory exists."}, "module_options": {"path": "~/.kube", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Symlink the kubectl admin.conf to ~/.kube/conf.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Symlink the kubectl admin.conf to ~/.kube/conf."}, "module_options": {"src": "/etc/kubernetes/admin.conf", "dest": "~/.kube/config", "state": "link", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Configure Flannel networking.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Flannel networking.", "with_items": ["kubectl apply -f {{ kubernetes_flannel_manifest_file_rbac }}", "kubectl apply -f {{ kubernetes_flannel_manifest_file }}"], "register": "flannel_result", "changed_when": "'created' in flannel_result.stdout", "when": "kubernetes_pod_network.cni == 'flannel'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Configure Calico networking.", "module": "command", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Calico networking.", "with_items": ["kubectl apply -f {{ kubernetes_calico_manifest_file }}"], "register": "calico_result", "changed_when": "'created' in calico_result.stdout", "when": "kubernetes_pod_network.cni == 'calico'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Get Kubernetes version for Weave installation.", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Get Kubernetes version for Weave installation.", "changed_when": false, "register": "kubectl_version", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "kubectl version | base64 | tr -d '\\n'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Configure Weave networking.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Weave networking.", "with_items": ["kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version={{ kubectl_version.stdout_lines[0] }}"], "register": "weave_result", "changed_when": "'created' in weave_result.stdout", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Allow pods on master node (if configured).", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Allow pods on master node (if configured).", "when": ["kubernetes_allow_pods_on_master | bool", "not kubernetes_init_stat.stat.exists"]}, "module_options": "kubectl taint nodes --all node-role.kubernetes.io/master-", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check for existence of kubelet environment file. (deprecated)", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Check for existence of kubelet environment file. (deprecated)", "register": "kubelet_environment_file"}, "module_options": {"path": "{{ kubelet_environment_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "when": "kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "{{ kubelet_environment_file_path }}", "kubelet_args_line": "{{ 'KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args }}", "kubelet_args_regexp": "^KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "when": "not kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf", "kubelet_args_line": "{{ 'Environment=\"KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args + '\"' }}", "kubelet_args_regexp": "^Environment=\"KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "register": "kubelet_extra_args", "when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": {"path": "{{ kubelet_args_path }}", "line": "{{ kubelet_args_line }}", "regexp": "{{ kubelet_args_regexp }}", "state": "present", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Reload systemd unit if args were changed. (deprecated)", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Reload systemd unit if args were changed. (deprecated)", "when": "kubelet_extra_args is changed"}, "module_options": {"state": "restarted", "daemon_reload": true, "name": "kubelet"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure procps is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Ensure procps is installed.", "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ procps_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Let iptables see bridged traffic.", "module": "sysctl", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Let iptables see bridged traffic.", "loop": ["net.bridge.bridge-nf-call-iptables", "net.bridge.bridge-nf-call-ip6tables"], "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ item }}", "value": "1", "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Kubernetes apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt key.", "register": "add_repository_key", "ignore_errors": "{{ kubernetes_apt_ignore_key_error }}"}, "module_options": {"url": "https://packages.cloud.google.com/apt/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Kubernetes repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes repository."}, "module_options": {"repo": "{{ kubernetes_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add Kubernetes apt preferences file to pin a version.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt preferences file to pin a version."}, "module_options": {"src": "apt-preferences-kubernetes.j2", "dest": "/etc/apt/preferences.d/kubernetes", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install Kubernetes packages.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Install Kubernetes packages.", "notify": "restart kubelet", "with_items": "{{ kubernetes_packages }}"}, "module_options": {"name": "{{ item.name | default(item) }}", "state": "{{ item.state | default('present') }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {}, "module_options": "sysctl-setup.yml", "executable": "sysctl-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": "kubelet-setup.yml", "executable": "kubelet-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure kubelet is started and enabled at boot.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure kubelet is started and enabled at boot."}, "module_options": {"name": "kubelet", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Check if Kubernetes has already been initialized.", "module": "stat", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Check if Kubernetes has already been initialized.", "register": "kubernetes_init_stat"}, "module_options": {"path": "/etc/kubernetes/admin.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'master'"}, "module_options": "master-setup.yml", "executable": "master-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Get the kubeadm join command from the Kubernetes master.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Get the kubeadm join command from the Kubernetes master.", "changed_when": false, "when": "kubernetes_role == 'master'", "register": "kubernetes_join_command_result"}, "module_options": "kubeadm token create --print-join-command", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Set the kubeadm join command globally.", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Set the kubeadm join command globally.", "when": "kubernetes_join_command_result.stdout is defined", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ groups['all'] }}"}, "module_options": {"kubernetes_join_command": "{{ kubernetes_join_command_result.stdout }} {{ kubernetes_join_command_extra_opts }}\n"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'node'"}, "module_options": "node-setup.yml", "executable": "node-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure Kubernetes repository exists.", "module": "yum_repository", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Ensure Kubernetes repository exists."}, "module_options": {"name": "kubernetes", "description": "Kubernetes", "enabled": true, "gpgcheck": "{{ kubernetes_yum_gpg_check }}", "repo_gpgcheck": "{{ kubernetes_yum_repo_gpg_check }}", "baseurl": "{{ kubernetes_yum_base_url }}", "gpgkey": "{{ kubernetes_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Kubernetes GPG keys.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Add Kubernetes GPG keys.", "register": "kubernetes_rpm_key", "with_items": "{{ kubernetes_yum_gpg_key }}"}, "module_options": {"key": "{{ item }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Make cache if Kubernetes GPG key changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Make cache if Kubernetes GPG key changed.", "when": "kubernetes_rpm_key is changed", "args": {"warn": false}}, "module_options": "yum -q makecache -y --disablerepo='*' --enablerepo='kubernetes'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml": {"py/object": "struct4.TaskFile", "name": "node-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Join node to Kubernetes master", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml", "options": {"name": "Join node to Kubernetes master", "tags": ["skip_ansible_lint"]}, "module_options": "{{ kubernetes_join_command }} creates=/etc/kubernetes/kubelet.conf\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml": {"py/object": "struct4.TaskFile", "name": "master-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the directory for the kubernetes_config_file", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Create the directory for the kubernetes_config_file"}, "module_options": {"path": "{{ kubernetes_kubeadm_kubelet_config_file_path | dirname }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy the config-file for kubeadm and kubelet", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Deploy the config-file for kubeadm and kubelet"}, "module_options": {"src": "kubeadm-kubelet-config.j2", "dest": "{{ kubernetes_kubeadm_kubelet_config_file_path }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is not defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print the init output to screen.", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Print the init output to screen.", "when": "not kubernetes_init_stat.stat.exists"}, "module_options": {"var": "kubeadmin_init.stdout", "verbosity": 2}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure .kube directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Ensure .kube directory exists."}, "module_options": {"path": "~/.kube", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink the kubectl admin.conf to ~/.kube/conf.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Symlink the kubectl admin.conf to ~/.kube/conf."}, "module_options": {"src": "/etc/kubernetes/admin.conf", "dest": "~/.kube/config", "state": "link", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Flannel networking.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Flannel networking.", "with_items": ["kubectl apply -f {{ kubernetes_flannel_manifest_file_rbac }}", "kubectl apply -f {{ kubernetes_flannel_manifest_file }}"], "register": "flannel_result", "changed_when": "'created' in flannel_result.stdout", "when": "kubernetes_pod_network.cni == 'flannel'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Calico networking.", "module": "command", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Calico networking.", "with_items": ["kubectl apply -f {{ kubernetes_calico_manifest_file }}"], "register": "calico_result", "changed_when": "'created' in calico_result.stdout", "when": "kubernetes_pod_network.cni == 'calico'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Kubernetes version for Weave installation.", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Get Kubernetes version for Weave installation.", "changed_when": false, "register": "kubectl_version", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "kubectl version | base64 | tr -d '\\n'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Weave networking.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Weave networking.", "with_items": ["kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version={{ kubectl_version.stdout_lines[0] }}"], "register": "weave_result", "changed_when": "'created' in weave_result.stdout", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow pods on master node (if configured).", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Allow pods on master node (if configured).", "when": ["kubernetes_allow_pods_on_master | bool", "not kubernetes_init_stat.stat.exists"]}, "module_options": "kubectl taint nodes --all node-role.kubernetes.io/master-", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml": {"py/object": "struct4.TaskFile", "name": "kubelet-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existence of kubelet environment file. (deprecated)", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Check for existence of kubelet environment file. (deprecated)", "register": "kubelet_environment_file"}, "module_options": {"path": "{{ kubelet_environment_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "when": "kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "{{ kubelet_environment_file_path }}", "kubelet_args_line": "{{ 'KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args }}", "kubelet_args_regexp": "^KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "when": "not kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf", "kubelet_args_line": "{{ 'Environment=\"KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args + '\"' }}", "kubelet_args_regexp": "^Environment=\"KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "register": "kubelet_extra_args", "when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": {"path": "{{ kubelet_args_path }}", "line": "{{ kubelet_args_line }}", "regexp": "{{ kubelet_args_regexp }}", "state": "present", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd unit if args were changed. (deprecated)", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Reload systemd unit if args were changed. (deprecated)", "when": "kubelet_extra_args is changed"}, "module_options": {"state": "restarted", "daemon_reload": true, "name": "kubelet"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml": {"py/object": "struct4.TaskFile", "name": "sysctl-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure procps is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Ensure procps is installed.", "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ procps_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let iptables see bridged traffic.", "module": "sysctl", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Let iptables see bridged traffic.", "loop": ["net.bridge.bridge-nf-call-iptables", "net.bridge.bridge-nf-call-ip6tables"], "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ item }}", "value": "1", "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml": {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt key.", "register": "add_repository_key", "ignore_errors": "{{ kubernetes_apt_ignore_key_error }}"}, "module_options": {"url": "https://packages.cloud.google.com/apt/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes repository."}, "module_options": {"repo": "{{ kubernetes_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes apt preferences file to pin a version.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt preferences file to pin a version."}, "module_options": {"src": "apt-preferences-kubernetes.j2", "dest": "/etc/apt/preferences.d/kubernetes", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Kubernetes packages.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Install Kubernetes packages.", "notify": "restart kubelet", "with_items": "{{ kubernetes_packages }}"}, "module_options": {"name": "{{ item.name | default(item) }}", "state": "{{ item.state | default('present') }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {}, "module_options": "sysctl-setup.yml", "executable": "sysctl-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": "kubelet-setup.yml", "executable": "kubelet-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure kubelet is started and enabled at boot.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure kubelet is started and enabled at boot."}, "module_options": {"name": "kubelet", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if Kubernetes has already been initialized.", "module": "stat", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Check if Kubernetes has already been initialized.", "register": "kubernetes_init_stat"}, "module_options": {"path": "/etc/kubernetes/admin.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'master'"}, "module_options": "master-setup.yml", "executable": "master-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the kubeadm join command from the Kubernetes master.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Get the kubeadm join command from the Kubernetes master.", "changed_when": false, "when": "kubernetes_role == 'master'", "register": "kubernetes_join_command_result"}, "module_options": "kubeadm token create --print-join-command", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the kubeadm join command globally.", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Set the kubeadm join command globally.", "when": "kubernetes_join_command_result.stdout is defined", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ groups['all'] }}"}, "module_options": {"kubernetes_join_command": "{{ kubernetes_join_command_result.stdout }} {{ kubernetes_join_command_extra_opts }}\n"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'node'"}, "module_options": "node-setup.yml", "executable": "node-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Kubernetes repository exists.", "module": "yum_repository", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Ensure Kubernetes repository exists."}, "module_options": {"name": "kubernetes", "description": "Kubernetes", "enabled": true, "gpgcheck": "{{ kubernetes_yum_gpg_check }}", "repo_gpgcheck": "{{ kubernetes_yum_repo_gpg_check }}", "baseurl": "{{ kubernetes_yum_base_url }}", "gpgkey": "{{ kubernetes_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes GPG keys.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Add Kubernetes GPG keys.", "register": "kubernetes_rpm_key", "with_items": "{{ kubernetes_yum_gpg_key }}"}, "module_options": {"key": "{{ item }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make cache if Kubernetes GPG key changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Make cache if Kubernetes GPG key changed.", "when": "kubernetes_rpm_key is changed", "args": {"warn": false}}, "module_options": "yum -q makecache -y --disablerepo='*' --enablerepo='kubernetes'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.kubernetes": {"py/object": "struct4.Role", "name": "geerlingguy.kubernetes", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes", "fqcn": "geerlingguy.kubernetes", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "node-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Join node to Kubernetes master", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/node-setup.yml", "options": {"name": "Join node to Kubernetes master", "tags": ["skip_ansible_lint"]}, "module_options": "{{ kubernetes_join_command }} creates=/etc/kubernetes/kubelet.conf\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "master-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the directory for the kubernetes_config_file", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Create the directory for the kubernetes_config_file"}, "module_options": {"path": "{{ kubernetes_kubeadm_kubelet_config_file_path | dirname }}", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deploy the config-file for kubeadm and kubelet", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Deploy the config-file for kubeadm and kubelet"}, "module_options": {"src": "kubeadm-kubelet-config.j2", "dest": "{{ kubernetes_kubeadm_kubelet_config_file_path }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is not defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Initialize Kubernetes master with kubeadm init and ignore_preflight_errors", "register": "kubeadmin_init", "when": "(not kubernetes_init_stat.stat.exists) and (kubernetes_ignore_preflight_errors is defined)"}, "module_options": "kubeadm init --config {{ kubernetes_kubeadm_kubelet_config_file_path }} --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }} {{ kubernetes_kubeadm_init_extra_opts }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print the init output to screen.", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Print the init output to screen.", "when": "not kubernetes_init_stat.stat.exists"}, "module_options": {"var": "kubeadmin_init.stdout", "verbosity": 2}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure .kube directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Ensure .kube directory exists."}, "module_options": {"path": "~/.kube", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Symlink the kubectl admin.conf to ~/.kube/conf.", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Symlink the kubectl admin.conf to ~/.kube/conf."}, "module_options": {"src": "/etc/kubernetes/admin.conf", "dest": "~/.kube/config", "state": "link", "mode": 420}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Flannel networking.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Flannel networking.", "with_items": ["kubectl apply -f {{ kubernetes_flannel_manifest_file_rbac }}", "kubectl apply -f {{ kubernetes_flannel_manifest_file }}"], "register": "flannel_result", "changed_when": "'created' in flannel_result.stdout", "when": "kubernetes_pod_network.cni == 'flannel'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Calico networking.", "module": "command", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Calico networking.", "with_items": ["kubectl apply -f {{ kubernetes_calico_manifest_file }}"], "register": "calico_result", "changed_when": "'created' in calico_result.stdout", "when": "kubernetes_pod_network.cni == 'calico'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Kubernetes version for Weave installation.", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Get Kubernetes version for Weave installation.", "changed_when": false, "register": "kubectl_version", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "kubectl version | base64 | tr -d '\\n'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Weave networking.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Configure Weave networking.", "with_items": ["kubectl apply -f https://cloud.weave.works/k8s/net?k8s-version={{ kubectl_version.stdout_lines[0] }}"], "register": "weave_result", "changed_when": "'created' in weave_result.stdout", "when": "kubernetes_pod_network.cni == 'weave'"}, "module_options": "{{ item }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow pods on master node (if configured).", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/master-setup.yml", "options": {"name": "Allow pods on master node (if configured).", "when": ["kubernetes_allow_pods_on_master | bool", "not kubernetes_init_stat.stat.exists"]}, "module_options": "kubectl taint nodes --all node-role.kubernetes.io/master-", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "kubelet-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existence of kubelet environment file. (deprecated)", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Check for existence of kubelet environment file. (deprecated)", "register": "kubelet_environment_file"}, "module_options": {"path": "{{ kubelet_environment_file_path }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file exists. (deprecated)", "when": "kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "{{ kubelet_environment_file_path }}", "kubelet_args_line": "{{ 'KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args }}", "kubelet_args_regexp": "^KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Set facts for KUBELET_EXTRA_ARGS task if environment file doesn't exist. (deprecated)", "when": "not kubelet_environment_file.stat.exists"}, "module_options": {"kubelet_args_path": "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf", "kubelet_args_line": "{{ 'Environment=\"KUBELET_EXTRA_ARGS=' + kubernetes_kubelet_extra_args + '\"' }}", "kubelet_args_regexp": "^Environment=\"KUBELET_EXTRA_ARGS="}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Configure KUBELET_EXTRA_ARGS. (deprecated)", "register": "kubelet_extra_args", "when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": {"path": "{{ kubelet_args_path }}", "line": "{{ kubelet_args_line }}", "regexp": "{{ kubelet_args_regexp }}", "state": "present", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd unit if args were changed. (deprecated)", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/kubelet-setup.yml", "options": {"name": "Reload systemd unit if args were changed. (deprecated)", "when": "kubelet_extra_args is changed"}, "module_options": {"state": "restarted", "daemon_reload": true, "name": "kubelet"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "sysctl-setup.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure procps is installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Ensure procps is installed.", "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ procps_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Let iptables see bridged traffic.", "module": "sysctl", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/sysctl-setup.yml", "options": {"name": "Let iptables see bridged traffic.", "loop": ["net.bridge.bridge-nf-call-iptables", "net.bridge.bridge-nf-call-ip6tables"], "when": "ansible_distribution != 'Debian' or ansible_distribution_major_version | int < 10\n"}, "module_options": {"name": "{{ item }}", "value": "1", "state": "present"}, "executable": "sysctl", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt key.", "register": "add_repository_key", "ignore_errors": "{{ kubernetes_apt_ignore_key_error }}"}, "module_options": {"url": "https://packages.cloud.google.com/apt/doc/apt-key.gpg", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes repository."}, "module_options": {"repo": "{{ kubernetes_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes apt preferences file to pin a version.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-Debian.yml", "options": {"name": "Add Kubernetes apt preferences file to pin a version."}, "module_options": {"src": "apt-preferences-kubernetes.j2", "dest": "/etc/apt/preferences.d/kubernetes", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Kubernetes packages.", "module": "package", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Install Kubernetes packages.", "notify": "restart kubelet", "with_items": "{{ kubernetes_packages }}"}, "module_options": {"name": "{{ item.name | default(item) }}", "state": "{{ item.state | default('present') }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {}, "module_options": "sysctl-setup.yml", "executable": "sysctl-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_kubelet_extra_args|length > 0"}, "module_options": "kubelet-setup.yml", "executable": "kubelet-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure kubelet is started and enabled at boot.", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Ensure kubelet is started and enabled at boot."}, "module_options": {"name": "kubelet", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if Kubernetes has already been initialized.", "module": "stat", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Check if Kubernetes has already been initialized.", "register": "kubernetes_init_stat"}, "module_options": {"path": "/etc/kubernetes/admin.conf"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'master'"}, "module_options": "master-setup.yml", "executable": "master-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the kubeadm join command from the Kubernetes master.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Get the kubeadm join command from the Kubernetes master.", "changed_when": false, "when": "kubernetes_role == 'master'", "register": "kubernetes_join_command_result"}, "module_options": "kubeadm token create --print-join-command", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the kubeadm join command globally.", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"name": "Set the kubeadm join command globally.", "when": "kubernetes_join_command_result.stdout is defined", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ groups['all'] }}"}, "module_options": {"kubernetes_join_command": "{{ kubernetes_join_command_result.stdout }} {{ kubernetes_join_command_extra_opts }}\n"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/main.yml", "options": {"when": "kubernetes_role == 'node'"}, "module_options": "node-setup.yml", "executable": "node-setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Kubernetes repository exists.", "module": "yum_repository", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Ensure Kubernetes repository exists."}, "module_options": {"name": "kubernetes", "description": "Kubernetes", "enabled": true, "gpgcheck": "{{ kubernetes_yum_gpg_check }}", "repo_gpgcheck": "{{ kubernetes_yum_repo_gpg_check }}", "baseurl": "{{ kubernetes_yum_base_url }}", "gpgkey": "{{ kubernetes_yum_gpg_key }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Kubernetes GPG keys.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Add Kubernetes GPG keys.", "register": "kubernetes_rpm_key", "with_items": "{{ kubernetes_yum_gpg_key }}"}, "module_options": {"key": "{{ item }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make cache if Kubernetes GPG key changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-kubernetes/geerlingguy.kubernetes/tasks/setup-RedHat.yml", "options": {"name": "Make cache if Kubernetes GPG key changed.", "when": "kubernetes_rpm_key is changed", "args": {"warn": false}}, "module_options": "yum -q makecache -y --disablerepo='*' --enablerepo='kubernetes'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.kubernetes", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}