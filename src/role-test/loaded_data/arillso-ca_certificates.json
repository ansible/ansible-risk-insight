{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/arillso-ca_certificates", "installed_roles": [{"py/object": "struct4.Role", "name": "arillso.ca_certificates", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates", "fqcn": "arillso.ca_certificates", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : include tasks to install custom CA certificates", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml", "options": {"name": "windows : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Windows/certificate.yml", "executable": "Windows/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : Install CA certificates packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : Install CA certificates packages", "with_items": "{{ ca_certificates_packages }}"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : include tasks to install custom CA certificates", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Linux/certificate.yml", "executable": "Linux/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Trigger handler", "module": "meta", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "Trigger handler"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "certificate.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate file", "when": "(\"file\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420, "validate": "openssl x509 -inform PEM -in %s -noout"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate content", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate content", "when": "(\"content\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Download certificate file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Download certificate file", "when": "(\"url\" in install_item.keys())", "notify": "Update CA trust", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "certificate.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Download certificate file", "module": "vars", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Download certificate file", "win_get_url": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_root_directory }}\\\\{{ install_item.name }}"}, "when": "(\"url\" in install_item.keys())", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate content", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate content", "win_copy": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"content\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate file", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate file", "win_copy": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"file\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Import certificate", "module": "vars", "index": 4, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Import certificate", "win_certificate_store": {"path": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "state": "present", "store_name": "{{ install_item.store_name | default(omit) }}", "store_location": "{{ install_item.store_location | default(omit) }}"}}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "windows : include tasks to install custom CA certificates", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml", "options": {"name": "windows : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Windows/certificate.yml", "executable": "Windows/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "linux : Install CA certificates packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : Install CA certificates packages", "with_items": "{{ ca_certificates_packages }}"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "linux : include tasks to install custom CA certificates", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Linux/certificate.yml", "executable": "Linux/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Trigger handler", "module": "meta", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "Trigger handler"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "linux : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate file", "when": "(\"file\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420, "validate": "openssl x509 -inform PEM -in %s -noout"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate content", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate content", "when": "(\"content\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Download certificate file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Download certificate file", "when": "(\"url\" in install_item.keys())", "notify": "Update CA trust", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "windows : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Download certificate file", "module": "vars", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Download certificate file", "win_get_url": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_root_directory }}\\\\{{ install_item.name }}"}, "when": "(\"url\" in install_item.keys())", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate content", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate content", "win_copy": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"content\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate file", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate file", "win_copy": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"file\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Import certificate", "module": "vars", "index": 4, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Import certificate", "win_certificate_store": {"path": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "state": "present", "store_name": "{{ install_item.store_name | default(omit) }}", "store_location": "{{ install_item.store_location | default(omit) }}"}}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml": {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : include tasks to install custom CA certificates", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml", "options": {"name": "windows : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Windows/certificate.yml", "executable": "Windows/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml": {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : Install CA certificates packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : Install CA certificates packages", "with_items": "{{ ca_certificates_packages }}"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : include tasks to install custom CA certificates", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Linux/certificate.yml", "executable": "Linux/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Trigger handler", "module": "meta", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "Trigger handler"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml": {"py/object": "struct4.TaskFile", "name": "certificate.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate file", "when": "(\"file\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420, "validate": "openssl x509 -inform PEM -in %s -noout"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate content", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate content", "when": "(\"content\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Download certificate file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Download certificate file", "when": "(\"url\" in install_item.keys())", "notify": "Update CA trust", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml": {"py/object": "struct4.TaskFile", "name": "certificate.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Download certificate file", "module": "vars", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Download certificate file", "win_get_url": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_root_directory }}\\\\{{ install_item.name }}"}, "when": "(\"url\" in install_item.keys())", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate content", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate content", "win_copy": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"content\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate file", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate file", "win_copy": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"file\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Import certificate", "module": "vars", "index": 4, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Import certificate", "win_certificate_store": {"path": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "state": "present", "store_name": "{{ install_item.store_name | default(omit) }}", "store_location": "{{ install_item.store_location | default(omit) }}"}}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}}, "role_dict": {"arillso.ca_certificates": {"py/object": "struct4.Role", "name": "arillso.ca_certificates", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates", "fqcn": "arillso.ca_certificates", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : include tasks to install custom CA certificates", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows.yml", "options": {"name": "windows : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Windows/certificate.yml", "executable": "Windows/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : Install CA certificates packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : Install CA certificates packages", "with_items": "{{ ca_certificates_packages }}"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : include tasks to install custom CA certificates", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "linux : include tasks to install custom CA certificates", "with_items": ["{{ ca_certificates_files }}"], "loop_control": {"loop_var": "ca_certificates_loop_install_item"}}, "module_options": "Linux/certificate.yml", "executable": "Linux/certificate.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Trigger handler", "module": "meta", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux.yml", "options": {"name": "Trigger handler"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "certificate.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate file", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate file", "when": "(\"file\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420, "validate": "openssl x509 -inform PEM -in %s -noout"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Copy certificate content", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Copy certificate content", "when": "(\"content\" in install_item.keys())", "notify": "Update CA trust", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "owner": "root", "group": "root", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : {{ install_item.name }} - Download certificate file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Linux/certificate.yml", "options": {"name": "linux : {{ install_item.name }} - Download certificate file", "when": "(\"url\" in install_item.keys())", "notify": "Update CA trust", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.crt", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "certificate.yml", "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : Fail on invalid certificate definition", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : Fail on invalid certificate definition", "when": "(\"name\" not in install_item.keys())", "vars": {"install_item": "{{ ca_certificates_loop_install_item }}"}}, "module_options": {"msg": "Certificate definition must contain key 'name'."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Download certificate file", "module": "vars", "index": 1, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Download certificate file", "win_get_url": {"url": "{{ install_item.url }}", "dest": "{{ ca_certificates_root_directory }}\\\\{{ install_item.name }}"}, "when": "(\"url\" in install_item.keys())", "register": "ca_certificates_register_download", "retries": 3, "delay": 2, "until": "ca_certificates_register_download is succeeded"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate content", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate content", "win_copy": {"content": "{{ install_item.content }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"content\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Copy certificate file", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Copy certificate file", "win_copy": {"src": "{{ install_item.file }}", "dest": "{{ ca_certificates_path }}/{{ install_item.name }}.pem"}, "when": "(\"file\" in install_item.keys())"}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : {{ install_item.name }} - Import certificate", "module": "vars", "index": 4, "defined_in": "./role-test/testdata/arillso-ca_certificates/arillso.ca_certificates/tasks/distribution/Windows/certificate.yml", "options": {"name": "windows : {{ install_item.name }} - Import certificate", "win_certificate_store": {"path": "{{ ca_certificates_path }}/{{ install_item.name }}.pem", "state": "present", "store_name": "{{ install_item.store_name | default(omit) }}", "store_location": "{{ install_item.store_location | default(omit) }}"}}, "module_options": {"install_item": "{{ ca_certificates_loop_install_item }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "arillso.ca_certificates", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}