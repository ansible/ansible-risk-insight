{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-docker", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.docker", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker", "fqcn": "geerlingguy.docker", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "docker-users.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "when": "ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')"}, "module_options": {"name": "gnupg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "when": "ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')"}, "module_options": {"name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key.", "register": "add_repository_key", "ignore_errors": "{{ docker_apt_ignore_key_error }}"}, "module_options": {"url": "{{ docker_apt_gpg_key }}", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure curl is present (on older systems without SNI).", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure curl is present (on older systems without SNI).", "when": "add_repository_key is failed"}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key (alternative for older systems without SNI).", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key (alternative for older systems without SNI).", "args": {"warn": false}, "when": "add_repository_key is failed"}, "module_options": "curl -sSL {{ docker_apt_gpg_key }} | apt-key add -\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker repository."}, "module_options": {"repo": "{{ docker_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "docker-compose.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check current docker-compose version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Check current docker-compose version.", "register": "docker_compose_vsn", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "{{ docker_compose_path }} --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"when": "docker_compose_vsn.stdout is defined"}, "module_options": {"docker_compose_current_version": "{{ docker_compose_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete existing docker-compose version if it's different.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Delete existing docker-compose version if it's different.", "when": "docker_compose_current_version is defined and (docker_compose_version | regex_replace('v', '')) not in docker_compose_current_version\n"}, "module_options": {"path": "{{ docker_compose_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose (if configured).", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Install Docker Compose (if configured).", "when": "(docker_compose_current_version is not defined) or (docker_compose_current_version|length == 0) or (docker_compose_current_version is version((docker_compose_version | regex_replace('v', '')), '<'))\n"}, "module_options": {"url": "{{ docker_compose_url }}", "dest": "{{ docker_compose_path }}", "mode": 493}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker.", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (with downgrade option).", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker (with downgrade option).", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}", "allow_downgrade": true}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/docker/ directory exists.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure /etc/docker/ directory exists.", "when": "docker_daemon_options.keys() | length > 0"}, "module_options": {"path": "/etc/docker", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options.", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options.", "when": "docker_daemon_options.keys() | length > 0", "notify": "restart docker"}, "module_options": {"content": "{{ docker_daemon_options | to_nice_json }}", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker is started and enabled at boot.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure Docker is started and enabled at boot.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure handlers are notified now to avoid firewall conflicts.", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure handlers are notified now to avoid firewall conflicts."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_install_compose | bool"}, "module_options": "docker-compose.yml", "executable": "docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_users | length > 0"}, "module_options": "docker-users.yml", "executable": "docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-common", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "{{ docker_yum_gpg_key }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker repository."}, "module_options": {"url": "{{ docker_yum_repo_url }}", "dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker Nightly repo.", "module": "ini_file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Nightly repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-nightly", "option": "enabled", "value": "{{ docker_yum_repo_enable_nightly }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker Test repo.", "module": "ini_file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Test repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-test", "option": "enabled", "value": "{{ docker_yum_repo_enable_test }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure container-selinux is installed.", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure container-selinux is installed."}, "module_options": {"name": "container-selinux", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure containerd.io is installed.", "module": "package", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure containerd.io is installed."}, "module_options": {"name": "containerd.io", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "when": "ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')"}, "module_options": {"name": "gnupg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "when": "ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')"}, "module_options": {"name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key.", "register": "add_repository_key", "ignore_errors": "{{ docker_apt_ignore_key_error }}"}, "module_options": {"url": "{{ docker_apt_gpg_key }}", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure curl is present (on older systems without SNI).", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure curl is present (on older systems without SNI).", "when": "add_repository_key is failed"}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Add Docker apt key (alternative for older systems without SNI).", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key (alternative for older systems without SNI).", "args": {"warn": false}, "when": "add_repository_key is failed"}, "module_options": "curl -sSL {{ docker_apt_gpg_key }} | apt-key add -\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker repository."}, "module_options": {"repo": "{{ docker_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check current docker-compose version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Check current docker-compose version.", "register": "docker_compose_vsn", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "{{ docker_compose_path }} --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"when": "docker_compose_vsn.stdout is defined"}, "module_options": {"docker_compose_current_version": "{{ docker_compose_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Delete existing docker-compose version if it's different.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Delete existing docker-compose version if it's different.", "when": "docker_compose_current_version is defined and (docker_compose_version | regex_replace('v', '')) not in docker_compose_current_version\n"}, "module_options": {"path": "{{ docker_compose_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install Docker Compose (if configured).", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Install Docker Compose (if configured).", "when": "(docker_compose_current_version is not defined) or (docker_compose_current_version|length == 0) or (docker_compose_current_version is version((docker_compose_version | regex_replace('v', '')), '<'))\n"}, "module_options": {"url": "{{ docker_compose_url }}", "dest": "{{ docker_compose_path }}", "mode": 493}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker.", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install Docker (with downgrade option).", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker (with downgrade option).", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}", "allow_downgrade": true}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure /etc/docker/ directory exists.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure /etc/docker/ directory exists.", "when": "docker_daemon_options.keys() | length > 0"}, "module_options": {"path": "/etc/docker", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Configure Docker daemon options.", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options.", "when": "docker_daemon_options.keys() | length > 0", "notify": "restart docker"}, "module_options": {"content": "{{ docker_daemon_options | to_nice_json }}", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure Docker is started and enabled at boot.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure Docker is started and enabled at boot.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure handlers are notified now to avoid firewall conflicts.", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure handlers are notified now to avoid firewall conflicts."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_install_compose | bool"}, "module_options": "docker-compose.yml", "executable": "docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_users | length > 0"}, "module_options": "docker-users.yml", "executable": "docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-common", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "{{ docker_yum_gpg_key }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker repository."}, "module_options": {"url": "{{ docker_yum_repo_url }}", "dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Configure Docker Nightly repo.", "module": "ini_file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Nightly repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-nightly", "option": "enabled", "value": "{{ docker_yum_repo_enable_nightly }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Configure Docker Test repo.", "module": "ini_file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Test repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-test", "option": "enabled", "value": "{{ docker_yum_repo_enable_test }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure container-selinux is installed.", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure container-selinux is installed."}, "module_options": {"name": "container-selinux", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure containerd.io is installed.", "module": "package", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure containerd.io is installed."}, "module_options": {"name": "containerd.io", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml": {"py/object": "struct4.TaskFile", "name": "docker-users.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml": {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "when": "ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')"}, "module_options": {"name": "gnupg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "when": "ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')"}, "module_options": {"name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key.", "register": "add_repository_key", "ignore_errors": "{{ docker_apt_ignore_key_error }}"}, "module_options": {"url": "{{ docker_apt_gpg_key }}", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure curl is present (on older systems without SNI).", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure curl is present (on older systems without SNI).", "when": "add_repository_key is failed"}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key (alternative for older systems without SNI).", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key (alternative for older systems without SNI).", "args": {"warn": false}, "when": "add_repository_key is failed"}, "module_options": "curl -sSL {{ docker_apt_gpg_key }} | apt-key add -\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker repository."}, "module_options": {"repo": "{{ docker_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml": {"py/object": "struct4.TaskFile", "name": "docker-compose.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check current docker-compose version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Check current docker-compose version.", "register": "docker_compose_vsn", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "{{ docker_compose_path }} --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"when": "docker_compose_vsn.stdout is defined"}, "module_options": {"docker_compose_current_version": "{{ docker_compose_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete existing docker-compose version if it's different.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Delete existing docker-compose version if it's different.", "when": "docker_compose_current_version is defined and (docker_compose_version | regex_replace('v', '')) not in docker_compose_current_version\n"}, "module_options": {"path": "{{ docker_compose_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose (if configured).", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Install Docker Compose (if configured).", "when": "(docker_compose_current_version is not defined) or (docker_compose_current_version|length == 0) or (docker_compose_current_version is version((docker_compose_version | regex_replace('v', '')), '<'))\n"}, "module_options": {"url": "{{ docker_compose_url }}", "dest": "{{ docker_compose_path }}", "mode": 493}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker.", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (with downgrade option).", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker (with downgrade option).", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}", "allow_downgrade": true}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/docker/ directory exists.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure /etc/docker/ directory exists.", "when": "docker_daemon_options.keys() | length > 0"}, "module_options": {"path": "/etc/docker", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options.", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options.", "when": "docker_daemon_options.keys() | length > 0", "notify": "restart docker"}, "module_options": {"content": "{{ docker_daemon_options | to_nice_json }}", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker is started and enabled at boot.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure Docker is started and enabled at boot.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure handlers are notified now to avoid firewall conflicts.", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure handlers are notified now to avoid firewall conflicts."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_install_compose | bool"}, "module_options": "docker-compose.yml", "executable": "docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_users | length > 0"}, "module_options": "docker-users.yml", "executable": "docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-common", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "{{ docker_yum_gpg_key }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker repository."}, "module_options": {"url": "{{ docker_yum_repo_url }}", "dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker Nightly repo.", "module": "ini_file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Nightly repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-nightly", "option": "enabled", "value": "{{ docker_yum_repo_enable_nightly }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker Test repo.", "module": "ini_file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Test repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-test", "option": "enabled", "value": "{{ docker_yum_repo_enable_test }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure container-selinux is installed.", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure container-selinux is installed."}, "module_options": {"name": "container-selinux", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure containerd.io is installed.", "module": "package", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure containerd.io is installed."}, "module_options": {"name": "containerd.io", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.docker": {"py/object": "struct4.Role", "name": "geerlingguy.docker", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker", "fqcn": "geerlingguy.docker", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "docker-users.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure docker users are added to the docker group.", "module": "user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-users.yml", "options": {"name": "Ensure docker users are added to the docker group.", "with_items": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure dependencies are installed."}, "module_options": {"name": ["apt-transport-https", "ca-certificates"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).", "when": "ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')"}, "module_options": {"name": "gnupg2", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure additional dependencies are installed (on Ubuntu >= 20.04).", "when": "ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')"}, "module_options": {"name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key.", "register": "add_repository_key", "ignore_errors": "{{ docker_apt_ignore_key_error }}"}, "module_options": {"url": "{{ docker_apt_gpg_key }}", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure curl is present (on older systems without SNI).", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Ensure curl is present (on older systems without SNI).", "when": "add_repository_key is failed"}, "module_options": "name=curl state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key (alternative for older systems without SNI).", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker apt key (alternative for older systems without SNI).", "args": {"warn": false}, "when": "add_repository_key is failed"}, "module_options": "curl -sSL {{ docker_apt_gpg_key }} | apt-key add -\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-Debian.yml", "options": {"name": "Add Docker repository."}, "module_options": {"repo": "{{ docker_apt_repository }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "docker-compose.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check current docker-compose version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Check current docker-compose version.", "register": "docker_compose_vsn", "check_mode": false, "changed_when": false, "failed_when": false}, "module_options": "{{ docker_compose_path }} --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"when": "docker_compose_vsn.stdout is defined"}, "module_options": {"docker_compose_current_version": "{{ docker_compose_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete existing docker-compose version if it's different.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Delete existing docker-compose version if it's different.", "when": "docker_compose_current_version is defined and (docker_compose_version | regex_replace('v', '')) not in docker_compose_current_version\n"}, "module_options": {"path": "{{ docker_compose_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose (if configured).", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/docker-compose.yml", "options": {"name": "Install Docker Compose (if configured).", "when": "(docker_compose_current_version is not defined) or (docker_compose_current_version|length == 0) or (docker_compose_current_version is version((docker_compose_version | regex_replace('v', '')), '<'))\n"}, "module_options": {"url": "{{ docker_compose_url }}", "dest": "{{ docker_compose_path }}", "mode": 493}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker.", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (with downgrade option).", "module": "package", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Install Docker (with downgrade option).", "notify": "restart docker", "ignore_errors": "{{ ansible_check_mode }}", "when": "ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']"}, "module_options": {"name": "{{ docker_package }}", "state": "{{ docker_package_state }}", "allow_downgrade": true}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure /etc/docker/ directory exists.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure /etc/docker/ directory exists.", "when": "docker_daemon_options.keys() | length > 0"}, "module_options": {"path": "/etc/docker", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon options.", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon options.", "when": "docker_daemon_options.keys() | length > 0", "notify": "restart docker"}, "module_options": {"content": "{{ docker_daemon_options | to_nice_json }}", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker is started and enabled at boot.", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure Docker is started and enabled at boot.", "ignore_errors": "{{ ansible_check_mode }}"}, "module_options": {"name": "docker", "state": "{{ docker_service_state }}", "enabled": "{{ docker_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure handlers are notified now to avoid firewall conflicts.", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"name": "Ensure handlers are notified now to avoid firewall conflicts."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_install_compose | bool"}, "module_options": "docker-compose.yml", "executable": "docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/main.yml", "options": {"when": "docker_users | length > 0"}, "module_options": "docker-users.yml", "executable": "docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-common", "docker-engine"], "state": "absent"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "{{ docker_yum_gpg_key }}", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker repository.", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Add Docker repository."}, "module_options": {"url": "{{ docker_yum_repo_url }}", "dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker Nightly repo.", "module": "ini_file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Nightly repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-nightly", "option": "enabled", "value": "{{ docker_yum_repo_enable_nightly }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker Test repo.", "module": "ini_file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Configure Docker Test repo."}, "module_options": {"dest": "/etc/yum.repos.d/docker-{{ docker_edition }}.repo", "section": "docker-{{ docker_edition }}-test", "option": "enabled", "value": "{{ docker_yum_repo_enable_test }}", "mode": 420, "no_extra_spaces": true}, "executable": "ini_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure container-selinux is installed.", "module": "package", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure container-selinux is installed."}, "module_options": {"name": "container-selinux", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure containerd.io is installed.", "module": "package", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-docker/geerlingguy.docker/tasks/setup-RedHat.yml", "options": {"name": "Ensure containerd.io is installed."}, "module_options": {"name": "containerd.io", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.docker", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}