{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/brianshumate-vault", "installed_roles": [{"py/object": "struct4.Role", "name": "brianshumate.vault", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault", "fqcn": "brianshumate.vault", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "asserts.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": "ansible_distribution not in ['RedHat', 'CentOS', 'Fedora', 'Debian', 'Ubuntu']"}, "module_options": {"msg": "{{ ansible_distribution }} is not supported by this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Red Hat / CentOS", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Red Hat / CentOS", "when": ["ansible_distribution in ['RedHat', 'CentOS']", "ansible_distribution_version is version(7, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Debian", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version(8.5, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of FreeBSD", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of FreeBSD", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Ubuntu", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Ubuntu", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for vault_redirect_address usage", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check for vault_redirect_address usage", "when": "vault_redirect_address is defined"}, "module_options": {"msg": "vault_redirect_address is deprecated. Check for vault_api_addr in the README."}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_remote.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure remote vault dir exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Ensure remote vault dir exists"}, "module_options": {"path": "/tmp/vault", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package checksum file", "register": "vault_checksum"}, "module_options": {"path": "/tmp/vault/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum file", "tags": "installation", "when": "not vault_checksum.stat.exists | bool"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "/tmp/vault/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum", "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ vault_pkg }} /tmp/vault/{{ vault_shasums }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package file", "register": "vault_package", "tags": "installation"}, "module_options": {"path": "/tmp/vault/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Vault \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Download Vault \u2192 {{ vault_zip_url }}", "tags": "installation", "when": "not vault_package.stat.exists | bool"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "/tmp/vault/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout.split(' ')|first }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Vault and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Unarchive Vault and install binary", "notify": "Restart vault", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/vault/{{ vault_pkg }}", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/vault", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "backend_tls.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create backend TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Create backend TLS directory", "become": true, "with_items": ["{{ vault_backend_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault backend SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Vault backend SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_cert_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_key_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_ca_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tls.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Create TLS directory", "become": true, "with_items": ["{{ vault_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Vault SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_tls_src_files }}/{{ vault_tls_cert_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_key_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_ca_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages", "become": true, "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "OS packages diff (Debian 9)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages diff (Debian 9)", "tags": "installation", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version == 'buster/sid') or (ansible_distribution_version is version(8.5, '>'))"]}, "module_options": {"name": "libcap2-bin", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package checksum file (local)", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package checksum file (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum file (local)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum file (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum (local)", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_pkg }}\" \"{{ role_path }}/files/{{ vault_shasums }}\" | \\\nawk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package file (local)", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package file (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "{{ role_path }}/files/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Vault (local)", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Unarchive Vault (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Vault", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Install Vault", "become": true, "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup (local)", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Cleanup (local)", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include asserts", "module": "include", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include asserts"}, "module_options": "asserts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Vault group", "module": "group", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault group", "become": true, "when": "vault_manage_group | bool"}, "module_options": {"name": "{{ vault_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Vault user", "module": "user", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault user", "become": true, "when": "vault_manage_user | bool"}, "module_options": {"name": "{{ vault_user }}", "comment": "Vault user", "group": "{{ vault_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault installation", "environment": {"PATH": "{{ vault_bin_path }}:{{ ansible_env.PATH }}"}, "register": "vault_installation", "changed_when": false, "ignore_errors": true, "check_mode": false}, "module_options": "command -v vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get installed Vault version", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Get installed Vault version", "args": {"executable": "/bin/bash"}, "when": "not vault_installation is failed", "changed_when": false, "check_mode": false, "register": "installed_vault_version"}, "module_options": "set -o pipefail\n{{ vault_installation.stdout }} -version | cut -d' ' -f2 | tr -d 'v'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compute if installation is required", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Compute if installation is required"}, "module_options": {"installation_required": "{{ vault_installation is failed or installed_vault_version.stdout != vault_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault Enterprise via control host", "module": "include", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault Enterprise via control host", "when": ["vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_enterprise.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault via control host", "module": "include", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via control host", "when": ["not vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault via remote hosts", "module": "include", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via remote hosts", "when": ["not vault_enterprise | bool", "vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_remote.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault mlock capability", "module": "command", "index": 10, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault mlock capability", "become": true, "changed_when": false, "ignore_errors": true, "register": "vault_mlock_capability"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable non root mlock capability", "module": "command", "index": 11, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable non root mlock capability", "become": true, "when": "vault_mlock_capability is failed"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories", "module": "file", "index": 12, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Create directories", "become": true, "with_items": ["{{ vault_config_path }}", "{{ vault_plugin_path }}", "{{ vault_data_path }}", "{{ vault_log_path }}", "{{ vault_run_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable logrotate for vault", "module": "template", "index": 13, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable logrotate for vault", "when": "vault_enable_logrotate | bool"}, "module_options": {"src": "{{ vault_logrotate_template }}", "dest": "/etc/logrotate.d/vault", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "TLS configuration", "module": "include", "index": 14, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "TLS configuration", "when": "vault_tls_disable == 0"}, "module_options": "../tasks/tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Backend storage TLS configuration", "module": "include", "index": 15, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Backend storage TLS configuration", "when": "vault_tls_gossip == 1"}, "module_options": "../tasks/backend_tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over GCP Credentials for Auto Unseal", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Copy over GCP Credentials for Auto Unseal", "when": "vault_gkms | bool"}, "module_options": {"src": "{{ vault_gkms_credentials_src_file }}", "dest": "{{ vault_gkms_credentials }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0600"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault main configuration", "module": "template", "index": 17, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault main configuration", "become": true, "notify": "Restart vault"}, "module_options": {"src": "{{ vault_main_configuration_template }}", "dest": "{{ vault_main_config }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0400"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "BSD init script", "module": "template", "index": 18, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "{{ vault_bsdinit_template }}", "dest": "/etc/rc.d/vault", "owner": "root", "group": "wheel", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "SYSV init script", "module": "template", "index": 19, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_sysvinit_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian init script", "module": "template", "index": 20, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_debian_init_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "extract systemd version", "module": "shell", "index": 21, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "extract systemd version", "args": {"executable": "/bin/bash"}, "changed_when": false, "check_mode": false, "register": "systemd_version", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "set -o pipefail\nsystemctl --version systemd | head -n 1 | cut -d' ' -f2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "systemd unit", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "systemd unit", "become": true, "register": "systemd_unit", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined"]}, "module_options": {"src": "{{ vault_systemd_template }}", "dest": "/lib/systemd/system/vault.service", "force": true, "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd", "module": "systemd", "index": 23, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "reload systemd", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined", "systemd_unit is changed"]}, "module_options": {"daemon-reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Vault", "module": "service", "index": 24, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Start Vault", "become": true}, "module_options": {"name": "vault", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Vault if needed", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Restart Vault if needed"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert http(s) export in dotfile", "module": "lineinfile", "index": 26, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert http(s) export in dotfile", "when": ["ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_ADDR='{{ vault_tls_disable | ternary('http', 'https') }}://{{ inventory_hostname }}:{{ vault_port }}'", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert CA cert export in dotfile", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert CA cert export in dotfile", "when": ["not vault_tls_disable | bool", "ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_CACERT={{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault API reachable?", "module": "vars", "index": 28, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault API reachable?", "uri": {"validate_certs": "{{ validate_certs_during_api_reachable_check | bool }}", "url": "{{ vault_addr_protocol }}://{{ vault_addr }}:{{ vault_port }}/v1/sys/health", "method": "GET", "status_code": "200, 429, 473, 501, 503", "body_format": "json"}, "register": "check_result", "retries": 6, "until": "check_result is succeeded", "delay": 10, "changed_when": false, "tags": ["check_vault"]}, "module_options": {"vault_addr_protocol": "{{ vault_tls_disable | ternary('http', 'https') }}", "vault_addr": "{{ (vault_address == '0.0.0.0') | ternary('127.0.0.1', vault_address) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault status", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault status"}, "module_options": {"msg": "Vault is {{ vault_http_status[check_result.status|string] }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_enterprise.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_enterprise_pkg }}\" \"{{ role_path }}/files/{{ vault_enterprise_shasums }}\" | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Download vault version {{ vault_version }} (local)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Download vault version {{ vault_version }} (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Install version {{ vault_version }}", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Install version {{ vault_version }}", "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Remove {{ role_path }}/files/vault", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Remove {{ role_path }}/files/vault", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": "ansible_distribution not in ['RedHat', 'CentOS', 'Fedora', 'Debian', 'Ubuntu']"}, "module_options": {"msg": "{{ ansible_distribution }} is not supported by this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Fail if not a new release of Red Hat / CentOS", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Red Hat / CentOS", "when": ["ansible_distribution in ['RedHat', 'CentOS']", "ansible_distribution_version is version(7, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Debian", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version(8.5, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Fail if not a new release of FreeBSD", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of FreeBSD", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fail if not a new release of Ubuntu", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Ubuntu", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check for vault_redirect_address usage", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check for vault_redirect_address usage", "when": "vault_redirect_address is defined"}, "module_options": {"msg": "vault_redirect_address is deprecated. Check for vault_api_addr in the README."}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure remote vault dir exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Ensure remote vault dir exists"}, "module_options": {"path": "/tmp/vault", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check Vault package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package checksum file", "register": "vault_checksum"}, "module_options": {"path": "/tmp/vault/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Get Vault package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum file", "tags": "installation", "when": "not vault_checksum.stat.exists | bool"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "/tmp/vault/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Get Vault package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum", "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ vault_pkg }} /tmp/vault/{{ vault_shasums }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check Vault package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package file", "register": "vault_package", "tags": "installation"}, "module_options": {"path": "/tmp/vault/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Download Vault \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Download Vault \u2192 {{ vault_zip_url }}", "tags": "installation", "when": "not vault_package.stat.exists | bool"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "/tmp/vault/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout.split(' ')|first }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Unarchive Vault and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Unarchive Vault and install binary", "notify": "Restart vault", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/vault/{{ vault_pkg }}", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/vault", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create backend TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Create backend TLS directory", "become": true, "with_items": ["{{ vault_backend_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Vault backend SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Vault backend SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_cert_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_key_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_ca_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Create TLS directory", "become": true, "with_items": ["{{ vault_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Vault SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Vault SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_tls_src_files }}/{{ vault_tls_cert_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_key_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_ca_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages", "become": true, "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "OS packages diff (Debian 9)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages diff (Debian 9)", "tags": "installation", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version == 'buster/sid') or (ansible_distribution_version is version(8.5, '>'))"]}, "module_options": {"name": "libcap2-bin", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check Vault package checksum file (local)", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package checksum file (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Get Vault package checksum file (local)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum file (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Get Vault package checksum (local)", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_pkg }}\" \"{{ role_path }}/files/{{ vault_shasums }}\" | \\\nawk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check Vault package file (local)", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package file (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "{{ role_path }}/files/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Unarchive Vault (local)", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Unarchive Vault (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install Vault", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Install Vault", "become": true, "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Cleanup (local)", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Cleanup (local)", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include asserts", "module": "include", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include asserts"}, "module_options": "asserts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Vault group", "module": "group", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault group", "become": true, "when": "vault_manage_group | bool"}, "module_options": {"name": "{{ vault_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Vault user", "module": "user", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault user", "become": true, "when": "vault_manage_user | bool"}, "module_options": {"name": "{{ vault_user }}", "comment": "Vault user", "group": "{{ vault_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check Vault installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault installation", "environment": {"PATH": "{{ vault_bin_path }}:{{ ansible_env.PATH }}"}, "register": "vault_installation", "changed_when": false, "ignore_errors": true, "check_mode": false}, "module_options": "command -v vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Get installed Vault version", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Get installed Vault version", "args": {"executable": "/bin/bash"}, "when": "not vault_installation is failed", "changed_when": false, "check_mode": false, "register": "installed_vault_version"}, "module_options": "set -o pipefail\n{{ vault_installation.stdout }} -version | cut -d' ' -f2 | tr -d 'v'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Compute if installation is required", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Compute if installation is required"}, "module_options": {"installation_required": "{{ vault_installation is failed or installed_vault_version.stdout != vault_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install OS packages and Vault Enterprise via control host", "module": "include", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault Enterprise via control host", "when": ["vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_enterprise.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install OS packages and Vault via control host", "module": "include", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via control host", "when": ["not vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install OS packages and Vault via remote hosts", "module": "include", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via remote hosts", "when": ["not vault_enterprise | bool", "vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_remote.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Check Vault mlock capability", "module": "command", "index": 10, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault mlock capability", "become": true, "changed_when": false, "ignore_errors": true, "register": "vault_mlock_capability"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Enable non root mlock capability", "module": "command", "index": 11, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable non root mlock capability", "become": true, "when": "vault_mlock_capability is failed"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create directories", "module": "file", "index": 12, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Create directories", "become": true, "with_items": ["{{ vault_config_path }}", "{{ vault_plugin_path }}", "{{ vault_data_path }}", "{{ vault_log_path }}", "{{ vault_run_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Enable logrotate for vault", "module": "template", "index": 13, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable logrotate for vault", "when": "vault_enable_logrotate | bool"}, "module_options": {"src": "{{ vault_logrotate_template }}", "dest": "/etc/logrotate.d/vault", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "TLS configuration", "module": "include", "index": 14, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "TLS configuration", "when": "vault_tls_disable == 0"}, "module_options": "../tasks/tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Backend storage TLS configuration", "module": "include", "index": 15, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Backend storage TLS configuration", "when": "vault_tls_gossip == 1"}, "module_options": "../tasks/backend_tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Copy over GCP Credentials for Auto Unseal", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Copy over GCP Credentials for Auto Unseal", "when": "vault_gkms | bool"}, "module_options": {"src": "{{ vault_gkms_credentials_src_file }}", "dest": "{{ vault_gkms_credentials }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0600"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Vault main configuration", "module": "template", "index": 17, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault main configuration", "become": true, "notify": "Restart vault"}, "module_options": {"src": "{{ vault_main_configuration_template }}", "dest": "{{ vault_main_config }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0400"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "BSD init script", "module": "template", "index": 18, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "{{ vault_bsdinit_template }}", "dest": "/etc/rc.d/vault", "owner": "root", "group": "wheel", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "SYSV init script", "module": "template", "index": 19, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_sysvinit_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Debian init script", "module": "template", "index": 20, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_debian_init_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "extract systemd version", "module": "shell", "index": 21, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "extract systemd version", "args": {"executable": "/bin/bash"}, "changed_when": false, "check_mode": false, "register": "systemd_version", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "set -o pipefail\nsystemctl --version systemd | head -n 1 | cut -d' ' -f2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "systemd unit", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "systemd unit", "become": true, "register": "systemd_unit", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined"]}, "module_options": {"src": "{{ vault_systemd_template }}", "dest": "/lib/systemd/system/vault.service", "force": true, "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "reload systemd", "module": "systemd", "index": 23, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "reload systemd", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined", "systemd_unit is changed"]}, "module_options": {"daemon-reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Start Vault", "module": "service", "index": 24, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Start Vault", "become": true}, "module_options": {"name": "vault", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Restart Vault if needed", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Restart Vault if needed"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Insert http(s) export in dotfile", "module": "lineinfile", "index": 26, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert http(s) export in dotfile", "when": ["ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_ADDR='{{ vault_tls_disable | ternary('http', 'https') }}://{{ inventory_hostname }}:{{ vault_port }}'", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Insert CA cert export in dotfile", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert CA cert export in dotfile", "when": ["not vault_tls_disable | bool", "ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_CACERT={{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Vault API reachable?", "module": "vars", "index": 28, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault API reachable?", "uri": {"validate_certs": "{{ validate_certs_during_api_reachable_check | bool }}", "url": "{{ vault_addr_protocol }}://{{ vault_addr }}:{{ vault_port }}/v1/sys/health", "method": "GET", "status_code": "200, 429, 473, 501, 503", "body_format": "json"}, "register": "check_result", "retries": 6, "until": "check_result is succeeded", "delay": 10, "changed_when": false, "tags": ["check_vault"]}, "module_options": {"vault_addr_protocol": "{{ vault_tls_disable | ternary('http', 'https') }}", "vault_addr": "{{ (vault_address == '0.0.0.0') | ternary('127.0.0.1', vault_address) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Vault status", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault status"}, "module_options": {"msg": "Vault is {{ vault_http_status[check_result.status|string] }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_enterprise_pkg }}\" \"{{ role_path }}/files/{{ vault_enterprise_shasums }}\" | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "[Enterprise] Download vault version {{ vault_version }} (local)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Download vault version {{ vault_version }} (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "[Enterprise] Install version {{ vault_version }}", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Install version {{ vault_version }}", "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "[Enterprise] Remove {{ role_path }}/files/vault", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Remove {{ role_path }}/files/vault", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml": {"py/object": "struct4.TaskFile", "name": "asserts.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": "ansible_distribution not in ['RedHat', 'CentOS', 'Fedora', 'Debian', 'Ubuntu']"}, "module_options": {"msg": "{{ ansible_distribution }} is not supported by this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Red Hat / CentOS", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Red Hat / CentOS", "when": ["ansible_distribution in ['RedHat', 'CentOS']", "ansible_distribution_version is version(7, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Debian", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version(8.5, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of FreeBSD", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of FreeBSD", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Ubuntu", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Ubuntu", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for vault_redirect_address usage", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check for vault_redirect_address usage", "when": "vault_redirect_address is defined"}, "module_options": {"msg": "vault_redirect_address is deprecated. Check for vault_api_addr in the README."}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml": {"py/object": "struct4.TaskFile", "name": "install_remote.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure remote vault dir exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Ensure remote vault dir exists"}, "module_options": {"path": "/tmp/vault", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package checksum file", "register": "vault_checksum"}, "module_options": {"path": "/tmp/vault/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum file", "tags": "installation", "when": "not vault_checksum.stat.exists | bool"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "/tmp/vault/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum", "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ vault_pkg }} /tmp/vault/{{ vault_shasums }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package file", "register": "vault_package", "tags": "installation"}, "module_options": {"path": "/tmp/vault/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Vault \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Download Vault \u2192 {{ vault_zip_url }}", "tags": "installation", "when": "not vault_package.stat.exists | bool"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "/tmp/vault/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout.split(' ')|first }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Vault and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Unarchive Vault and install binary", "notify": "Restart vault", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/vault/{{ vault_pkg }}", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/vault", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml": {"py/object": "struct4.TaskFile", "name": "backend_tls.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create backend TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Create backend TLS directory", "become": true, "with_items": ["{{ vault_backend_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault backend SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Vault backend SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_cert_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_key_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_ca_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml": {"py/object": "struct4.TaskFile", "name": "tls.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Create TLS directory", "become": true, "with_items": ["{{ vault_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Vault SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_tls_src_files }}/{{ vault_tls_cert_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_key_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_ca_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages", "become": true, "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "OS packages diff (Debian 9)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages diff (Debian 9)", "tags": "installation", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version == 'buster/sid') or (ansible_distribution_version is version(8.5, '>'))"]}, "module_options": {"name": "libcap2-bin", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package checksum file (local)", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package checksum file (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum file (local)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum file (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum (local)", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_pkg }}\" \"{{ role_path }}/files/{{ vault_shasums }}\" | \\\nawk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package file (local)", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package file (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "{{ role_path }}/files/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Vault (local)", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Unarchive Vault (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Vault", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Install Vault", "become": true, "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup (local)", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Cleanup (local)", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include asserts", "module": "include", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include asserts"}, "module_options": "asserts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Vault group", "module": "group", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault group", "become": true, "when": "vault_manage_group | bool"}, "module_options": {"name": "{{ vault_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Vault user", "module": "user", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault user", "become": true, "when": "vault_manage_user | bool"}, "module_options": {"name": "{{ vault_user }}", "comment": "Vault user", "group": "{{ vault_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault installation", "environment": {"PATH": "{{ vault_bin_path }}:{{ ansible_env.PATH }}"}, "register": "vault_installation", "changed_when": false, "ignore_errors": true, "check_mode": false}, "module_options": "command -v vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get installed Vault version", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Get installed Vault version", "args": {"executable": "/bin/bash"}, "when": "not vault_installation is failed", "changed_when": false, "check_mode": false, "register": "installed_vault_version"}, "module_options": "set -o pipefail\n{{ vault_installation.stdout }} -version | cut -d' ' -f2 | tr -d 'v'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compute if installation is required", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Compute if installation is required"}, "module_options": {"installation_required": "{{ vault_installation is failed or installed_vault_version.stdout != vault_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault Enterprise via control host", "module": "include", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault Enterprise via control host", "when": ["vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_enterprise.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault via control host", "module": "include", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via control host", "when": ["not vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault via remote hosts", "module": "include", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via remote hosts", "when": ["not vault_enterprise | bool", "vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_remote.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault mlock capability", "module": "command", "index": 10, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault mlock capability", "become": true, "changed_when": false, "ignore_errors": true, "register": "vault_mlock_capability"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable non root mlock capability", "module": "command", "index": 11, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable non root mlock capability", "become": true, "when": "vault_mlock_capability is failed"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories", "module": "file", "index": 12, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Create directories", "become": true, "with_items": ["{{ vault_config_path }}", "{{ vault_plugin_path }}", "{{ vault_data_path }}", "{{ vault_log_path }}", "{{ vault_run_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable logrotate for vault", "module": "template", "index": 13, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable logrotate for vault", "when": "vault_enable_logrotate | bool"}, "module_options": {"src": "{{ vault_logrotate_template }}", "dest": "/etc/logrotate.d/vault", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "TLS configuration", "module": "include", "index": 14, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "TLS configuration", "when": "vault_tls_disable == 0"}, "module_options": "../tasks/tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Backend storage TLS configuration", "module": "include", "index": 15, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Backend storage TLS configuration", "when": "vault_tls_gossip == 1"}, "module_options": "../tasks/backend_tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over GCP Credentials for Auto Unseal", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Copy over GCP Credentials for Auto Unseal", "when": "vault_gkms | bool"}, "module_options": {"src": "{{ vault_gkms_credentials_src_file }}", "dest": "{{ vault_gkms_credentials }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0600"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault main configuration", "module": "template", "index": 17, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault main configuration", "become": true, "notify": "Restart vault"}, "module_options": {"src": "{{ vault_main_configuration_template }}", "dest": "{{ vault_main_config }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0400"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "BSD init script", "module": "template", "index": 18, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "{{ vault_bsdinit_template }}", "dest": "/etc/rc.d/vault", "owner": "root", "group": "wheel", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "SYSV init script", "module": "template", "index": 19, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_sysvinit_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian init script", "module": "template", "index": 20, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_debian_init_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "extract systemd version", "module": "shell", "index": 21, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "extract systemd version", "args": {"executable": "/bin/bash"}, "changed_when": false, "check_mode": false, "register": "systemd_version", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "set -o pipefail\nsystemctl --version systemd | head -n 1 | cut -d' ' -f2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "systemd unit", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "systemd unit", "become": true, "register": "systemd_unit", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined"]}, "module_options": {"src": "{{ vault_systemd_template }}", "dest": "/lib/systemd/system/vault.service", "force": true, "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd", "module": "systemd", "index": 23, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "reload systemd", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined", "systemd_unit is changed"]}, "module_options": {"daemon-reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Vault", "module": "service", "index": 24, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Start Vault", "become": true}, "module_options": {"name": "vault", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Vault if needed", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Restart Vault if needed"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert http(s) export in dotfile", "module": "lineinfile", "index": 26, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert http(s) export in dotfile", "when": ["ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_ADDR='{{ vault_tls_disable | ternary('http', 'https') }}://{{ inventory_hostname }}:{{ vault_port }}'", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert CA cert export in dotfile", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert CA cert export in dotfile", "when": ["not vault_tls_disable | bool", "ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_CACERT={{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault API reachable?", "module": "vars", "index": 28, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault API reachable?", "uri": {"validate_certs": "{{ validate_certs_during_api_reachable_check | bool }}", "url": "{{ vault_addr_protocol }}://{{ vault_addr }}:{{ vault_port }}/v1/sys/health", "method": "GET", "status_code": "200, 429, 473, 501, 503", "body_format": "json"}, "register": "check_result", "retries": 6, "until": "check_result is succeeded", "delay": 10, "changed_when": false, "tags": ["check_vault"]}, "module_options": {"vault_addr_protocol": "{{ vault_tls_disable | ternary('http', 'https') }}", "vault_addr": "{{ (vault_address == '0.0.0.0') | ternary('127.0.0.1', vault_address) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault status", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault status"}, "module_options": {"msg": "Vault is {{ vault_http_status[check_result.status|string] }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml": {"py/object": "struct4.TaskFile", "name": "install_enterprise.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_enterprise_pkg }}\" \"{{ role_path }}/files/{{ vault_enterprise_shasums }}\" | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Download vault version {{ vault_version }} (local)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Download vault version {{ vault_version }} (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Install version {{ vault_version }}", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Install version {{ vault_version }}", "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Remove {{ role_path }}/files/vault", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Remove {{ role_path }}/files/vault", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}}, "role_dict": {"brianshumate.vault": {"py/object": "struct4.Role", "name": "brianshumate.vault", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault", "fqcn": "brianshumate.vault", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "asserts.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": "ansible_distribution not in ['RedHat', 'CentOS', 'Fedora', 'Debian', 'Ubuntu']"}, "module_options": {"msg": "{{ ansible_distribution }} is not supported by this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Red Hat / CentOS", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Red Hat / CentOS", "when": ["ansible_distribution in ['RedHat', 'CentOS']", "ansible_distribution_version is version(7, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Debian", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Debian", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version(8.5, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of FreeBSD", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of FreeBSD", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if not a new release of Ubuntu", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Fail if not a new release of Ubuntu", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version of {{ ansible_distribution }} for this role"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for vault_redirect_address usage", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/asserts.yml", "options": {"name": "Check for vault_redirect_address usage", "when": "vault_redirect_address is defined"}, "module_options": {"msg": "vault_redirect_address is deprecated. Check for vault_api_addr in the README."}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_remote.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure remote vault dir exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Ensure remote vault dir exists"}, "module_options": {"path": "/tmp/vault", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package checksum file", "register": "vault_checksum"}, "module_options": {"path": "/tmp/vault/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum file", "tags": "installation", "when": "not vault_checksum.stat.exists | bool"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "/tmp/vault/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Get Vault package checksum", "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ vault_pkg }} /tmp/vault/{{ vault_shasums }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Check Vault package file", "register": "vault_package", "tags": "installation"}, "module_options": {"path": "/tmp/vault/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Vault \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Download Vault \u2192 {{ vault_zip_url }}", "tags": "installation", "when": "not vault_package.stat.exists | bool"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "/tmp/vault/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout.split(' ')|first }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Vault and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Unarchive Vault and install binary", "notify": "Restart vault", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/vault/{{ vault_pkg }}", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/vault", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "backend_tls.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create backend TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Create backend TLS directory", "become": true, "with_items": ["{{ vault_backend_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault backend SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/backend_tls.yml", "options": {"name": "Vault backend SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_cert_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_key_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_backend_tls_src_files }}/{{ vault_backend_tls_ca_file }}", "dest": "{{ vault_backend_tls_config_path }}/{{ vault_backend_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tls.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create TLS directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Create TLS directory", "become": true, "with_items": ["{{ vault_tls_config_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault SSL Certificate and Key", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/tls.yml", "options": {"name": "Vault SSL Certificate and Key", "become": true, "with_items": [{"src": "{{ vault_tls_src_files }}/{{ vault_tls_cert_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_cert_file }}", "mode": "0644"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_key_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_key_file }}", "mode": "0600"}, {"src": "{{ vault_tls_src_files }}/{{ vault_tls_ca_file }}", "dest": "{{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "mode": "0644"}], "when": "vault_tls_copy_keys | bool"}, "module_options": {"remote_src": "{{ vault_tls_files_remote_src }}", "src": "{{ item.src }}", "dest": "{{ item.dest }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "{{ item.mode }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages", "become": true, "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "OS packages diff (Debian 9)", "module": "package", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "OS packages diff (Debian 9)", "tags": "installation", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version == 'buster/sid') or (ansible_distribution_version is version(8.5, '>'))"]}, "module_options": {"name": "libcap2-bin", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package checksum file (local)", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package checksum file (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum file (local)", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum file (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_checksum_file_url }}", "dest": "{{ role_path }}/files/{{ vault_shasums }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Vault package checksum (local)", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Get Vault package checksum (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_pkg }}\" \"{{ role_path }}/files/{{ vault_shasums }}\" | \\\nawk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault package file (local)", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Check Vault package file (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Download Vault (local) \u2192 {{ vault_zip_url }}", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}", "dest": "{{ role_path }}/files/{{ vault_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Vault (local)", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Unarchive Vault (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Vault", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Install Vault", "become": true, "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup (local)", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install.yml", "options": {"name": "Cleanup (local)", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include asserts", "module": "include", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include asserts"}, "module_options": "asserts.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Vault group", "module": "group", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault group", "become": true, "when": "vault_manage_group | bool"}, "module_options": {"name": "{{ vault_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Vault user", "module": "user", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Add Vault user", "become": true, "when": "vault_manage_user | bool"}, "module_options": {"name": "{{ vault_user }}", "comment": "Vault user", "group": "{{ vault_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Include OS-specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault installation", "module": "command", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault installation", "environment": {"PATH": "{{ vault_bin_path }}:{{ ansible_env.PATH }}"}, "register": "vault_installation", "changed_when": false, "ignore_errors": true, "check_mode": false}, "module_options": "command -v vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get installed Vault version", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Get installed Vault version", "args": {"executable": "/bin/bash"}, "when": "not vault_installation is failed", "changed_when": false, "check_mode": false, "register": "installed_vault_version"}, "module_options": "set -o pipefail\n{{ vault_installation.stdout }} -version | cut -d' ' -f2 | tr -d 'v'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compute if installation is required", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Compute if installation is required"}, "module_options": {"installation_required": "{{ vault_installation is failed or installed_vault_version.stdout != vault_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault Enterprise via control host", "module": "include", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault Enterprise via control host", "when": ["vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_enterprise.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault via control host", "module": "include", "index": 8, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via control host", "when": ["not vault_enterprise | bool", "not vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and Vault via remote hosts", "module": "include", "index": 9, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Install OS packages and Vault via remote hosts", "when": ["not vault_enterprise | bool", "vault_install_remotely | bool", "installation_required | bool"]}, "module_options": "install_remote.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Vault mlock capability", "module": "command", "index": 10, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Check Vault mlock capability", "become": true, "changed_when": false, "ignore_errors": true, "register": "vault_mlock_capability"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable non root mlock capability", "module": "command", "index": 11, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable non root mlock capability", "become": true, "when": "vault_mlock_capability is failed"}, "module_options": "setcap cap_ipc_lock=+ep {{ vault_bin_path }}/vault", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories", "module": "file", "index": 12, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Create directories", "become": true, "with_items": ["{{ vault_config_path }}", "{{ vault_plugin_path }}", "{{ vault_data_path }}", "{{ vault_log_path }}", "{{ vault_run_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ vault_user }}", "group": "{{ vault_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable logrotate for vault", "module": "template", "index": 13, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Enable logrotate for vault", "when": "vault_enable_logrotate | bool"}, "module_options": {"src": "{{ vault_logrotate_template }}", "dest": "/etc/logrotate.d/vault", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "TLS configuration", "module": "include", "index": 14, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "TLS configuration", "when": "vault_tls_disable == 0"}, "module_options": "../tasks/tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Backend storage TLS configuration", "module": "include", "index": 15, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Backend storage TLS configuration", "when": "vault_tls_gossip == 1"}, "module_options": "../tasks/backend_tls.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy over GCP Credentials for Auto Unseal", "module": "copy", "index": 16, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Copy over GCP Credentials for Auto Unseal", "when": "vault_gkms | bool"}, "module_options": {"src": "{{ vault_gkms_credentials_src_file }}", "dest": "{{ vault_gkms_credentials }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0600"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault main configuration", "module": "template", "index": 17, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault main configuration", "become": true, "notify": "Restart vault"}, "module_options": {"src": "{{ vault_main_configuration_template }}", "dest": "{{ vault_main_config }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0400"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "BSD init script", "module": "template", "index": 18, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "{{ vault_bsdinit_template }}", "dest": "/etc/rc.d/vault", "owner": "root", "group": "wheel", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "SYSV init script", "module": "template", "index": 19, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_sysvinit_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian init script", "module": "template", "index": 20, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "{{ vault_debian_init_template }}", "dest": "/etc/init.d/vault", "owner": "root", "group": "root", "mode": "0755"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "extract systemd version", "module": "shell", "index": 21, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "extract systemd version", "args": {"executable": "/bin/bash"}, "changed_when": false, "check_mode": false, "register": "systemd_version", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "set -o pipefail\nsystemctl --version systemd | head -n 1 | cut -d' ' -f2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "systemd unit", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "systemd unit", "become": true, "register": "systemd_unit", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined"]}, "module_options": {"src": "{{ vault_systemd_template }}", "dest": "/lib/systemd/system/vault.service", "force": true, "owner": "root", "group": "root", "mode": "0644"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "reload systemd", "module": "systemd", "index": 23, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "reload systemd", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "systemd_version is defined", "systemd_unit is changed"]}, "module_options": {"daemon-reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Vault", "module": "service", "index": 24, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Start Vault", "become": true}, "module_options": {"name": "vault", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Vault if needed", "module": "meta", "index": 25, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Restart Vault if needed"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert http(s) export in dotfile", "module": "lineinfile", "index": 26, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert http(s) export in dotfile", "when": ["ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_ADDR='{{ vault_tls_disable | ternary('http', 'https') }}://{{ inventory_hostname }}:{{ vault_port }}'", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Insert CA cert export in dotfile", "module": "lineinfile", "index": 27, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Insert CA cert export in dotfile", "when": ["not vault_tls_disable | bool", "ansible_os_family != 'Windows'"]}, "module_options": {"path": "{{ vault_home }}/.bashrc", "line": "export VAULT_CACERT={{ vault_tls_config_path }}/{{ vault_tls_ca_file }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault API reachable?", "module": "vars", "index": 28, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault API reachable?", "uri": {"validate_certs": "{{ validate_certs_during_api_reachable_check | bool }}", "url": "{{ vault_addr_protocol }}://{{ vault_addr }}:{{ vault_port }}/v1/sys/health", "method": "GET", "status_code": "200, 429, 473, 501, 503", "body_format": "json"}, "register": "check_result", "retries": 6, "until": "check_result is succeeded", "delay": 10, "changed_when": false, "tags": ["check_vault"]}, "module_options": {"vault_addr_protocol": "{{ vault_tls_disable | ternary('http', 'https') }}", "vault_addr": "{{ (vault_address == '0.0.0.0') | ternary('127.0.0.1', vault_address) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Vault status", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/main.yml", "options": {"name": "Vault status"}, "module_options": {"msg": "Vault is {{ vault_http_status[check_result.status|string] }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_enterprise.yml", "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "tasks": [{"py/object": "struct4.Task", "name": "OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "OS packages", "with_items": "{{ vault_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "become": false, "run_once": true, "register": "vault_checksum", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_shasums }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Get SHA SUM from {{ role_path }}/files/{{ vault_enterprise_shasums }} (local)", "args": {"executable": "/bin/bash"}, "become": false, "run_once": true, "register": "vault_sha256", "tags": ["installation", "skip_ansible_lint"], "delegate_to": "127.0.0.1"}, "module_options": "set -o pipefail\ngrep \"{{ vault_enterprise_pkg }}\" \"{{ role_path }}/files/{{ vault_enterprise_shasums }}\" | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "stat", "index": 3, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Check {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "register": "vault_package", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ vault_enterprise_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Download vault version {{ vault_version }} (local)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Download vault version {{ vault_version }} (local)", "become": false, "run_once": true, "tags": "installation", "when": "not vault_package.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ vault_zip_url }}/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "checksum": "sha256:{{ vault_sha256.stdout }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "module": "unarchive", "index": 5, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Unzip {{ role_path }}/files/{{ vault_enterprise_pkg }} (local)", "become": false, "run_once": true, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ vault_enterprise_pkg }}", "dest": "{{ role_path }}/files/", "creates": "{{ role_path }}/files/vault"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Install version {{ vault_version }}", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Install version {{ vault_version }}", "notify": "Restart vault", "tags": "installation"}, "module_options": {"src": "{{ role_path }}/files/vault", "dest": "{{ vault_bin_path }}", "owner": "{{ vault_user }}", "group": "{{ vault_group }}", "mode": "0755"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "[Enterprise] Remove {{ role_path }}/files/vault", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-vault/brianshumate.vault/tasks/install_enterprise.yml", "options": {"name": "[Enterprise] Remove {{ role_path }}/files/vault", "become": false, "with_fileglob": "{{ role_path }}/files/vault", "run_once": true, "tags": "installation"}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.vault", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}