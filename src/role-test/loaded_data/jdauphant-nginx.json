{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/jdauphant-nginx", "installed_roles": [{"py/object": "struct4.Role", "name": "jdauphant.nginx", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx", "fqcn": "jdauphant.nginx", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "installation.packages.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the epel packages for EL distributions", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the epel packages for EL distributions", "when": "nginx_is_el|bool and nginx_install_epel_repo|bool"}, "module_options": "name=epel-release state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the nginx packages from official repo for EL distributions", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages from official repo for EL distributions", "when": "nginx_is_el|bool and nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present enablerepo=\"nginx\"", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the nginx packages for all other distributions", "module": "package", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages for all other distributions", "environment": "{{ nginx_env }}", "when": "not nginx_is_el|bool or not nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "remove-defaults.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable the default site", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable the default site (on newer nginx versions)", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site (on newer nginx versions)", "notify": ["reload nginx"], "when": "'default' not in nginx_sites.keys()\n"}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove the default configuration", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Remove the default configuration", "when": "'default' not in nginx_configs.keys()\n", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "remove-extras.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "tasks": [{"py/object": "struct4.Task", "name": "Find enabled sites", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find enabled sites", "register": "enabled_sites", "changed_when": false}, "module_options": "ls -1 {{nginx_conf_dir}}/sites-enabled || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable unmanaged sites", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Disable unmanaged sites", "with_items": "{{ enabled_sites.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_sites.keys()", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find config files", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find config files", "register": "config_files", "changed_when": false}, "module_options": "find {{nginx_conf_dir}}/conf.d -maxdepth 1 -type f -name '*.conf' -exec basename {} \\;", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unmanaged config files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Remove unmanaged config files", "with_items": "{{ config_files.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_configs.keys()", "notify": ["reload nginx"]}, "module_options": {"name": "{{nginx_conf_dir}}/conf.d/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "amplify.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if Amplify Agent is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Check if Amplify Agent is installed", "ignore_errors": true, "register": "amplify_agent_installed", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Amplify Agent script", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Download Amplify Agent script"}, "module_options": {"url": "{{ nginx_amplify_script_url }}", "dest": "{{ nginx_amplify_script_path }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run Amplify Agent install.sh script", "module": "command", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Run Amplify Agent install.sh script", "environment": {"API_KEY": "{{ nginx_amplify_api_key }}"}, "become": true, "become_user": "root", "become_method": "sudo"}, "module_options": "sh /tmp/install-amplify-agent.sh -y", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove installation script", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Remove installation script"}, "module_options": {"path": "{{ nginx_amplify_script_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Amplify Agent if already installed and update flag is enabled", "module": "package", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Update Amplify Agent if already installed and update flag is enabled", "when": "amplify_agent_installed.failed == false and nginx_amplify_update_agent == true", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "latest"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify Amplify agent is up and running", "module": "service", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Verify Amplify agent is up and running", "tags": ["service"]}, "module_options": {"name": "amplify-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the selinux python module", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Install the selinux python module", "when": "ansible_os_family == \"RedHat\" or ansible_os_family == \"Debian\""}, "module_options": "name={{ nginx_python_selinux_pkgs | default(omit)}} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set SELinux boolean to allow nginx to set rlimit", "module": "seboolean", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Set SELinux boolean to allow nginx to set rlimit"}, "module_options": "name=httpd_setrlimit state=yes persistent=yes", "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ensure-dirs.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the directories for site specific configurations", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Create the directories for site specific configurations", "with_items": ["sites-available", "sites-enabled", "auth_basic", "conf.d", "conf.d/stream", "snippets", "modules-available", "modules-enabled"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item }}", "state": "directory", "owner": "{{ nginx_conf_user }}", "group": "{{ nginx_conf_group }}", "mode": "{{nginx_dir_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure log directory exist", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Ensure log directory exist"}, "module_options": {"path": "{{ nginx_log_dir }}", "state": "directory", "owner": "{{nginx_log_user}}", "group": "{{nginx_log_group}}", "mode": "{{nginx_log_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nginx-official-repo.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure APT official nginx key", "module": "apt_key", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian'"}, "module_options": "url=http://nginx.org/keys/nginx_signing.key", "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and not nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository (mainline)", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/mainline/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure RPM official nginx key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure RPM official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'RedHat'"}, "module_options": "key=http://nginx.org/keys/nginx_signing.key", "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure YUM official nginx repository", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure YUM official nginx repository", "when": "ansible_os_family == 'RedHat'"}, "module_options": "src=nginx.repo.j2 dest=/etc/yum.repos.d/nginx.repo", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository", "module": "zypper_repository", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and not nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository (mainline)", "module": "zypper_repository", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/mainline/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "remove-unwanted.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove unwanted sites", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted sites", "with_nested": [["sites-enabled", "sites-available"], "{{ nginx_remove_sites }}"], "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item[0] }}/{{ item[1] }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted conf", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted conf", "with_items": "{{ nginx_remove_configs }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted snippets", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted snippets", "with_items": "{{ nginx_remove_snippets }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{ nginx_conf_dir }}/snippets/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted auth_basic_files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted auth_basic_files", "with_items": "{{ nginx_remove_auth_basic_files }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/auth_basic/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configuration.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy the nginx configuration file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Copy the nginx configuration file", "notify": ["restart nginx"]}, "module_options": {"src": "nginx.conf.j2", "dest": "{{ nginx_conf_dir }}/nginx.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure auth_basic files created", "module": "template", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Ensure auth_basic files created", "with_dict": "{{ nginx_auth_basic_files }}"}, "module_options": {"src": "auth_basic.j2", "dest": "{{ nginx_conf_dir }}/auth_basic/{{ item.key }}", "mode": 488, "group": "{{ nginx_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for sites", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for sites", "with_dict": "{{ nginx_sites }}", "when": "item.key not in nginx_remove_sites", "notify": ["reload nginx"]}, "module_options": {"src": "{{ item.value.template | default(nginx_default_site_template) }}", "dest": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create links for sites-enabled", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for sites-enabled", "with_dict": "{{ nginx_sites }}", "when": "(item.key not in nginx_remove_sites) and (item.key not in nginx_disabled_sites)", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"]}, "module_options": {"state": "link", "src": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf", "dest": "{{ nginx_conf_dir }}/sites-enabled/{{ item.key }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for independent config file", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file", "with_dict": "{{ nginx_configs }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configuration snippets", "module": "template", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create configuration snippets", "with_dict": "{{ nginx_snippets }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/snippets/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for independent config file for streams", "module": "template", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file for streams", "with_dict": "{{ nginx_stream_configs }}", "notify": ["reload nginx"], "when": "nginx_stream_params or nginx_stream_configs"}, "module_options": {"src": "{{ item.value.template | default('config_stream.conf.j2') }}", "dest": "{{ nginx_conf_dir }}/conf.d/stream/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create links for modules-enabled", "module": "file", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for modules-enabled", "with_items": "{{ nginx_module_configs }}", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"], "when": ["(item not in nginx_remove_modules) and (item not in nginx_disabled_modules)", "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", "nginx_install_epel_repo"]}, "module_options": {"state": "link", "src": "/usr/share/nginx/modules/{{ item }}.conf", "dest": "{{ nginx_conf_dir }}/modules-enabled/{{ item }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "cloudflare_configuration.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv4", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv4", "register": "cloudflare_ipv4_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v4", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv6", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv6", "register": "cloudflare_ipv6_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v6", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create independent configuration for CloudFlare", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Create independent configuration for CloudFlare", "notify": ["reload nginx"]}, "module_options": {"src": "config_cloudflare.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ nginx_cloudflare_configuration_name }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"with_first_found": ["../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"], "when": "nginx_load_default_vars", "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "ansible_selinux and ansible_selinux.status == \"enabled\"", "tags": ["packages", "selinux", "nginx"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_official_repo == True", "tags": ["packages", "nginx"]}, "module_options": "nginx-official-repo.yml", "executable": "nginx-official-repo.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_installation_type == \"packages\"", "tags": ["packages", "nginx"]}, "module_options": "installation.packages.yml", "executable": "installation.packages.yml", "executable_type": "TaskFile", "fqcn": "installation.packages.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "ensure-dirs.yml", "executable": "ensure-dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "not nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-defaults.yml", "executable": "remove-defaults.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-extras.yml", "executable": "remove-extras.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "remove-unwanted.yml", "executable": "remove-unwanted.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "configuration.yml", "executable": "configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_set_real_ip_from_cloudflare == True", "tags": ["configuration", "nginx"]}, "module_options": "cloudflare_configuration.yml", "executable": "cloudflare_configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_amplify == true and (ansible_distribution in ['RedHat', 'CentOS', 'Debian', 'Amazon', 'Ubuntu'])", "tags": ["amplify", "nginx"]}, "module_options": "amplify.yml", "executable": "amplify.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the nginx service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"name": "Start the nginx service", "when": "nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == \"on\"", "tags": ["service", "nginx"]}, "module_options": "name={{ nginx_service_name }} state={{nginx_start_service | ternary('started', 'stopped')}} enabled={{nginx_start_at_boot}}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install the epel packages for EL distributions", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the epel packages for EL distributions", "when": "nginx_is_el|bool and nginx_install_epel_repo|bool"}, "module_options": "name=epel-release state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install the nginx packages from official repo for EL distributions", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages from official repo for EL distributions", "when": "nginx_is_el|bool and nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present enablerepo=\"nginx\"", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install the nginx packages for all other distributions", "module": "package", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages for all other distributions", "environment": "{{ nginx_env }}", "when": "not nginx_is_el|bool or not nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Disable the default site", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Disable the default site (on newer nginx versions)", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site (on newer nginx versions)", "notify": ["reload nginx"], "when": "'default' not in nginx_sites.keys()\n"}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Remove the default configuration", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Remove the default configuration", "when": "'default' not in nginx_configs.keys()\n", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Find enabled sites", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find enabled sites", "register": "enabled_sites", "changed_when": false}, "module_options": "ls -1 {{nginx_conf_dir}}/sites-enabled || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Disable unmanaged sites", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Disable unmanaged sites", "with_items": "{{ enabled_sites.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_sites.keys()", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Find config files", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find config files", "register": "config_files", "changed_when": false}, "module_options": "find {{nginx_conf_dir}}/conf.d -maxdepth 1 -type f -name '*.conf' -exec basename {} \\;", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove unmanaged config files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Remove unmanaged config files", "with_items": "{{ config_files.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_configs.keys()", "notify": ["reload nginx"]}, "module_options": {"name": "{{nginx_conf_dir}}/conf.d/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check if Amplify Agent is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Check if Amplify Agent is installed", "ignore_errors": true, "register": "amplify_agent_installed", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Download Amplify Agent script", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Download Amplify Agent script"}, "module_options": {"url": "{{ nginx_amplify_script_url }}", "dest": "{{ nginx_amplify_script_path }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Run Amplify Agent install.sh script", "module": "command", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Run Amplify Agent install.sh script", "environment": {"API_KEY": "{{ nginx_amplify_api_key }}"}, "become": true, "become_user": "root", "become_method": "sudo"}, "module_options": "sh /tmp/install-amplify-agent.sh -y", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove installation script", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Remove installation script"}, "module_options": {"path": "{{ nginx_amplify_script_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Update Amplify Agent if already installed and update flag is enabled", "module": "package", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Update Amplify Agent if already installed and update flag is enabled", "when": "amplify_agent_installed.failed == false and nginx_amplify_update_agent == true", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "latest"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Verify Amplify agent is up and running", "module": "service", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Verify Amplify agent is up and running", "tags": ["service"]}, "module_options": {"name": "amplify-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install the selinux python module", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Install the selinux python module", "when": "ansible_os_family == \"RedHat\" or ansible_os_family == \"Debian\""}, "module_options": "name={{ nginx_python_selinux_pkgs | default(omit)}} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set SELinux boolean to allow nginx to set rlimit", "module": "seboolean", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Set SELinux boolean to allow nginx to set rlimit"}, "module_options": "name=httpd_setrlimit state=yes persistent=yes", "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create the directories for site specific configurations", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Create the directories for site specific configurations", "with_items": ["sites-available", "sites-enabled", "auth_basic", "conf.d", "conf.d/stream", "snippets", "modules-available", "modules-enabled"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item }}", "state": "directory", "owner": "{{ nginx_conf_user }}", "group": "{{ nginx_conf_group }}", "mode": "{{nginx_dir_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure log directory exist", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Ensure log directory exist"}, "module_options": {"path": "{{ nginx_log_dir }}", "state": "directory", "owner": "{{nginx_log_user}}", "group": "{{nginx_log_group}}", "mode": "{{nginx_log_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure APT official nginx key", "module": "apt_key", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian'"}, "module_options": "url=http://nginx.org/keys/nginx_signing.key", "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and not nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository (mainline)", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/mainline/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure RPM official nginx key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure RPM official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'RedHat'"}, "module_options": "key=http://nginx.org/keys/nginx_signing.key", "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure YUM official nginx repository", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure YUM official nginx repository", "when": "ansible_os_family == 'RedHat'"}, "module_options": "src=nginx.repo.j2 dest=/etc/yum.repos.d/nginx.repo", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository", "module": "zypper_repository", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and not nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository (mainline)", "module": "zypper_repository", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/mainline/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Remove unwanted sites", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted sites", "with_nested": [["sites-enabled", "sites-available"], "{{ nginx_remove_sites }}"], "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item[0] }}/{{ item[1] }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Remove unwanted conf", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted conf", "with_items": "{{ nginx_remove_configs }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Remove unwanted snippets", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted snippets", "with_items": "{{ nginx_remove_snippets }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{ nginx_conf_dir }}/snippets/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove unwanted auth_basic_files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted auth_basic_files", "with_items": "{{ nginx_remove_auth_basic_files }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/auth_basic/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy the nginx configuration file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Copy the nginx configuration file", "notify": ["restart nginx"]}, "module_options": {"src": "nginx.conf.j2", "dest": "{{ nginx_conf_dir }}/nginx.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure auth_basic files created", "module": "template", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Ensure auth_basic files created", "with_dict": "{{ nginx_auth_basic_files }}"}, "module_options": {"src": "auth_basic.j2", "dest": "{{ nginx_conf_dir }}/auth_basic/{{ item.key }}", "mode": 488, "group": "{{ nginx_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create the configurations for sites", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for sites", "with_dict": "{{ nginx_sites }}", "when": "item.key not in nginx_remove_sites", "notify": ["reload nginx"]}, "module_options": {"src": "{{ item.value.template | default(nginx_default_site_template) }}", "dest": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create links for sites-enabled", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for sites-enabled", "with_dict": "{{ nginx_sites }}", "when": "(item.key not in nginx_remove_sites) and (item.key not in nginx_disabled_sites)", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"]}, "module_options": {"state": "link", "src": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf", "dest": "{{ nginx_conf_dir }}/sites-enabled/{{ item.key }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create the configurations for independent config file", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file", "with_dict": "{{ nginx_configs }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create configuration snippets", "module": "template", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create configuration snippets", "with_dict": "{{ nginx_snippets }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/snippets/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create the configurations for independent config file for streams", "module": "template", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file for streams", "with_dict": "{{ nginx_stream_configs }}", "notify": ["reload nginx"], "when": "nginx_stream_params or nginx_stream_configs"}, "module_options": {"src": "{{ item.value.template | default('config_stream.conf.j2') }}", "dest": "{{ nginx_conf_dir }}/conf.d/stream/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create links for modules-enabled", "module": "file", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for modules-enabled", "with_items": "{{ nginx_module_configs }}", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"], "when": ["(item not in nginx_remove_modules) and (item not in nginx_disabled_modules)", "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", "nginx_install_epel_repo"]}, "module_options": {"state": "link", "src": "/usr/share/nginx/modules/{{ item }}.conf", "dest": "{{ nginx_conf_dir }}/modules-enabled/{{ item }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv4", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv4", "register": "cloudflare_ipv4_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v4", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv6", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv6", "register": "cloudflare_ipv6_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v6", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create independent configuration for CloudFlare", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Create independent configuration for CloudFlare", "notify": ["reload nginx"]}, "module_options": {"src": "config_cloudflare.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ nginx_cloudflare_configuration_name }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"with_first_found": ["../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"], "when": "nginx_load_default_vars", "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "ansible_selinux and ansible_selinux.status == \"enabled\"", "tags": ["packages", "selinux", "nginx"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_official_repo == True", "tags": ["packages", "nginx"]}, "module_options": "nginx-official-repo.yml", "executable": "nginx-official-repo.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_installation_type == \"packages\"", "tags": ["packages", "nginx"]}, "module_options": "installation.packages.yml", "executable": "installation.packages.yml", "executable_type": "TaskFile", "fqcn": "installation.packages.yml", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "ensure-dirs.yml", "executable": "ensure-dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "not nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-defaults.yml", "executable": "remove-defaults.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-extras.yml", "executable": "remove-extras.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "remove-unwanted.yml", "executable": "remove-unwanted.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "configuration.yml", "executable": "configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_set_real_ip_from_cloudflare == True", "tags": ["configuration", "nginx"]}, "module_options": "cloudflare_configuration.yml", "executable": "cloudflare_configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_amplify == true and (ansible_distribution in ['RedHat', 'CentOS', 'Debian', 'Amazon', 'Ubuntu'])", "tags": ["amplify", "nginx"]}, "module_options": "amplify.yml", "executable": "amplify.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Start the nginx service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"name": "Start the nginx service", "when": "nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == \"on\"", "tags": ["service", "nginx"]}, "module_options": "name={{ nginx_service_name }} state={{nginx_start_service | ternary('started', 'stopped')}} enabled={{nginx_start_at_boot}}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml": {"py/object": "struct4.TaskFile", "name": "installation.packages.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the epel packages for EL distributions", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the epel packages for EL distributions", "when": "nginx_is_el|bool and nginx_install_epel_repo|bool"}, "module_options": "name=epel-release state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the nginx packages from official repo for EL distributions", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages from official repo for EL distributions", "when": "nginx_is_el|bool and nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present enablerepo=\"nginx\"", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the nginx packages for all other distributions", "module": "package", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages for all other distributions", "environment": "{{ nginx_env }}", "when": "not nginx_is_el|bool or not nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml": {"py/object": "struct4.TaskFile", "name": "remove-defaults.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable the default site", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable the default site (on newer nginx versions)", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site (on newer nginx versions)", "notify": ["reload nginx"], "when": "'default' not in nginx_sites.keys()\n"}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove the default configuration", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Remove the default configuration", "when": "'default' not in nginx_configs.keys()\n", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml": {"py/object": "struct4.TaskFile", "name": "remove-extras.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "tasks": [{"py/object": "struct4.Task", "name": "Find enabled sites", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find enabled sites", "register": "enabled_sites", "changed_when": false}, "module_options": "ls -1 {{nginx_conf_dir}}/sites-enabled || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable unmanaged sites", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Disable unmanaged sites", "with_items": "{{ enabled_sites.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_sites.keys()", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find config files", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find config files", "register": "config_files", "changed_when": false}, "module_options": "find {{nginx_conf_dir}}/conf.d -maxdepth 1 -type f -name '*.conf' -exec basename {} \\;", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unmanaged config files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Remove unmanaged config files", "with_items": "{{ config_files.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_configs.keys()", "notify": ["reload nginx"]}, "module_options": {"name": "{{nginx_conf_dir}}/conf.d/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml": {"py/object": "struct4.TaskFile", "name": "amplify.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if Amplify Agent is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Check if Amplify Agent is installed", "ignore_errors": true, "register": "amplify_agent_installed", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Amplify Agent script", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Download Amplify Agent script"}, "module_options": {"url": "{{ nginx_amplify_script_url }}", "dest": "{{ nginx_amplify_script_path }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run Amplify Agent install.sh script", "module": "command", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Run Amplify Agent install.sh script", "environment": {"API_KEY": "{{ nginx_amplify_api_key }}"}, "become": true, "become_user": "root", "become_method": "sudo"}, "module_options": "sh /tmp/install-amplify-agent.sh -y", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove installation script", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Remove installation script"}, "module_options": {"path": "{{ nginx_amplify_script_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Amplify Agent if already installed and update flag is enabled", "module": "package", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Update Amplify Agent if already installed and update flag is enabled", "when": "amplify_agent_installed.failed == false and nginx_amplify_update_agent == true", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "latest"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify Amplify agent is up and running", "module": "service", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Verify Amplify agent is up and running", "tags": ["service"]}, "module_options": {"name": "amplify-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the selinux python module", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Install the selinux python module", "when": "ansible_os_family == \"RedHat\" or ansible_os_family == \"Debian\""}, "module_options": "name={{ nginx_python_selinux_pkgs | default(omit)}} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set SELinux boolean to allow nginx to set rlimit", "module": "seboolean", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Set SELinux boolean to allow nginx to set rlimit"}, "module_options": "name=httpd_setrlimit state=yes persistent=yes", "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml": {"py/object": "struct4.TaskFile", "name": "ensure-dirs.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the directories for site specific configurations", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Create the directories for site specific configurations", "with_items": ["sites-available", "sites-enabled", "auth_basic", "conf.d", "conf.d/stream", "snippets", "modules-available", "modules-enabled"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item }}", "state": "directory", "owner": "{{ nginx_conf_user }}", "group": "{{ nginx_conf_group }}", "mode": "{{nginx_dir_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure log directory exist", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Ensure log directory exist"}, "module_options": {"path": "{{ nginx_log_dir }}", "state": "directory", "owner": "{{nginx_log_user}}", "group": "{{nginx_log_group}}", "mode": "{{nginx_log_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml": {"py/object": "struct4.TaskFile", "name": "nginx-official-repo.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure APT official nginx key", "module": "apt_key", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian'"}, "module_options": "url=http://nginx.org/keys/nginx_signing.key", "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and not nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository (mainline)", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/mainline/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure RPM official nginx key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure RPM official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'RedHat'"}, "module_options": "key=http://nginx.org/keys/nginx_signing.key", "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure YUM official nginx repository", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure YUM official nginx repository", "when": "ansible_os_family == 'RedHat'"}, "module_options": "src=nginx.repo.j2 dest=/etc/yum.repos.d/nginx.repo", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository", "module": "zypper_repository", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and not nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository (mainline)", "module": "zypper_repository", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/mainline/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml": {"py/object": "struct4.TaskFile", "name": "remove-unwanted.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove unwanted sites", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted sites", "with_nested": [["sites-enabled", "sites-available"], "{{ nginx_remove_sites }}"], "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item[0] }}/{{ item[1] }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted conf", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted conf", "with_items": "{{ nginx_remove_configs }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted snippets", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted snippets", "with_items": "{{ nginx_remove_snippets }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{ nginx_conf_dir }}/snippets/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted auth_basic_files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted auth_basic_files", "with_items": "{{ nginx_remove_auth_basic_files }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/auth_basic/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml": {"py/object": "struct4.TaskFile", "name": "configuration.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy the nginx configuration file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Copy the nginx configuration file", "notify": ["restart nginx"]}, "module_options": {"src": "nginx.conf.j2", "dest": "{{ nginx_conf_dir }}/nginx.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure auth_basic files created", "module": "template", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Ensure auth_basic files created", "with_dict": "{{ nginx_auth_basic_files }}"}, "module_options": {"src": "auth_basic.j2", "dest": "{{ nginx_conf_dir }}/auth_basic/{{ item.key }}", "mode": 488, "group": "{{ nginx_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for sites", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for sites", "with_dict": "{{ nginx_sites }}", "when": "item.key not in nginx_remove_sites", "notify": ["reload nginx"]}, "module_options": {"src": "{{ item.value.template | default(nginx_default_site_template) }}", "dest": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create links for sites-enabled", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for sites-enabled", "with_dict": "{{ nginx_sites }}", "when": "(item.key not in nginx_remove_sites) and (item.key not in nginx_disabled_sites)", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"]}, "module_options": {"state": "link", "src": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf", "dest": "{{ nginx_conf_dir }}/sites-enabled/{{ item.key }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for independent config file", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file", "with_dict": "{{ nginx_configs }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configuration snippets", "module": "template", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create configuration snippets", "with_dict": "{{ nginx_snippets }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/snippets/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for independent config file for streams", "module": "template", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file for streams", "with_dict": "{{ nginx_stream_configs }}", "notify": ["reload nginx"], "when": "nginx_stream_params or nginx_stream_configs"}, "module_options": {"src": "{{ item.value.template | default('config_stream.conf.j2') }}", "dest": "{{ nginx_conf_dir }}/conf.d/stream/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create links for modules-enabled", "module": "file", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for modules-enabled", "with_items": "{{ nginx_module_configs }}", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"], "when": ["(item not in nginx_remove_modules) and (item not in nginx_disabled_modules)", "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", "nginx_install_epel_repo"]}, "module_options": {"state": "link", "src": "/usr/share/nginx/modules/{{ item }}.conf", "dest": "{{ nginx_conf_dir }}/modules-enabled/{{ item }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml": {"py/object": "struct4.TaskFile", "name": "cloudflare_configuration.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv4", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv4", "register": "cloudflare_ipv4_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v4", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv6", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv6", "register": "cloudflare_ipv6_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v6", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create independent configuration for CloudFlare", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Create independent configuration for CloudFlare", "notify": ["reload nginx"]}, "module_options": {"src": "config_cloudflare.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ nginx_cloudflare_configuration_name }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"with_first_found": ["../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"], "when": "nginx_load_default_vars", "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "ansible_selinux and ansible_selinux.status == \"enabled\"", "tags": ["packages", "selinux", "nginx"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_official_repo == True", "tags": ["packages", "nginx"]}, "module_options": "nginx-official-repo.yml", "executable": "nginx-official-repo.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_installation_type == \"packages\"", "tags": ["packages", "nginx"]}, "module_options": "installation.packages.yml", "executable": "installation.packages.yml", "executable_type": "TaskFile", "fqcn": "installation.packages.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "ensure-dirs.yml", "executable": "ensure-dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "not nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-defaults.yml", "executable": "remove-defaults.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-extras.yml", "executable": "remove-extras.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "remove-unwanted.yml", "executable": "remove-unwanted.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "configuration.yml", "executable": "configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_set_real_ip_from_cloudflare == True", "tags": ["configuration", "nginx"]}, "module_options": "cloudflare_configuration.yml", "executable": "cloudflare_configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_amplify == true and (ansible_distribution in ['RedHat', 'CentOS', 'Debian', 'Amazon', 'Ubuntu'])", "tags": ["amplify", "nginx"]}, "module_options": "amplify.yml", "executable": "amplify.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the nginx service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"name": "Start the nginx service", "when": "nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == \"on\"", "tags": ["service", "nginx"]}, "module_options": "name={{ nginx_service_name }} state={{nginx_start_service | ternary('started', 'stopped')}} enabled={{nginx_start_at_boot}}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}}, "role_dict": {"jdauphant.nginx": {"py/object": "struct4.Role", "name": "jdauphant.nginx", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx", "fqcn": "jdauphant.nginx", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "installation.packages.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the epel packages for EL distributions", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the epel packages for EL distributions", "when": "nginx_is_el|bool and nginx_install_epel_repo|bool"}, "module_options": "name=epel-release state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the nginx packages from official repo for EL distributions", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages from official repo for EL distributions", "when": "nginx_is_el|bool and nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present enablerepo=\"nginx\"", "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the nginx packages for all other distributions", "module": "package", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/installation.packages.yml", "options": {"name": "Install the nginx packages for all other distributions", "environment": "{{ nginx_env }}", "when": "not nginx_is_el|bool or not nginx_official_repo"}, "module_options": "name=\"{{ nginx_pkgs }}\" state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "remove-defaults.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Disable the default site", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable the default site (on newer nginx versions)", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Disable the default site (on newer nginx versions)", "notify": ["reload nginx"], "when": "'default' not in nginx_sites.keys()\n"}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove the default configuration", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-defaults.yml", "options": {"name": "Remove the default configuration", "when": "'default' not in nginx_configs.keys()\n", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/default.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "remove-extras.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "tasks": [{"py/object": "struct4.Task", "name": "Find enabled sites", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find enabled sites", "register": "enabled_sites", "changed_when": false}, "module_options": "ls -1 {{nginx_conf_dir}}/sites-enabled || true", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disable unmanaged sites", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Disable unmanaged sites", "with_items": "{{ enabled_sites.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_sites.keys()", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/sites-enabled/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find config files", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Find config files", "register": "config_files", "changed_when": false}, "module_options": "find {{nginx_conf_dir}}/conf.d -maxdepth 1 -type f -name '*.conf' -exec basename {} \\;", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unmanaged config files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-extras.yml", "options": {"name": "Remove unmanaged config files", "with_items": "{{ config_files.stdout_lines | default([]) }}", "when": "item[:-5] not in nginx_configs.keys()", "notify": ["reload nginx"]}, "module_options": {"name": "{{nginx_conf_dir}}/conf.d/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "amplify.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if Amplify Agent is installed", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Check if Amplify Agent is installed", "ignore_errors": true, "register": "amplify_agent_installed", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Amplify Agent script", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Download Amplify Agent script"}, "module_options": {"url": "{{ nginx_amplify_script_url }}", "dest": "{{ nginx_amplify_script_path }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run Amplify Agent install.sh script", "module": "command", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Run Amplify Agent install.sh script", "environment": {"API_KEY": "{{ nginx_amplify_api_key }}"}, "become": true, "become_user": "root", "become_method": "sudo"}, "module_options": "sh /tmp/install-amplify-agent.sh -y", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove installation script", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Remove installation script"}, "module_options": {"path": "{{ nginx_amplify_script_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Amplify Agent if already installed and update flag is enabled", "module": "package", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Update Amplify Agent if already installed and update flag is enabled", "when": "amplify_agent_installed.failed == false and nginx_amplify_update_agent == true", "tags": ["packages"]}, "module_options": {"name": "nginx-amplify-agent", "state": "latest"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify Amplify agent is up and running", "module": "service", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/amplify.yml", "options": {"name": "Verify Amplify agent is up and running", "tags": ["service"]}, "module_options": {"name": "amplify-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install the selinux python module", "module": "package", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Install the selinux python module", "when": "ansible_os_family == \"RedHat\" or ansible_os_family == \"Debian\""}, "module_options": "name={{ nginx_python_selinux_pkgs | default(omit)}} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set SELinux boolean to allow nginx to set rlimit", "module": "seboolean", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/selinux.yml", "options": {"name": "Set SELinux boolean to allow nginx to set rlimit"}, "module_options": "name=httpd_setrlimit state=yes persistent=yes", "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "ensure-dirs.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the directories for site specific configurations", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Create the directories for site specific configurations", "with_items": ["sites-available", "sites-enabled", "auth_basic", "conf.d", "conf.d/stream", "snippets", "modules-available", "modules-enabled"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item }}", "state": "directory", "owner": "{{ nginx_conf_user }}", "group": "{{ nginx_conf_group }}", "mode": "{{nginx_dir_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure log directory exist", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/ensure-dirs.yml", "options": {"name": "Ensure log directory exist"}, "module_options": {"path": "{{ nginx_log_dir }}", "state": "directory", "owner": "{{nginx_log_user}}", "group": "{{nginx_log_group}}", "mode": "{{nginx_log_perm}}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nginx-official-repo.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure APT official nginx key", "module": "apt_key", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian'"}, "module_options": "url=http://nginx.org/keys/nginx_signing.key", "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and not nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APT official nginx repository (mainline)", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure APT official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'Debian' and nginx_official_repo_mainline"}, "module_options": "repo=\"deb http://nginx.org/packages/mainline/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release }} nginx\"", "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure RPM official nginx key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure RPM official nginx key", "environment": "{{ nginx_env }}", "when": "ansible_os_family == 'RedHat'"}, "module_options": "key=http://nginx.org/keys/nginx_signing.key", "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure YUM official nginx repository", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure YUM official nginx repository", "when": "ansible_os_family == 'RedHat'"}, "module_options": "src=nginx.repo.j2 dest=/etc/yum.repos.d/nginx.repo", "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository", "module": "zypper_repository", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and not nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure zypper official nginx repository (mainline)", "module": "zypper_repository", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/nginx-official-repo.yml", "options": {"name": "Ensure zypper official nginx repository (mainline)", "environment": "{{ nginx_env }}", "when": "ansible_distribution == 'SLES' and ansible_distribution_version == '12' and nginx_official_repo_mainline"}, "module_options": "repo=\"http://nginx.org/packages/mainline/sles/12\" name=\"nginx\" disable_gpg_check=yes", "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "remove-unwanted.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove unwanted sites", "module": "file", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted sites", "with_nested": [["sites-enabled", "sites-available"], "{{ nginx_remove_sites }}"], "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/{{ item[0] }}/{{ item[1] }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted conf", "module": "file", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted conf", "with_items": "{{ nginx_remove_configs }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/conf.d/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted snippets", "module": "file", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted snippets", "with_items": "{{ nginx_remove_snippets }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{ nginx_conf_dir }}/snippets/{{ item }}.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove unwanted auth_basic_files", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/remove-unwanted.yml", "options": {"name": "Remove unwanted auth_basic_files", "with_items": "{{ nginx_remove_auth_basic_files }}", "notify": ["reload nginx"]}, "module_options": {"path": "{{nginx_conf_dir}}/auth_basic/{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configuration.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy the nginx configuration file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Copy the nginx configuration file", "notify": ["restart nginx"]}, "module_options": {"src": "nginx.conf.j2", "dest": "{{ nginx_conf_dir }}/nginx.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure auth_basic files created", "module": "template", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Ensure auth_basic files created", "with_dict": "{{ nginx_auth_basic_files }}"}, "module_options": {"src": "auth_basic.j2", "dest": "{{ nginx_conf_dir }}/auth_basic/{{ item.key }}", "mode": 488, "group": "{{ nginx_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for sites", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for sites", "with_dict": "{{ nginx_sites }}", "when": "item.key not in nginx_remove_sites", "notify": ["reload nginx"]}, "module_options": {"src": "{{ item.value.template | default(nginx_default_site_template) }}", "dest": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create links for sites-enabled", "module": "file", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for sites-enabled", "with_dict": "{{ nginx_sites }}", "when": "(item.key not in nginx_remove_sites) and (item.key not in nginx_disabled_sites)", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"]}, "module_options": {"state": "link", "src": "{{ nginx_conf_dir }}/sites-available/{{ item.key }}.conf", "dest": "{{ nginx_conf_dir }}/sites-enabled/{{ item.key }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for independent config file", "module": "template", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file", "with_dict": "{{ nginx_configs }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create configuration snippets", "module": "template", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create configuration snippets", "with_dict": "{{ nginx_snippets }}", "notify": ["reload nginx"]}, "module_options": {"src": "config.conf.j2", "dest": "{{ nginx_conf_dir }}/snippets/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the configurations for independent config file for streams", "module": "template", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create the configurations for independent config file for streams", "with_dict": "{{ nginx_stream_configs }}", "notify": ["reload nginx"], "when": "nginx_stream_params or nginx_stream_configs"}, "module_options": {"src": "{{ item.value.template | default('config_stream.conf.j2') }}", "dest": "{{ nginx_conf_dir }}/conf.d/stream/{{ item.key }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create links for modules-enabled", "module": "file", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/configuration.yml", "options": {"name": "Create links for modules-enabled", "with_items": "{{ nginx_module_configs }}", "ignore_errors": "{{ ansible_check_mode }}", "notify": ["reload nginx"], "when": ["(item not in nginx_remove_modules) and (item not in nginx_disabled_modules)", "ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'", "nginx_install_epel_repo"]}, "module_options": {"state": "link", "src": "/usr/share/nginx/modules/{{ item }}.conf", "dest": "{{ nginx_conf_dir }}/modules-enabled/{{ item }}.conf"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "cloudflare_configuration.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv4", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv4", "register": "cloudflare_ipv4_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v4", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of CloudFlare IPv6", "module": "uri", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Get list of CloudFlare IPv6", "register": "cloudflare_ipv6_list", "tags": ["configuration", "nginx"]}, "module_options": {"url": "https://www.cloudflare.com/ips-v6", "return_content": true}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create independent configuration for CloudFlare", "module": "template", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/cloudflare_configuration.yml", "options": {"name": "Create independent configuration for CloudFlare", "notify": ["reload nginx"]}, "module_options": {"src": "config_cloudflare.conf.j2", "dest": "{{ nginx_conf_dir }}/conf.d/{{ nginx_cloudflare_configuration_name }}.conf"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"with_first_found": ["../vars/{{ ansible_os_family }}.yml", "../vars/empty.yml"], "when": "nginx_load_default_vars", "tags": ["always"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "ansible_selinux and ansible_selinux.status == \"enabled\"", "tags": ["packages", "selinux", "nginx"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_official_repo == True", "tags": ["packages", "nginx"]}, "module_options": "nginx-official-repo.yml", "executable": "nginx-official-repo.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_installation_type == \"packages\"", "tags": ["packages", "nginx"]}, "module_options": "installation.packages.yml", "executable": "installation.packages.yml", "executable_type": "TaskFile", "fqcn": "installation.packages.yml", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "ensure-dirs.yml", "executable": "ensure-dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "not nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-defaults.yml", "executable": "remove-defaults.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_keep_only_specified", "tags": ["configuration", "nginx"]}, "module_options": "remove-extras.yml", "executable": "remove-extras.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "remove-unwanted.yml", "executable": "remove-unwanted.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"tags": ["configuration", "nginx"]}, "module_options": "configuration.yml", "executable": "configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_set_real_ip_from_cloudflare == True", "tags": ["configuration", "nginx"]}, "module_options": "cloudflare_configuration.yml", "executable": "cloudflare_configuration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"when": "nginx_amplify == true and (ansible_distribution in ['RedHat', 'CentOS', 'Debian', 'Amazon', 'Ubuntu'])", "tags": ["amplify", "nginx"]}, "module_options": "amplify.yml", "executable": "amplify.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the nginx service", "module": "service", "index": 11, "defined_in": "./role-test/testdata/jdauphant-nginx/jdauphant.nginx/tasks/main.yml", "options": {"name": "Start the nginx service", "when": "nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == \"on\"", "tags": ["service", "nginx"]}, "module_options": "name={{ nginx_service_name }} state={{nginx_start_service | ternary('started', 'stopped')}} enabled={{nginx_start_at_boot}}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "jdauphant.nginx", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}