{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-postgresql", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.postgresql", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql", "fqcn": "geerlingguy.postgresql", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "initialize.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set PostgreSQL environment variables.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Set PostgreSQL environment variables.", "notify": "restart postgresql"}, "module_options": {"src": "postgres.sh.j2", "dest": "/etc/profile.d/postgres.sh", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL data directory exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL data directory exists."}, "module_options": {"path": "{{ postgresql_data_dir }}", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "state": "directory", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PostgreSQL database is initialized.", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Check if PostgreSQL database is initialized.", "register": "pgdata_dir_version"}, "module_options": {"path": "{{ postgresql_data_dir }}/PG_VERSION"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL database is initialized.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL database is initialized.", "when": "not pgdata_dir_version.stat.exists", "become": true, "become_user": "{{ postgresql_user }}", "vars": {"ansible_ssh_pipelining": true}}, "module_options": "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure global settings.", "module": "lineinfile", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure global settings.", "with_items": "{{ postgresql_global_config_options }}", "notify": "restart postgresql"}, "module_options": {"dest": "{{ postgresql_config_path }}/postgresql.conf", "regexp": "^#?{{ item.option }}.+$", "line": "{{ item.option }} = '{{ item.value }}'", "state": "{{ item.state | default('present') }}", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure host based authentication (if entries are configured).", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure host based authentication (if entries are configured).", "notify": "restart postgresql", "when": "postgresql_hba_entries | length > 0"}, "module_options": {"src": "pg_hba.conf.j2", "dest": "{{ postgresql_config_path }}/pg_hba.conf", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL unix socket dirs exist.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Ensure PostgreSQL unix socket dirs exist.", "with_items": "{{ postgresql_unix_socket_directories }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": "{{ postgresql_unix_socket_directories_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "users.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml", "options": {"name": "Ensure PostgreSQL users are present.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "databases.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL databases are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml", "options": {"name": "Ensure PostgreSQL databases are present.", "postgresql_db": {"name": "{{ item.name }}", "lc_collate": "{{ item.lc_collate | default('en_US.UTF-8') }}", "lc_ctype": "{{ item.lc_ctype | default('en_US.UTF-8') }}", "encoding": "{{ item.encoding | default('UTF-8') }}", "template": "{{ item.template | default('template0') }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "owner": "{{ item.owner | default(postgresql_user) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_databases }}", "become": true, "become_user": "{{ postgresql_user }}"}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure all configured locales are present.", "module": "locale_gen", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure all configured locales are present.", "with_items": "{{ postgresql_locales }}", "register": "locale_gen_result"}, "module_options": "name={{ item }} state=present", "executable": "locale_gen", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force-restart PostgreSQL after new locales are generated.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Force-restart PostgreSQL after new locales are generated.", "when": "locale_gen_result.changed"}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "variables.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables (Debian).", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (RedHat).", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (RedHat).", "when": ["ansible_os_family == 'RedHat'", "ansible_distribution != 'Fedora'", "ansible_distribution != 'Amazon'"]}, "module_options": "{{ ansible_os_family }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (Amazon).", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Amazon).", "when": "ansible_distribution == 'Amazon'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (Fedora).", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Fedora).", "when": "ansible_distribution == 'Fedora'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_packages.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_packages.", "when": "postgresql_packages is not defined"}, "module_options": {"postgresql_packages": "{{ __postgresql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_version.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_version.", "when": "postgresql_version is not defined"}, "module_options": {"postgresql_version": "{{ __postgresql_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_daemon.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_daemon.", "when": "postgresql_daemon is not defined"}, "module_options": {"postgresql_daemon": "{{ __postgresql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_data_dir.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_data_dir.", "when": "postgresql_data_dir is not defined"}, "module_options": {"postgresql_data_dir": "{{ __postgresql_data_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_bin_path.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_bin_path.", "when": "postgresql_bin_path is not defined"}, "module_options": {"postgresql_bin_path": "{{ __postgresql_bin_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_config_path.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_config_path.", "when": "postgresql_config_path is not defined"}, "module_options": {"postgresql_config_path": "{{ __postgresql_config_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_unix_socket_directories_mode.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_unix_socket_directories_mode.", "when": "postgresql_unix_socket_directories_mode is not defined"}, "module_options": {"postgresql_unix_socket_directories_mode": "{{ __postgresql_unix_socket_directories_mode | default('02775') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "users_props.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are configured correctly.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml", "options": {"name": "Ensure PostgreSQL users are configured correctly.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "encrypted": "{{ item.encrypted | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "role_attr_flags": "{{ item.role_attr_flags | default(omit) }}", "db": "{{ item.db | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "initialize.yml", "executable": "initialize.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"name": "Ensure PostgreSQL is started and enabled on boot."}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "{{ postgresql_service_state }}", "enabled": "{{ postgresql_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users_props.yml", "executable": "users_props.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}", "exclude": "python-unversioned-command"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set PostgreSQL environment variables.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Set PostgreSQL environment variables.", "notify": "restart postgresql"}, "module_options": {"src": "postgres.sh.j2", "dest": "/etc/profile.d/postgres.sh", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL data directory exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL data directory exists."}, "module_options": {"path": "{{ postgresql_data_dir }}", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "state": "directory", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check if PostgreSQL database is initialized.", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Check if PostgreSQL database is initialized.", "register": "pgdata_dir_version"}, "module_options": {"path": "{{ postgresql_data_dir }}/PG_VERSION"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL database is initialized.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL database is initialized.", "when": "not pgdata_dir_version.stat.exists", "become": true, "become_user": "{{ postgresql_user }}", "vars": {"ansible_ssh_pipelining": true}}, "module_options": "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Configure global settings.", "module": "lineinfile", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure global settings.", "with_items": "{{ postgresql_global_config_options }}", "notify": "restart postgresql"}, "module_options": {"dest": "{{ postgresql_config_path }}/postgresql.conf", "regexp": "^#?{{ item.option }}.+$", "line": "{{ item.option }} = '{{ item.value }}'", "state": "{{ item.state | default('present') }}", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Configure host based authentication (if entries are configured).", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure host based authentication (if entries are configured).", "notify": "restart postgresql", "when": "postgresql_hba_entries | length > 0"}, "module_options": {"src": "pg_hba.conf.j2", "dest": "{{ postgresql_config_path }}/pg_hba.conf", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL unix socket dirs exist.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Ensure PostgreSQL unix socket dirs exist.", "with_items": "{{ postgresql_unix_socket_directories }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": "{{ postgresql_unix_socket_directories_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml", "options": {"name": "Ensure PostgreSQL users are present.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL databases are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml", "options": {"name": "Ensure PostgreSQL databases are present.", "postgresql_db": {"name": "{{ item.name }}", "lc_collate": "{{ item.lc_collate | default('en_US.UTF-8') }}", "lc_ctype": "{{ item.lc_ctype | default('en_US.UTF-8') }}", "encoding": "{{ item.encoding | default('UTF-8') }}", "template": "{{ item.template | default('template0') }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "owner": "{{ item.owner | default(postgresql_user) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_databases }}", "become": true, "become_user": "{{ postgresql_user }}"}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure all configured locales are present.", "module": "locale_gen", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure all configured locales are present.", "with_items": "{{ postgresql_locales }}", "register": "locale_gen_result"}, "module_options": "name={{ item }} state=present", "executable": "locale_gen", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Force-restart PostgreSQL after new locales are generated.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Force-restart PostgreSQL after new locales are generated.", "when": "locale_gen_result.changed"}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables (Debian).", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Include OS-specific variables (RedHat).", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (RedHat).", "when": ["ansible_os_family == 'RedHat'", "ansible_distribution != 'Fedora'", "ansible_distribution != 'Amazon'"]}, "module_options": "{{ ansible_os_family }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Include OS-specific variables (Amazon).", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Amazon).", "when": "ansible_distribution == 'Amazon'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Include OS-specific variables (Fedora).", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Fedora).", "when": "ansible_distribution == 'Fedora'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Define postgresql_packages.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_packages.", "when": "postgresql_packages is not defined"}, "module_options": {"postgresql_packages": "{{ __postgresql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Define postgresql_version.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_version.", "when": "postgresql_version is not defined"}, "module_options": {"postgresql_version": "{{ __postgresql_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Define postgresql_daemon.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_daemon.", "when": "postgresql_daemon is not defined"}, "module_options": {"postgresql_daemon": "{{ __postgresql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Define postgresql_data_dir.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_data_dir.", "when": "postgresql_data_dir is not defined"}, "module_options": {"postgresql_data_dir": "{{ __postgresql_data_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Define postgresql_bin_path.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_bin_path.", "when": "postgresql_bin_path is not defined"}, "module_options": {"postgresql_bin_path": "{{ __postgresql_bin_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Define postgresql_config_path.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_config_path.", "when": "postgresql_config_path is not defined"}, "module_options": {"postgresql_config_path": "{{ __postgresql_config_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Define postgresql_unix_socket_directories_mode.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_unix_socket_directories_mode.", "when": "postgresql_unix_socket_directories_mode is not defined"}, "module_options": {"postgresql_unix_socket_directories_mode": "{{ __postgresql_unix_socket_directories_mode | default('02775') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are configured correctly.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml", "options": {"name": "Ensure PostgreSQL users are configured correctly.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "encrypted": "{{ item.encrypted | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "role_attr_flags": "{{ item.role_attr_flags | default(omit) }}", "db": "{{ item.db | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "initialize.yml", "executable": "initialize.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"name": "Ensure PostgreSQL is started and enabled on boot."}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "{{ postgresql_service_state }}", "enabled": "{{ postgresql_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users_props.yml", "executable": "users_props.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}", "exclude": "python-unversioned-command"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml": {"py/object": "struct4.TaskFile", "name": "initialize.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set PostgreSQL environment variables.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Set PostgreSQL environment variables.", "notify": "restart postgresql"}, "module_options": {"src": "postgres.sh.j2", "dest": "/etc/profile.d/postgres.sh", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL data directory exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL data directory exists."}, "module_options": {"path": "{{ postgresql_data_dir }}", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "state": "directory", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PostgreSQL database is initialized.", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Check if PostgreSQL database is initialized.", "register": "pgdata_dir_version"}, "module_options": {"path": "{{ postgresql_data_dir }}/PG_VERSION"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL database is initialized.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL database is initialized.", "when": "not pgdata_dir_version.stat.exists", "become": true, "become_user": "{{ postgresql_user }}", "vars": {"ansible_ssh_pipelining": true}}, "module_options": "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure global settings.", "module": "lineinfile", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure global settings.", "with_items": "{{ postgresql_global_config_options }}", "notify": "restart postgresql"}, "module_options": {"dest": "{{ postgresql_config_path }}/postgresql.conf", "regexp": "^#?{{ item.option }}.+$", "line": "{{ item.option }} = '{{ item.value }}'", "state": "{{ item.state | default('present') }}", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure host based authentication (if entries are configured).", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure host based authentication (if entries are configured).", "notify": "restart postgresql", "when": "postgresql_hba_entries | length > 0"}, "module_options": {"src": "pg_hba.conf.j2", "dest": "{{ postgresql_config_path }}/pg_hba.conf", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL unix socket dirs exist.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Ensure PostgreSQL unix socket dirs exist.", "with_items": "{{ postgresql_unix_socket_directories }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": "{{ postgresql_unix_socket_directories_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml": {"py/object": "struct4.TaskFile", "name": "users.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml", "options": {"name": "Ensure PostgreSQL users are present.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml": {"py/object": "struct4.TaskFile", "name": "databases.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL databases are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml", "options": {"name": "Ensure PostgreSQL databases are present.", "postgresql_db": {"name": "{{ item.name }}", "lc_collate": "{{ item.lc_collate | default('en_US.UTF-8') }}", "lc_ctype": "{{ item.lc_ctype | default('en_US.UTF-8') }}", "encoding": "{{ item.encoding | default('UTF-8') }}", "template": "{{ item.template | default('template0') }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "owner": "{{ item.owner | default(postgresql_user) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_databases }}", "become": true, "become_user": "{{ postgresql_user }}"}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml": {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure all configured locales are present.", "module": "locale_gen", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure all configured locales are present.", "with_items": "{{ postgresql_locales }}", "register": "locale_gen_result"}, "module_options": "name={{ item }} state=present", "executable": "locale_gen", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force-restart PostgreSQL after new locales are generated.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Force-restart PostgreSQL after new locales are generated.", "when": "locale_gen_result.changed"}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml": {"py/object": "struct4.TaskFile", "name": "variables.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables (Debian).", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (RedHat).", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (RedHat).", "when": ["ansible_os_family == 'RedHat'", "ansible_distribution != 'Fedora'", "ansible_distribution != 'Amazon'"]}, "module_options": "{{ ansible_os_family }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (Amazon).", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Amazon).", "when": "ansible_distribution == 'Amazon'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (Fedora).", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Fedora).", "when": "ansible_distribution == 'Fedora'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_packages.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_packages.", "when": "postgresql_packages is not defined"}, "module_options": {"postgresql_packages": "{{ __postgresql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_version.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_version.", "when": "postgresql_version is not defined"}, "module_options": {"postgresql_version": "{{ __postgresql_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_daemon.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_daemon.", "when": "postgresql_daemon is not defined"}, "module_options": {"postgresql_daemon": "{{ __postgresql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_data_dir.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_data_dir.", "when": "postgresql_data_dir is not defined"}, "module_options": {"postgresql_data_dir": "{{ __postgresql_data_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_bin_path.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_bin_path.", "when": "postgresql_bin_path is not defined"}, "module_options": {"postgresql_bin_path": "{{ __postgresql_bin_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_config_path.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_config_path.", "when": "postgresql_config_path is not defined"}, "module_options": {"postgresql_config_path": "{{ __postgresql_config_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_unix_socket_directories_mode.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_unix_socket_directories_mode.", "when": "postgresql_unix_socket_directories_mode is not defined"}, "module_options": {"postgresql_unix_socket_directories_mode": "{{ __postgresql_unix_socket_directories_mode | default('02775') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml": {"py/object": "struct4.TaskFile", "name": "users_props.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are configured correctly.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml", "options": {"name": "Ensure PostgreSQL users are configured correctly.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "encrypted": "{{ item.encrypted | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "role_attr_flags": "{{ item.role_attr_flags | default(omit) }}", "db": "{{ item.db | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "initialize.yml", "executable": "initialize.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"name": "Ensure PostgreSQL is started and enabled on boot."}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "{{ postgresql_service_state }}", "enabled": "{{ postgresql_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users_props.yml", "executable": "users_props.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}", "exclude": "python-unversioned-command"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.postgresql": {"py/object": "struct4.Role", "name": "geerlingguy.postgresql", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql", "fqcn": "geerlingguy.postgresql", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "initialize.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set PostgreSQL environment variables.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Set PostgreSQL environment variables.", "notify": "restart postgresql"}, "module_options": {"src": "postgres.sh.j2", "dest": "/etc/profile.d/postgres.sh", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL data directory exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL data directory exists."}, "module_options": {"path": "{{ postgresql_data_dir }}", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "state": "directory", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PostgreSQL database is initialized.", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Check if PostgreSQL database is initialized.", "register": "pgdata_dir_version"}, "module_options": {"path": "{{ postgresql_data_dir }}/PG_VERSION"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL database is initialized.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/initialize.yml", "options": {"name": "Ensure PostgreSQL database is initialized.", "when": "not pgdata_dir_version.stat.exists", "become": true, "become_user": "{{ postgresql_user }}", "vars": {"ansible_ssh_pipelining": true}}, "module_options": "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure global settings.", "module": "lineinfile", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure global settings.", "with_items": "{{ postgresql_global_config_options }}", "notify": "restart postgresql"}, "module_options": {"dest": "{{ postgresql_config_path }}/postgresql.conf", "regexp": "^#?{{ item.option }}.+$", "line": "{{ item.option }} = '{{ item.value }}'", "state": "{{ item.state | default('present') }}", "mode": 420}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure host based authentication (if entries are configured).", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Configure host based authentication (if entries are configured).", "notify": "restart postgresql", "when": "postgresql_hba_entries | length > 0"}, "module_options": {"src": "pg_hba.conf.j2", "dest": "{{ postgresql_config_path }}/pg_hba.conf", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL unix socket dirs exist.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/configure.yml", "options": {"name": "Ensure PostgreSQL unix socket dirs exist.", "with_items": "{{ postgresql_unix_socket_directories }}"}, "module_options": {"path": "{{ item }}", "state": "directory", "owner": "{{ postgresql_user }}", "group": "{{ postgresql_group }}", "mode": "{{ postgresql_unix_socket_directories_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "users.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users.yml", "options": {"name": "Ensure PostgreSQL users are present.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "databases.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL databases are present.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/databases.yml", "options": {"name": "Ensure PostgreSQL databases are present.", "postgresql_db": {"name": "{{ item.name }}", "lc_collate": "{{ item.lc_collate | default('en_US.UTF-8') }}", "lc_ctype": "{{ item.lc_ctype | default('en_US.UTF-8') }}", "encoding": "{{ item.encoding | default('UTF-8') }}", "template": "{{ item.template | default('template0') }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "owner": "{{ item.owner | default(postgresql_user) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_databases }}", "become": true, "become_user": "{{ postgresql_user }}"}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure all configured locales are present.", "module": "locale_gen", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Ensure all configured locales are present.", "with_items": "{{ postgresql_locales }}", "register": "locale_gen_result"}, "module_options": "name={{ item }} state=present", "executable": "locale_gen", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force-restart PostgreSQL after new locales are generated.", "module": "service", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-Debian.yml", "options": {"name": "Force-restart PostgreSQL after new locales are generated.", "when": "locale_gen_result.changed"}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "restarted"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "variables.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables (Debian).", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (RedHat).", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (RedHat).", "when": ["ansible_os_family == 'RedHat'", "ansible_distribution != 'Fedora'", "ansible_distribution != 'Amazon'"]}, "module_options": "{{ ansible_os_family }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (Amazon).", "module": "include_vars", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Amazon).", "when": "ansible_distribution == 'Amazon'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables (Fedora).", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Include OS-specific variables (Fedora).", "when": "ansible_distribution == 'Fedora'"}, "module_options": "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_packages.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_packages.", "when": "postgresql_packages is not defined"}, "module_options": {"postgresql_packages": "{{ __postgresql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_version.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_version.", "when": "postgresql_version is not defined"}, "module_options": {"postgresql_version": "{{ __postgresql_version }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_daemon.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_daemon.", "when": "postgresql_daemon is not defined"}, "module_options": {"postgresql_daemon": "{{ __postgresql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_data_dir.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_data_dir.", "when": "postgresql_data_dir is not defined"}, "module_options": {"postgresql_data_dir": "{{ __postgresql_data_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_bin_path.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_bin_path.", "when": "postgresql_bin_path is not defined"}, "module_options": {"postgresql_bin_path": "{{ __postgresql_bin_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_config_path.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_config_path.", "when": "postgresql_config_path is not defined"}, "module_options": {"postgresql_config_path": "{{ __postgresql_config_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define postgresql_unix_socket_directories_mode.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/variables.yml", "options": {"name": "Define postgresql_unix_socket_directories_mode.", "when": "postgresql_unix_socket_directories_mode is not defined"}, "module_options": {"postgresql_unix_socket_directories_mode": "{{ __postgresql_unix_socket_directories_mode | default('02775') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "users_props.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL users are configured correctly.", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/users_props.yml", "options": {"name": "Ensure PostgreSQL users are configured correctly.", "postgresql_user": {"name": "{{ item.name }}", "password": "{{ item.password | default(omit) }}", "encrypted": "{{ item.encrypted | default(omit) }}", "priv": "{{ item.priv | default(omit) }}", "role_attr_flags": "{{ item.role_attr_flags | default(omit) }}", "db": "{{ item.db | default(omit) }}", "login_host": "{{ item.login_host | default('localhost') }}", "login_password": "{{ item.login_password | default(omit) }}", "login_user": "{{ item.login_user | default(postgresql_user) }}", "login_unix_socket": "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}", "port": "{{ item.port | default(omit) }}", "state": "{{ item.state | default('present') }}"}, "with_items": "{{ postgresql_users }}", "no_log": "{{ postgres_users_no_log }}", "become": true, "become_user": "{{ postgresql_user }}", "environment": {"PGOPTIONS": "{{ (postgresql_auth_method == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"}}, "module_options": {"ansible_ssh_pipelining": true}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "initialize.yml", "executable": "initialize.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL is started and enabled on boot.", "module": "service", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {"name": "Ensure PostgreSQL is started and enabled on boot."}, "module_options": {"name": "{{ postgresql_daemon }}", "state": "{{ postgresql_service_state }}", "enabled": "{{ postgresql_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/main.yml", "options": {}, "module_options": "users_props.yml", "executable": "users_props.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PostgreSQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL packages are installed."}, "module_options": {"name": "{{ postgresql_packages }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}", "exclude": "python-unversioned-command"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PostgreSQL Python libraries are installed.", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-postgresql/geerlingguy.postgresql/tasks/setup-RedHat.yml", "options": {"name": "Ensure PostgreSQL Python libraries are installed."}, "module_options": {"name": "{{ postgresql_python_library }}", "state": "present", "enablerepo": "{{ postgresql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "geerlingguy.postgresql", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}