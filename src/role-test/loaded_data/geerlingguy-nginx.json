{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-nginx", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.nginx", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx", "fqcn": "geerlingguy.nginx", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "setup-FreeBSD.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update pkg cache.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Update pkg cache.", "environment": {"ASSUME_ALWAYS_YES": "yes"}, "tags": ["skip_ansible_lint"]}, "module_options": "pkg update -f", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Update apt cache.", "changed_when": false}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present", "default_release": "{{ nginx_default_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Ubuntu.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dirmngr is installed (gnupg dependency).", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure dirmngr is installed (gnupg dependency)."}, "module_options": {"name": "dirmngr", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add PPA for Nginx (if configured).", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Add PPA for Nginx (if configured).", "register": "nginx_ppa_added", "when": "nginx_ppa_use | bool"}, "module_options": {"repo": "ppa:nginx/{{ nginx_ppa_version }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx will reinstall if the PPA was just added.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure nginx will reinstall if the PPA was just added.", "when": "nginx_ppa_added is changed", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "{{ nginx_package_name }}", "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-OpenBSD.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "openbsd_pkg", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "openbsd_pkg", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Archlinux.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "vhosts.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove default nginx vhost config file (if configured).", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove default nginx vhost config file (if configured).", "when": "nginx_remove_default_vhost | bool", "notify": "restart nginx"}, "module_options": {"path": "{{ nginx_default_vhost_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx_vhost_path exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Ensure nginx_vhost_path exists.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add managed vhost config files.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Add managed vhost config files.", "when": "item.state|default('present') != 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"src": "{{ item.template|default(nginx_vhost_template) }}", "dest": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "force": true, "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove managed vhost config files.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove managed vhost config files.", "when": "item.state|default('present') == 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove legacy vhosts.conf file.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove legacy vhosts.conf file.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}/vhosts.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define nginx_user.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Define nginx_user.", "when": "nginx_user is not defined"}, "module_options": {"nginx_user": "{{ __nginx_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_distribution == 'Ubuntu'"}, "module_options": "setup-Ubuntu.yml", "executable": "setup-Ubuntu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'FreeBSD'"}, "module_options": "setup-FreeBSD.yml", "executable": "setup-FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'OpenBSD'"}, "module_options": "setup-OpenBSD.yml", "executable": "setup-OpenBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy nginx configuration in place.", "module": "template", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Copy nginx configuration in place.", "notify": ["reload nginx"]}, "module_options": {"src": "{{ nginx_conf_template }}", "dest": "{{ nginx_conf_file_path }}", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx service is running as configured.", "module": "service", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Ensure nginx service is running as configured."}, "module_options": {"name": "nginx", "state": "{{ nginx_service_state }}", "enabled": "{{ nginx_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Enable nginx repo.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Enable nginx repo.", "when": "nginx_yum_repo_enabled | bool"}, "module_options": {"src": "nginx.repo.j2", "dest": "/etc/yum.repos.d/nginx.repo", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Update pkg cache.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Update pkg cache.", "environment": {"ASSUME_ALWAYS_YES": "yes"}, "tags": ["skip_ansible_lint"]}, "module_options": "pkg update -f", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Update apt cache.", "changed_when": false}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present", "default_release": "{{ nginx_default_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure dirmngr is installed (gnupg dependency).", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure dirmngr is installed (gnupg dependency)."}, "module_options": {"name": "dirmngr", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add PPA for Nginx (if configured).", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Add PPA for Nginx (if configured).", "register": "nginx_ppa_added", "when": "nginx_ppa_use | bool"}, "module_options": {"repo": "ppa:nginx/{{ nginx_ppa_version }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure nginx will reinstall if the PPA was just added.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure nginx will reinstall if the PPA was just added.", "when": "nginx_ppa_added is changed", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "{{ nginx_package_name }}", "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "openbsd_pkg", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "openbsd_pkg", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Remove default nginx vhost config file (if configured).", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove default nginx vhost config file (if configured).", "when": "nginx_remove_default_vhost | bool", "notify": "restart nginx"}, "module_options": {"path": "{{ nginx_default_vhost_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure nginx_vhost_path exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Ensure nginx_vhost_path exists.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add managed vhost config files.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Add managed vhost config files.", "when": "item.state|default('present') != 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"src": "{{ item.template|default(nginx_vhost_template) }}", "dest": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "force": true, "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove managed vhost config files.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove managed vhost config files.", "when": "item.state|default('present') == 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Remove legacy vhosts.conf file.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove legacy vhosts.conf file.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}/vhosts.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Define nginx_user.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Define nginx_user.", "when": "nginx_user is not defined"}, "module_options": {"nginx_user": "{{ __nginx_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_distribution == 'Ubuntu'"}, "module_options": "setup-Ubuntu.yml", "executable": "setup-Ubuntu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'FreeBSD'"}, "module_options": "setup-FreeBSD.yml", "executable": "setup-FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'OpenBSD'"}, "module_options": "setup-OpenBSD.yml", "executable": "setup-OpenBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Copy nginx configuration in place.", "module": "template", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Copy nginx configuration in place.", "notify": ["reload nginx"]}, "module_options": {"src": "{{ nginx_conf_template }}", "dest": "{{ nginx_conf_file_path }}", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Ensure nginx service is running as configured.", "module": "service", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Ensure nginx service is running as configured."}, "module_options": {"name": "nginx", "state": "{{ nginx_service_state }}", "enabled": "{{ nginx_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Enable nginx repo.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Enable nginx repo.", "when": "nginx_yum_repo_enabled | bool"}, "module_options": {"src": "nginx.repo.j2", "dest": "/etc/yum.repos.d/nginx.repo", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml": {"py/object": "struct4.TaskFile", "name": "setup-FreeBSD.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update pkg cache.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Update pkg cache.", "environment": {"ASSUME_ALWAYS_YES": "yes"}, "tags": ["skip_ansible_lint"]}, "module_options": "pkg update -f", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml": {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Update apt cache.", "changed_when": false}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present", "default_release": "{{ nginx_default_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml": {"py/object": "struct4.TaskFile", "name": "setup-Ubuntu.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dirmngr is installed (gnupg dependency).", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure dirmngr is installed (gnupg dependency)."}, "module_options": {"name": "dirmngr", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add PPA for Nginx (if configured).", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Add PPA for Nginx (if configured).", "register": "nginx_ppa_added", "when": "nginx_ppa_use | bool"}, "module_options": {"repo": "ppa:nginx/{{ nginx_ppa_version }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx will reinstall if the PPA was just added.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure nginx will reinstall if the PPA was just added.", "when": "nginx_ppa_added is changed", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "{{ nginx_package_name }}", "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml": {"py/object": "struct4.TaskFile", "name": "setup-OpenBSD.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "openbsd_pkg", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "openbsd_pkg", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml": {"py/object": "struct4.TaskFile", "name": "setup-Archlinux.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml": {"py/object": "struct4.TaskFile", "name": "vhosts.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove default nginx vhost config file (if configured).", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove default nginx vhost config file (if configured).", "when": "nginx_remove_default_vhost | bool", "notify": "restart nginx"}, "module_options": {"path": "{{ nginx_default_vhost_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx_vhost_path exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Ensure nginx_vhost_path exists.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add managed vhost config files.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Add managed vhost config files.", "when": "item.state|default('present') != 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"src": "{{ item.template|default(nginx_vhost_template) }}", "dest": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "force": true, "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove managed vhost config files.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove managed vhost config files.", "when": "item.state|default('present') == 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove legacy vhosts.conf file.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove legacy vhosts.conf file.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}/vhosts.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define nginx_user.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Define nginx_user.", "when": "nginx_user is not defined"}, "module_options": {"nginx_user": "{{ __nginx_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_distribution == 'Ubuntu'"}, "module_options": "setup-Ubuntu.yml", "executable": "setup-Ubuntu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'FreeBSD'"}, "module_options": "setup-FreeBSD.yml", "executable": "setup-FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'OpenBSD'"}, "module_options": "setup-OpenBSD.yml", "executable": "setup-OpenBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy nginx configuration in place.", "module": "template", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Copy nginx configuration in place.", "notify": ["reload nginx"]}, "module_options": {"src": "{{ nginx_conf_template }}", "dest": "{{ nginx_conf_file_path }}", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx service is running as configured.", "module": "service", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Ensure nginx service is running as configured."}, "module_options": {"name": "nginx", "state": "{{ nginx_service_state }}", "enabled": "{{ nginx_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Enable nginx repo.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Enable nginx repo.", "when": "nginx_yum_repo_enabled | bool"}, "module_options": {"src": "nginx.repo.j2", "dest": "/etc/yum.repos.d/nginx.repo", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.nginx": {"py/object": "struct4.Role", "name": "geerlingguy.nginx", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx", "fqcn": "geerlingguy.nginx", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "setup-FreeBSD.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update pkg cache.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Update pkg cache.", "environment": {"ASSUME_ALWAYS_YES": "yes"}, "tags": ["skip_ansible_lint"]}, "module_options": "pkg update -f", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pkgng", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-FreeBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Update apt cache.", "changed_when": false}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Debian.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present", "default_release": "{{ nginx_default_release }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Ubuntu.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dirmngr is installed (gnupg dependency).", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure dirmngr is installed (gnupg dependency)."}, "module_options": {"name": "dirmngr", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add PPA for Nginx (if configured).", "module": "apt_repository", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Add PPA for Nginx (if configured).", "register": "nginx_ppa_added", "when": "nginx_ppa_use | bool"}, "module_options": {"repo": "ppa:nginx/{{ nginx_ppa_version }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx will reinstall if the PPA was just added.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Ubuntu.yml", "options": {"name": "Ensure nginx will reinstall if the PPA was just added.", "when": "nginx_ppa_added is changed", "tags": ["skip_ansible_lint"]}, "module_options": {"name": "{{ nginx_package_name }}", "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-OpenBSD.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "openbsd_pkg", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "openbsd_pkg", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create logs directory.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-OpenBSD.yml", "options": {"name": "Create logs directory."}, "module_options": {"path": "/var/log/nginx", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Archlinux.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-Archlinux.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "vhosts.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Remove default nginx vhost config file (if configured).", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove default nginx vhost config file (if configured).", "when": "nginx_remove_default_vhost | bool", "notify": "restart nginx"}, "module_options": {"path": "{{ nginx_default_vhost_path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx_vhost_path exists.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Ensure nginx_vhost_path exists.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add managed vhost config files.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Add managed vhost config files.", "when": "item.state|default('present') != 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"src": "{{ item.template|default(nginx_vhost_template) }}", "dest": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "force": true, "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove managed vhost config files.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove managed vhost config files.", "when": "item.state|default('present') == 'absent'", "with_items": "{{ nginx_vhosts }}", "notify": "reload nginx", "tags": ["skip_ansible_lint"]}, "module_options": {"path": "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove legacy vhosts.conf file.", "module": "file", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/vhosts.yml", "options": {"name": "Remove legacy vhosts.conf file.", "notify": "reload nginx"}, "module_options": {"path": "{{ nginx_vhost_path }}/vhosts.conf", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define nginx_user.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Define nginx_user.", "when": "nginx_user is not defined"}, "module_options": {"nginx_user": "{{ __nginx_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat' or ansible_os_family == 'Rocky'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_distribution == 'Ubuntu'"}, "module_options": "setup-Ubuntu.yml", "executable": "setup-Ubuntu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'FreeBSD'"}, "module_options": "setup-FreeBSD.yml", "executable": "setup-FreeBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'OpenBSD'"}, "module_options": "setup-OpenBSD.yml", "executable": "setup-OpenBSD.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {}, "module_options": "vhosts.yml", "executable": "vhosts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy nginx configuration in place.", "module": "template", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Copy nginx configuration in place.", "notify": ["reload nginx"]}, "module_options": {"src": "{{ nginx_conf_template }}", "dest": "{{ nginx_conf_file_path }}", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx service is running as configured.", "module": "service", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/main.yml", "options": {"name": "Ensure nginx service is running as configured."}, "module_options": {"name": "nginx", "state": "{{ nginx_service_state }}", "enabled": "{{ nginx_service_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Enable nginx repo.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Enable nginx repo.", "when": "nginx_yum_repo_enabled | bool"}, "module_options": {"src": "nginx.repo.j2", "dest": "/etc/yum.repos.d/nginx.repo", "owner": "root", "group": "{{ root_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure nginx is installed.", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-nginx/geerlingguy.nginx/tasks/setup-RedHat.yml", "options": {"name": "Ensure nginx is installed."}, "module_options": {"name": "{{ nginx_package_name }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.nginx", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}