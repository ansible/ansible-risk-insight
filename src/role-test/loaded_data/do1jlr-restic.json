{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/do1jlr-restic", "installed_roles": [{"py/object": "struct4.Role", "name": "do1jlr.restic", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic", "fqcn": "do1jlr.restic", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "restic_delete_cron.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) remove restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml", "options": {"name": "(SCHEDULE) (CRON) remove restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "restic_create_systemd.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "module": "ansible.builtin.template", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.timer.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd service", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd service", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.service.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable restic service", "module": "ansible.builtin.systemd", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable restic service", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": true, "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "module": "ansible.builtin.systemd", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": true, "state": "started", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "restic_delete_systemd.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic timer", "module": "ansible.builtin.systemd", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic timer", "become": true, "with_items": "{{ restic_backups }}", "ignore_errors": true, "tags": "skip_ansible_lint", "failed_when": false, "changed_when": false, "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic service", "module": "ansible.builtin.systemd", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic service", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"], "ignore_errors": true, "failed_when": false, "tags": "skip_ansible_lint", "changed_when": false}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": true}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "module": "ansible.builtin.file", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "versioncheck.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create directory for versionscheck", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Create directory for versionscheck", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"path": "/etc/.ansible-version", "state": "directory", "mode": 493}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check playbook version", "module": "ansible.builtin.slurp", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "check playbook version", "become": true, "register": "playbook_version", "when": "submodules_versioncheck|bool", "ignore_errors": true, "failed_when": false}, "module_options": {"src": "/etc/.ansible-version/{{ playbook_version_path }}"}, "executable": "ansible.builtin.slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print remote role version", "module": "ansible.builtin.debug", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print remote role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Remote role version: {{ playbook_version.content | default('Y3VycmVudGx5IG5vdCBkZXBsb3llZAo=') | b64decode | string }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print locale role version", "module": "ansible.builtin.debug", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print locale role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Local role version: '{{ playbook_version_number|string }}'."}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if your version is outdated", "module": "ansible.builtin.fail", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Check if your version is outdated", "when": ["playbook_version.content|default(\"Mgo=\")|b64decode|int - 1 >= playbook_version_number|int and submodules_versioncheck|bool"]}, "module_options": {"msg": "Your ansible module has the version '{{ playbook_version_number }}' and is outdated. You need to update it!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "write new version to remote disk", "module": "ansible.builtin.copy", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "write new version to remote disk", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"content": "{{ playbook_version_number }}", "dest": "/etc/.ansible-version/{{ playbook_version_path }}", "mode": "0644"}, "executable": "ansible.builtin.copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "restic_create_cron.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) install restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml", "options": {"name": "(SCHEDULE) (CRON) install restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "present", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "(CONF)Initialize repository", "module": "command", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml", "options": {"name": "(CONF)Initialize repository", "environment": {"RESTIC_REPOSITORY": "{{ item.value.location }}", "RESTIC_PASSWORD": "{{ item.value.password }}", "AWS_ACCESS_KEY_ID": "{{ item.value.aws_access_key | default(\"\") }}", "AWS_SECRET_ACCESS_KEY": "{{ item.value.aws_secret_access_key | default(\"\") }}", "AWS_DEFAULT_REGION": "{{ item.value.aws_default_region | default(\"\") }}", "B2_ACCOUNT_ID": "{{ item.value.b2_account_id | default(\"\") }}", "B2_ACCOUNT_KEY": "{{ item.value.b2_account_key | default(\"\") }}"}, "no_log": "{{ restic_no_log }}", "register": "restic_init", "changed_when": "'created restic repository' in restic_init.stdout", "failed_when": ["restic_init.rc != 0", "not 'config file already exists' in restic_init.stderr", "not 'config already initialized' in restic_init.stderr", "not 'config already exists' in restic_init.stderr"], "loop": "{{ restic_repos|dict2items }}", "when": ["item.value.init is defined", "item.value.init|bool"]}, "module_options": "{{ restic_install_path }}/restic init", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "schedule.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) create restic systemd timer", "module": "ansible.builtin.include_tasks", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) create restic systemd timer", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"systemd\"", "restic_create_schedule | bool"]}, "module_options": "restic_create_systemd.yml", "executable": "restic_create_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) delete systemd timers if available", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete systemd timers if available", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)", "restic_create_schedule | bool"]}, "module_options": "restic_delete_systemd.yml", "executable": "restic_delete_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) delete old cron entry from previous versions of this role", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete old cron entry from previous versions of this role", "when": "restic_do_not_cleanup_cron | bool"}, "module_options": "delete_legacy_cron_entry.yml", "executable": "delete_legacy_cron_entry.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) install restic via cronjob", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) install restic via cronjob", "when": ["restic_create_schedule | bool", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""]}, "module_options": "restic_create_cron.yml", "executable": "restic_create_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) remove restic cronjobs", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) remove restic cronjobs", "when": ["restic_create_schedule | bool", "ansible_service_mgr == 'systemd'", "not restic_force_cron | default(false)", "restic_schedule_type != \"cronjob\""]}, "module_options": "restic_delete_cron.yml", "executable": "restic_delete_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "delete_legacy_cron_entry.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "delegate_to": "localhost"}, "module_options": {"that": ["ansible_version.full is version_compare('2.12.0', '<')"], "fail_msg": "[ERROR] Youre ansible version is above 2.12.0", "success_msg": "Congratulations. You are using ansible version {{ ansible_version.full }}"}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "module": "ansible.builtin.cron", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["restic_create_schedule | bool", "item.name is defined", "item.scheduled | default(false)", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""], "ignore_error": true, "tags": "skip_ansible_lint", "register": "cron_delete"}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "cron_file": "/etc/crontab", "user": "root"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "do1jlr.restic backup {{ item.name }}"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "preperation.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "tasks": [{"py/object": "struct4.Task", "name": "(PREPARE) Ensure restic directories exist", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Ensure restic directories exist", "become": true, "with_items": "{{ restic_create_paths }}"}, "module_options": {"state": "directory", "path": "{{ item }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(PREPARE) Check if downloaded binary is present", "module": "ansible.builtin.stat", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if downloaded binary is present", "register": "restic_executable"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(PREPARE) Check if installed binary is present", "module": "ansible.builtin.stat", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if installed binary is present", "register": "restic_installed"}, "module_options": {"path": "{{ restic_install_path }}/restic"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "backup.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "tasks": [{"py/object": "struct4.Task", "name": "(BACKUP) reformat dict if necessary", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) reformat dict if necessary", "when": ["restic_backups | type_debug == \"dict\""]}, "module_options": {"restic_backups": "{{ restic_backups|dict2items|json_query('[*].value') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(BACKUP) Create backup credentials", "module": "template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup credentials", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_access_Linux.j2", "dest": "{{ restic_script_dir }}/access-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(BACKUP) Create backup script", "module": "template", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup script", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_script_Linux.j2", "dest": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "(INSTALL) Download client binary", "module": "ansible.builtin.get_url", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Download client binary", "register": "get_url_restic"}, "module_options": {"url": "{{ restic_url }}", "dest": "{{ restic_download_path }}/restic.bz2", "force": true}, "executable": "ansible.builtin.get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Decompress the binary", "module": "ansible.builtin.shell", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Decompress the binary", "args": {"creates": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}}, "module_options": "bzip2 -dc {{ get_url_restic.dest }} > {{ restic_bin_bath }}", "executable": "ansible.builtin.shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Ensure permissions are correct", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Ensure permissions are correct"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Test the binary", "module": "ansible.builtin.command", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Test the binary", "ignore_errors": true, "register": "restic_test_result"}, "module_options": "{{ restic_bin_bath }} version", "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Remove faulty binary", "module": "ansible.builtin.file", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Remove faulty binary", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"path": "{{ restic_bin_bath }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Fail if restic could not be installed", "module": "ansible.builtin.fail", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Fail if restic could not be installed", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"msg": "Restic binary has been faulty and has been removed. Try to re-run the role and make sure you have bzip2 installed!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Create symbolic link to the correct version", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Create symbolic link to the correct version"}, "module_options": {"src": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "path": "{{ restic_install_path }}/restic", "state": "link", "force": true}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "ansible.builtin.include_vars", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "add OS specific variables"}, "module_options": "{{ lookup('first_found', restic_os_variables) }}", "executable": "ansible.builtin.include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "perform optional versionscheck", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "perform optional versionscheck", "when": "submodules_versioncheck | bool"}, "module_options": "versioncheck.yml", "executable": "versioncheck.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure restic is available", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is available"}, "module_options": "preperation.yml", "executable": "preperation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure restic is installed", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is installed", "when": "not restic_executable.stat.exists or not restic_installed.stat.exists"}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "initialize restic repo(s)", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "initialize restic repo(s)"}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup script", "module": "ansible.builtin.include_tasks", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "create backup script", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "backup.yml", "executable": "backup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "schedule restic backup", "module": "ansible.builtin.include_tasks", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "schedule restic backup", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "schedule.yml", "executable": "schedule.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "ansible.builtin.fail", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not yet supported"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) remove restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml", "options": {"name": "(SCHEDULE) (CRON) remove restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "module": "ansible.builtin.template", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.timer.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd service", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd service", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.service.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable restic service", "module": "ansible.builtin.systemd", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable restic service", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": true, "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "module": "ansible.builtin.systemd", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": true, "state": "started", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic timer", "module": "ansible.builtin.systemd", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic timer", "become": true, "with_items": "{{ restic_backups }}", "ignore_errors": true, "tags": "skip_ansible_lint", "failed_when": false, "changed_when": false, "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic service", "module": "ansible.builtin.systemd", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic service", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"], "ignore_errors": true, "failed_when": false, "tags": "skip_ansible_lint", "changed_when": false}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": true}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "module": "ansible.builtin.file", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create directory for versionscheck", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Create directory for versionscheck", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"path": "/etc/.ansible-version", "state": "directory", "mode": 493}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "check playbook version", "module": "ansible.builtin.slurp", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "check playbook version", "become": true, "register": "playbook_version", "when": "submodules_versioncheck|bool", "ignore_errors": true, "failed_when": false}, "module_options": {"src": "/etc/.ansible-version/{{ playbook_version_path }}"}, "executable": "ansible.builtin.slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Print remote role version", "module": "ansible.builtin.debug", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print remote role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Remote role version: {{ playbook_version.content | default('Y3VycmVudGx5IG5vdCBkZXBsb3llZAo=') | b64decode | string }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Print locale role version", "module": "ansible.builtin.debug", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print locale role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Local role version: '{{ playbook_version_number|string }}'."}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check if your version is outdated", "module": "ansible.builtin.fail", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Check if your version is outdated", "when": ["playbook_version.content|default(\"Mgo=\")|b64decode|int - 1 >= playbook_version_number|int and submodules_versioncheck|bool"]}, "module_options": {"msg": "Your ansible module has the version '{{ playbook_version_number }}' and is outdated. You need to update it!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "write new version to remote disk", "module": "ansible.builtin.copy", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "write new version to remote disk", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"content": "{{ playbook_version_number }}", "dest": "/etc/.ansible-version/{{ playbook_version_path }}", "mode": "0644"}, "executable": "ansible.builtin.copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) install restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml", "options": {"name": "(SCHEDULE) (CRON) install restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "present", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(CONF)Initialize repository", "module": "command", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml", "options": {"name": "(CONF)Initialize repository", "environment": {"RESTIC_REPOSITORY": "{{ item.value.location }}", "RESTIC_PASSWORD": "{{ item.value.password }}", "AWS_ACCESS_KEY_ID": "{{ item.value.aws_access_key | default(\"\") }}", "AWS_SECRET_ACCESS_KEY": "{{ item.value.aws_secret_access_key | default(\"\") }}", "AWS_DEFAULT_REGION": "{{ item.value.aws_default_region | default(\"\") }}", "B2_ACCOUNT_ID": "{{ item.value.b2_account_id | default(\"\") }}", "B2_ACCOUNT_KEY": "{{ item.value.b2_account_key | default(\"\") }}"}, "no_log": "{{ restic_no_log }}", "register": "restic_init", "changed_when": "'created restic repository' in restic_init.stdout", "failed_when": ["restic_init.rc != 0", "not 'config file already exists' in restic_init.stderr", "not 'config already initialized' in restic_init.stderr", "not 'config already exists' in restic_init.stderr"], "loop": "{{ restic_repos|dict2items }}", "when": ["item.value.init is defined", "item.value.init|bool"]}, "module_options": "{{ restic_install_path }}/restic init", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(SCHEDULE) create restic systemd timer", "module": "ansible.builtin.include_tasks", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) create restic systemd timer", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"systemd\"", "restic_create_schedule | bool"]}, "module_options": "restic_create_systemd.yml", "executable": "restic_create_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(SCHEDULE) delete systemd timers if available", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete systemd timers if available", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)", "restic_create_schedule | bool"]}, "module_options": "restic_delete_systemd.yml", "executable": "restic_delete_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(SCHEDULE) delete old cron entry from previous versions of this role", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete old cron entry from previous versions of this role", "when": "restic_do_not_cleanup_cron | bool"}, "module_options": "delete_legacy_cron_entry.yml", "executable": "delete_legacy_cron_entry.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(SCHEDULE) install restic via cronjob", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) install restic via cronjob", "when": ["restic_create_schedule | bool", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""]}, "module_options": "restic_create_cron.yml", "executable": "restic_create_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "(SCHEDULE) remove restic cronjobs", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) remove restic cronjobs", "when": ["restic_create_schedule | bool", "ansible_service_mgr == 'systemd'", "not restic_force_cron | default(false)", "restic_schedule_type != \"cronjob\""]}, "module_options": "restic_delete_cron.yml", "executable": "restic_delete_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "delegate_to": "localhost"}, "module_options": {"that": ["ansible_version.full is version_compare('2.12.0', '<')"], "fail_msg": "[ERROR] Youre ansible version is above 2.12.0", "success_msg": "Congratulations. You are using ansible version {{ ansible_version.full }}"}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "module": "ansible.builtin.cron", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["restic_create_schedule | bool", "item.name is defined", "item.scheduled | default(false)", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""], "ignore_error": true, "tags": "skip_ansible_lint", "register": "cron_delete"}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "cron_file": "/etc/crontab", "user": "root"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "do1jlr.restic backup {{ item.name }}"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(PREPARE) Ensure restic directories exist", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Ensure restic directories exist", "become": true, "with_items": "{{ restic_create_paths }}"}, "module_options": {"state": "directory", "path": "{{ item }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(PREPARE) Check if downloaded binary is present", "module": "ansible.builtin.stat", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if downloaded binary is present", "register": "restic_executable"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(PREPARE) Check if installed binary is present", "module": "ansible.builtin.stat", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if installed binary is present", "register": "restic_installed"}, "module_options": {"path": "{{ restic_install_path }}/restic"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(BACKUP) reformat dict if necessary", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) reformat dict if necessary", "when": ["restic_backups | type_debug == \"dict\""]}, "module_options": {"restic_backups": "{{ restic_backups|dict2items|json_query('[*].value') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(BACKUP) Create backup credentials", "module": "template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup credentials", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_access_Linux.j2", "dest": "{{ restic_script_dir }}/access-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(BACKUP) Create backup script", "module": "template", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup script", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_script_Linux.j2", "dest": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(INSTALL) Download client binary", "module": "ansible.builtin.get_url", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Download client binary", "register": "get_url_restic"}, "module_options": {"url": "{{ restic_url }}", "dest": "{{ restic_download_path }}/restic.bz2", "force": true}, "executable": "ansible.builtin.get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(INSTALL) Decompress the binary", "module": "ansible.builtin.shell", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Decompress the binary", "args": {"creates": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}}, "module_options": "bzip2 -dc {{ get_url_restic.dest }} > {{ restic_bin_bath }}", "executable": "ansible.builtin.shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(INSTALL) Ensure permissions are correct", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Ensure permissions are correct"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(INSTALL) Test the binary", "module": "ansible.builtin.command", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Test the binary", "ignore_errors": true, "register": "restic_test_result"}, "module_options": "{{ restic_bin_bath }} version", "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "(INSTALL) Remove faulty binary", "module": "ansible.builtin.file", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Remove faulty binary", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"path": "{{ restic_bin_bath }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "(INSTALL) Fail if restic could not be installed", "module": "ansible.builtin.fail", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Fail if restic could not be installed", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"msg": "Restic binary has been faulty and has been removed. Try to re-run the role and make sure you have bzip2 installed!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "(INSTALL) Create symbolic link to the correct version", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Create symbolic link to the correct version"}, "module_options": {"src": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "path": "{{ restic_install_path }}/restic", "state": "link", "force": true}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "add OS specific variables", "module": "ansible.builtin.include_vars", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "add OS specific variables"}, "module_options": "{{ lookup('first_found', restic_os_variables) }}", "executable": "ansible.builtin.include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "perform optional versionscheck", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "perform optional versionscheck", "when": "submodules_versioncheck | bool"}, "module_options": "versioncheck.yml", "executable": "versioncheck.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "make sure restic is available", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is available"}, "module_options": "preperation.yml", "executable": "preperation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "make sure restic is installed", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is installed", "when": "not restic_executable.stat.exists or not restic_installed.stat.exists"}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "initialize restic repo(s)", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "initialize restic repo(s)"}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "create backup script", "module": "ansible.builtin.include_tasks", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "create backup script", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "backup.yml", "executable": "backup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "schedule restic backup", "module": "ansible.builtin.include_tasks", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "schedule restic backup", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "schedule.yml", "executable": "schedule.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Message", "module": "ansible.builtin.fail", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not yet supported"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml": {"py/object": "struct4.TaskFile", "name": "restic_delete_cron.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) remove restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml", "options": {"name": "(SCHEDULE) (CRON) remove restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml": {"py/object": "struct4.TaskFile", "name": "restic_create_systemd.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "module": "ansible.builtin.template", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.timer.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd service", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd service", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.service.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable restic service", "module": "ansible.builtin.systemd", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable restic service", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": true, "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "module": "ansible.builtin.systemd", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": true, "state": "started", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml": {"py/object": "struct4.TaskFile", "name": "restic_delete_systemd.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic timer", "module": "ansible.builtin.systemd", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic timer", "become": true, "with_items": "{{ restic_backups }}", "ignore_errors": true, "tags": "skip_ansible_lint", "failed_when": false, "changed_when": false, "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic service", "module": "ansible.builtin.systemd", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic service", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"], "ignore_errors": true, "failed_when": false, "tags": "skip_ansible_lint", "changed_when": false}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": true}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "module": "ansible.builtin.file", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml": {"py/object": "struct4.TaskFile", "name": "versioncheck.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create directory for versionscheck", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Create directory for versionscheck", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"path": "/etc/.ansible-version", "state": "directory", "mode": 493}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check playbook version", "module": "ansible.builtin.slurp", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "check playbook version", "become": true, "register": "playbook_version", "when": "submodules_versioncheck|bool", "ignore_errors": true, "failed_when": false}, "module_options": {"src": "/etc/.ansible-version/{{ playbook_version_path }}"}, "executable": "ansible.builtin.slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print remote role version", "module": "ansible.builtin.debug", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print remote role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Remote role version: {{ playbook_version.content | default('Y3VycmVudGx5IG5vdCBkZXBsb3llZAo=') | b64decode | string }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print locale role version", "module": "ansible.builtin.debug", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print locale role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Local role version: '{{ playbook_version_number|string }}'."}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if your version is outdated", "module": "ansible.builtin.fail", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Check if your version is outdated", "when": ["playbook_version.content|default(\"Mgo=\")|b64decode|int - 1 >= playbook_version_number|int and submodules_versioncheck|bool"]}, "module_options": {"msg": "Your ansible module has the version '{{ playbook_version_number }}' and is outdated. You need to update it!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "write new version to remote disk", "module": "ansible.builtin.copy", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "write new version to remote disk", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"content": "{{ playbook_version_number }}", "dest": "/etc/.ansible-version/{{ playbook_version_path }}", "mode": "0644"}, "executable": "ansible.builtin.copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml": {"py/object": "struct4.TaskFile", "name": "restic_create_cron.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) install restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml", "options": {"name": "(SCHEDULE) (CRON) install restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "present", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "(CONF)Initialize repository", "module": "command", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml", "options": {"name": "(CONF)Initialize repository", "environment": {"RESTIC_REPOSITORY": "{{ item.value.location }}", "RESTIC_PASSWORD": "{{ item.value.password }}", "AWS_ACCESS_KEY_ID": "{{ item.value.aws_access_key | default(\"\") }}", "AWS_SECRET_ACCESS_KEY": "{{ item.value.aws_secret_access_key | default(\"\") }}", "AWS_DEFAULT_REGION": "{{ item.value.aws_default_region | default(\"\") }}", "B2_ACCOUNT_ID": "{{ item.value.b2_account_id | default(\"\") }}", "B2_ACCOUNT_KEY": "{{ item.value.b2_account_key | default(\"\") }}"}, "no_log": "{{ restic_no_log }}", "register": "restic_init", "changed_when": "'created restic repository' in restic_init.stdout", "failed_when": ["restic_init.rc != 0", "not 'config file already exists' in restic_init.stderr", "not 'config already initialized' in restic_init.stderr", "not 'config already exists' in restic_init.stderr"], "loop": "{{ restic_repos|dict2items }}", "when": ["item.value.init is defined", "item.value.init|bool"]}, "module_options": "{{ restic_install_path }}/restic init", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml": {"py/object": "struct4.TaskFile", "name": "schedule.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) create restic systemd timer", "module": "ansible.builtin.include_tasks", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) create restic systemd timer", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"systemd\"", "restic_create_schedule | bool"]}, "module_options": "restic_create_systemd.yml", "executable": "restic_create_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) delete systemd timers if available", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete systemd timers if available", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)", "restic_create_schedule | bool"]}, "module_options": "restic_delete_systemd.yml", "executable": "restic_delete_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) delete old cron entry from previous versions of this role", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete old cron entry from previous versions of this role", "when": "restic_do_not_cleanup_cron | bool"}, "module_options": "delete_legacy_cron_entry.yml", "executable": "delete_legacy_cron_entry.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) install restic via cronjob", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) install restic via cronjob", "when": ["restic_create_schedule | bool", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""]}, "module_options": "restic_create_cron.yml", "executable": "restic_create_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) remove restic cronjobs", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) remove restic cronjobs", "when": ["restic_create_schedule | bool", "ansible_service_mgr == 'systemd'", "not restic_force_cron | default(false)", "restic_schedule_type != \"cronjob\""]}, "module_options": "restic_delete_cron.yml", "executable": "restic_delete_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml": {"py/object": "struct4.TaskFile", "name": "delete_legacy_cron_entry.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "delegate_to": "localhost"}, "module_options": {"that": ["ansible_version.full is version_compare('2.12.0', '<')"], "fail_msg": "[ERROR] Youre ansible version is above 2.12.0", "success_msg": "Congratulations. You are using ansible version {{ ansible_version.full }}"}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "module": "ansible.builtin.cron", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["restic_create_schedule | bool", "item.name is defined", "item.scheduled | default(false)", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""], "ignore_error": true, "tags": "skip_ansible_lint", "register": "cron_delete"}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "cron_file": "/etc/crontab", "user": "root"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "do1jlr.restic backup {{ item.name }}"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml": {"py/object": "struct4.TaskFile", "name": "preperation.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "tasks": [{"py/object": "struct4.Task", "name": "(PREPARE) Ensure restic directories exist", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Ensure restic directories exist", "become": true, "with_items": "{{ restic_create_paths }}"}, "module_options": {"state": "directory", "path": "{{ item }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(PREPARE) Check if downloaded binary is present", "module": "ansible.builtin.stat", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if downloaded binary is present", "register": "restic_executable"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(PREPARE) Check if installed binary is present", "module": "ansible.builtin.stat", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if installed binary is present", "register": "restic_installed"}, "module_options": {"path": "{{ restic_install_path }}/restic"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml": {"py/object": "struct4.TaskFile", "name": "backup.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "tasks": [{"py/object": "struct4.Task", "name": "(BACKUP) reformat dict if necessary", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) reformat dict if necessary", "when": ["restic_backups | type_debug == \"dict\""]}, "module_options": {"restic_backups": "{{ restic_backups|dict2items|json_query('[*].value') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(BACKUP) Create backup credentials", "module": "template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup credentials", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_access_Linux.j2", "dest": "{{ restic_script_dir }}/access-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(BACKUP) Create backup script", "module": "template", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup script", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_script_Linux.j2", "dest": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "(INSTALL) Download client binary", "module": "ansible.builtin.get_url", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Download client binary", "register": "get_url_restic"}, "module_options": {"url": "{{ restic_url }}", "dest": "{{ restic_download_path }}/restic.bz2", "force": true}, "executable": "ansible.builtin.get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Decompress the binary", "module": "ansible.builtin.shell", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Decompress the binary", "args": {"creates": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}}, "module_options": "bzip2 -dc {{ get_url_restic.dest }} > {{ restic_bin_bath }}", "executable": "ansible.builtin.shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Ensure permissions are correct", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Ensure permissions are correct"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Test the binary", "module": "ansible.builtin.command", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Test the binary", "ignore_errors": true, "register": "restic_test_result"}, "module_options": "{{ restic_bin_bath }} version", "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Remove faulty binary", "module": "ansible.builtin.file", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Remove faulty binary", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"path": "{{ restic_bin_bath }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Fail if restic could not be installed", "module": "ansible.builtin.fail", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Fail if restic could not be installed", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"msg": "Restic binary has been faulty and has been removed. Try to re-run the role and make sure you have bzip2 installed!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Create symbolic link to the correct version", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Create symbolic link to the correct version"}, "module_options": {"src": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "path": "{{ restic_install_path }}/restic", "state": "link", "force": true}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "ansible.builtin.include_vars", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "add OS specific variables"}, "module_options": "{{ lookup('first_found', restic_os_variables) }}", "executable": "ansible.builtin.include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "perform optional versionscheck", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "perform optional versionscheck", "when": "submodules_versioncheck | bool"}, "module_options": "versioncheck.yml", "executable": "versioncheck.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure restic is available", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is available"}, "module_options": "preperation.yml", "executable": "preperation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure restic is installed", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is installed", "when": "not restic_executable.stat.exists or not restic_installed.stat.exists"}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "initialize restic repo(s)", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "initialize restic repo(s)"}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup script", "module": "ansible.builtin.include_tasks", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "create backup script", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "backup.yml", "executable": "backup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "schedule restic backup", "module": "ansible.builtin.include_tasks", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "schedule restic backup", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "schedule.yml", "executable": "schedule.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml": {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "ansible.builtin.fail", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not yet supported"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}}, "role_dict": {"do1jlr.restic": {"py/object": "struct4.Role", "name": "do1jlr.restic", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic", "fqcn": "do1jlr.restic", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "restic_delete_cron.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) remove restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_cron.yml", "options": {"name": "(SCHEDULE) (CRON) remove restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "restic_create_systemd.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "module": "ansible.builtin.template", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd timer", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.timer.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) copy systemd service", "module": "ansible.builtin.template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) copy systemd service", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"src": "templates/restic.service.j2", "dest": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "owner": "root", "group": "root", "mode": "0644"}, "executable": "ansible.builtin.template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable restic service", "module": "ansible.builtin.systemd", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable restic service", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": true, "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "module": "ansible.builtin.systemd", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) Enable and start restic timer", "become": true, "with_items": "{{ restic_backups }}", "notify": "systemctl restart restic.timer", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": true, "state": "started", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "restic_delete_systemd.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic timer", "module": "ansible.builtin.systemd", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic timer", "become": true, "with_items": "{{ restic_backups }}", "ignore_errors": true, "tags": "skip_ansible_lint", "failed_when": false, "changed_when": false, "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.timer", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": false}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) mask restic service", "module": "ansible.builtin.systemd", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) mask restic service", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"], "ignore_errors": true, "failed_when": false, "tags": "skip_ansible_lint", "changed_when": false}, "module_options": {"name": "restic-{{ item.name | replace(' ', '') | string }}.service", "enabled": false, "state": "stopped", "daemon_reload": true, "masked": true}, "executable": "ansible.builtin.systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .timer file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.timer", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "module": "ansible.builtin.file", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_delete_systemd.yml", "options": {"name": "(SCHEDULE) (SYSTEMD) delete systemd .service file", "become": true, "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)"]}, "module_options": {"path": "/lib/systemd/system/restic-{{ item.name | replace(' ', '') }}.service", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "versioncheck.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create directory for versionscheck", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Create directory for versionscheck", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"path": "/etc/.ansible-version", "state": "directory", "mode": 493}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "check playbook version", "module": "ansible.builtin.slurp", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "check playbook version", "become": true, "register": "playbook_version", "when": "submodules_versioncheck|bool", "ignore_errors": true, "failed_when": false}, "module_options": {"src": "/etc/.ansible-version/{{ playbook_version_path }}"}, "executable": "ansible.builtin.slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print remote role version", "module": "ansible.builtin.debug", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print remote role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Remote role version: {{ playbook_version.content | default('Y3VycmVudGx5IG5vdCBkZXBsb3llZAo=') | b64decode | string }}"}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Print locale role version", "module": "ansible.builtin.debug", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Print locale role version", "when": "submodules_versioncheck|bool"}, "module_options": {"msg": "Local role version: '{{ playbook_version_number|string }}'."}, "executable": "ansible.builtin.debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if your version is outdated", "module": "ansible.builtin.fail", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "Check if your version is outdated", "when": ["playbook_version.content|default(\"Mgo=\")|b64decode|int - 1 >= playbook_version_number|int and submodules_versioncheck|bool"]}, "module_options": {"msg": "Your ansible module has the version '{{ playbook_version_number }}' and is outdated. You need to update it!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "write new version to remote disk", "module": "ansible.builtin.copy", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/versioncheck.yml", "options": {"name": "write new version to remote disk", "become": true, "when": "submodules_versioncheck|bool"}, "module_options": {"content": "{{ playbook_version_number }}", "dest": "/etc/.ansible-version/{{ playbook_version_path }}", "mode": "0644"}, "executable": "ansible.builtin.copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "restic_create_cron.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (CRON) install restic backup cronjob", "module": "ansible.builtin.cron", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/restic_create_cron.yml", "options": {"name": "(SCHEDULE) (CRON) install restic backup cronjob", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.scheduled | default(false)"]}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "present", "user": "root", "cron_file": "restic_backup"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "(CONF)Initialize repository", "module": "command", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/configure.yml", "options": {"name": "(CONF)Initialize repository", "environment": {"RESTIC_REPOSITORY": "{{ item.value.location }}", "RESTIC_PASSWORD": "{{ item.value.password }}", "AWS_ACCESS_KEY_ID": "{{ item.value.aws_access_key | default(\"\") }}", "AWS_SECRET_ACCESS_KEY": "{{ item.value.aws_secret_access_key | default(\"\") }}", "AWS_DEFAULT_REGION": "{{ item.value.aws_default_region | default(\"\") }}", "B2_ACCOUNT_ID": "{{ item.value.b2_account_id | default(\"\") }}", "B2_ACCOUNT_KEY": "{{ item.value.b2_account_key | default(\"\") }}"}, "no_log": "{{ restic_no_log }}", "register": "restic_init", "changed_when": "'created restic repository' in restic_init.stdout", "failed_when": ["restic_init.rc != 0", "not 'config file already exists' in restic_init.stderr", "not 'config already initialized' in restic_init.stderr", "not 'config already exists' in restic_init.stderr"], "loop": "{{ restic_repos|dict2items }}", "when": ["item.value.init is defined", "item.value.init|bool"]}, "module_options": "{{ restic_install_path }}/restic init", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "schedule.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) create restic systemd timer", "module": "ansible.builtin.include_tasks", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) create restic systemd timer", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"systemd\"", "restic_create_schedule | bool"]}, "module_options": "restic_create_systemd.yml", "executable": "restic_create_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) delete systemd timers if available", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete systemd timers if available", "when": ["ansible_service_mgr == 'systemd'", "restic_schedule_type == \"cronjob\" or restic_force_cron | default(false)", "restic_create_schedule | bool"]}, "module_options": "restic_delete_systemd.yml", "executable": "restic_delete_systemd.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) delete old cron entry from previous versions of this role", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) delete old cron entry from previous versions of this role", "when": "restic_do_not_cleanup_cron | bool"}, "module_options": "delete_legacy_cron_entry.yml", "executable": "delete_legacy_cron_entry.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) install restic via cronjob", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) install restic via cronjob", "when": ["restic_create_schedule | bool", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""]}, "module_options": "restic_create_cron.yml", "executable": "restic_create_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) remove restic cronjobs", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/schedule.yml", "options": {"name": "(SCHEDULE) remove restic cronjobs", "when": ["restic_create_schedule | bool", "ansible_service_mgr == 'systemd'", "not restic_force_cron | default(false)", "restic_schedule_type != \"cronjob\""]}, "module_options": "restic_delete_cron.yml", "executable": "restic_delete_cron.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "delete_legacy_cron_entry.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "tasks": [{"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "module": "ansible.builtin.assert", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) check if ansible version is under 2.12.0", "delegate_to": "localhost"}, "module_options": {"that": ["ansible_version.full is version_compare('2.12.0', '<')"], "fail_msg": "[ERROR] Youre ansible version is above 2.12.0", "success_msg": "Congratulations. You are using ansible version {{ ansible_version.full }}"}, "executable": "ansible.builtin.assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "module": "ansible.builtin.cron", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) try to remove entries from /etc/crontab", "become": true, "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["restic_create_schedule | bool", "item.name is defined", "item.scheduled | default(false)", "ansible_service_mgr != 'systemd' or restic_force_cron | default(false) or restic_schedule_type == \"cronjob\""], "ignore_error": true, "tags": "skip_ansible_lint", "register": "cron_delete"}, "module_options": {"name": "do1jlr.restic backup {{ item.name }}", "job": "CRON=true {{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "minute": "{{ item.schedule_minute | default(\"*\") }}", "hour": "{{ item.schedule_hour | default(\"2\") }}", "weekday": "{{ item.schedule_weekday | default(\"*\") }}", "month": "{{ item.schedule_month | default(\"*\") }}", "state": "absent", "cron_file": "/etc/crontab", "user": "root"}, "executable": "ansible.builtin.cron", "executable_type": "Module", "fqcn": "ansible.builtin.cron", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure 'do1jlr.restic backup {{ item.name }}' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "do1jlr.restic backup {{ item.name }}"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "module": "ansible.builtin.lineinfile", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/delete_legacy_cron_entry.yml", "options": {"name": "(SCHEDULE) (OLD) make sure '{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh' is not in /etc/crontab", "become": true, "when": "cron_delete.failed", "with_items": "{{ restic_backups }}"}, "module_options": {"path": "/etc/crontab", "state": "absent", "search_string": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh"}, "executable": "ansible.builtin.lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "preperation.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "tasks": [{"py/object": "struct4.Task", "name": "(PREPARE) Ensure restic directories exist", "module": "ansible.builtin.file", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Ensure restic directories exist", "become": true, "with_items": "{{ restic_create_paths }}"}, "module_options": {"state": "directory", "path": "{{ item }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(PREPARE) Check if downloaded binary is present", "module": "ansible.builtin.stat", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if downloaded binary is present", "register": "restic_executable"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "(PREPARE) Check if installed binary is present", "module": "ansible.builtin.stat", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/preperation.yml", "options": {"name": "(PREPARE) Check if installed binary is present", "register": "restic_installed"}, "module_options": {"path": "{{ restic_install_path }}/restic"}, "executable": "ansible.builtin.stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "backup.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "tasks": [{"py/object": "struct4.Task", "name": "(BACKUP) reformat dict if necessary", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) reformat dict if necessary", "when": ["restic_backups | type_debug == \"dict\""]}, "module_options": {"restic_backups": "{{ restic_backups|dict2items|json_query('[*].value') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(BACKUP) Create backup credentials", "module": "template", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup credentials", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_access_Linux.j2", "dest": "{{ restic_script_dir }}/access-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(BACKUP) Create backup script", "module": "template", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/backup.yml", "options": {"name": "(BACKUP) Create backup script", "no_log": "{{ restic_no_log }}", "with_items": "{{ restic_backups }}", "when": ["item.name is defined", "item.src is defined or item.stdin is defined", "item.src is defined or item.stdin and item.stdin_cmd is defined", "item.repo in restic_repos"]}, "module_options": {"src": "restic_script_Linux.j2", "dest": "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh", "mode": "0700", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "(INSTALL) Download client binary", "module": "ansible.builtin.get_url", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Download client binary", "register": "get_url_restic"}, "module_options": {"url": "{{ restic_url }}", "dest": "{{ restic_download_path }}/restic.bz2", "force": true}, "executable": "ansible.builtin.get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Decompress the binary", "module": "ansible.builtin.shell", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Decompress the binary", "args": {"creates": "{{ restic_download_path }}/bin/restic-{{ restic_version }}"}}, "module_options": "bzip2 -dc {{ get_url_restic.dest }} > {{ restic_bin_bath }}", "executable": "ansible.builtin.shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Ensure permissions are correct", "module": "ansible.builtin.file", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Ensure permissions are correct"}, "module_options": {"path": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "mode": "0755", "owner": "{{ restic_dir_owner }}", "group": "{{ restic_dir_group }}"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Test the binary", "module": "ansible.builtin.command", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Test the binary", "ignore_errors": true, "register": "restic_test_result"}, "module_options": "{{ restic_bin_bath }} version", "executable": "ansible.builtin.command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Remove faulty binary", "module": "ansible.builtin.file", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Remove faulty binary", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"path": "{{ restic_bin_bath }}", "state": "absent"}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Fail if restic could not be installed", "module": "ansible.builtin.fail", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Fail if restic could not be installed", "when": "'FAILED' in restic_test_result.stderr"}, "module_options": {"msg": "Restic binary has been faulty and has been removed. Try to re-run the role and make sure you have bzip2 installed!"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "(INSTALL) Create symbolic link to the correct version", "module": "ansible.builtin.file", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/install.yml", "options": {"name": "(INSTALL) Create symbolic link to the correct version"}, "module_options": {"src": "{{ restic_download_path }}/bin/restic-{{ restic_version }}", "path": "{{ restic_install_path }}/restic", "state": "link", "force": true}, "executable": "ansible.builtin.file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "ansible.builtin.include_vars", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "add OS specific variables"}, "module_options": "{{ lookup('first_found', restic_os_variables) }}", "executable": "ansible.builtin.include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "perform optional versionscheck", "module": "ansible.builtin.include_tasks", "index": 1, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "perform optional versionscheck", "when": "submodules_versioncheck | bool"}, "module_options": "versioncheck.yml", "executable": "versioncheck.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure restic is available", "module": "ansible.builtin.include_tasks", "index": 2, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is available"}, "module_options": "preperation.yml", "executable": "preperation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "make sure restic is installed", "module": "ansible.builtin.include_tasks", "index": 3, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "make sure restic is installed", "when": "not restic_executable.stat.exists or not restic_installed.stat.exists"}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "initialize restic repo(s)", "module": "ansible.builtin.include_tasks", "index": 4, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "initialize restic repo(s)"}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "create backup script", "module": "ansible.builtin.include_tasks", "index": 5, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "create backup script", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "backup.yml", "executable": "backup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "schedule restic backup", "module": "ansible.builtin.include_tasks", "index": 6, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/main.yml", "options": {"name": "schedule restic backup", "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}}, "module_options": "schedule.yml", "executable": "schedule.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "ansible.builtin.fail", "index": 0, "defined_in": "./role-test/testdata/do1jlr-restic/do1jlr.restic/tasks/distribution/Windows.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not yet supported"}, "executable": "ansible.builtin.fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "do1jlr.restic", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}