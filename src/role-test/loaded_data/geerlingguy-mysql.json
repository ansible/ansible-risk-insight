{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-mysql", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.mysql", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql", "fqcn": "geerlingguy.mysql", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get MySQL version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Get MySQL version.", "register": "mysql_cli_version", "changed_when": false, "check_mode": false}, "module_options": "mysql --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy my.cnf global MySQL configuration.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf global MySQL configuration.", "notify": "restart mysql"}, "module_options": {"src": "my.cnf.j2", "dest": "{{ mysql_config_file }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ overwrite_global_mycnf }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify mysql include directory exists.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Verify mysql include directory exists.", "when": "mysql_config_include_files | length"}, "module_options": {"path": "{{ mysql_config_include_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy my.cnf override files into include directory.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf override files into include directory.", "with_items": "{{ mysql_config_include_files }}", "notify": "restart mysql"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ mysql_config_include_dir }}/{{ item.src | basename }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ item.force | default(False) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create slow query log file (if configured).", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create slow query log file (if configured).", "args": {"creates": "{{ mysql_slow_query_log_file }}", "warn": false}, "when": "mysql_slow_query_log_enabled"}, "module_options": "touch {{ mysql_slow_query_log_file }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create datadir if it does not exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create datadir if it does not exist"}, "module_options": {"path": "{{ mysql_datadir }}", "state": "directory", "owner": "mysql", "group": "mysql", "mode": 493, "setype": "mysqld_db_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ownership on slow query log file (if configured).", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on slow query log file (if configured).", "when": "mysql_slow_query_log_enabled"}, "module_options": {"path": "{{ mysql_slow_query_log_file }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create error log file (if configured).", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create error log file (if configured).", "args": {"creates": "{{ mysql_log_error }}", "warn": false}, "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": "touch {{ mysql_log_error }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ownership on error log file (if configured).", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on error log file (if configured).", "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"path": "{{ mysql_log_error }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL is started and enabled on boot.", "module": "service", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Ensure MySQL is started and enabled on boot.", "register": "mysql_service_configuration"}, "module_options": "name={{ mysql_daemon }} state=started enabled={{ mysql_enabled_on_startup }}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "users.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL users are present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml", "options": {"name": "Ensure MySQL users are present.", "with_items": "{{ mysql_users }}", "no_log": true}, "module_options": {"name": "{{ item.name }}", "host": "{{ item.host | default('localhost') }}", "password": "{{ item.password }}", "priv": "{{ item.priv | default('*.*:USAGE') }}", "state": "{{ item.state | default('present') }}", "append_privs": "{{ item.append_privs | default('no') }}", "encrypted": "{{ item.encrypted | default('no') }}"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "replication.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure replication user exists on master.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Ensure replication user exists on master.", "when": ["mysql_replication_role == 'master'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"name": "{{ mysql_replication_user.name }}", "host": "{{ mysql_replication_user.host | default('%') }}", "password": "{{ mysql_replication_user.password }}", "priv": "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check slave replication status.", "module": "mysql_replication", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check slave replication status.", "ignore_errors": true, "register": "slave", "when": ["mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"mode": "getslave", "login_user": "{{ mysql_replication_user.name }}", "login_password": "{{ mysql_replication_user.password }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check master replication status.", "module": "mysql_replication", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check master replication status.", "delegate_to": "{{ mysql_replication_master }}", "register": "master", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=getmaster", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure replication on the slave.", "module": "mysql_replication", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Configure replication on the slave.", "ignore_errors": true, "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"]}, "module_options": {"mode": "changemaster", "master_host": "{{ mysql_replication_master }}", "master_user": "{{ mysql_replication_user.name }}", "master_password": "{{ mysql_replication_user.password }}", "master_log_file": "{{ master.File }}", "master_log_pos": "{{ master.Position }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start replication.", "module": "mysql_replication", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Start replication.", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=startslave", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "databases.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL databases are present.", "module": "mysql_db", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml", "options": {"name": "Ensure MySQL databases are present.", "with_items": "{{ mysql_databases }}"}, "module_options": {"name": "{{ item.name }}", "collation": "{{ item.collation | default('utf8_general_ci') }}", "encoding": "{{ item.encoding | default('utf8') }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}"}, "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if MySQL is already installed.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Check if MySQL is already installed.", "register": "mysql_installed"}, "module_options": "path={{ mysql_config_file }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt cache if MySQL is not yet installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Update apt cache if MySQL is not yet installed.", "changed_when": false, "when": "not mysql_installed.stat.exists"}, "module_options": "update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": {"name": "{{ mysql_python_package_debian }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "deb_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL is stopped after initial install.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL is stopped after initial install.", "when": "not mysql_installed.stat.exists"}, "module_options": "name={{ mysql_daemon }} state=stopped", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete innodb log files created by apt package after initial install.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Delete innodb log files created by apt package after initial install.", "with_items": ["ib_logfile0", "ib_logfile1"], "when": "not mysql_installed.stat.exists"}, "module_options": "path={{ mysql_datadir }}/{{ item }} state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "variables.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Include OS-specific variables.", "with_first_found": [{"files": ["vars/{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "vars/{{ ansible_os_family }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_packages.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_packages.", "when": "mysql_packages is not defined"}, "module_options": {"mysql_packages": "{{ __mysql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_daemon.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_daemon.", "when": "mysql_daemon is not defined"}, "module_options": {"mysql_daemon": "{{ __mysql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_slow_query_log_file.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_slow_query_log_file.", "when": "mysql_slow_query_log_file is not defined"}, "module_options": {"mysql_slow_query_log_file": "{{ __mysql_slow_query_log_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_log_error.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_log_error.", "when": "mysql_log_error is not defined"}, "module_options": {"mysql_log_error": "{{ __mysql_log_error }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_syslog_tag.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_syslog_tag.", "when": "mysql_syslog_tag is not defined"}, "module_options": {"mysql_syslog_tag": "{{ __mysql_syslog_tag }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_pid_file.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_pid_file.", "when": "mysql_pid_file is not defined"}, "module_options": {"mysql_pid_file": "{{ __mysql_pid_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_config_file.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_file.", "when": "mysql_config_file is not defined"}, "module_options": {"mysql_config_file": "{{ __mysql_config_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_config_include_dir.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_include_dir.", "when": "mysql_config_include_dir is not defined"}, "module_options": {"mysql_config_include_dir": "{{ __mysql_config_include_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_socket.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_socket.", "when": "mysql_socket is not defined"}, "module_options": {"mysql_socket": "{{ __mysql_socket }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_supports_innodb_large_prefix.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_supports_innodb_large_prefix.", "when": "mysql_supports_innodb_large_prefix is not defined"}, "module_options": {"mysql_supports_innodb_large_prefix": "{{ __mysql_supports_innodb_large_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "secure-installation.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure default user is present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Ensure default user is present.", "when": "mysql_user_name != mysql_root_username"}, "module_options": {"name": "{{ mysql_user_name }}", "host": "localhost", "password": "{{ mysql_user_password }}", "priv": "*.*:ALL,GRANT", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy user-my.cnf file with password credentials.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy user-my.cnf file with password credentials.", "when": "mysql_user_name != mysql_root_username and (mysql_install_packages | bool or mysql_user_password_update)\n"}, "module_options": {"src": "user-my.cnf.j2", "dest": "{{ mysql_user_home }}/.my.cnf", "owner": "{{ mysql_user_name }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disallow root login remotely", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Disallow root login remotely", "with_items": ["DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"], "changed_when": false}, "module_options": "mysql -NBe \"{{ item }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of hosts for the root user.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the root user.", "register": "mysql_root_hosts", "changed_when": false, "check_mode": false, "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": "mysql -NBe \"SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (5.7.x).", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout)\n"}, "module_options": "mysql -u root -NBe 'ALTER USER \"{{ mysql_root_username }}\"@\"{{ item }}\" IDENTIFIED WITH mysql_native_password BY \"{{ mysql_root_password }}\"; FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (< 5.7.x).", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (< 5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' not in mysql_cli_version.stdout and '8.0.' not in mysql_cli_version.stdout)\n"}, "module_options": "mysql -NBe 'SET PASSWORD FOR \"{{ mysql_root_username }}\"@\"{{ item }}\" = PASSWORD(\"{{ mysql_root_password }}\"); FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy .my.cnf file with root password credentials.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy .my.cnf file with root password credentials.", "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": {"src": "root-my.cnf.j2", "dest": "{{ mysql_root_home }}/.my.cnf", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of hosts for the anonymous user.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the anonymous user.", "register": "mysql_anonymous_hosts", "changed_when": false, "check_mode": false}, "module_options": "mysql -NBe 'SELECT Host FROM mysql.user WHERE User = \"\"'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove anonymous MySQL users.", "module": "mysql_user", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove anonymous MySQL users.", "with_items": "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"}, "module_options": {"name": "", "host": "{{ item }}", "state": "absent"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove MySQL test database.", "module": "mysql_db", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove MySQL test database."}, "module_options": "name='test' state=absent", "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Archlinux.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": "name=mysql-python state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "pacman", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "arch_mysql_install_packages"}, "module_options": "name={{ mysql_packages }} state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run mysql_install_db if MySQL packages were changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Run mysql_install_db if MySQL packages were changed.", "when": "arch_mysql_install_packages.changed", "tags": ["skip_ansible_lint"]}, "module_options": "mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if MySQL packages were installed.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"name": "Check if MySQL packages were installed."}, "module_options": {"mysql_install_packages": "{{ (rh_mysql_install_packages is defined and rh_mysql_install_packages.changed) or (deb_mysql_install_packages is defined and deb_mysql_install_packages.changed) or (arch_mysql_install_packages is defined and arch_mysql_install_packages.changed) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "secure-installation.yml", "executable": "secure-installation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "replication.yml", "executable": "replication.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "rh_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present", "enablerepo": "{{ mysql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get MySQL version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Get MySQL version.", "register": "mysql_cli_version", "changed_when": false, "check_mode": false}, "module_options": "mysql --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy my.cnf global MySQL configuration.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf global MySQL configuration.", "notify": "restart mysql"}, "module_options": {"src": "my.cnf.j2", "dest": "{{ mysql_config_file }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ overwrite_global_mycnf }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Verify mysql include directory exists.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Verify mysql include directory exists.", "when": "mysql_config_include_files | length"}, "module_options": {"path": "{{ mysql_config_include_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy my.cnf override files into include directory.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf override files into include directory.", "with_items": "{{ mysql_config_include_files }}", "notify": "restart mysql"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ mysql_config_include_dir }}/{{ item.src | basename }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ item.force | default(False) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create slow query log file (if configured).", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create slow query log file (if configured).", "args": {"creates": "{{ mysql_slow_query_log_file }}", "warn": false}, "when": "mysql_slow_query_log_enabled"}, "module_options": "touch {{ mysql_slow_query_log_file }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create datadir if it does not exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create datadir if it does not exist"}, "module_options": {"path": "{{ mysql_datadir }}", "state": "directory", "owner": "mysql", "group": "mysql", "mode": 493, "setype": "mysqld_db_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Set ownership on slow query log file (if configured).", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on slow query log file (if configured).", "when": "mysql_slow_query_log_enabled"}, "module_options": {"path": "{{ mysql_slow_query_log_file }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create error log file (if configured).", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create error log file (if configured).", "args": {"creates": "{{ mysql_log_error }}", "warn": false}, "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": "touch {{ mysql_log_error }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Set ownership on error log file (if configured).", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on error log file (if configured).", "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"path": "{{ mysql_log_error }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Ensure MySQL is started and enabled on boot.", "module": "service", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Ensure MySQL is started and enabled on boot.", "register": "mysql_service_configuration"}, "module_options": "name={{ mysql_daemon }} state=started enabled={{ mysql_enabled_on_startup }}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure MySQL users are present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml", "options": {"name": "Ensure MySQL users are present.", "with_items": "{{ mysql_users }}", "no_log": true}, "module_options": {"name": "{{ item.name }}", "host": "{{ item.host | default('localhost') }}", "password": "{{ item.password }}", "priv": "{{ item.priv | default('*.*:USAGE') }}", "state": "{{ item.state | default('present') }}", "append_privs": "{{ item.append_privs | default('no') }}", "encrypted": "{{ item.encrypted | default('no') }}"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure replication user exists on master.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Ensure replication user exists on master.", "when": ["mysql_replication_role == 'master'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"name": "{{ mysql_replication_user.name }}", "host": "{{ mysql_replication_user.host | default('%') }}", "password": "{{ mysql_replication_user.password }}", "priv": "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check slave replication status.", "module": "mysql_replication", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check slave replication status.", "ignore_errors": true, "register": "slave", "when": ["mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"mode": "getslave", "login_user": "{{ mysql_replication_user.name }}", "login_password": "{{ mysql_replication_user.password }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check master replication status.", "module": "mysql_replication", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check master replication status.", "delegate_to": "{{ mysql_replication_master }}", "register": "master", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=getmaster", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Configure replication on the slave.", "module": "mysql_replication", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Configure replication on the slave.", "ignore_errors": true, "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"]}, "module_options": {"mode": "changemaster", "master_host": "{{ mysql_replication_master }}", "master_user": "{{ mysql_replication_user.name }}", "master_password": "{{ mysql_replication_user.password }}", "master_log_file": "{{ master.File }}", "master_log_pos": "{{ master.Position }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Start replication.", "module": "mysql_replication", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Start replication.", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=startslave", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure MySQL databases are present.", "module": "mysql_db", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml", "options": {"name": "Ensure MySQL databases are present.", "with_items": "{{ mysql_databases }}"}, "module_options": {"name": "{{ item.name }}", "collation": "{{ item.collation | default('utf8_general_ci') }}", "encoding": "{{ item.encoding | default('utf8') }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}"}, "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check if MySQL is already installed.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Check if MySQL is already installed.", "register": "mysql_installed"}, "module_options": "path={{ mysql_config_file }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Update apt cache if MySQL is not yet installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Update apt cache if MySQL is not yet installed.", "changed_when": false, "when": "not mysql_installed.stat.exists"}, "module_options": "update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": {"name": "{{ mysql_python_package_debian }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "deb_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure MySQL is stopped after initial install.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL is stopped after initial install.", "when": "not mysql_installed.stat.exists"}, "module_options": "name={{ mysql_daemon }} state=stopped", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Delete innodb log files created by apt package after initial install.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Delete innodb log files created by apt package after initial install.", "with_items": ["ib_logfile0", "ib_logfile1"], "when": "not mysql_installed.stat.exists"}, "module_options": "path={{ mysql_datadir }}/{{ item }} state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Include OS-specific variables.", "with_first_found": [{"files": ["vars/{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "vars/{{ ansible_os_family }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Define mysql_packages.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_packages.", "when": "mysql_packages is not defined"}, "module_options": {"mysql_packages": "{{ __mysql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Define mysql_daemon.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_daemon.", "when": "mysql_daemon is not defined"}, "module_options": {"mysql_daemon": "{{ __mysql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Define mysql_slow_query_log_file.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_slow_query_log_file.", "when": "mysql_slow_query_log_file is not defined"}, "module_options": {"mysql_slow_query_log_file": "{{ __mysql_slow_query_log_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Define mysql_log_error.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_log_error.", "when": "mysql_log_error is not defined"}, "module_options": {"mysql_log_error": "{{ __mysql_log_error }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Define mysql_syslog_tag.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_syslog_tag.", "when": "mysql_syslog_tag is not defined"}, "module_options": {"mysql_syslog_tag": "{{ __mysql_syslog_tag }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Define mysql_pid_file.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_pid_file.", "when": "mysql_pid_file is not defined"}, "module_options": {"mysql_pid_file": "{{ __mysql_pid_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Define mysql_config_file.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_file.", "when": "mysql_config_file is not defined"}, "module_options": {"mysql_config_file": "{{ __mysql_config_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Define mysql_config_include_dir.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_include_dir.", "when": "mysql_config_include_dir is not defined"}, "module_options": {"mysql_config_include_dir": "{{ __mysql_config_include_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Define mysql_socket.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_socket.", "when": "mysql_socket is not defined"}, "module_options": {"mysql_socket": "{{ __mysql_socket }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Define mysql_supports_innodb_large_prefix.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_supports_innodb_large_prefix.", "when": "mysql_supports_innodb_large_prefix is not defined"}, "module_options": {"mysql_supports_innodb_large_prefix": "{{ __mysql_supports_innodb_large_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure default user is present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Ensure default user is present.", "when": "mysql_user_name != mysql_root_username"}, "module_options": {"name": "{{ mysql_user_name }}", "host": "localhost", "password": "{{ mysql_user_password }}", "priv": "*.*:ALL,GRANT", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy user-my.cnf file with password credentials.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy user-my.cnf file with password credentials.", "when": "mysql_user_name != mysql_root_username and (mysql_install_packages | bool or mysql_user_password_update)\n"}, "module_options": {"src": "user-my.cnf.j2", "dest": "{{ mysql_user_home }}/.my.cnf", "owner": "{{ mysql_user_name }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Disallow root login remotely", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Disallow root login remotely", "with_items": ["DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"], "changed_when": false}, "module_options": "mysql -NBe \"{{ item }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Get list of hosts for the root user.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the root user.", "register": "mysql_root_hosts", "changed_when": false, "check_mode": false, "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": "mysql -NBe \"SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (5.7.x).", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout)\n"}, "module_options": "mysql -u root -NBe 'ALTER USER \"{{ mysql_root_username }}\"@\"{{ item }}\" IDENTIFIED WITH mysql_native_password BY \"{{ mysql_root_password }}\"; FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (< 5.7.x).", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (< 5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' not in mysql_cli_version.stdout and '8.0.' not in mysql_cli_version.stdout)\n"}, "module_options": "mysql -NBe 'SET PASSWORD FOR \"{{ mysql_root_username }}\"@\"{{ item }}\" = PASSWORD(\"{{ mysql_root_password }}\"); FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Copy .my.cnf file with root password credentials.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy .my.cnf file with root password credentials.", "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": {"src": "root-my.cnf.j2", "dest": "{{ mysql_root_home }}/.my.cnf", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Get list of hosts for the anonymous user.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the anonymous user.", "register": "mysql_anonymous_hosts", "changed_when": false, "check_mode": false}, "module_options": "mysql -NBe 'SELECT Host FROM mysql.user WHERE User = \"\"'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Remove anonymous MySQL users.", "module": "mysql_user", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove anonymous MySQL users.", "with_items": "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"}, "module_options": {"name": "", "host": "{{ item }}", "state": "absent"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Remove MySQL test database.", "module": "mysql_db", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove MySQL test database."}, "module_options": "name='test' state=absent", "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": "name=mysql-python state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "pacman", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "arch_mysql_install_packages"}, "module_options": "name={{ mysql_packages }} state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Run mysql_install_db if MySQL packages were changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Run mysql_install_db if MySQL packages were changed.", "when": "arch_mysql_install_packages.changed", "tags": ["skip_ansible_lint"]}, "module_options": "mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check if MySQL packages were installed.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"name": "Check if MySQL packages were installed."}, "module_options": {"mysql_install_packages": "{{ (rh_mysql_install_packages is defined and rh_mysql_install_packages.changed) or (deb_mysql_install_packages is defined and deb_mysql_install_packages.changed) or (arch_mysql_install_packages is defined and arch_mysql_install_packages.changed) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "secure-installation.yml", "executable": "secure-installation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "replication.yml", "executable": "replication.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "rh_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present", "enablerepo": "{{ mysql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get MySQL version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Get MySQL version.", "register": "mysql_cli_version", "changed_when": false, "check_mode": false}, "module_options": "mysql --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy my.cnf global MySQL configuration.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf global MySQL configuration.", "notify": "restart mysql"}, "module_options": {"src": "my.cnf.j2", "dest": "{{ mysql_config_file }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ overwrite_global_mycnf }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify mysql include directory exists.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Verify mysql include directory exists.", "when": "mysql_config_include_files | length"}, "module_options": {"path": "{{ mysql_config_include_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy my.cnf override files into include directory.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf override files into include directory.", "with_items": "{{ mysql_config_include_files }}", "notify": "restart mysql"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ mysql_config_include_dir }}/{{ item.src | basename }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ item.force | default(False) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create slow query log file (if configured).", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create slow query log file (if configured).", "args": {"creates": "{{ mysql_slow_query_log_file }}", "warn": false}, "when": "mysql_slow_query_log_enabled"}, "module_options": "touch {{ mysql_slow_query_log_file }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create datadir if it does not exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create datadir if it does not exist"}, "module_options": {"path": "{{ mysql_datadir }}", "state": "directory", "owner": "mysql", "group": "mysql", "mode": 493, "setype": "mysqld_db_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ownership on slow query log file (if configured).", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on slow query log file (if configured).", "when": "mysql_slow_query_log_enabled"}, "module_options": {"path": "{{ mysql_slow_query_log_file }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create error log file (if configured).", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create error log file (if configured).", "args": {"creates": "{{ mysql_log_error }}", "warn": false}, "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": "touch {{ mysql_log_error }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ownership on error log file (if configured).", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on error log file (if configured).", "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"path": "{{ mysql_log_error }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL is started and enabled on boot.", "module": "service", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Ensure MySQL is started and enabled on boot.", "register": "mysql_service_configuration"}, "module_options": "name={{ mysql_daemon }} state=started enabled={{ mysql_enabled_on_startup }}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml": {"py/object": "struct4.TaskFile", "name": "users.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL users are present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml", "options": {"name": "Ensure MySQL users are present.", "with_items": "{{ mysql_users }}", "no_log": true}, "module_options": {"name": "{{ item.name }}", "host": "{{ item.host | default('localhost') }}", "password": "{{ item.password }}", "priv": "{{ item.priv | default('*.*:USAGE') }}", "state": "{{ item.state | default('present') }}", "append_privs": "{{ item.append_privs | default('no') }}", "encrypted": "{{ item.encrypted | default('no') }}"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml": {"py/object": "struct4.TaskFile", "name": "replication.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure replication user exists on master.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Ensure replication user exists on master.", "when": ["mysql_replication_role == 'master'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"name": "{{ mysql_replication_user.name }}", "host": "{{ mysql_replication_user.host | default('%') }}", "password": "{{ mysql_replication_user.password }}", "priv": "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check slave replication status.", "module": "mysql_replication", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check slave replication status.", "ignore_errors": true, "register": "slave", "when": ["mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"mode": "getslave", "login_user": "{{ mysql_replication_user.name }}", "login_password": "{{ mysql_replication_user.password }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check master replication status.", "module": "mysql_replication", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check master replication status.", "delegate_to": "{{ mysql_replication_master }}", "register": "master", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=getmaster", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure replication on the slave.", "module": "mysql_replication", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Configure replication on the slave.", "ignore_errors": true, "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"]}, "module_options": {"mode": "changemaster", "master_host": "{{ mysql_replication_master }}", "master_user": "{{ mysql_replication_user.name }}", "master_password": "{{ mysql_replication_user.password }}", "master_log_file": "{{ master.File }}", "master_log_pos": "{{ master.Position }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start replication.", "module": "mysql_replication", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Start replication.", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=startslave", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml": {"py/object": "struct4.TaskFile", "name": "databases.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL databases are present.", "module": "mysql_db", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml", "options": {"name": "Ensure MySQL databases are present.", "with_items": "{{ mysql_databases }}"}, "module_options": {"name": "{{ item.name }}", "collation": "{{ item.collation | default('utf8_general_ci') }}", "encoding": "{{ item.encoding | default('utf8') }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}"}, "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml": {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if MySQL is already installed.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Check if MySQL is already installed.", "register": "mysql_installed"}, "module_options": "path={{ mysql_config_file }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt cache if MySQL is not yet installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Update apt cache if MySQL is not yet installed.", "changed_when": false, "when": "not mysql_installed.stat.exists"}, "module_options": "update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": {"name": "{{ mysql_python_package_debian }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "deb_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL is stopped after initial install.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL is stopped after initial install.", "when": "not mysql_installed.stat.exists"}, "module_options": "name={{ mysql_daemon }} state=stopped", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete innodb log files created by apt package after initial install.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Delete innodb log files created by apt package after initial install.", "with_items": ["ib_logfile0", "ib_logfile1"], "when": "not mysql_installed.stat.exists"}, "module_options": "path={{ mysql_datadir }}/{{ item }} state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml": {"py/object": "struct4.TaskFile", "name": "variables.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Include OS-specific variables.", "with_first_found": [{"files": ["vars/{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "vars/{{ ansible_os_family }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_packages.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_packages.", "when": "mysql_packages is not defined"}, "module_options": {"mysql_packages": "{{ __mysql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_daemon.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_daemon.", "when": "mysql_daemon is not defined"}, "module_options": {"mysql_daemon": "{{ __mysql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_slow_query_log_file.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_slow_query_log_file.", "when": "mysql_slow_query_log_file is not defined"}, "module_options": {"mysql_slow_query_log_file": "{{ __mysql_slow_query_log_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_log_error.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_log_error.", "when": "mysql_log_error is not defined"}, "module_options": {"mysql_log_error": "{{ __mysql_log_error }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_syslog_tag.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_syslog_tag.", "when": "mysql_syslog_tag is not defined"}, "module_options": {"mysql_syslog_tag": "{{ __mysql_syslog_tag }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_pid_file.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_pid_file.", "when": "mysql_pid_file is not defined"}, "module_options": {"mysql_pid_file": "{{ __mysql_pid_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_config_file.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_file.", "when": "mysql_config_file is not defined"}, "module_options": {"mysql_config_file": "{{ __mysql_config_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_config_include_dir.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_include_dir.", "when": "mysql_config_include_dir is not defined"}, "module_options": {"mysql_config_include_dir": "{{ __mysql_config_include_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_socket.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_socket.", "when": "mysql_socket is not defined"}, "module_options": {"mysql_socket": "{{ __mysql_socket }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_supports_innodb_large_prefix.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_supports_innodb_large_prefix.", "when": "mysql_supports_innodb_large_prefix is not defined"}, "module_options": {"mysql_supports_innodb_large_prefix": "{{ __mysql_supports_innodb_large_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml": {"py/object": "struct4.TaskFile", "name": "secure-installation.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure default user is present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Ensure default user is present.", "when": "mysql_user_name != mysql_root_username"}, "module_options": {"name": "{{ mysql_user_name }}", "host": "localhost", "password": "{{ mysql_user_password }}", "priv": "*.*:ALL,GRANT", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy user-my.cnf file with password credentials.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy user-my.cnf file with password credentials.", "when": "mysql_user_name != mysql_root_username and (mysql_install_packages | bool or mysql_user_password_update)\n"}, "module_options": {"src": "user-my.cnf.j2", "dest": "{{ mysql_user_home }}/.my.cnf", "owner": "{{ mysql_user_name }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disallow root login remotely", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Disallow root login remotely", "with_items": ["DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"], "changed_when": false}, "module_options": "mysql -NBe \"{{ item }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of hosts for the root user.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the root user.", "register": "mysql_root_hosts", "changed_when": false, "check_mode": false, "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": "mysql -NBe \"SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (5.7.x).", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout)\n"}, "module_options": "mysql -u root -NBe 'ALTER USER \"{{ mysql_root_username }}\"@\"{{ item }}\" IDENTIFIED WITH mysql_native_password BY \"{{ mysql_root_password }}\"; FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (< 5.7.x).", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (< 5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' not in mysql_cli_version.stdout and '8.0.' not in mysql_cli_version.stdout)\n"}, "module_options": "mysql -NBe 'SET PASSWORD FOR \"{{ mysql_root_username }}\"@\"{{ item }}\" = PASSWORD(\"{{ mysql_root_password }}\"); FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy .my.cnf file with root password credentials.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy .my.cnf file with root password credentials.", "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": {"src": "root-my.cnf.j2", "dest": "{{ mysql_root_home }}/.my.cnf", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of hosts for the anonymous user.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the anonymous user.", "register": "mysql_anonymous_hosts", "changed_when": false, "check_mode": false}, "module_options": "mysql -NBe 'SELECT Host FROM mysql.user WHERE User = \"\"'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove anonymous MySQL users.", "module": "mysql_user", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove anonymous MySQL users.", "with_items": "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"}, "module_options": {"name": "", "host": "{{ item }}", "state": "absent"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove MySQL test database.", "module": "mysql_db", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove MySQL test database."}, "module_options": "name='test' state=absent", "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml": {"py/object": "struct4.TaskFile", "name": "setup-Archlinux.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": "name=mysql-python state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "pacman", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "arch_mysql_install_packages"}, "module_options": "name={{ mysql_packages }} state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run mysql_install_db if MySQL packages were changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Run mysql_install_db if MySQL packages were changed.", "when": "arch_mysql_install_packages.changed", "tags": ["skip_ansible_lint"]}, "module_options": "mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if MySQL packages were installed.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"name": "Check if MySQL packages were installed."}, "module_options": {"mysql_install_packages": "{{ (rh_mysql_install_packages is defined and rh_mysql_install_packages.changed) or (deb_mysql_install_packages is defined and deb_mysql_install_packages.changed) or (arch_mysql_install_packages is defined and arch_mysql_install_packages.changed) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "secure-installation.yml", "executable": "secure-installation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "replication.yml", "executable": "replication.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "rh_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present", "enablerepo": "{{ mysql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.mysql": {"py/object": "struct4.Role", "name": "geerlingguy.mysql", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql", "fqcn": "geerlingguy.mysql", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get MySQL version.", "module": "command", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Get MySQL version.", "register": "mysql_cli_version", "changed_when": false, "check_mode": false}, "module_options": "mysql --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy my.cnf global MySQL configuration.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf global MySQL configuration.", "notify": "restart mysql"}, "module_options": {"src": "my.cnf.j2", "dest": "{{ mysql_config_file }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ overwrite_global_mycnf }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify mysql include directory exists.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Verify mysql include directory exists.", "when": "mysql_config_include_files | length"}, "module_options": {"path": "{{ mysql_config_include_dir }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy my.cnf override files into include directory.", "module": "template", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Copy my.cnf override files into include directory.", "with_items": "{{ mysql_config_include_files }}", "notify": "restart mysql"}, "module_options": {"src": "{{ item.src }}", "dest": "{{ mysql_config_include_dir }}/{{ item.src | basename }}", "owner": "root", "group": "root", "mode": 420, "force": "{{ item.force | default(False) }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create slow query log file (if configured).", "module": "command", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create slow query log file (if configured).", "args": {"creates": "{{ mysql_slow_query_log_file }}", "warn": false}, "when": "mysql_slow_query_log_enabled"}, "module_options": "touch {{ mysql_slow_query_log_file }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create datadir if it does not exist", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create datadir if it does not exist"}, "module_options": {"path": "{{ mysql_datadir }}", "state": "directory", "owner": "mysql", "group": "mysql", "mode": 493, "setype": "mysqld_db_t"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ownership on slow query log file (if configured).", "module": "file", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on slow query log file (if configured).", "when": "mysql_slow_query_log_enabled"}, "module_options": {"path": "{{ mysql_slow_query_log_file }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create error log file (if configured).", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Create error log file (if configured).", "args": {"creates": "{{ mysql_log_error }}", "warn": false}, "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": "touch {{ mysql_log_error }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set ownership on error log file (if configured).", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Set ownership on error log file (if configured).", "when": ["mysql_log | default(true)", "mysql_log_error | default(false)"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"path": "{{ mysql_log_error }}", "state": "file", "owner": "mysql", "group": "{{ mysql_log_file_group }}", "mode": 416}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL is started and enabled on boot.", "module": "service", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/configure.yml", "options": {"name": "Ensure MySQL is started and enabled on boot.", "register": "mysql_service_configuration"}, "module_options": "name={{ mysql_daemon }} state=started enabled={{ mysql_enabled_on_startup }}", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "users.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL users are present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/users.yml", "options": {"name": "Ensure MySQL users are present.", "with_items": "{{ mysql_users }}", "no_log": true}, "module_options": {"name": "{{ item.name }}", "host": "{{ item.host | default('localhost') }}", "password": "{{ item.password }}", "priv": "{{ item.priv | default('*.*:USAGE') }}", "state": "{{ item.state | default('present') }}", "append_privs": "{{ item.append_privs | default('no') }}", "encrypted": "{{ item.encrypted | default('no') }}"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "replication.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure replication user exists on master.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Ensure replication user exists on master.", "when": ["mysql_replication_role == 'master'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"name": "{{ mysql_replication_user.name }}", "host": "{{ mysql_replication_user.host | default('%') }}", "password": "{{ mysql_replication_user.password }}", "priv": "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check slave replication status.", "module": "mysql_replication", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check slave replication status.", "ignore_errors": true, "register": "slave", "when": ["mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": {"mode": "getslave", "login_user": "{{ mysql_replication_user.name }}", "login_password": "{{ mysql_replication_user.password }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check master replication status.", "module": "mysql_replication", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Check master replication status.", "delegate_to": "{{ mysql_replication_master }}", "register": "master", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=getmaster", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure replication on the slave.", "module": "mysql_replication", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Configure replication on the slave.", "ignore_errors": true, "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "mysql_replication_user.name is defined", "(mysql_replication_master | length) > 0"]}, "module_options": {"mode": "changemaster", "master_host": "{{ mysql_replication_master }}", "master_user": "{{ mysql_replication_user.name }}", "master_password": "{{ mysql_replication_user.password }}", "master_log_file": "{{ master.File }}", "master_log_pos": "{{ master.Position }}"}, "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start replication.", "module": "mysql_replication", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/replication.yml", "options": {"name": "Start replication.", "when": ["(slave.Is_Slave is defined and not slave.Is_Slave) or (slave.Is_Slave is not defined and slave is failed)", "mysql_replication_role == 'slave'", "(mysql_replication_master | length) > 0"], "tags": ["skip_ansible_galaxy"]}, "module_options": "mode=startslave", "executable": "mysql_replication", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "databases.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL databases are present.", "module": "mysql_db", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/databases.yml", "options": {"name": "Ensure MySQL databases are present.", "with_items": "{{ mysql_databases }}"}, "module_options": {"name": "{{ item.name }}", "collation": "{{ item.collation | default('utf8_general_ci') }}", "encoding": "{{ item.encoding | default('utf8') }}", "state": "{{ item.state | default('present') }}", "target": "{{ item.target | default(omit) }}"}, "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if MySQL is already installed.", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Check if MySQL is already installed.", "register": "mysql_installed"}, "module_options": "path={{ mysql_config_file }}", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt cache if MySQL is not yet installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Update apt cache if MySQL is not yet installed.", "changed_when": false, "when": "not mysql_installed.stat.exists"}, "module_options": "update_cache=yes", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": {"name": "{{ mysql_python_package_debian }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "deb_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL is stopped after initial install.", "module": "service", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Ensure MySQL is stopped after initial install.", "when": "not mysql_installed.stat.exists"}, "module_options": "name={{ mysql_daemon }} state=stopped", "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete innodb log files created by apt package after initial install.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Debian.yml", "options": {"name": "Delete innodb log files created by apt package after initial install.", "with_items": ["ib_logfile0", "ib_logfile1"], "when": "not mysql_installed.stat.exists"}, "module_options": "path={{ mysql_datadir }}/{{ item }} state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "variables.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Include OS-specific variables.", "with_first_found": [{"files": ["vars/{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml", "vars/{{ ansible_os_family }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_packages.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_packages.", "when": "mysql_packages is not defined"}, "module_options": {"mysql_packages": "{{ __mysql_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_daemon.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_daemon.", "when": "mysql_daemon is not defined"}, "module_options": {"mysql_daemon": "{{ __mysql_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_slow_query_log_file.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_slow_query_log_file.", "when": "mysql_slow_query_log_file is not defined"}, "module_options": {"mysql_slow_query_log_file": "{{ __mysql_slow_query_log_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_log_error.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_log_error.", "when": "mysql_log_error is not defined"}, "module_options": {"mysql_log_error": "{{ __mysql_log_error }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_syslog_tag.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_syslog_tag.", "when": "mysql_syslog_tag is not defined"}, "module_options": {"mysql_syslog_tag": "{{ __mysql_syslog_tag }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_pid_file.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_pid_file.", "when": "mysql_pid_file is not defined"}, "module_options": {"mysql_pid_file": "{{ __mysql_pid_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_config_file.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_file.", "when": "mysql_config_file is not defined"}, "module_options": {"mysql_config_file": "{{ __mysql_config_file }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_config_include_dir.", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_config_include_dir.", "when": "mysql_config_include_dir is not defined"}, "module_options": {"mysql_config_include_dir": "{{ __mysql_config_include_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_socket.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_socket.", "when": "mysql_socket is not defined"}, "module_options": {"mysql_socket": "{{ __mysql_socket }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define mysql_supports_innodb_large_prefix.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/variables.yml", "options": {"name": "Define mysql_supports_innodb_large_prefix.", "when": "mysql_supports_innodb_large_prefix is not defined"}, "module_options": {"mysql_supports_innodb_large_prefix": "{{ __mysql_supports_innodb_large_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "secure-installation.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure default user is present.", "module": "mysql_user", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Ensure default user is present.", "when": "mysql_user_name != mysql_root_username"}, "module_options": {"name": "{{ mysql_user_name }}", "host": "localhost", "password": "{{ mysql_user_password }}", "priv": "*.*:ALL,GRANT", "state": "present"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy user-my.cnf file with password credentials.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy user-my.cnf file with password credentials.", "when": "mysql_user_name != mysql_root_username and (mysql_install_packages | bool or mysql_user_password_update)\n"}, "module_options": {"src": "user-my.cnf.j2", "dest": "{{ mysql_user_home }}/.my.cnf", "owner": "{{ mysql_user_name }}", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Disallow root login remotely", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Disallow root login remotely", "with_items": ["DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"], "changed_when": false}, "module_options": "mysql -NBe \"{{ item }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of hosts for the root user.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the root user.", "register": "mysql_root_hosts", "changed_when": false, "check_mode": false, "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": "mysql -NBe \"SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (5.7.x).", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' in mysql_cli_version.stdout or '8.0.' in mysql_cli_version.stdout)\n"}, "module_options": "mysql -u root -NBe 'ALTER USER \"{{ mysql_root_username }}\"@\"{{ item }}\" IDENTIFIED WITH mysql_native_password BY \"{{ mysql_root_password }}\"; FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update MySQL root password for localhost root account (< 5.7.x).", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Update MySQL root password for localhost root account (< 5.7.x).", "with_items": "{{ mysql_root_hosts.stdout_lines|default([]) }}", "when": "((mysql_install_packages | bool) or mysql_root_password_update) and ('5.7.' not in mysql_cli_version.stdout and '8.0.' not in mysql_cli_version.stdout)\n"}, "module_options": "mysql -NBe 'SET PASSWORD FOR \"{{ mysql_root_username }}\"@\"{{ item }}\" = PASSWORD(\"{{ mysql_root_password }}\"); FLUSH PRIVILEGES;'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy .my.cnf file with root password credentials.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Copy .my.cnf file with root password credentials.", "when": "mysql_install_packages | bool or mysql_root_password_update"}, "module_options": {"src": "root-my.cnf.j2", "dest": "{{ mysql_root_home }}/.my.cnf", "owner": "root", "group": "root", "mode": 384}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get list of hosts for the anonymous user.", "module": "command", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Get list of hosts for the anonymous user.", "register": "mysql_anonymous_hosts", "changed_when": false, "check_mode": false}, "module_options": "mysql -NBe 'SELECT Host FROM mysql.user WHERE User = \"\"'", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove anonymous MySQL users.", "module": "mysql_user", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove anonymous MySQL users.", "with_items": "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"}, "module_options": {"name": "", "host": "{{ item }}", "state": "absent"}, "executable": "mysql_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove MySQL test database.", "module": "mysql_db", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/secure-installation.yml", "options": {"name": "Remove MySQL test database."}, "module_options": "name='test' state=absent", "executable": "mysql_db", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Archlinux.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL Python libraries are installed.", "module": "pacman", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL Python libraries are installed."}, "module_options": "name=mysql-python state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "pacman", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "arch_mysql_install_packages"}, "module_options": "name={{ mysql_packages }} state=present", "executable": "pacman", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run mysql_install_db if MySQL packages were changed.", "module": "command", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-Archlinux.yml", "options": {"name": "Run mysql_install_db if MySQL packages were changed.", "when": "arch_mysql_install_packages.changed", "tags": ["skip_ansible_lint"]}, "module_options": "mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "variables.yml", "executable": "variables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Debian'"}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"when": "ansible_os_family == 'Archlinux'"}, "module_options": "setup-Archlinux.yml", "executable": "setup-Archlinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if MySQL packages were installed.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {"name": "Check if MySQL packages were installed."}, "module_options": {"mysql_install_packages": "{{ (rh_mysql_install_packages is defined and rh_mysql_install_packages.changed) or (deb_mysql_install_packages is defined and deb_mysql_install_packages.changed) or (arch_mysql_install_packages is defined and arch_mysql_install_packages.changed) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "secure-installation.yml", "executable": "secure-installation.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "databases.yml", "executable": "databases.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "users.yml", "executable": "users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/main.yml", "options": {}, "module_options": "replication.yml", "executable": "replication.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure MySQL packages are installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-mysql/geerlingguy.mysql/tasks/setup-RedHat.yml", "options": {"name": "Ensure MySQL packages are installed.", "register": "rh_mysql_install_packages"}, "module_options": {"name": "{{ mysql_packages }}", "state": "present", "enablerepo": "{{ mysql_enablerepo | default(omit, true) }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "geerlingguy.mysql", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}