{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/igor_nikiforov-docker", "installed_roles": [{"py/object": "struct4.Role", "name": "igor_nikiforov.docker", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker", "fqcn": "igor_nikiforov.docker", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "configure-docker-daemon.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml", "options": {"name": "Configure Docker daemon.", "notify": "restart docker"}, "module_options": {"src": "daemon.json.j2", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-compose.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml", "options": {"name": "Install Docker Compose."}, "module_options": {"name": "docker-compose", "state": "{{ 'latest' if docker_compose_version == 'latest' else 'present' }}", "version": "{{ docker_compose_version if docker_compose_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-bash-completion.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml", "options": {"name": "Install Docker bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/cli/{{ 'master' if docker_version == 'latest' else 'v'+docker_version }}/contrib/completion/bash/docker", "dest": "/etc/bash_completion.d/docker", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-sdk-for-python.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml", "options": {"name": "Install Docker SDK for Python."}, "module_options": {"name": "docker", "state": "{{ 'latest' if docker_sdk_for_python_version == 'latest' else 'present' }}", "version": "{{ docker_sdk_for_python_version if docker_sdk_for_python_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-RHEL.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "dnf", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/docker-ce.repo", "dest": "/etc/yum.repos.d/docker-ce.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "dnf", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "add-docker-users.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure docker group exists.", "module": "group", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Ensure docker group exists."}, "module_options": {"name": "docker", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add docker users to the docker group.", "module": "user", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Add docker users to the docker group.", "loop": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "detect-architecture.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if architecture is supported.", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Check if architecture is supported.", "when": "ansible_architecture not in docker_supported_architectures"}, "module_options": {"msg": "{{ ansible_architecture }} is not supported by Docker!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for x86_64/AMD64.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for x86_64/AMD64.", "when": "ansible_architecture == \"x86_64\""}, "module_options": {"arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for ARM64.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for ARM64.", "when": "ansible_architecture == \"arm64\""}, "module_options": {"arch": "arm64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for armhf.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for armhf.", "when": "ansible_architecture == \"armhf\""}, "module_options": {"arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for s390x", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for s390x", "when": "ansible_architecture == \"s390x\""}, "module_options": {"arch": "s390x"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-compose-bash-completion.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml", "options": {"name": "Install Docker Compose bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/compose/{{ 'master' if docker_compose_version == 'latest' else 'v'+docker_compose_version }}/contrib/completion/bash/docker-compose", "dest": "/etc/bash_completion.d/docker-compose", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-Debian.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine", "docker.io", "containerd", "runc"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Add Docker apt key."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"repo": "deb [arch={{ arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Install Docker."}, "module_options": {"name": ["docker-ce{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Detect architecture.", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Detect architecture."}, "module_options": "detect-architecture.yml", "executable": "detect-architecture.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (RHEL).", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (RHEL).", "when": "ansible_os_family == 'RedHat'"}, "module_options": "install-docker-RHEL.yml", "executable": "install-docker-RHEL.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (Debian).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "install-docker-Debian.yml", "executable": "install-docker-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker bash completion.", "when": "docker_bash_completion_install"}, "module_options": "install-docker-bash-completion.yml", "executable": "install-docker-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}.", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}."}, "module_options": {"name": "docker", "enabled": "{{ docker_service_enabled }}", "state": "{{ docker_service_state }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon.", "when": "docker_daemon_config | length > 0"}, "module_options": "configure-docker-daemon.yml", "executable": "configure-docker-daemon.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Docker.", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Restart Docker."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users to docker group.", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Add users to docker group.", "when": "docker_users | length > 0"}, "module_options": "add-docker-users.yml", "executable": "add-docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker SDK for Python.", "when": "docker_sdk_for_python_install"}, "module_options": "install-docker-sdk-for-python.yml", "executable": "install-docker-sdk-for-python.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose.", "when": "docker_compose_install"}, "module_options": "install-docker-compose.yml", "executable": "install-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose bash completion.", "when": "docker_compose_install and docker_compose_bash_completion_install"}, "module_options": "install-docker-compose-bash-completion.yml", "executable": "install-docker-compose-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml", "options": {"name": "Configure Docker daemon.", "notify": "restart docker"}, "module_options": {"src": "daemon.json.j2", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml", "options": {"name": "Install Docker Compose."}, "module_options": {"name": "docker-compose", "state": "{{ 'latest' if docker_compose_version == 'latest' else 'present' }}", "version": "{{ docker_compose_version if docker_compose_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml", "options": {"name": "Install Docker bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/cli/{{ 'master' if docker_version == 'latest' else 'v'+docker_version }}/contrib/completion/bash/docker", "dest": "/etc/bash_completion.d/docker", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml", "options": {"name": "Install Docker SDK for Python."}, "module_options": {"name": "docker", "state": "{{ 'latest' if docker_sdk_for_python_version == 'latest' else 'present' }}", "version": "{{ docker_sdk_for_python_version if docker_sdk_for_python_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "dnf", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/docker-ce.repo", "dest": "/etc/yum.repos.d/docker-ce.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install Docker.", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install Docker.", "module": "dnf", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure docker group exists.", "module": "group", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Ensure docker group exists."}, "module_options": {"name": "docker", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add docker users to the docker group.", "module": "user", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Add docker users to the docker group.", "loop": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check if architecture is supported.", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Check if architecture is supported.", "when": "ansible_architecture not in docker_supported_architectures"}, "module_options": {"msg": "{{ ansible_architecture }} is not supported by Docker!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set system architecture for x86_64/AMD64.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for x86_64/AMD64.", "when": "ansible_architecture == \"x86_64\""}, "module_options": {"arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set system architecture for ARM64.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for ARM64.", "when": "ansible_architecture == \"arm64\""}, "module_options": {"arch": "arm64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set system architecture for armhf.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for armhf.", "when": "ansible_architecture == \"armhf\""}, "module_options": {"arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Set system architecture for s390x", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for s390x", "when": "ansible_architecture == \"s390x\""}, "module_options": {"arch": "s390x"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml", "options": {"name": "Install Docker Compose bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/compose/{{ 'master' if docker_compose_version == 'latest' else 'v'+docker_compose_version }}/contrib/completion/bash/docker-compose", "dest": "/etc/bash_completion.d/docker-compose", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine", "docker.io", "containerd", "runc"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Add Docker apt key."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"repo": "deb [arch={{ arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install Docker.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Install Docker."}, "module_options": {"name": ["docker-ce{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Detect architecture.", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Detect architecture."}, "module_options": "detect-architecture.yml", "executable": "detect-architecture.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install Docker (RHEL).", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (RHEL).", "when": "ansible_os_family == 'RedHat'"}, "module_options": "install-docker-RHEL.yml", "executable": "install-docker-RHEL.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install Docker (Debian).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "install-docker-Debian.yml", "executable": "install-docker-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker bash completion.", "when": "docker_bash_completion_install"}, "module_options": "install-docker-bash-completion.yml", "executable": "install-docker-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}.", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}."}, "module_options": {"name": "docker", "enabled": "{{ docker_service_enabled }}", "state": "{{ docker_service_state }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon.", "when": "docker_daemon_config | length > 0"}, "module_options": "configure-docker-daemon.yml", "executable": "configure-docker-daemon.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Restart Docker.", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Restart Docker."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Add users to docker group.", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Add users to docker group.", "when": "docker_users | length > 0"}, "module_options": "add-docker-users.yml", "executable": "add-docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker SDK for Python.", "when": "docker_sdk_for_python_install"}, "module_options": "install-docker-sdk-for-python.yml", "executable": "install-docker-sdk-for-python.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose.", "when": "docker_compose_install"}, "module_options": "install-docker-compose.yml", "executable": "install-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose bash completion.", "when": "docker_compose_install and docker_compose_bash_completion_install"}, "module_options": "install-docker-compose-bash-completion.yml", "executable": "install-docker-compose-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml": {"py/object": "struct4.TaskFile", "name": "configure-docker-daemon.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml", "options": {"name": "Configure Docker daemon.", "notify": "restart docker"}, "module_options": {"src": "daemon.json.j2", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml": {"py/object": "struct4.TaskFile", "name": "install-docker-compose.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml", "options": {"name": "Install Docker Compose."}, "module_options": {"name": "docker-compose", "state": "{{ 'latest' if docker_compose_version == 'latest' else 'present' }}", "version": "{{ docker_compose_version if docker_compose_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml": {"py/object": "struct4.TaskFile", "name": "install-docker-bash-completion.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml", "options": {"name": "Install Docker bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/cli/{{ 'master' if docker_version == 'latest' else 'v'+docker_version }}/contrib/completion/bash/docker", "dest": "/etc/bash_completion.d/docker", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml": {"py/object": "struct4.TaskFile", "name": "install-docker-sdk-for-python.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml", "options": {"name": "Install Docker SDK for Python."}, "module_options": {"name": "docker", "state": "{{ 'latest' if docker_sdk_for_python_version == 'latest' else 'present' }}", "version": "{{ docker_sdk_for_python_version if docker_sdk_for_python_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml": {"py/object": "struct4.TaskFile", "name": "install-docker-RHEL.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "dnf", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/docker-ce.repo", "dest": "/etc/yum.repos.d/docker-ce.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "dnf", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml": {"py/object": "struct4.TaskFile", "name": "add-docker-users.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure docker group exists.", "module": "group", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Ensure docker group exists."}, "module_options": {"name": "docker", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add docker users to the docker group.", "module": "user", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Add docker users to the docker group.", "loop": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml": {"py/object": "struct4.TaskFile", "name": "detect-architecture.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if architecture is supported.", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Check if architecture is supported.", "when": "ansible_architecture not in docker_supported_architectures"}, "module_options": {"msg": "{{ ansible_architecture }} is not supported by Docker!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for x86_64/AMD64.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for x86_64/AMD64.", "when": "ansible_architecture == \"x86_64\""}, "module_options": {"arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for ARM64.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for ARM64.", "when": "ansible_architecture == \"arm64\""}, "module_options": {"arch": "arm64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for armhf.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for armhf.", "when": "ansible_architecture == \"armhf\""}, "module_options": {"arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for s390x", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for s390x", "when": "ansible_architecture == \"s390x\""}, "module_options": {"arch": "s390x"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml": {"py/object": "struct4.TaskFile", "name": "install-docker-compose-bash-completion.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml", "options": {"name": "Install Docker Compose bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/compose/{{ 'master' if docker_compose_version == 'latest' else 'v'+docker_compose_version }}/contrib/completion/bash/docker-compose", "dest": "/etc/bash_completion.d/docker-compose", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml": {"py/object": "struct4.TaskFile", "name": "install-docker-Debian.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine", "docker.io", "containerd", "runc"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Add Docker apt key."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"repo": "deb [arch={{ arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Install Docker."}, "module_options": {"name": ["docker-ce{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Detect architecture.", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Detect architecture."}, "module_options": "detect-architecture.yml", "executable": "detect-architecture.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (RHEL).", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (RHEL).", "when": "ansible_os_family == 'RedHat'"}, "module_options": "install-docker-RHEL.yml", "executable": "install-docker-RHEL.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (Debian).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "install-docker-Debian.yml", "executable": "install-docker-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker bash completion.", "when": "docker_bash_completion_install"}, "module_options": "install-docker-bash-completion.yml", "executable": "install-docker-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}.", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}."}, "module_options": {"name": "docker", "enabled": "{{ docker_service_enabled }}", "state": "{{ docker_service_state }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon.", "when": "docker_daemon_config | length > 0"}, "module_options": "configure-docker-daemon.yml", "executable": "configure-docker-daemon.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Docker.", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Restart Docker."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users to docker group.", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Add users to docker group.", "when": "docker_users | length > 0"}, "module_options": "add-docker-users.yml", "executable": "add-docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker SDK for Python.", "when": "docker_sdk_for_python_install"}, "module_options": "install-docker-sdk-for-python.yml", "executable": "install-docker-sdk-for-python.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose.", "when": "docker_compose_install"}, "module_options": "install-docker-compose.yml", "executable": "install-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose bash completion.", "when": "docker_compose_install and docker_compose_bash_completion_install"}, "module_options": "install-docker-compose-bash-completion.yml", "executable": "install-docker-compose-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}}, "role_dict": {"igor_nikiforov.docker": {"py/object": "struct4.Role", "name": "igor_nikiforov.docker", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker", "fqcn": "igor_nikiforov.docker", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "configure-docker-daemon.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/configure-docker-daemon.yml", "options": {"name": "Configure Docker daemon.", "notify": "restart docker"}, "module_options": {"src": "daemon.json.j2", "dest": "/etc/docker/daemon.json", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-compose.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose.yml", "options": {"name": "Install Docker Compose."}, "module_options": {"name": "docker-compose", "state": "{{ 'latest' if docker_compose_version == 'latest' else 'present' }}", "version": "{{ docker_compose_version if docker_compose_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-bash-completion.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-bash-completion.yml", "options": {"name": "Install Docker bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/cli/{{ 'master' if docker_version == 'latest' else 'v'+docker_version }}/contrib/completion/bash/docker", "dest": "/etc/bash_completion.d/docker", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-sdk-for-python.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-sdk-for-python.yml", "options": {"name": "Install Docker SDK for Python."}, "module_options": {"name": "docker", "state": "{{ 'latest' if docker_sdk_for_python_version == 'latest' else 'present' }}", "version": "{{ docker_sdk_for_python_version if docker_sdk_for_python_version != 'latest' else omit }}"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-RHEL.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "dnf", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Ensure old versions of Docker are not installed.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"name": ["docker", "docker-client", "docker-client-latest", "docker-common", "docker-latest", "docker-latest-logrotate", "docker-logrotate", "docker-engine"], "state": "absent"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker GPG key.", "module": "rpm_key", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Add Docker GPG key."}, "module_options": {"key": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/docker-ce.repo", "dest": "/etc/yum.repos.d/docker-ce.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "yum", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int < 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "dnf", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-RHEL.yml", "options": {"name": "Install Docker.", "when": "ansible_distribution_major_version | int >= 8"}, "module_options": {"update_cache": true, "name": ["docker-ce{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}-{{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "add-docker-users.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure docker group exists.", "module": "group", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Ensure docker group exists."}, "module_options": {"name": "docker", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add docker users to the docker group.", "module": "user", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/add-docker-users.yml", "options": {"name": "Add docker users to the docker group.", "loop": "{{ docker_users }}"}, "module_options": {"name": "{{ item }}", "groups": "docker", "append": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "detect-architecture.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check if architecture is supported.", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Check if architecture is supported.", "when": "ansible_architecture not in docker_supported_architectures"}, "module_options": {"msg": "{{ ansible_architecture }} is not supported by Docker!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for x86_64/AMD64.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for x86_64/AMD64.", "when": "ansible_architecture == \"x86_64\""}, "module_options": {"arch": "amd64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for ARM64.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for ARM64.", "when": "ansible_architecture == \"arm64\""}, "module_options": {"arch": "arm64"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for armhf.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for armhf.", "when": "ansible_architecture == \"armhf\""}, "module_options": {"arch": "armhf"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system architecture for s390x", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/detect-architecture.yml", "options": {"name": "Set system architecture for s390x", "when": "ansible_architecture == \"s390x\""}, "module_options": {"arch": "s390x"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-compose-bash-completion.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "get_url", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-compose-bash-completion.yml", "options": {"name": "Install Docker Compose bash completion."}, "module_options": {"url": "https://raw.githubusercontent.com/docker/compose/{{ 'master' if docker_compose_version == 'latest' else 'v'+docker_compose_version }}/contrib/completion/bash/docker-compose", "dest": "/etc/bash_completion.d/docker-compose", "owner": "root", "group": "root", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-docker-Debian.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure old versions of Docker are not installed.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Ensure old versions of Docker are not installed."}, "module_options": {"name": ["docker", "docker-engine", "docker.io", "containerd", "runc"], "state": "absent"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Docker apt key.", "module": "apt_key", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Add Docker apt key."}, "module_options": {"url": "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg", "id": "9DC858229FC7DD38854AE2D88D81803C0EBFCD88", "state": "present"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker repository.", "module": "apt_repository", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Configure Docker repository."}, "module_options": {"repo": "deb [arch={{ arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker.", "module": "apt", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/install-docker-Debian.yml", "options": {"name": "Install Docker."}, "module_options": {"name": ["docker-ce{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "docker-ce-cli{% if docker_version != 'latest' %}={{ docker_version }}{% endif %}", "containerd.io"], "state": "{{ 'latest' if docker_version == 'latest' else 'present' }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Detect architecture.", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Detect architecture."}, "module_options": "detect-architecture.yml", "executable": "detect-architecture.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (RHEL).", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (RHEL).", "when": "ansible_os_family == 'RedHat'"}, "module_options": "install-docker-RHEL.yml", "executable": "install-docker-RHEL.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker (Debian).", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "install-docker-Debian.yml", "executable": "install-docker-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker bash completion.", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker bash completion.", "when": "docker_bash_completion_install"}, "module_options": "install-docker-bash-completion.yml", "executable": "install-docker-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}.", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Ensure Docker service is {{ docker_service_state }} and {% if docker_service_enabled %}enabled{% else %}disabled{% endif %}."}, "module_options": {"name": "docker", "enabled": "{{ docker_service_enabled }}", "state": "{{ docker_service_state }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure Docker daemon.", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Configure Docker daemon.", "when": "docker_daemon_config | length > 0"}, "module_options": "configure-docker-daemon.yml", "executable": "configure-docker-daemon.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart Docker.", "module": "meta", "index": 6, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Restart Docker."}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add users to docker group.", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Add users to docker group.", "when": "docker_users | length > 0"}, "module_options": "add-docker-users.yml", "executable": "add-docker-users.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker SDK for Python.", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker SDK for Python.", "when": "docker_sdk_for_python_install"}, "module_options": "install-docker-sdk-for-python.yml", "executable": "install-docker-sdk-for-python.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose.", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose.", "when": "docker_compose_install"}, "module_options": "install-docker-compose.yml", "executable": "install-docker-compose.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Docker Compose bash completion.", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/igor_nikiforov-docker/igor_nikiforov.docker/tasks/main.yml", "options": {"name": "Install Docker Compose bash completion.", "when": "docker_compose_install and docker_compose_bash_completion_install"}, "module_options": "install-docker-compose-bash-completion.yml", "executable": "install-docker-compose-bash-completion.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "igor_nikiforov.docker", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}