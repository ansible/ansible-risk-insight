{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/azure-azure_modules", "installed_roles": [{"py/object": "struct4.Role", "name": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules", "fqcn": "azure.azure_modules", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml", "options": {"when": "ansible_version.full < \"2.5.0\""}, "module_options": {"msg": ["Your Ansible version is lower than 2.5.0", "You may need to perform additional steps to install this roles:", "  sudo pip install -r {{ role_path }}/files/requirements-azure.txt", "or", "  pip install --user -r {{ role_path }}/files/requirements-azure.txt", "depending on your ansible setup."]}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "azure.azure_modules", "used_in": [], "annotations": {}}], "modules": [{"py/object": "struct4.Module", "name": "azure_rm_resourcegroup_facts", "fqcn": "azure_rm_resourcegroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resourcegroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_applicationsecuritygroup_facts", "fqcn": "azure_rm_applicationsecuritygroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_applicationsecuritygroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roleassignment_facts", "fqcn": "azure_rm_roleassignment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roleassignment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnsrecordset_facts", "fqcn": "azure_rm_dnsrecordset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnsrecordset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabpolicy", "fqcn": "azure_rm_devtestlabpolicy", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabpolicy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loadbalancer_facts", "fqcn": "azure_rm_loadbalancer_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loadbalancer_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbdatabase_facts", "fqcn": "azure_rm_mariadbdatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbdatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerprofile_facts", "fqcn": "azure_rm_trafficmanagerprofile_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerprofile_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loganalyticsworkspace_facts", "fqcn": "azure_rm_loganalyticsworkspace_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loganalyticsworkspace_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetinstance", "fqcn": "azure_rm_virtualmachinescalesetinstance", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetinstance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabarmtemplate_facts", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabarmtemplate_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_storageaccount", "fqcn": "azure_rm_storageaccount", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageaccount.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabcustomimage_facts", "fqcn": "azure_rm_devtestlabcustomimage_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabcustomimage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerregistry", "fqcn": "azure_rm_containerregistry", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerregistry.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_scaleset", "fqcn": "_azure_rm_virtualmachine_scaleset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_scaleset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnszone", "fqcn": "azure_rm_dnszone", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_webapp_facts", "fqcn": "azure_rm_webapp_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webapp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlab_facts", "fqcn": "azure_rm_devtestlab_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlab_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabschedule", "fqcn": "azure_rm_devtestlabschedule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabschedule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbconfiguration_facts", "fqcn": "azure_rm_mariadbconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineextension", "fqcn": "azure_rm_virtualmachineextension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineextension.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_subnet_facts", "fqcn": "azure_rm_subnet_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_subnet_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlserver", "fqcn": "azure_rm_sqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbfirewallrule_facts", "fqcn": "azure_rm_mariadbfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_deployment_facts", "fqcn": "azure_rm_deployment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_deployment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerprofile", "fqcn": "azure_rm_trafficmanagerprofile", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerprofile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabenvironment", "fqcn": "azure_rm_devtestlabenvironment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabenvironment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifactsource", "fqcn": "azure_rm_devtestlabartifactsource", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifactsource.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_acs", "fqcn": "azure_rm_acs", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_acs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_networkinterface_facts", "fqcn": "azure_rm_networkinterface_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_networkinterface_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerinstance_facts", "fqcn": "azure_rm_containerinstance_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerinstance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnsrecordset", "fqcn": "azure_rm_dnsrecordset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnsrecordset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabpolicy_facts", "fqcn": "azure_rm_devtestlabpolicy_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabpolicy_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqldatabase_facts", "fqcn": "azure_rm_postgresqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_hdinsightcluster", "fqcn": "azure_rm_hdinsightcluster", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_hdinsightcluster.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerregistry_facts", "fqcn": "azure_rm_containerregistry_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerregistry_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetextension_facts", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetextension_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_storageblob", "fqcn": "azure_rm_storageblob", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageblob.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescaleset_facts", "fqcn": "azure_rm_virtualmachinescaleset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescaleset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlfirewallrule_facts", "fqcn": "azure_rm_sqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerendpoint_facts", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerendpoint_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure", "fqcn": "_azure", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_publicipaddress_facts", "fqcn": "azure_rm_publicipaddress_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_publicipaddress_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_appserviceplan_facts", "fqcn": "azure_rm_appserviceplan_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appserviceplan_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineimage_facts", "fqcn": "azure_rm_virtualmachineimage_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineimage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_rediscache", "fqcn": "azure_rm_rediscache", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscache.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_route", "fqcn": "azure_rm_route", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_functionapp", "fqcn": "azure_rm_functionapp", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_functionapp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnprofile_facts", "fqcn": "azure_rm_cdnprofile_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnprofile_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlfirewallrule", "fqcn": "azure_rm_postgresqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetwork", "fqcn": "azure_rm_virtualnetwork", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebus", "fqcn": "azure_rm_servicebus", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebus.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbfirewallrule", "fqcn": "azure_rm_mariadbfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkpeering_facts", "fqcn": "azure_rm_virtualnetworkpeering_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkpeering_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlconfiguration", "fqcn": "azure_rm_mysqlconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_storageaccount_facts", "fqcn": "azure_rm_storageaccount_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageaccount_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_resourcegroup", "fqcn": "azure_rm_resourcegroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resourcegroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlfirewallrule", "fqcn": "azure_rm_mysqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_autoscale_facts", "fqcn": "azure_rm_autoscale_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_autoscale_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_availabilityset", "fqcn": "azure_rm_availabilityset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_availabilityset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerinstance", "fqcn": "azure_rm_containerinstance", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerinstance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineextension_facts", "fqcn": "azure_rm_virtualmachineextension_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineextension_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualmachine", "fqcn": "azure_rm_devtestlabvirtualmachine", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualmachine.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqldatabase", "fqcn": "azure_rm_mysqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualnetwork", "fqcn": "azure_rm_devtestlabvirtualnetwork", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_aks_facts", "fqcn": "azure_rm_aks_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aks_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebustopic", "fqcn": "azure_rm_servicebustopic", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebustopic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlfirewallrule_facts", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnprofile", "fqcn": "azure_rm_cdnprofile", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnprofile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkpeering", "fqcn": "azure_rm_virtualnetworkpeering", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkpeering.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebustopicsubscription", "fqcn": "azure_rm_servicebustopicsubscription", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebustopicsubscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlserver", "fqcn": "azure_rm_mysqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlserver_facts", "fqcn": "azure_rm_sqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachine", "fqcn": "azure_rm_virtualmachine", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachine.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_keyvaultsecret", "fqcn": "azure_rm_keyvaultsecret", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvaultsecret.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqldatabase", "fqcn": "azure_rm_postgresqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkgateway", "fqcn": "azure_rm_virtualnetworkgateway", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkgateway.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbconfiguration", "fqcn": "azure_rm_mariadbconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_extension", "fqcn": "_azure_rm_virtualmachine_extension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_extension.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_rediscache_facts", "fqcn": "azure_rm_rediscache_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscache_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_routetable", "fqcn": "azure_rm_routetable", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_routetable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlfirewallrule", "fqcn": "azure_rm_sqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebus_facts", "fqcn": "azure_rm_servicebus_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebus_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnszone_facts", "fqcn": "azure_rm_dnszone_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnszone_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_securitygroup_facts", "fqcn": "azure_rm_securitygroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_securitygroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetwork_facts", "fqcn": "azure_rm_virtualnetwork_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetwork_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_scaleset_facts", "fqcn": "_azure_rm_virtualmachine_scaleset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_scaleset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_manageddisk", "fqcn": "azure_rm_manageddisk", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_manageddisk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlconfiguration", "fqcn": "azure_rm_postgresqlconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualmachine_facts", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualmachine_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roledefinition_facts", "fqcn": "azure_rm_roledefinition_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roledefinition_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnendpoint", "fqcn": "azure_rm_cdnendpoint", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnendpoint.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_functionapp_facts", "fqcn": "azure_rm_functionapp_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_functionapp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabcustomimage", "fqcn": "azure_rm_devtestlabcustomimage", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabcustomimage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlconfiguration_facts", "fqcn": "azure_rm_mysqlconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cosmosdbaccount", "fqcn": "azure_rm_cosmosdbaccount", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cosmosdbaccount.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlserver_facts", "fqcn": "azure_rm_mysqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_hdinsightcluster_facts", "fqcn": "azure_rm_hdinsightcluster_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_hdinsightcluster_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbserver_facts", "fqcn": "azure_rm_mariadbserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescaleset", "fqcn": "azure_rm_virtualmachinescaleset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescaleset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlconfiguration_facts", "fqcn": "azure_rm_postgresqlconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbserver", "fqcn": "azure_rm_mariadbserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_resource_facts", "fqcn": "azure_rm_resource_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resource_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_aksversion_facts", "fqcn": "azure_rm_aksversion_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aksversion_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerendpoint", "fqcn": "azure_rm_trafficmanagerendpoint", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerendpoint.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifact_facts", "fqcn": "azure_rm_devtestlabartifact_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifact_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifactsource_facts", "fqcn": "azure_rm_devtestlabartifactsource_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifactsource_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_appgateway", "fqcn": "azure_rm_appgateway", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appgateway.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_deployment", "fqcn": "azure_rm_deployment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_subnet", "fqcn": "azure_rm_subnet", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlserver_facts", "fqcn": "azure_rm_postgresqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_appserviceplan", "fqcn": "azure_rm_appserviceplan", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appserviceplan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roleassignment", "fqcn": "azure_rm_roleassignment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roleassignment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_autoscale", "fqcn": "azure_rm_autoscale", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_autoscale.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_manageddisk_facts", "fqcn": "azure_rm_manageddisk_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_manageddisk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_resource", "fqcn": "azure_rm_resource", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resource.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetinstance_facts", "fqcn": "azure_rm_virtualmachinescalesetinstance_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetinstance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_networkinterface", "fqcn": "azure_rm_networkinterface", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_networkinterface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlab", "fqcn": "azure_rm_devtestlab", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlserver", "fqcn": "azure_rm_postgresqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loganalyticsworkspace", "fqcn": "azure_rm_loganalyticsworkspace", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loganalyticsworkspace.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_managed_disk", "fqcn": "_azure_rm_managed_disk", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_managed_disk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabschedule_facts", "fqcn": "azure_rm_devtestlabschedule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabschedule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqldatabase_facts", "fqcn": "azure_rm_sqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_keyvaultkey", "fqcn": "azure_rm_keyvaultkey", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvaultkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roledefinition", "fqcn": "azure_rm_roledefinition", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roledefinition.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_image_facts", "fqcn": "azure_rm_image_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cosmosdbaccount_facts", "fqcn": "azure_rm_cosmosdbaccount_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cosmosdbaccount_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetextension", "fqcn": "azure_rm_virtualmachinescalesetextension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetextension.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_routetable_facts", "fqcn": "azure_rm_routetable_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_routetable_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebussaspolicy", "fqcn": "azure_rm_servicebussaspolicy", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebussaspolicy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_keyvault", "fqcn": "azure_rm_keyvault", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvault.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebusqueue", "fqcn": "azure_rm_servicebusqueue", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebusqueue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbdatabase", "fqcn": "azure_rm_mariadbdatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbdatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_publicipaddress", "fqcn": "azure_rm_publicipaddress", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_publicipaddress.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_availabilityset_facts", "fqcn": "azure_rm_availabilityset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_availabilityset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabenvironment_facts", "fqcn": "azure_rm_devtestlabenvironment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabenvironment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlfirewallrule_facts", "fqcn": "azure_rm_mysqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqldatabase_facts", "fqcn": "azure_rm_mysqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachine_facts", "fqcn": "azure_rm_virtualmachine_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachine_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_aks", "fqcn": "azure_rm_aks", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_rediscachefirewallrule", "fqcn": "azure_rm_rediscachefirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscachefirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_applicationsecuritygroup", "fqcn": "azure_rm_applicationsecuritygroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_applicationsecuritygroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_webappslot", "fqcn": "azure_rm_webappslot", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webappslot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loadbalancer", "fqcn": "azure_rm_loadbalancer", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualnetwork_facts", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualnetwork_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqldatabase", "fqcn": "azure_rm_sqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnendpoint_facts", "fqcn": "azure_rm_cdnendpoint_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnendpoint_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_image", "fqcn": "azure_rm_image", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_webapp", "fqcn": "azure_rm_webapp", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webapp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_managed_disk_facts", "fqcn": "_azure_rm_managed_disk_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_managed_disk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_securitygroup", "fqcn": "azure_rm_securitygroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_securitygroup.py", "builtin": false, "used_in": [], "annotations": {}}], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_sqlserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver", "fqcn": "azure_rm_sqlserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"random_postfix": "{{ 1000 | random }}{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Server", "module": "azure_rm_sqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of SQL Server", "module": "azure_rm_sqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server", "module": "azure_rm_sqlserver_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None", "output.servers.sqlsrv{{ random_postfix }}.tags.aaa == 'bbb'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server - unexisting", "module": "azure_rm_sqlserver_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - unexisting", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "unexisting"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers == {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server - list", "module": "azure_rm_sqlserver_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - list", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second SQL Database", "module": "azure_rm_sqldatabase", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create second SQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None", "output.databases[1].id != None", "output.databases[1].name != None", "output.databases[1].location != None", "output.databases[1].sku.name != None", "output.databases[1].sku.tier != None", "output.databases[1].sku.capacity != None", "output.databases[1].kind != None", "output.databases[1].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of secondary database", "module": "azure_rm_sqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of secondary database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned (one database is there by default)", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned (one database is there by default)"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_sqlfirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_sqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].resource_group != None", "output.rules[1].server_name != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Server", "module": "azure_rm_sqlserver", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Server", "module": "azure_rm_sqlserver", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_sqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_trafficmanagerprofile", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile", "fqcn": "azure_rm_trafficmanagerprofile", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"tmname": "tm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname1": "ep1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname2": "ep2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "azure_rm_trafficmanagerprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created"}, "module_options": {"that": "{{ fact.tms | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile", "register": "tm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well created"}, "module_options": {"that": ["tm.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile (idempotent)", "module": "azure_rm_trafficmanagerprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Update the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "disabled", "routing_method": "priority", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint(check mode)", "module": "azure_rm_trafficmanagerendpoint", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert check mode changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check no endpoint created in check mode", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check no endpoint created in check mode"}, "module_options": {"that": ["facts.endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint create changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint create changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check endpoint created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check endpoint created"}, "module_options": {"that": ["facts.endpoints | length == 1", "facts.endpoints[0].name == \"{{ endpointname1 }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create second Traffic Manager endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check 2 endpoint in profile", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 2 endpoint in profile"}, "module_options": {"that": ["facts.endpoints | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create endpoint (idempotent)", "module": "azure_rm_trafficmanagerendpoint", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create endpoint (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint creation idempotent", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint creation idempotent"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete second endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "state": "absent"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint deletion changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint deletion changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check 1 endpoint left in profile", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 1 endpoint left in profile"}, "module_options": {"that": ["facts.endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the traffic manager profile is still there", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the traffic manager profile is still there"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Traffic Manager profile fact", "module": "azure_rm_trafficmanagerprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get Traffic Manager profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.tms | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_trafficmanagerprofile", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_availabilityset", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset", "fqcn": "azure_rm_availabilityset", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an availability set with default options", "module": "azure_rm_availabilityset", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with default options", "register": "results"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "tags": {"tag1": "testtag"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an availability set with advanced options", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with advanced options", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options - no changes, fail for immutable options", "module": "azure_rm_availabilityset", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options - no changes, fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "module": "azure_rm_availabilityset", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test1": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set options to update tags", "module": "azure_rm_availabilityset", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set options to update tags", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test2": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.tags.test2 == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create availability set with incorrect fault domain parameter", "module": "azure_rm_availabilityset", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create availability set with incorrect fault domain parameter", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 4, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "'The specified fault domain count 4 must fall in the range 1 to' in results['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test check_mode", "module": "azure_rm_availabilityset", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Test check_mode", "check_mode": true, "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"checktest1": "modified1", "checktest2": "modified2"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.state.tags.checktest1 == 'modified1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts for created availability set", "module": "azure_rm_availabilityset_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Get facts for created availability set", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset_facts", "executable_type": "Module", "fqcn": "azure_rm_availabilityset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "not results.failed", "results.ansible_facts.azure_availabilitysets[0].properties.platformFaultDomainCount == 2", "results.ansible_facts.azure_availabilitysets[0].properties.platformUpdateDomainCount == 5", "results.ansible_facts.azure_availabilitysets[0].sku == 'Aligned'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_availabilityset", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_virtualmachinescaleset", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset", "fqcn": "azure_rm_virtualmachinescaleset", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "public_ip_address_name": "testPublicIP"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address 1", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address 1"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP1"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create load balancer 1", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer 1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB1", "public_ip_address_name": "testPublicIP1"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create network security group within same resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group within same resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create network security group in different resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group in different resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network inteface cards for VM A and B", "module": "azure_rm_networkinterface", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network inteface cards for VM A and B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}nic", "virtual_network": "testVnet", "subnet": "testSubnet"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "admin_username": "testuser", "admin_password": "Password1234!", "vm_size": "Standard_B1ms", "network_interfaces": "vmforimage{{ rpfx }}nic", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create image A", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image A"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimagea", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create image B", "module": "azure_rm_image", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimageb", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS (check mode)", "module": "azure_rm_virtualmachinescaleset", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "load_balancer": "testLB", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get VMSS to assert no VMSS is created in check mode", "module": "azure_rm_virtualmachinescaleset_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get VMSS to assert no VMSS is created in check mode", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert no VMSS created in check mode", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert no VMSS created in check mode"}, "module_options": {"that": ["output_scaleset.ansible_facts.azure_vmss | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "load_balancer": "testLB", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "module": "azure_rm_virtualmachinescaleset", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Automatic", "load_balancer": "testLB1", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve scaleset facts", "module": "azure_rm_virtualmachinescaleset_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset facts", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {}, "module_options": {"that": ["output_scaleset.vmss[0].load_balancer == \"testLB1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve scaleset VMs facts", "module": "azure_rm_virtualmachinescalesetinstance_facts", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset VMs facts", "register": "instances"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts returned correctly", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts returned correctly"}, "module_options": {"that": ["instances.instances | length == 1", "instances.instances[0].id != None", "instances.instances[0].name != None", "instances.instances[0].instance_id != None", "instances.instances[0].provisioning_state != None", "instances.instances[0].vm_id != None", "instances.instances[0].latest_model != None", "instances.instances[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get scaleset body", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get scaleset body"}, "module_options": {"body": "{{ output_scaleset.vmss[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update VMSS using output as input", "module": "azure_rm_virtualmachinescaleset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Try to update VMSS using output as input", "register": "results"}, "module_options": {"resource_group": "{{ body.resource_group }}", "name": "{{ body.name }}", "vm_size": "{{ body.vm_size }}", "admin_username": "{{ body.admin_username }}", "ssh_password_enabled": "{{ body.ssh_password_enabled }}", "admin_password": "Password1234!", "capacity": "{{ body.capacity }}", "virtual_network_name": "{{ body.virtual_network_name }}", "subnet_name": "{{ body.subnet_name }}", "upgrade_policy": "{{ body.upgrade_policy }}", "load_balancer": "{{ body.load_balancer }}", "tier": "{{ body.tier }}", "managed_disk_type": "{{ body.managed_disk_type }}", "os_disk_caching": "{{ body.os_disk_caching }}", "image": "{{ body.image }}", "data_disks": "{{ body.data_disks }}", "overprovision": "{{ body.overprovision }}"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something was changed", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something was changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Again VMSS Extension - again", "module": "azure_rm_virtualmachinescalesetextension", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install Again VMSS Extension - again", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was reported", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that change was reported"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upgrade instance to the latest image", "module": "azure_rm_virtualmachinescalesetinstance", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Upgrade instance to the latest image", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "latest_model": true}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop virtual machine", "module": "azure_rm_virtualmachinescalesetinstance", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Stop virtual machine", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "power_state": "stopped"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance", "module": "azure_rm_virtualmachinescalesetinstance", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete instance", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "module": "azure_rm_virtualmachinescaleset", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS ran", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS ran"}, "module_options": {"that": ["results.changed", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.enableAcceleratedNetworking == true", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.networkSecurityGroup != {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update VMSS with security group in different resource group.", "module": "azure_rm_virtualmachinescaleset", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "update VMSS with security group in different resource group.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_B1s", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": {"name": "testNetworkSecurityGroup2", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Fail when instance type is not supported to enable accelerated networking", "module": "azure_rm_virtualmachinescaleset", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Fail when instance type is not supported to enable accelerated networking", "register": "results", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}4", "vm_size": "Standard_B1s", "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "upgrade_policy": "Manual", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert failure to show that accelerated networking is enabled only with supported instance types.", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert failure to show that accelerated networking is enabled only with supported instance types."}, "module_options": {"that": ["\"VMSizeIsNotPermittedToEnableAcceleratedNetworkingForVmss\" in results.msg"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete load balancer", "module": "azure_rm_loadbalancer", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public IP address", "module": "azure_rm_publicipaddress", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachinescaleset", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachinescaleset", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": ["testing"]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachinescaleset", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": "invalid-image"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachinescaleset", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualmachinescaleset", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_storageaccount", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount", "fqcn": "azure_rm_storageaccount", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test invalid account name", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Test invalid account name", "register": "invalid_name", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "invalid_name['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create new storage account", "module": "azure_rm_storageaccount", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.id is defined", "output.state.blob_cors | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create new storage account (idempotence)", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_storageaccount_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["test", "galaxy"]}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": "azure_storageaccounts | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change account type", "module": "azure_rm_storageaccount", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Premium_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert account type change failed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert account type change failed"}, "module_options": {"that": "change_account['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change account type and add custom domain", "module": "azure_rm_storageaccount", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type and add custom domain", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_GRS", "custom_domain": {"name": "ansible.com", "use_sub_domain": false}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert CNAME failure", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert CNAME failure"}, "module_options": {"that": "'custom domain name could not be verified' in  change_account['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update account tags", "module": "azure_rm_storageaccount", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Update account tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "append_tags": false, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.testing == 'testing'", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "show_connection_string": true, "show_blob_cors": true}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts| length == 1", "storageaccounts | length == 1", "not storageaccounts[0].custom_domain", "storageaccounts[0].account_type == \"Standard_GRS\"", "storageaccounts[0].primary_endpoints.blob.connectionstring", "storageaccounts[0].blob_cors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete acccount", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete acccount"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_storageaccount", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_functionapp", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp", "fqcn": "azure_rm_functionapp", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"fixed_resource_prefix": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"funcapp_name_basic": "fa{{ fixed_resource_prefix }}basic", "funcapp_name_container": "fa{{ fixed_resource_prefix }}container", "funcapp_name_params": "fa{{ fixed_resource_prefix }}params", "storage_account_name": "sa{{ fixed_resource_prefix }}", "plan_name": "ap{{ fixed_resource_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create storage account for function apps", "module": "azure_rm_storageaccount", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create storage account for function apps"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create basic function app", "module": "azure_rm_functionapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "storage_account": "{{ storage_account_name }}"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "list facts for function", "module": "azure_rm_functionapp_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "list facts for function", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}"}, "executable": "azure_rm_functionapp_facts", "executable_type": "Module", "fqcn": "azure_rm_functionapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the facts were retrieved", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the facts were retrieved"}, "module_options": {"that": ["results.ansible_facts.azure_functionapps|length == 1", "results.ansible_facts.azure_functionapps[0].name == \"{{ funcapp_name_basic }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete basic function app", "module": "azure_rm_functionapp", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a function with app settings", "module": "azure_rm_functionapp", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create a function with app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function with app settings was created", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function with app settings was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "change app settings", "module": "azure_rm_functionapp", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "change app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2", "another": "one"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux app service plan", "module": "azure_rm_appserviceplan", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create a linux app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create azure function app {{ function_app }}", "module": "azure_rm_functionapp", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create azure function app {{ function_app }}", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "storage_account": "{{ storage_account_name }}", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}"}, "container_settings": {"name": "httpd"}, "app_settings": {"FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "delete storage account", "module": "azure_rm_storageaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_functionapp", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_virtualnetwork", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork", "fqcn": "azure_rm_virtualnetwork", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network, if it exists", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network, if it exists"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 2", "output.state.dns_servers | length == 2", "output.state.tags.delete == 'on-exit'", "output.state.tags | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Attach a subnet", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Attach a subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "virtual_network_name": "{{ vnetname }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts by name, tags", "module": "azure_rm_virtualnetwork_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by name, tags", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].dns_servers | length == 2", "facts.virtualnetworks[0].address_prefixes | length == 2", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by resource group, tags", "module": "azure_rm_virtualnetwork_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by resource group, tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_virtualnetwork_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_virtualnetwork", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_virtualnetwork", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "tags": {"testing": "no", "delete": "never", "foo": "bar"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state.tags | length == 3"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "append_tags": false, "tags": {"testing": "always"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 1", "output.state.tags.testing == 'always'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should require address_prefixes_cidr when purge_address_prefixes", "module": "azure_rm_virtualnetwork", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should require address_prefixes_cidr when purge_address_prefixes", "register": "output", "ignore_errors": true}, "module_options": {"name": "{{ vnetname }}", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge address prefixes", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge address prefixes", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": "10.1.0.0/16", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 1", "output.state.address_prefixes[0] == '10.1.0.0/16'", "output.state.dns_servers | length == 2", "output.state.dns_servers[0] == '127.0.0.1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge DNS servers", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge DNS servers", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "purge_dns_servers": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state['dns_servers'] is undefined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_virtualnetwork_facts", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}"}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualnetwork", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_webapp", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp", "fqcn": "azure_rm_webapp", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"linux_app_plan_resource_group": "{{ resource_group_secondary }}", "win_app_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}{{ 1000 | random}}winapp", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_group_secondary | replace('-','x'))[-8:] }}linplan", "slot1_name": "stage1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a windows web app with non-exist app service plan", "module": "azure_rm_webapp", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with non-exist app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}1", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ win_plan_name }}", "is_linux": false, "sku": "S1"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan", "module": "azure_rm_webapp", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "stop the web app", "module": "azure_rm_webapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "stop the web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}", "app_state": "stopped"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan, try to update some root level params", "module": "azure_rm_webapp", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan, try to update some root level params", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "plan": "{{ win_plan_name }}", "dns_registration": true, "https_only": true, "tags": {"testwebapptag": "test"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "get web app with resource group and tag", "module": "azure_rm_webapp_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with resource group and tag", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "tags": ["testwebapptag"]}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a win web app with java run time specific", "module": "azure_rm_webapp", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with java run time specific", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.8", "settings": {"java_container": "Tomcat", "java_container_version": "8.0"}}], "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the web app was created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].app_settings | length == 1", "output.webapps[0].frameworks | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update app settings and framework", "module": "azure_rm_webapp", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update app settings and framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.7", "settings": {"java_container": "Tomcat", "java_container_version": "8.5"}}], "app_settings": {"testkey2": "testvalue2"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.webapps[0].app_settings | length == 2", "output.webapps[0].app_settings['testkey'] == 'testvalue'", "output.webapps[0].app_settings['testkey2'] == 'testvalue2'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with return publishing profile", "module": "azure_rm_webapp_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with return publishing profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "return_publish_profile": true}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].publishing_username != \"\"", "output.webapps[0].publishing_password != \"\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge all existing app settings", "module": "azure_rm_webapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Purge all existing app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "purge_app_settings": true}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a win web app with python run time and php run time", "module": "azure_rm_webapp", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with python run time and php run time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}5", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}, {"name": "php", "version": "7.0"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a docker web app with some app settings", "module": "azure_rm_webapp", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with some app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}6", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}", "is_linux": true, "sku": "S1", "number_of_workers": 1}, "container_settings": {"name": "ansible/ansible:ubuntu1404"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a docker web app with private acr registry", "module": "azure_rm_webapp", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with private acr registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}7", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "container_settings": {"name": "ansible/ansible:ubuntu1404", "registry_server_url": "test.io", "registry_server_user": "user", "registry_server_password": "password"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux web app with nodejs framework", "module": "azure_rm_webapp", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should be idempotent with linux web app created", "module": "azure_rm_webapp", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Should be idempotent with linux web app created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update nodejs framework", "module": "azure_rm_webapp", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.9"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux web app with deployment source github", "module": "azure_rm_webapp", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with deployment source github", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}10", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "deployment_source": {"url": "https://github.com/test/test", "branch": "master"}, "scm_type": "GitHub"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete web app", "module": "azure_rm_webapp", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Delete web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "state": "absent"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was deleted", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "assert error that java is mutually exclusive with frameworks", "module": "azure_rm_webapp", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error that java is mutually exclusive with frameworks", "register": "fail_win_java_version_mutual_exclusive", "failed_when": "fail_win_java_version_mutual_exclusive.msg != \"Java is mutually exclusive with other frameworks.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}11", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "java", "version": "1.8"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error when linux web app, only can specify one framework", "module": "azure_rm_webapp", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error when linux web app, only can specify one framework", "register": "fail_linux_one_framework_only", "failed_when": "fail_linux_one_framework_only.msg != \"Can specify one framework only for Linux web app.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ linux_plan_name }}12", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a linux web app with java tomcat container", "module": "azure_rm_webapp", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with java tomcat container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "java", "version": "8", "settings": {"java_container": "tomcat", "java_container_version": "8.5"}}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with publish profile", "module": "azure_rm_webapp_facts", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Get facts with publish profile", "no_log": true, "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert publish profile returned", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert publish profile returned"}, "module_options": {"that": ["facts.webapps[0].ftp_publish_url != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a webapp slot (Check mode)", "module": "azure_rm_webappslot", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert slot check mode creation", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a webapp slot", "module": "azure_rm_webappslot", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert slot creation", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update webapp slot (idempotence)", "module": "azure_rm_webappslot", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update webapp slot", "module": "azure_rm_webappslot", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "frameworks": [{"name": "node", "version": "10.1"}], "app_settings": {"testkey": "testvalue2"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Swap webapp slot", "module": "azure_rm_webappslot", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Swap webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "swap": {"action": "swap"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert swap", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert swap"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop webapp slot", "module": "azure_rm_webappslot", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Stop webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_state": "stopped"}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_webapp", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_keyvault", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault", "fqcn": "azure_rm_keyvault", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "tenant_id": "{{ azure_tenant }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "lookup service principal object id", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "lookup service principal object id", "register": "object_id"}, "module_options": {"object_id": "{{ lookup('azure_service_principal_attribute', azure_client_id=azure_client_id, azure_secret=azure_secret, azure_tenant=tenant_id) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault", "module": "azure_rm_keyvault", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault again", "module": "azure_rm_keyvault", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update existing Key Vault (add a rule and tags)", "module": "azure_rm_keyvault", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Update existing Key Vault (add a rule and tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == true"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use REST API to retrieve keyvault (as facts not available yet)", "module": "azure_rm_resource_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Use REST API to retrieve keyvault (as facts not available yet)", "register": "output"}, "module_options": {"api_version": "2018-02-14", "resource_group": "{{ resource_group }}", "provider": "keyvault", "resource_type": "vaults", "resource_name": "vault{{ rpfx }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the facts are properly set", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the facts are properly set"}, "module_options": {"that": ["output.response[0].tags.aaa == \"bbb\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultkey", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "key_name": "testkey", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete a keyvault key", "module": "azure_rm_keyvaultkey", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault key", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "key_name": "testkey"}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultsecret", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "secret_name": "testsecret", "secret_value": "mysecret", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete a keyvault secret", "module": "azure_rm_keyvaultsecret", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault secret", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "secret_name": "testsecret"}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Key Vault", "module": "azure_rm_keyvault", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Key Vault", "module": "azure_rm_keyvault", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete unexisting instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_keyvault", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_servicebus", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus", "fqcn": "azure_rm_servicebus", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a namespace", "module": "azure_rm_servicebus", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["namespace.id", "namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a namespace (idempontent)", "module": "azure_rm_servicebus", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace (idempontent)", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a queue", "module": "azure_rm_servicebusqueue", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a queue", "register": "queue"}, "module_options": {"name": "queue{{ rpfx }}", "namespace": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["queue.id", "queue.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic (check mode)", "module": "azure_rm_servicebustopic", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic", "module": "azure_rm_servicebustopic", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id", "'subscription_count' not in output"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic (idempontent)", "module": "azure_rm_servicebustopic", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (idempontent)", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create test policy", "module": "azure_rm_servicebussaspolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create test policy"}, "module_options": {"name": "testpolicy", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "rights": "manage"}, "executable": "azure_rm_servicebussaspolicy", "executable_type": "Module", "fqcn": "azure_rm_servicebussaspolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a subscription", "module": "azure_rm_servicebustopicsubscription", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a subscription", "register": "subs"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["subs.id", "subs.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 1", "facts.servicebuses[0].id == output.id", "facts.servicebuses[0].subscription_count == 1", "facts.servicebuses[0].sas_policies.testpolicy", "facts.servicebuses[0].sas_policies.testpolicy.rights == 'manage'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete subscription", "module": "azure_rm_servicebustopicsubscription", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete subscription"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses[0].subscription_count == 0", "facts.servicebuses | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete topic", "module": "azure_rm_servicebustopic", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete topic"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"name": "topic{{ rpfx }}", "type": "topic", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete queue", "module": "azure_rm_servicebusqueue", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete queue"}, "module_options": {"name": "queue{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete namespace", "module": "azure_rm_servicebus", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_servicebus", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_postgresqlserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver", "fqcn": "azure_rm_postgresqlserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of PostgreSQL Server, change storage size", "module": "azure_rm_postgresqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Update instance of PostgreSQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts postgresql Server", "module": "azure_rm_postgresqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts postgresql Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server -- add tags", "module": "azure_rm_postgresqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server -- add tags"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database without force_update", "module": "azure_rm_postgresqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database with force_update", "module": "azure_rm_postgresqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database with force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS", "force_update": true}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_postgresqlconfiguration", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration", "module": "azure_rm_postgresqlconfiguration", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was not registered", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was not registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_postgresqlconfiguration", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete second instance of PostgreSQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_postgresqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_rediscache", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache", "fqcn": "azure_rm_rediscache", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"redis_name": "redis-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "vnet_name": "vnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "subnet_name": "subnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "rule_name": "rule1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a redis cache", "module": "azure_rm_rediscache", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].id != None", "facts.rediscaches[0].host_name != None", "facts.rediscaches[0].provisioning_state != None", "facts.rediscaches[0].sku.name == 'basic'", "facts.rediscaches[0].sku.size == 'C1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the redis cache (idempotent)", "module": "azure_rm_rediscache", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update the redis cache (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "(actually) update redis cache", "module": "azure_rm_rediscache", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "(actually) update redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update redis cache configuration", "module": "azure_rm_rediscache", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update redis cache configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "maxmemory_policy": "allkeys_lru", "tags": {"testing": "foo"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale up the redis cache", "module": "azure_rm_rediscache", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Scale up the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "standard", "size": "C1"}, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force reboot redis cache", "module": "azure_rm_rediscache", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Force reboot redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "reboot": {"reboot_type": "all"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert deleting redis cache check mode", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert deleting redis cache check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnet_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ subnet_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vnet_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create redis with subnet", "module": "azure_rm_rediscache", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create redis with subnet", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "sku": {"name": "premium", "size": "P1"}, "subnet": {"name": "{{ subnet_name }}", "virtual_network_name": "{{ vnet_name }}"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "return_access_keys": true}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].subnet != None", "facts.rediscaches[0].access_keys.primary != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create firewall rule (Check mode)", "module": "azure_rm_rediscachefirewallrule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creation", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creation"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update firewall rule idempotence", "module": "azure_rm_rediscachefirewallrule", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "end_ip_address": "192.168.1.5"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "state": "absent"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert deletion", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_rediscache", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_mariadbserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver", "fqcn": "azure_rm_mariadbserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of MariaDB Server, change storage size", "module": "azure_rm_mariadbserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of MariaDB Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mariadbdatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mariadbdatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mariadbfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mariadbfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mariadbconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mariadbconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete second instance of MariaDB Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_mariadbserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_aks", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks", "fqcn": "azure_rm_aks", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(8, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find available k8s version", "module": "azure_rm_aksversion_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Find available k8s version", "register": "versions"}, "module_options": {"location": "eastus"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an AKS instance (check mode)", "module": "azure_rm_aks", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (check mode)", "check_mode": true}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "azure_rm_aks_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an AKS instance", "module": "azure_rm_aks", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an AKS instance (idempotent)", "module": "azure_rm_aks", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get available version", "module": "azure_rm_aksversion_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get available version", "register": "version1"}, "module_options": {"location": "eastus", "version": "{{ versions.azure_aks_versions[0] }}"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon", "module": "azure_rm_aks", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is upgraded", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is upgraded"}, "module_options": {"that": ["output.changed", "output.kubernetes_version == version1.azure_aks_versions[0]", "output.addon.httpApplicationRouting.enabled ==  True", "output.agent_pool_profiles[0].count == 1", "output.network_profile.network_plugin == 'kubenet'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon (idempontent)", "module": "azure_rm_aks", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon (idempontent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "show_kubeconfig": "user"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].kube_config == output.kube_config"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the AKS instance", "module": "azure_rm_aks", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is well deleted", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the AKS instance (idempotent)", "module": "azure_rm_aks", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_aks", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_appgateway", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway", "fqcn": "azure_rm_appgateway", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a virtual network"}, "module_options": {"name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.2"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a subnet", "register": "subnet_output"}, "module_options": {"name": "subnet{{ rpfx }}", "virtual_network_name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}", "name": "sample_gateway_frontend_ip_config"}}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "dump", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "dump"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Application Gateway", "module": "azure_rm_appgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - no change", "module": "azure_rm_appgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - no change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - single change", "module": "azure_rm_appgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - single change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 81, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway", "module": "azure_rm_appgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Application Gateway", "module": "azure_rm_appgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete unexisting instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_appgateway", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_securitygroup", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup", "fqcn": "azure_rm_securitygroup", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"secgroupname": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "asg_name1": "asg1{{ resource_group | hash('md5') | truncate(7, True, '') }}", "asg_name2": "asg2{{ resource_group | hash('md5') | truncate(7, True, '') }}", "sg_name1": "sgasg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "DenySSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Deny", "priority": 100, "direction": "Inbound"}, {"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "{{ output.state.rules | length }} == 2"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_securitygroup_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts by tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "azure_securitygroups | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add/Update rules on existing security group", "module": "azure_rm_securitygroup", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add/Update rules on existing security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 3", "output.state.rules[0].source_address_prefix == '174.108.158.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test idempotence", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Test idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "never", "baz": "bar"}, "append_tags": false}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_securitygroup", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "append_tags": false, "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.delete == 'on-exit'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for one accounts", "module": "azure_rm_securitygroup_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for one accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all accounts", "module": "azure_rm_securitygroup_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for all accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes", "module": "azure_rm_securitygroup", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 1", "{{ output.state.rules[0].source_address_prefixes | length }} == 3", "not output.state.rules[0].source_address_prefix"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes(idempontent)", "module": "azure_rm_securitygroup", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes(idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add a single one group", "module": "azure_rm_securitygroup", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add a single one group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "rules": [{"name": "DenySSH", "protocol": "Tcp", "source_address_prefix": ["54.120.120.240"], "destination_port_range": 22, "access": "Deny", "priority": 102, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "{{ output.state.rules | length }} == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group 1", "module": "azure_rm_applicationsecuritygroup", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 1", "register": "asg1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ asg_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Application security group 2", "module": "azure_rm_applicationsecuritygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 2", "register": "asg2"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group with application security group", "module": "azure_rm_securitygroup", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg1.id }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with application security group - Idempotent", "module": "azure_rm_securitygroup", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group - Idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg_name1 }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete security group", "module": "azure_rm_securitygroup", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete all security groups", "module": "azure_rm_securitygroup", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete all security groups", "with_items": "{{ azure_securitygroups }}"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item.name }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should have no security groups remaining", "module": "azure_rm_securitygroup_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Should have no security groups remaining", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_securitygroup", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_loadbalancer", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer", "fqcn": "azure_rm_loadbalancer", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"pipaname": "pipa{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "pipbname": "pipb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbvnname": "lbvn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_a": "lba{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_b": "lbb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_c": "lbc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_d": "lbd{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipbname }}", "sku": "Standard", "allocation_method": "Static", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipaname }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "clear load balancer", "module": "azure_rm_loadbalancer", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "clear load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "public_ip": "{{ pipaname }}"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer deleted", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer (idempotent)", "module": "azure_rm_loadbalancer", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer deleted (idempotent)", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted (idempotent)"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create another load balancer with more options", "module": "azure_rm_loadbalancer", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create another load balancer with more options", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": ["output.changed", "output.state.sku.name == 'Standard'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency", "module": "azure_rm_loadbalancer", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert that output has not changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency - change something", "module": "azure_rm_loadbalancer", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency - change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 81, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert that output has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}], "inbound_nat_rules": [{"name": "inboundnatrule0", "backend_port": 8080, "protocol": "Tcp", "frontend_port": 8080, "frontend_ip_configuration": "frontendipconf0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Add subnet", "register": "subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ lbvnname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create internal loadbalancer", "module": "azure_rm_loadbalancer", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create internal loadbalancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "private_ip_address": "10.10.0.10", "private_ip_allocation_method": "Static", "subnet": "{{ subnet.state.id }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup public ip", "module": "azure_rm_publicipaddress", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup public ip", "with_items": ["{{ pipaname }}", "{{ pipbname }}"]}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup subnet", "module": "azure_rm_subnet", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "virtual_network": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_loadbalancer", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_virtualmachineimage_facts", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts", "fqcn": "azure_rm_virtualmachineimage_facts", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "set location", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "set location"}, "module_options": {"location": "eastus"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts for a specific image", "module": "azure_rm_virtualmachineimage_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "Get facts for a specific image", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3", "version": "7.3.20170707"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available versions", "module": "azure_rm_virtualmachineimage_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available versions", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available offers", "module": "azure_rm_virtualmachineimage_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available offers", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available publishers", "module": "azure_rm_virtualmachineimage_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available publishers", "register": "output"}, "module_options": {"location": "{{ location }}"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualmachineimage_facts", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_containerregistry", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry", "fqcn": "azure_rm_containerregistry", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an container registry", "module": "azure_rm_containerregistry", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create an container registry", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": true, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container registry instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the container registry instance is well created"}, "module_options": {"that": ["output.changed", "output.admin_user_enabled", "output.location == 'eastus2'", "output.sku == 'Premium'", "output.tags['Environment'] == 'Production'", "output.tags['Release'] == 'beta1'", "output.provisioning_state == 'Succeeded'", "output.credentials['password'] is defined", "output.credentials['password2'] is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the ACR instance sku, tags and admin_user_enabled", "module": "azure_rm_containerregistry", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Update the ACR instance sku, tags and admin_user_enabled", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Standard", "tags": {"NewTag": "newtag", "Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second container registry (to test facts)", "module": "azure_rm_containerregistry", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create second container registry (to test facts)"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACR instance is well updated", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the ACR instance is well updated"}, "module_options": {"that": ["output.changed == True", "output.admin_user_enabled == False", "output.sku == 'Standard'", "output.tags['NewTag'] == 'newtag'", "output.credentials | length == 0", "output.credentials['password'] is not defined", "output.credentials['password2'] is not defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for single Container Registry", "module": "azure_rm_containerregistry_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for single Container Registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all Container Registries in the resource group", "module": "azure_rm_containerregistry_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for all Container Registries in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None", "output.registries[1]['name'] != None", "output.registries[1]['location'] != None", "output.registries[1]['admin_user_enabled'] != None", "output.registries[1]['sku'] != None", "output.registries[1]['provisioning_state'] != None", "output.registries[1]['login_server'] != None", "output.registries[1]['id'] != None", "output.registries[1]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete first container registry", "module": "azure_rm_containerregistry", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete first container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete second container registry", "module": "azure_rm_containerregistry", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete second container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_containerregistry", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_dnszone", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone", "fqcn": "azure_rm_dnszone", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create random domain name"}, "module_options": {"domain_name": "{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a DNS zone (check mode)", "module": "azure_rm_dnszone", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a DNS zone", "module": "azure_rm_dnszone", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update DNS zone with tags", "module": "azure_rm_dnszone", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update DNS zone with tags", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "tags": {"test": "modified"}}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.changed", "results.state.tags.test == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Zone Facts", "module": "azure_rm_dnszone_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Zone Facts", "register": "zones"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone_facts", "executable_type": "Module", "fqcn": "azure_rm_dnszone_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result"}, "module_options": {"that": ["azure_dnszones[0].tags.test == 'modified'", "zones.dnszones[0].type == 'public'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create virtual network", "with_items": ["{{ domain_name }}registration1", "{{ domain_name }}resolution1", "{{ domain_name }}registration2", "{{ domain_name }}resolution2"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create private dns zone", "module": "azure_rm_dnszone", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}, {"name": "{{ domain_name }}resolution2"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 2", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update private dns zone", "module": "azure_rm_dnszone", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 1", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test idempotent", "module": "azure_rm_dnszone", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Test idempotent", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"], "register": "results"}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"with_items": "{{ results.results }}"}, "module_options": {"that": ["not {{ item.changed }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create \"A\" record set with multiple records", "module": "azure_rm_dnsrecordset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create \"A\" record set with multiple records", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was created"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "re-run \"A\" record with same values", "module": "azure_rm_dnsrecordset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-run \"A\" record with same values", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that new record was appended", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that new record was appended"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 4"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "re-update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove 1 record from record set", "module": "azure_rm_dnsrecordset", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Remove 1 record from record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that record was deleted", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record was deleted"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check_mode test", "module": "azure_rm_dnsrecordset", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Check_mode test", "check_mode": true, "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.105"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that check_mode returns new state", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that check_mode returns new state"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create SRV records in a new record set", "module": "azure_rm_dnsrecordset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create SRV records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_sip._tcp.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "time_to_live": 7200, "record_type": "SRV", "records": [{"entry": "sip.{{ domain_name }}.com", "priority": 20, "weight": 10, "port": 5060}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that SRV record set was created", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that SRV record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create TXT records in a new record set", "module": "azure_rm_dnsrecordset", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create TXT records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_txt.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "record_type": "TXT", "records": [{"entry": "v=spf1 a -all"}, {"entry": "foo"}, {"entry": ["bar", "baz"]}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that TXT record set was created", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that TXT record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for single Record Set", "module": "azure_rm_dnsrecordset_facts", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for single Record Set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com", "relative_name": "www", "record_type": "A"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result for single Record Set", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for single Record Set"}, "module_options": {"that": ["not results.changed", "azure_dnsrecordset[0].name == 'www'", "results.dnsrecordsets[0].relative_name == 'www'", "results.dnsrecordsets[0].records | length == 3", "results.dnsrecordsets[0].record_type == 'A'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result for all Record Sets", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for all Record Sets"}, "module_options": {"that": ["not facts.changed", "facts.ansible_facts.azure_dnsrecordset[0].name == '@'", "facts.ansible_facts.azure_dnsrecordset[1].name == '@'", "facts.ansible_facts.azure_dnsrecordset[4].name == 'www'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete all record sets  except for @", "module": "azure_rm_dnsrecordset", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "delete all record sets  except for @", "with_items": "{{ facts.dnsrecordsets }}", "when": ["item.relative_name != '@'"], "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "{{ item.relative_name }}", "zone_name": "{{ domain_name }}.com", "record_type": "{{ item.record_type }}", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that record set deleted", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record set deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert all record set deleted", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert all record set deleted", "with_items": "{{ facts.dnsrecordsets }}"}, "module_options": {"that": ["item.relative_name == '@'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "(idempotence test) re-run record set absent", "module": "azure_rm_dnsrecordset", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "(idempotence test) re-run record set absent", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": null, "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": null}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete DNS zone", "module": "azure_rm_dnszone", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete DNS zone (idempotent)", "module": "azure_rm_dnszone", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone (idempotent)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_dnszone", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_containerinstance", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance", "fqcn": "azure_rm_containerinstance", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create sample container instance", "module": "azure_rm_containerinstance", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sample container instance -- same parameters", "module": "azure_rm_containerinstance", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sample container instance -- force update", "module": "azure_rm_containerinstance", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- force update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "force_update": true}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second container instance for testing purposes", "module": "azure_rm_containerinstance", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create second container instance for testing purposes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "dns_name_label": "mydnslabel{{ resource_group | hash('md5') | truncate(7, True, '') }}", "location": "eastus", "restart_policy": "on_failure", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81], "commands": ["echo abc", "echo cdf"], "environment_variables": [{"name": "myvar", "value": "myvarvalue"}]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts for single Container Instance", "module": "azure_rm_containerinstance_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for single Container Instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[0]['containers'][0]['commands'] | length == 2", "output.containerinstances[0]['containers'][0]['environment_variables'] | length == 1", "output.containerinstances[0]['restart_policy'] == 'on_failure'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all Container Instances in the resource group", "module": "azure_rm_containerinstance_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for all Container Instances in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[1]['resource_group'] != None", "output.containerinstances[1]['name'] != None", "output.containerinstances[1]['os_type'] != None", "output.containerinstances[1]['location'] != None", "output.containerinstances[1]['ip_address'] != None", "output.containerinstances[1]['ports'] != None", "output.containerinstances[1]['containers'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove container instance again", "module": "azure_rm_containerinstance", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the changed is false", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the changed is false"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_containerinstance", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_mysqlserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver", "fqcn": "azure_rm_mysqlserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of MySQL Server, change storage size", "module": "azure_rm_mysqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of MySQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mysqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mysqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mysqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mysqlfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mysqlconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mysqlconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete second instance of MySQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_mysqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_virtualnetworkgateway", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway", "fqcn": "azure_rm_virtualnetworkgateway", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vngname": "vng{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings (check mode)", "module": "azure_rm_virtualnetworkgateway", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "GatewaySubnet", "address_prefix": "10.0.2.0/24", "virtual_network": "{{ vnetname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Update virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "mno"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network gateway - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualnetworkgateway", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_devtestlab", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab", "fqcn": "azure_rm_devtestlab", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"lab_name": "lab{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vn_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vm_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "artifacts_name": "myartifacts", "github_token": "{{ lookup('env','GITHUB_ACCESS_TOKEN') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Lab", "module": "azure_rm_devtestlab", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Lab", "module": "azure_rm_devtestlab", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create again instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update lab - premium_data_disks", "module": "azure_rm_devtestlab", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update lab - premium_data_disks", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": true}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List DevTest Lab in a resource group", "module": "azure_rm_devtestlab_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List DevTest Lab in a resource group", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get DevTest Lab facts", "module": "azure_rm_devtestlab_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab facts", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['artifacts_storage_account'] != None", "output_lab.labs[0]['default_premium_storage_account'] != None", "output_lab.labs[0]['default_storage_account'] != None", "output_lab.labs[0]['premium_data_disk_storage_account'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- idempotent", "module": "azure_rm_devtestlabpolicy", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was not reported", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- change value", "module": "azure_rm_devtestlabpolicy", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- change value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 6}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "state": "absent"}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- idempotent", "module": "azure_rm_devtestlabschedule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- change time", "module": "azure_rm_devtestlabschedule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- change time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1130", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "state": "absent"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs virtual network", "module": "azure_rm_devtestlabvirtualnetwork", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs virtual network", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with same parameters", "module": "azure_rm_devtestlabvirtualnetwork", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with changed description", "module": "azure_rm_devtestlabvirtualnetwork", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with changed description", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab Updated"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get DevTest Lab Virtual Network facts", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab Virtual Network facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List all Virtual Networks in DevTest Lab", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all Virtual Networks in DevTest Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source with same parameters", "module": "azure_rm_devtestlabartifactsource", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "module": "azure_rm_devtestlabartifactsource", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/library", "security_token": "{{ github_token }}", "display_name": "My Artifacts Source"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length > 0"}, "module_options": {"artifact_source": [{"source_name": "{{ artifacts_name }}", "source_path": "/Artifacts/linux-install-mongodb"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length == 0"}, "module_options": {"artifact_source": null}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DTL Virtual Machine", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine with same parameters", "module": "azure_rm_devtestlabvirtualmachine", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing has changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine - change notes", "module": "azure_rm_devtestlabvirtualmachine", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine - change notes", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something.... more text", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['compute_vm_resource_group'] != None", "output_vm.virtualmachines[0]['compute_vm_name'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List all artifact sources", "module": "azure_rm_devtestlabartifactsource_facts", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all artifact sources", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None", "output.artifactsources | length >= 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get artifacts source facts", "module": "azure_rm_devtestlabartifactsource_facts", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get artifacts source facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "public repo"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "state": "absent"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was correctly registered", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was correctly registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo", "name": "ServiceFabric-LabCluster"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo", "name": "windows-webdeploy"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": "{{ output_lab.labs[0].id }}/artifactSources/public environment repo/armTemplates/WebApp"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment - idempotent", "module": "azure_rm_devtestlabenvironment", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": {"artifact_source_name": "public environment repo", "name": "WebApp"}}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was not detected", "module": "assert", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@mes", "name": "myEnvironment", "state": "absent"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image", "module": "azure_rm_devtestlabcustomimage", "index": 85, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 86, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image -- idempotent", "module": "azure_rm_devtestlabcustomimage", "index": 87, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 88, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 89, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported in check mode", "module": "assert", "index": 90, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported in check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Lab", "module": "azure_rm_devtestlab", "index": 91, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was correctly reported", "module": "assert", "index": 92, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Lab", "module": "azure_rm_devtestlab", "index": 93, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete unexisting instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}unexisting", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert thes state has not changed", "module": "assert", "index": 94, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert thes state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_devtestlab", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_appserviceplan", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan", "fqcn": "azure_rm_appserviceplan", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "Prepare facts"}, "module_options": {"linux_plan_resource_group": "{{ resource_group_secondary }}", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}linplan"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a windows plan", "module": "azure_rm_appserviceplan", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a windows plan", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B1"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a linux plan", "module": "azure_rm_appserviceplan", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a linux plan", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get app service plan by name", "module": "azure_rm_appserviceplan_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "get app service plan by name", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1"}, "executable": "azure_rm_appserviceplan_facts", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert is_linux is True", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert is_linux is True"}, "module_options": {"that": ["output.appserviceplans | length == 1", "output.appserviceplans[0].is_linux == True"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create linux app service plan idempotent", "module": "azure_rm_appserviceplan", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create linux app service plan idempotent", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update a windows plan sku", "module": "azure_rm_appserviceplan", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a windows plan sku", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B2"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update a linux plan number of workers", "module": "azure_rm_appserviceplan", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a linux plan number of workers", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 2}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_appserviceplan", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_image", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image", "fqcn": "azure_rm_image", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"vm_name": "vm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}x", "public_ip_name": "pip{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "security_group_name": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "empty_disk_name": "emptydisk{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ security_group_name }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NIC", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "virtual_network": "{{ vm_name }}", "subnet": "{{ vm_name }}", "public_ip_name": "{{ public_ip_name }}", "security_group": "{{ security_group_name }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine", "module": "azure_rm_virtualmachine", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual machine", "register": "vm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "vm_size": "Standard_A0", "managed_disk_type": "Standard_LRS", "admin_username": "adminuser", "admin_password": "Password123!", "os_type": "Linux", "network_interfaces": "{{ vm_name }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create new empty managed disk", "module": "azure_rm_manageddisk", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create new empty managed disk", "register": "emptydisk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "storage_account_type": "Standard_LRS", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an image from VM (check mode)", "module": "azure_rm_image", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux", "data_disk_sources": ["{{ empty_disk_name }}"]}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an image from VM", "module": "azure_rm_image", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": {"name": "{{ vm_name }}", "type": "disks"}, "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an image from VM (idempotent)", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather information about image created", "module": "azure_rm_image_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Gather information about image created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001"}, "executable": "azure_rm_image_facts", "executable_type": "Module", "fqcn": "azure_rm_image_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.images != []"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image (check mode)", "module": "azure_rm_image", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image", "module": "azure_rm_image", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image (idempotent)", "module": "azure_rm_image", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete empty disk", "module": "azure_rm_manageddisk", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete empty disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_image", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_deployment", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment", "fqcn": "azure_rm_deployment", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random dns label", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create random dns label"}, "module_options": {"dns_label": "test{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Azure Deploy", "module": "azure_rm_deployment", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create Azure Deploy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "eastus", "template_link": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/d01a5c06f4f1bc03a049ca17bbbd6e06d62657b3/101-vm-simple-linux/azuredeploy.json", "deployment_name": "{{ dns_label }}", "parameters": {"adminUsername": {"value": "chouseknecht"}, "adminPassword": {"value": "password123!"}, "dnsLabelPrefix": {"value": "{{ dns_label }}"}, "ubuntuOSVersion": {"value": "16.04.0-LTS"}}}, "executable": "azure_rm_deployment", "executable_type": "Module", "fqcn": "azure_rm_deployment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add new instance to host group", "module": "add_host", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Add new instance to host group", "with_items": "{{ output.deployment.instances }}"}, "module_options": {"hostname": "{{ item.vm_name }}", "ansible_host": "{{ item['ips'][0].public_ip }}", "ansible_user": "chouseknecht", "ansible_ssh_pass": "password123!", "groupname": "azure_vms"}, "executable": "add_host", "executable_type": "Module", "fqcn": "ansible.builtin.add_host", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Deployment Facts", "module": "azure_rm_deployment_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Get Deployment Facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dns_label }}"}, "executable": "azure_rm_deployment_facts", "executable_type": "Module", "fqcn": "azure_rm_deployment_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that values are returned", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Assert that values are returned"}, "module_options": {"that": ["not output.changed", "output.deployments[0]['provisioning_state'] != None", "output.deployments[0]['output_resources'] | length > 0", "output.deployments[0]['outputs'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_deployment", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_publicipaddress", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress", "fqcn": "azure_rm_publicipaddress", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create domain name"}, "module_options": {"domain_name": "ansible-{{ resource_group | hash('md5') | truncate(24, True, '') }}", "rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create public ip", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "Static", "domain_name": "{{ domain_name }}", "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.public_ip_allocation_method == 'static'", "output.state.dns_settings.domain_name_label == domain_name", "output.state.tags | length == 2", "output.state.tags.testing == 'testing'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_publicipaddress", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_publicipaddress", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": true, "tags": {"delete": "never", "foo": "bar"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts, filtering by tag", "module": "azure_rm_publicipaddress_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts, filtering by tag"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge all tags", "module": "azure_rm_publicipaddress", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Purge all tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": false}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip", "register": "pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["pip.publicipaddresses | length == 1", "pip.publicipaddresses[0].name == \"pip{{ rpfx }}\"", "pip.publicipaddresses[0].allocation_method == 'static'", "pip.publicipaddresses[0].dns_settings.domain_name_label == domain_name"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all public ips", "module": "azure_rm_publicipaddress_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for all public ips"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_publicipaddress", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_resourcegroup", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup", "fqcn": "azure_rm_resourcegroup", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": null, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": {"name": "{{ resource_group }}", "list_resources": true}, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length == 1", "rg.resourcegroups[0].resources | length >= 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create resource group (idempontent)", "module": "azure_rm_resourcegroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Create resource group (idempontent)", "register": "output"}, "module_options": {"name": "{{ resource_group }}", "location": "{{ rg.resourcegroups[0].location }}"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete resource group", "module": "azure_rm_resourcegroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "delete resource group", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_resourcegroup", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_subnet", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet", "fqcn": "azure_rm_subnet", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "My_Virtual_Network", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create route table", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create route table", "register": "route_table"}, "module_options": {"name": "routetableforsubnet", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Catch invalid cidr", "module": "azure_rm_subnet", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Catch invalid cidr", "register": "output", "ignore_errors": true}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the subnet back", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the subnet back (idempontent)", "module": "azure_rm_subnet", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back (idempontent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create network security group", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "secgroupfoo", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_subnet", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create network security group in another resource group", "module": "azure_rm_securitygroup", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group in another resource group", "register": "nsg"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "route_table": "{{ route_table.id }}", "security_group": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.network_security_group.id == nsg.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the subnet (idempotent)", "module": "azure_rm_subnet", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet (idempotent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "{{ nsg.state.id }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get subnet facts", "module": "azure_rm_subnet_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Get subnet facts", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet_facts", "executable_type": "Module", "fqcn": "azure_rm_subnet_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.subnets[0]['id'] != None", "output.subnets[0]['resource_group'] != None", "output.subnets[0]['virtual_network_name'] != None", "output.subnets[0]['name'] != None", "output.subnets[0]['address_prefix_cidr'] != None", "output.subnets[0]['route_table'] != None", "output.subnets[0]['security_group'] != None", "output.subnets[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove subnet (idempotent)", "module": "azure_rm_subnet", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet (idempotent)", "register": "output"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove security group", "module": "azure_rm_securitygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "secgroupfoo", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove virtual network", "module": "azure_rm_virtualnetwork", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove virtual network"}, "module_options": {"name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_subnet", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_acs", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs", "fqcn": "azure_rm_acs", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an ACS instance - DCOS", "module": "azure_rm_acs", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - DCOS", "module": "azure_rm_acs", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the DCOS ACS instance - DCOS", "module": "azure_rm_acs", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the DCOS ACS instance - DCOS"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an ACS instance - Swarm", "module": "azure_rm_acs", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - Swarm", "module": "azure_rm_acs", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the ACS instance - Swarm", "module": "azure_rm_acs", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the ACS instance - Swarm"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_acs", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_virtualmachineextension", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension", "fqcn": "azure_rm_virtualmachineextension", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create Random Storage Account Name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Random Storage Account Name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "rules": [{"name": "SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 1001, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network interface card", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network interface card"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNIC", "virtual_network": "testVnet", "subnet": "testSubnet", "public_ip_name": "testPublicIP", "security_group_name": "testNetworkSecurityGroup"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a storage account", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "create a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "network_interfaces": "testNIC", "storage_account_name": "{{ storage_account }}", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM Extension", "module": "azure_rm_virtualmachineextension", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VM Extension ran", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension ran"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachineextension_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachineextension_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM Extension", "module": "azure_rm_virtualmachineextension", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "state": "absent", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VM Extension deleted", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "state": "absent", "remove_on_absent": ["all"], "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "network_interfaces": "testNIC", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete a storage account", "module": "azure_rm_storageaccount", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualmachineextension", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_storageblob", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob", "fqcn": "azure_rm_storageblob", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create container", "module": "azure_rm_storageblob", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create container"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Force upload blob", "module": "azure_rm_storageblob", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Force upload blob"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}, "force": true}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "storage blob seems to have some timing issues", "module": "wait_for", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "storage blob seems to have some timing issues"}, "module_options": {"delay": 10}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upload blob idempotence", "module": "azure_rm_storageblob", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Upload blob idempotence", "register": "upload_facts"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not upload_facts.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download file idempotence", "module": "azure_rm_storageblob", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file idempotence", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "./targets/azure_rm_storageblob/files/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "file", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": "path=\"/tmp/Ratings.png\" state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download file", "module": "azure_rm_storageblob", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "/tmp/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "find", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"register": "find_results"}, "module_options": "paths='/tmp' patterns=\"Ratings.png\"", "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "find_results['matched'] == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do not delete container that has blobs", "module": "azure_rm_storageblob", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Do not delete container that has blobs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete blob object", "module": "azure_rm_storageblob", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete blob object", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete container", "module": "azure_rm_storageblob", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_storageblob", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_resource", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource", "fqcn": "azure_rm_resource", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"nsgname": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "storageaccountname": "stacc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "dbname": "mdb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus", "tags": {"a": "abc", "b": "cde"}}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to get information about account", "module": "azure_rm_resource_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to get information about account", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to query a list", "module": "azure_rm_resource_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to query a list - same without API version", "module": "azure_rm_resource_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list - same without API version", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query all the resources in the resource group", "module": "azure_rm_resource_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Query all the resources in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "resource_type": "resources"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account that requires LRO polling", "module": "azure_rm_resource", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Create storage account that requires LRO polling", "register": "output"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "api_version": "2018-07-01", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "body": {"sku": {"name": "Standard_GRS"}, "kind": "Storage", "location": "eastus"}}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage was successfully created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that storage was successfully created"}, "module_options": {"that": "output['response']['name'] == '{{ storageaccountname }}'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to storage keys -- special case when subresource part has no name", "module": "azure_rm_resource", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to storage keys -- special case when subresource part has no name", "register": "keys"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "subresource": [{"type": "listkeys"}], "api_version": "2018-03-01-preview", "method": "POST"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that key was returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that key was returned"}, "module_options": {"that": "keys['response']['keys'][0]['value'] | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage - without API version", "module": "azure_rm_resource", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Delete storage - without API version"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "method": "DELETE", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_resource", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_autoscale", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale", "fqcn": "azure_rm_autoscale", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "name": "scale{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create VMSS", "register": "vmss"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 2, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create auto scaling", "module": "azure_rm_autoscale", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": {"name": "testVMSS{{ rpfx }}", "types": "virtualMachineScaleSets", "namespace": "Microsoft.Compute"}, "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create auto scaling (idemponent)", "module": "azure_rm_autoscale", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (idemponent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update auto scaling", "module": "azure_rm_autoscale", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "update auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition 0", "rules": [{"time_aggregation": "Average", "time_window": 10, "direction": "Increase", "metric_name": "Percentage CPU", "metric_resource_uri": "{{ vmss.ansible_facts.azure_vmss.id }}", "value": "1", "threshold": 70, "cooldown": 5, "time_grain": 1, "statistic": "Average", "operator": "GreaterThan", "type": "ChangeCount"}], "max_count": "1", "recurrence_mins": ["0"], "min_count": "1", "recurrence_timezone": "China Standard Time", "recurrence_frequency": "Week", "recurrence_hours": ["6"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.profiles[0].rules[0].metric_resource_uri == vmss.ansible_facts.azure_vmss.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling", "module": "azure_rm_autoscale", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling (idemponetent)", "module": "azure_rm_autoscale", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (idemponetent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "vm_size": "Standard_DS1_v2", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Clean subnet", "module": "azure_rm_subnet", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "virtual_network": "testVnet", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Clean virtual network", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_autoscale", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_cosmosdbaccount", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount", "fqcn": "azure_rm_cosmosdbaccount", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"dbname": "cosmos{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnname": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "subnetname": "subnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"name": "{{ subnetname }}", "virtual_network_name": "{{ vnname }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}], "database_account_offer_type": "Standard"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Database Account -- change something", "module": "azure_rm_cosmosdbaccount", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account -- change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}], "enable_automatic_failover": true}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of single account", "module": "azure_rm_cosmosdbaccount_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts of single account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "all"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['primary_master_key'] != None", "output.accounts[0]['secondary_master_key'] != None", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with readonly keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with readonly keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "readonly", "retrieve_connection_strings": true}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "'primary_master_key' not in output.accounts[0]", "'secondary_master_key' not in output.accounts[0]", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None", "output.accounts[0]['connection_strings'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List acounts by resource group", "module": "azure_rm_cosmosdbaccount_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "List acounts by resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_cosmosdbaccount", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_roledefinition", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition", "fqcn": "azure_rm_roledefinition", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"role_name": "{{ (resource_group | replace('-','x'))[-8:] }}{{ 1000 | random }}testrole", "subscription_id": "{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}", "principal_id": "{{ lookup('env','AZURE_CLIENT_ID') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role definition", "module": "azure_rm_roledefinition", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts by type", "module": "azure_rm_roledefinition_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by type", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts by name", "module": "azure_rm_roledefinition_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by name", "register": "facts", "until": "{{ facts.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "role_name": "{{ role_name }}"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length == 1", "facts['roledefinitions'][0]['permissions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['not_data_actions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['data_actions'] | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the role definition (idempotent)", "module": "azure_rm_roledefinition", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition (idempotent)", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the role definition", "module": "azure_rm_roledefinition", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read", "Microsoft.Compute/virtualMachines/start/action"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get role definition facts", "module": "azure_rm_roledefinition_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get role definition facts", "register": "roledef", "until": "{{ roledef.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"role_name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert role definition facts", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert role definition facts"}, "module_options": {"that": ["roledef['roledefinitions'] | length == 1", "roledef['roledefinitions'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role assignment (Check Mode)", "module": "azure_rm_roleassignment", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role assignment", "module": "azure_rm_roleassignment", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment", "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role assignment", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role assignment"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_roleassignment_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment_facts", "executable_type": "Module", "fqcn": "azure_rm_roleassignment_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert role assignment facts", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert role assignment facts"}, "module_options": {"that": ["facts['roleassignments'] | length > 0", "facts['roleassignments'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete role assignment", "module": "azure_rm_roleassignment", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "delete role assignment"}, "module_options": {"name": "{{ facts['roleassignments'][0]['id'].split('/')[-1] }}", "scope": "/subscriptions/{{ subscription_id }}", "state": "absent"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert deleting role definition check mode", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert deleting role definition check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the role definition", "module": "azure_rm_roledefinition", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_roledefinition", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_hdinsightcluster", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster", "fqcn": "azure_rm_hdinsightcluster", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "storage{{ rpfx }}", "account_type": "Standard_LRS", "location": "eastus2"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Sample for Azure REST API - StorageAccounts_ListKeys", "module": "azure_rm_resource", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Sample for Azure REST API - StorageAccounts_ListKeys", "register": "storage_output"}, "module_options": {"api_version": "2018-07-01", "method": "POST", "resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageaccounts", "resource_name": "storage{{ rpfx }}", "subresource": [{"type": "listkeys"}]}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "storage_output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- idempotent", "module": "azure_rm_hdinsightcluster", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- resize and add tags", "module": "azure_rm_hdinsightcluster", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- resize and add tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 2, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of Cluster", "module": "azure_rm_hdinsightcluster_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Get facts of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}"}, "executable": "azure_rm_hdinsightcluster_facts", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.clusters[0]['id'] != None", "output.clusters[0]['resource_group'] != None", "output.clusters[0]['name'] != None", "output.clusters[0]['location'] != None", "output.clusters[0]['cluster_version'] != None", "output.clusters[0]['os_type'] != None", "output.clusters[0]['tier'] != None", "output.clusters[0]['cluster_definition'] != None", "output.clusters[0]['compute_profile_roles'] != None", "output.clusters[0]['connectivity_endpoints'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_hdinsightcluster", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_networkinterface", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface", "fqcn": "azure_rm_networkinterface", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name1": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name2": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "nic_name1": "nic1{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefix": "10.10.0.0/24", "virtual_network": "tn{{ rpfx }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "lb"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "pip{{ rpfx }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}, {"name": "backendaddrpool1"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network id (check mode)", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network id (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network resource_group", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network resource_group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": {"name": "tn{{ rpfx }}", "resource_group": "{{ resource_group_secondary }}"}, "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 1", "not facts.networkinterfaces[0].security_group", "not facts.networkinterfaces[0].ip_configurations[0].public_ip_address", "not facts.networkinterfaces[0].enable_ip_forwarding", "not facts.networkinterfaces[0].enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with ip configurations (idempotent)", "module": "azure_rm_networkinterface", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with ip configurations (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ facts.networkinterfaces[0].resource_group }}", "name": "{{ facts.networkinterfaces[0].name }}", "virtual_network": "{{ facts.networkinterfaces[0].virtual_network }}", "create_with_security_group": false, "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}], "subnet": "{{ facts.networkinterfaces[0].subnet }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update security group (check mode)", "module": "azure_rm_networkinterface", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update security group (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "security_group": "tn{{ rpfx }}sg"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update public ip address (check mode)", "module": "azure_rm_networkinterface", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update public ip address (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip_address_name": "tn{{ rpfx }}", "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update accelerated networking (check mode)", "module": "azure_rm_networkinterface", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update accelerated networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update IP forwarding networking (check mode)", "module": "azure_rm_networkinterface", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update IP forwarding networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "enable_ip_forwarding": true, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update dns server (check mode)", "module": "azure_rm_networkinterface", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update dns server (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false, "dns_servers": ["8.9.10.11", "7.8.9.10"]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update NIC", "module": "azure_rm_networkinterface", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "security_group": "tn{{ rpfx }}sg", "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11', '7.8.9.10']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Complicated NIC (idempontent)", "module": "azure_rm_networkinterface", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Complicated NIC (idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "security_group": "tn{{ rpfx }}sg", "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 2", "facts.networkinterfaces[0].security_group.endswith(\"tn{{ rpfx }}sg\")", "facts.networkinterfaces[0].enable_accelerated_networking", "facts.networkinterfaces[0].enable_ip_forwarding"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove one dns server and ip configuration", "module": "azure_rm_networkinterface", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Remove one dns server and ip configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "security_group": "tn{{ rpfx }}sg", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11"], "ip_configurations": [{"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "primary": true, "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.ip_configurations | length == 1", "output.state.ip_configurations[0].public_ip_address.name == \"tn{{ rpfx }}\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create application security group(check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group", "module": "azure_rm_applicationsecuritygroup", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert application security group creation", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert application security group creation"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Application security group", "module": "azure_rm_applicationsecuritygroup_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get Application security group", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}"}, "executable": "azure_rm_applicationsecuritygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['applicationsecuritygroups'] | length == 1", "facts['applicationsecuritygroups'][0]['name'] != None", "facts['applicationsecuritygroups'][0]['location'] != None", "facts['applicationsecuritygroups'][0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create application security group (idempotent)", "module": "azure_rm_applicationsecuritygroup", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update application security group", "module": "azure_rm_applicationsecuritygroup", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing", "foo": "bar"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert update", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert update"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group in secondary resource group", "module": "azure_rm_applicationsecuritygroup", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group in secondary resource group", "register": "asg"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Nic with application security groups", "module": "azure_rm_networkinterface", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}", "{{ asg.id }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert creation succeeded", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert creation succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nic with application security groups (idempotent)", "module": "azure_rm_networkinterface", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ asg.id }}", "{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert idempotent", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Nic with application security groups", "module": "azure_rm_networkinterface", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert update succeeded", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert update succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces[0].ip_configurations[0].application_security_groups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC (check mode)", "module": "azure_rm_networkinterface", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "delete public ip", "module": "azure_rm_publicipaddress", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the application security group (check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert delete check mode", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert delete check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the application security group", "module": "azure_rm_applicationsecuritygroup", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the deletion", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert the deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second application security group", "module": "azure_rm_applicationsecuritygroup", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete second application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_networkinterface", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_virtualmachine", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine", "fqcn": "azure_rm_virtualmachine", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml", "options": {}, "module_options": "virtualmachine.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "azure_rm_virtualmachine", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "virtualmachine.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random names", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create random names"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}", "vm_name1": "vm1{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name2": "vm2{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name3": "vm3{{ resource_group | hash('md5') | truncate(5, True, '') }}", "abs_name1": "avbs1{{ resource_group | hash('md5') | truncate(3, True, '') }}", "abs_name2": "avbs2{{ resource_group | hash('md5') | truncate(3, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name1 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name1 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "purge_rules": true, "rules": [{"name": "ALLOW_SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 100, "direction": "Inbound"}, {"name": "ALLOW_HTTP", "protocol": "Tcp", "destination_port_range": 80, "access": "Allow", "priority": 110, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NIC for single nic VM", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NIC for single nic VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "virtual_network": "{{ vm_name1 }}", "subnet": "{{ vm_name1 }}", "public_ip_name": "{{ vm_name1 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine with a single NIC", "module": "azure_rm_virtualmachine", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "custom_data": "#!/bin/sh\necho \"custom_data was executed\" > /tmp/custom_data.txt\n"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart the virtual machine", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Restart the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "restarted": true, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deallocate the virtual machine", "module": "azure_rm_virtualmachine", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Deallocate the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "allocated": false, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate == 'deallocated'", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the virtual machine", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Start the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent with a single NIC", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resize VM", "module": "azure_rm_virtualmachine", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Resize VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A1", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["output.changed", "output.ansible_facts.azure_vm.properties.hardwareProfile.vmSize == \"Standard_A1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "NIC should be gone", "module": "azure_rm_networkinterface_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "NIC should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_networkinterfaces | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "PIP should be gone", "module": "azure_rm_publicipaddress_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "PIP should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual machine without public ip address", "module": "azure_rm_virtualmachine", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine without public ip address", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "vm_size": "Standard_A0", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "public_ip_allocation_method": "Disabled", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["not 'publicIPAddress' in output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM with no public ip", "module": "azure_rm_virtualmachine", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM with no public ip", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"niclist": [{"name": "testnic011", "resource_group": "{{ resource_group_secondary }}"}, {"name": "testnic012", "resource_group": "{{ resource_group_secondary  }}"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name2 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name2 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NICs for dual nic VM", "module": "azure_rm_networkinterface", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NICs for dual nic VM", "loop": "{{ niclist }}"}, "module_options": {"resource_group": "{{ item.resource_group }}", "name": "{{ item.name }}", "virtual_network": "{{ vn.state.id }}", "subnet": "{{ vm_name2 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine with two NICs", "module": "azure_rm_virtualmachine", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with two NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "os_disk_name": "testosdiskxx", "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "tags": {"abc": "def"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id", "azure_vm.properties.storageProfile.osDisk.name == 'testosdiskxx'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve vms facts (filtering by name)", "module": "azure_rm_virtualmachine_facts", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve vms facts (filtering by name)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length == 1", "results.vms[0].name == \"{{ vm_name2 }}\"", "results.vms[0].location == 'eastus'", "results.vms[0].admin_username == 'adminuser'", "results.vms[0].resource_group == \"{{ resource_group }}\"", "results.vms[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve facts by tags", "module": "azure_rm_virtualmachine_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve facts by tags", "register": "results"}, "module_options": {"tags": ["abc:def"]}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent with a dual NICs", "module": "azure_rm_virtualmachine", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a dual NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts and check if machine is generalized", "module": "azure_rm_virtualmachine_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Gather facts and check if machine is generalized", "register": "generalized_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "generalized_output.vms[0].power_state == 'generalized'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete dual NIC VM", "module": "azure_rm_virtualmachine", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete dual NIC VM", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachine", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachine", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": ["testing"]}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachine", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": "invalid-image"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachine", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create minimal VM with defaults", "module": "azure_rm_virtualmachine", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create minimal VM with defaults", "register": "vm_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "admin_username": "testuser", "admin_password": "Pass123$$$abx!", "vm_size": "Standard_B1ms", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "remove_on_absent": "all_autocreated", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query NIC", "module": "azure_rm_networkinterface_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NIC", "register": "output_nic"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query NSG", "module": "azure_rm_securitygroup_facts", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NSG", "register": "output_nsg"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query PIP", "module": "azure_rm_publicipaddress_facts", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query PIP", "register": "output_pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that autocreated resources were deleted", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that autocreated resources were deleted"}, "module_options": {"that": ["output_nic.ansible_facts.azure_networkinterfaces | length == 0", "output_nsg.ansible_facts.azure_securitygroups | length == 0", "output_pip.ansible_facts.azure_publicipaddresses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualmachine", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_manageddisk", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk", "fqcn": "azure_rm_manageddisk", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "parameter": {}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clearing (if) previous disks were created", "module": "azure_rm_manageddisk", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Clearing (if) previous disks were created", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Test invalid account name (should give error)", "module": "azure_rm_manageddisk", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Test invalid account name (should give error)", "register": "output", "ignore_errors": true, "check_mode": false}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded (Check Mode)", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded (Check Mode)"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create new managed disk succesfully", "module": "azure_rm_manageddisk", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create new managed disk succesfully", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.disk_size_gb == 1", "output.state.id is defined", "output.state.os_type == None", "output.state.storage_account_type == \"Standard_LRS\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy disk to a new managed disk", "module": "azure_rm_manageddisk", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Copy disk to a new managed disk", "register": "disk2"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}2", "create_option": "copy", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk2.changed", "disk2.state.id is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create disk to a new managed disk with zone and os type", "module": "azure_rm_manageddisk", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk to a new managed disk with zone and os type", "register": "disk3"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}3", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1, "zone": "1", "os_type": "windows"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk3.changed", "disk3.state.id is defined", "disk3.state.zone == \"1\"", "disk3.state.os_type == \"windows\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change storage account type to an invalid type", "module": "azure_rm_manageddisk", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Change storage account type to an invalid type", "register": "output", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "PremiumL", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert storage account type change failed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert storage account type change failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update disk options (os_type, account_type, size, tags)", "module": "azure_rm_manageddisk", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Update disk options (os_type, account_type, size, tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "disk_size_gb": 2, "os_type": "linux", "storage_account_type": "StandardSSD_LRS", "tags": {"galaxy": "no", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.storage_account_type == \"StandardSSD_LRS\"", "output.state.disk_size_gb == 2", "output.state.tags | length == 2", "output.state.tags.galaxy == 'no'", "output.state.os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts to one specific disk", "module": "azure_rm_manageddisk_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Gather facts to one specific disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1"}, "executable": "azure_rm_manageddisk_facts", "executable_type": "Module", "fqcn": "azure_rm_manageddisk_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_managed_disk | length == 1", "azure_managed_disk[0].storage_account_type == \"StandardSSD_LRS\"", "azure_managed_disk[0].disk_size_gb == 2", "azure_managed_disk[0].os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"when": "{{item.key not in ['id', 'changed'] and item.value != None}}", "with_dict": "{{ azure_managed_disk[0] }}"}, "module_options": {"parameter": "{{parameter |combine({item.key: item.value})}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create disk with facts return value", "module": "azure_rm_manageddisk", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk with facts return value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "{{ parameter.location }}", "name": "{{ parameter.name }}", "storage_account_type": "{{ parameter.storage_account_type }}", "disk_size_gb": "{{ parameter.disk_size_gb }}", "create_option": "{{ parameter.create_option }}", "tags": "{{ parameter.tags }}"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete all managed disk", "module": "azure_rm_manageddisk", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete all managed disk", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual machine", "module": "azure_rm_virtualmachine", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete virtual machine"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tr{{ rpfx }}", "state": "absent", "vm_size": "Standard_DS1_v2"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "tr{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_manageddisk", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_routetable", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable", "fqcn": "azure_rm_routetable", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"name": "table{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "route_name": "route{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table (check mode)", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.id", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table", "module": "azure_rm_routetable", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table (idemponent)", "module": "azure_rm_routetable", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route (check mode)", "module": "azure_rm_route", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "not output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route", "module": "azure_rm_route", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route (idemponent)", "module": "azure_rm_route", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update route", "module": "azure_rm_route", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "update route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/24", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 1", "output.route_tables[0].routes[0].address_prefix == '10.1.0.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route (check mode)", "module": "azure_rm_route", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (check mode)", "check_mode": true}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "route_table_name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete route", "module": "azure_rm_route", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route (idemponent)", "module": "azure_rm_route", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route table (check mode)", "module": "azure_rm_routetable", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (check mode)", "check_mode": true}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete route table", "module": "azure_rm_routetable", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route table (idemponent)", "module": "azure_rm_routetable", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_routetable", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_workspace", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace", "fqcn": "azure_rm_workspace", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"name": "workspace{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace", "module": "azure_rm_loganalyticsworkspace", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.retention_in_days == 40", "output.changed", "output.intelligence_packs"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1", "facts.workspaces[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"pack": "{{ pack | default({}) | combine({output.intelligence_packs[0].name: not output.intelligence_packs[0].enabled}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update intelligence pack", "module": "azure_rm_loganalyticsworkspace", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Update intelligence pack", "register": "intelligence"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "intelligence_packs": "{{ pack }}"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["intelligence.intelligence_packs[0].enabled != output.intelligence_packs[0].enabled"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace", "module": "azure_rm_loganalyticsworkspace", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_workspace", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_cdnprofile", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile", "fqcn": "azure_rm_cdnprofile", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"cdnprofilename": "cdnprofile{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname": "endpoint{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "azure_rm_cdnprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created"}, "module_options": {"that": "{{ fact.cdnprofiles | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile", "module": "azure_rm_cdnprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well created"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile (idempotent)", "module": "azure_rm_cdnprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the CDN profile", "module": "azure_rm_cdnprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar", "baz": "qux"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN is still there", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN is still there"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'", "fact.cdnprofiles[0].tags.baz == 'qux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is well created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is well created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of a Azure CDN endpoint", "module": "azure_rm_cdnendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get facts of a Azure CDN endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts output", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert facts output"}, "module_options": {"that": ["facts['cdnendpoints'] | length == 1", "facts['cdnendpoints'][0]['id']", "facts['cdnendpoints'][0]['name']", "facts['cdnendpoints'][0]['profile_name']", "facts['cdnendpoints'][0]['origin']", "facts['cdnendpoints'][0]['location']", "facts['cdnendpoints'][0]['provisioning_state']", "facts['cdnendpoints'][0]['resource_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert still stopped and not changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert still stopped and not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Start a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": true}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert started", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert started"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origin_path": "/test/", "tags": {"testing": "testing", "delete": "on-exit", "foo": "baz"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is updated", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the CDN profile", "module": "azure_rm_cdnprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get CDN profile fact", "module": "azure_rm_cdnprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get CDN profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.cdnprofiles | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_cdnprofile", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, {"py/object": "struct4.Role", "name": "azure_rm_virtualnetworkpeering", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering", "fqcn": "azure_rm_virtualnetworkpeering", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname1": "vnet1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnetname2": "vnet2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "peering_name": "peering1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 100 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create first virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create first virtual network", "register": "vnet1"}, "module_options": {"name": "{{ vnetname1 }}", "address_prefixes_cidr": ["10.1.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create second virtual network", "register": "vnet2"}, "module_options": {"name": "{{ vnetname2 }}", "address_prefixes_cidr": ["10.2.0.0/24"], "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": ["vnet1.changed", "vnet2.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network peering (check mode)", "module": "azure_rm_virtualnetworkpeering", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network peering (idempotent)", "module": "azure_rm_virtualnetworkpeering", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": true, "allow_forwarded_traffic": false}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_virtualnetworkpeering_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}"}, "executable": "azure_rm_virtualnetworkpeering_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert Facts", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Assert Facts"}, "module_options": {"that": ["facts['vnetpeerings'] | length == 1", "facts['vnetpeerings'][0]['id']", "facts['vnetpeerings'][0]['peering_state']", "facts['vnetpeerings'][0]['remote_virtual_network']", "facts['vnetpeerings'][0]['provisioning_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete first virtual network", "module": "azure_rm_virtualnetwork", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete first virtual network"}, "module_options": {"name": "{{ vnetname1 }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname2 }}", "resource_group": "{{ resource_group_secondary }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualnetworkpeering", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {"azure_rm_resourcegroup_facts": {"py/object": "struct4.Module", "name": "azure_rm_resourcegroup_facts", "fqcn": "azure_rm_resourcegroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resourcegroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_applicationsecuritygroup_facts": {"py/object": "struct4.Module", "name": "azure_rm_applicationsecuritygroup_facts", "fqcn": "azure_rm_applicationsecuritygroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_applicationsecuritygroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_roleassignment_facts": {"py/object": "struct4.Module", "name": "azure_rm_roleassignment_facts", "fqcn": "azure_rm_roleassignment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roleassignment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_dnsrecordset_facts": {"py/object": "struct4.Module", "name": "azure_rm_dnsrecordset_facts", "fqcn": "azure_rm_dnsrecordset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnsrecordset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabpolicy": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabpolicy", "fqcn": "azure_rm_devtestlabpolicy", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabpolicy.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_loadbalancer_facts": {"py/object": "struct4.Module", "name": "azure_rm_loadbalancer_facts", "fqcn": "azure_rm_loadbalancer_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loadbalancer_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbdatabase_facts": {"py/object": "struct4.Module", "name": "azure_rm_mariadbdatabase_facts", "fqcn": "azure_rm_mariadbdatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbdatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_trafficmanagerprofile_facts": {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerprofile_facts", "fqcn": "azure_rm_trafficmanagerprofile_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerprofile_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_loganalyticsworkspace_facts": {"py/object": "struct4.Module", "name": "azure_rm_loganalyticsworkspace_facts", "fqcn": "azure_rm_loganalyticsworkspace_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loganalyticsworkspace_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachinescalesetinstance": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetinstance", "fqcn": "azure_rm_virtualmachinescalesetinstance", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetinstance.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabarmtemplate_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabarmtemplate_facts", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabarmtemplate_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_storageaccount": {"py/object": "struct4.Module", "name": "azure_rm_storageaccount", "fqcn": "azure_rm_storageaccount", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageaccount.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabcustomimage_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabcustomimage_facts", "fqcn": "azure_rm_devtestlabcustomimage_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabcustomimage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_containerregistry": {"py/object": "struct4.Module", "name": "azure_rm_containerregistry", "fqcn": "azure_rm_containerregistry", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerregistry.py", "builtin": false, "used_in": [], "annotations": {}}, "_azure_rm_virtualmachine_scaleset": {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_scaleset", "fqcn": "_azure_rm_virtualmachine_scaleset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_scaleset.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_dnszone": {"py/object": "struct4.Module", "name": "azure_rm_dnszone", "fqcn": "azure_rm_dnszone", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_webapp_facts": {"py/object": "struct4.Module", "name": "azure_rm_webapp_facts", "fqcn": "azure_rm_webapp_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webapp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlab_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlab_facts", "fqcn": "azure_rm_devtestlab_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlab_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabschedule": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabschedule", "fqcn": "azure_rm_devtestlabschedule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabschedule.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbconfiguration_facts": {"py/object": "struct4.Module", "name": "azure_rm_mariadbconfiguration_facts", "fqcn": "azure_rm_mariadbconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachineextension": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineextension", "fqcn": "azure_rm_virtualmachineextension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineextension.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_subnet_facts": {"py/object": "struct4.Module", "name": "azure_rm_subnet_facts", "fqcn": "azure_rm_subnet_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_subnet_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_sqlserver": {"py/object": "struct4.Module", "name": "azure_rm_sqlserver", "fqcn": "azure_rm_sqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbfirewallrule_facts": {"py/object": "struct4.Module", "name": "azure_rm_mariadbfirewallrule_facts", "fqcn": "azure_rm_mariadbfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_deployment_facts": {"py/object": "struct4.Module", "name": "azure_rm_deployment_facts", "fqcn": "azure_rm_deployment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_deployment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_trafficmanagerprofile": {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerprofile", "fqcn": "azure_rm_trafficmanagerprofile", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerprofile.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabenvironment": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabenvironment", "fqcn": "azure_rm_devtestlabenvironment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabenvironment.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabartifactsource": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifactsource", "fqcn": "azure_rm_devtestlabartifactsource", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifactsource.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_acs": {"py/object": "struct4.Module", "name": "azure_rm_acs", "fqcn": "azure_rm_acs", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_acs.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_networkinterface_facts": {"py/object": "struct4.Module", "name": "azure_rm_networkinterface_facts", "fqcn": "azure_rm_networkinterface_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_networkinterface_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_containerinstance_facts": {"py/object": "struct4.Module", "name": "azure_rm_containerinstance_facts", "fqcn": "azure_rm_containerinstance_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerinstance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_dnsrecordset": {"py/object": "struct4.Module", "name": "azure_rm_dnsrecordset", "fqcn": "azure_rm_dnsrecordset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnsrecordset.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabpolicy_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabpolicy_facts", "fqcn": "azure_rm_devtestlabpolicy_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabpolicy_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqldatabase_facts": {"py/object": "struct4.Module", "name": "azure_rm_postgresqldatabase_facts", "fqcn": "azure_rm_postgresqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_hdinsightcluster": {"py/object": "struct4.Module", "name": "azure_rm_hdinsightcluster", "fqcn": "azure_rm_hdinsightcluster", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_hdinsightcluster.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_containerregistry_facts": {"py/object": "struct4.Module", "name": "azure_rm_containerregistry_facts", "fqcn": "azure_rm_containerregistry_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerregistry_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachinescalesetextension_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetextension_facts", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetextension_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_storageblob": {"py/object": "struct4.Module", "name": "azure_rm_storageblob", "fqcn": "azure_rm_storageblob", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageblob.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachinescaleset_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescaleset_facts", "fqcn": "azure_rm_virtualmachinescaleset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescaleset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_sqlfirewallrule_facts": {"py/object": "struct4.Module", "name": "azure_rm_sqlfirewallrule_facts", "fqcn": "azure_rm_sqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_trafficmanagerendpoint_facts": {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerendpoint_facts", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerendpoint_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "_azure": {"py/object": "struct4.Module", "name": "_azure", "fqcn": "_azure", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_publicipaddress_facts": {"py/object": "struct4.Module", "name": "azure_rm_publicipaddress_facts", "fqcn": "azure_rm_publicipaddress_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_publicipaddress_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_appserviceplan_facts": {"py/object": "struct4.Module", "name": "azure_rm_appserviceplan_facts", "fqcn": "azure_rm_appserviceplan_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appserviceplan_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachineimage_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineimage_facts", "fqcn": "azure_rm_virtualmachineimage_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineimage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_rediscache": {"py/object": "struct4.Module", "name": "azure_rm_rediscache", "fqcn": "azure_rm_rediscache", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscache.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_route": {"py/object": "struct4.Module", "name": "azure_rm_route", "fqcn": "azure_rm_route", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_route.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_functionapp": {"py/object": "struct4.Module", "name": "azure_rm_functionapp", "fqcn": "azure_rm_functionapp", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_functionapp.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_cdnprofile_facts": {"py/object": "struct4.Module", "name": "azure_rm_cdnprofile_facts", "fqcn": "azure_rm_cdnprofile_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnprofile_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqlfirewallrule": {"py/object": "struct4.Module", "name": "azure_rm_postgresqlfirewallrule", "fqcn": "azure_rm_postgresqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualnetwork": {"py/object": "struct4.Module", "name": "azure_rm_virtualnetwork", "fqcn": "azure_rm_virtualnetwork", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_servicebus": {"py/object": "struct4.Module", "name": "azure_rm_servicebus", "fqcn": "azure_rm_servicebus", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebus.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbfirewallrule": {"py/object": "struct4.Module", "name": "azure_rm_mariadbfirewallrule", "fqcn": "azure_rm_mariadbfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualnetworkpeering_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkpeering_facts", "fqcn": "azure_rm_virtualnetworkpeering_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkpeering_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqlconfiguration": {"py/object": "struct4.Module", "name": "azure_rm_mysqlconfiguration", "fqcn": "azure_rm_mysqlconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_storageaccount_facts": {"py/object": "struct4.Module", "name": "azure_rm_storageaccount_facts", "fqcn": "azure_rm_storageaccount_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageaccount_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_resourcegroup": {"py/object": "struct4.Module", "name": "azure_rm_resourcegroup", "fqcn": "azure_rm_resourcegroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resourcegroup.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqlfirewallrule": {"py/object": "struct4.Module", "name": "azure_rm_mysqlfirewallrule", "fqcn": "azure_rm_mysqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_autoscale_facts": {"py/object": "struct4.Module", "name": "azure_rm_autoscale_facts", "fqcn": "azure_rm_autoscale_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_autoscale_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_availabilityset": {"py/object": "struct4.Module", "name": "azure_rm_availabilityset", "fqcn": "azure_rm_availabilityset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_availabilityset.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_containerinstance": {"py/object": "struct4.Module", "name": "azure_rm_containerinstance", "fqcn": "azure_rm_containerinstance", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerinstance.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachineextension_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineextension_facts", "fqcn": "azure_rm_virtualmachineextension_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineextension_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabvirtualmachine": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualmachine", "fqcn": "azure_rm_devtestlabvirtualmachine", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualmachine.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqldatabase": {"py/object": "struct4.Module", "name": "azure_rm_mysqldatabase", "fqcn": "azure_rm_mysqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabvirtualnetwork": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualnetwork", "fqcn": "azure_rm_devtestlabvirtualnetwork", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_aks_facts": {"py/object": "struct4.Module", "name": "azure_rm_aks_facts", "fqcn": "azure_rm_aks_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aks_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_servicebustopic": {"py/object": "struct4.Module", "name": "azure_rm_servicebustopic", "fqcn": "azure_rm_servicebustopic", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebustopic.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqlfirewallrule_facts": {"py/object": "struct4.Module", "name": "azure_rm_postgresqlfirewallrule_facts", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_cdnprofile": {"py/object": "struct4.Module", "name": "azure_rm_cdnprofile", "fqcn": "azure_rm_cdnprofile", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnprofile.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualnetworkpeering": {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkpeering", "fqcn": "azure_rm_virtualnetworkpeering", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkpeering.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_servicebustopicsubscription": {"py/object": "struct4.Module", "name": "azure_rm_servicebustopicsubscription", "fqcn": "azure_rm_servicebustopicsubscription", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebustopicsubscription.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqlserver": {"py/object": "struct4.Module", "name": "azure_rm_mysqlserver", "fqcn": "azure_rm_mysqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_sqlserver_facts": {"py/object": "struct4.Module", "name": "azure_rm_sqlserver_facts", "fqcn": "azure_rm_sqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachine": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachine", "fqcn": "azure_rm_virtualmachine", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachine.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_keyvaultsecret": {"py/object": "struct4.Module", "name": "azure_rm_keyvaultsecret", "fqcn": "azure_rm_keyvaultsecret", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvaultsecret.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqldatabase": {"py/object": "struct4.Module", "name": "azure_rm_postgresqldatabase", "fqcn": "azure_rm_postgresqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualnetworkgateway": {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkgateway", "fqcn": "azure_rm_virtualnetworkgateway", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkgateway.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbconfiguration": {"py/object": "struct4.Module", "name": "azure_rm_mariadbconfiguration", "fqcn": "azure_rm_mariadbconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, "_azure_rm_virtualmachine_extension": {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_extension", "fqcn": "_azure_rm_virtualmachine_extension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_extension.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_rediscache_facts": {"py/object": "struct4.Module", "name": "azure_rm_rediscache_facts", "fqcn": "azure_rm_rediscache_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscache_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_routetable": {"py/object": "struct4.Module", "name": "azure_rm_routetable", "fqcn": "azure_rm_routetable", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_routetable.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_sqlfirewallrule": {"py/object": "struct4.Module", "name": "azure_rm_sqlfirewallrule", "fqcn": "azure_rm_sqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_servicebus_facts": {"py/object": "struct4.Module", "name": "azure_rm_servicebus_facts", "fqcn": "azure_rm_servicebus_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebus_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_dnszone_facts": {"py/object": "struct4.Module", "name": "azure_rm_dnszone_facts", "fqcn": "azure_rm_dnszone_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnszone_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_securitygroup_facts": {"py/object": "struct4.Module", "name": "azure_rm_securitygroup_facts", "fqcn": "azure_rm_securitygroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_securitygroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualnetwork_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualnetwork_facts", "fqcn": "azure_rm_virtualnetwork_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetwork_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "_azure_rm_virtualmachine_scaleset_facts": {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_scaleset_facts", "fqcn": "_azure_rm_virtualmachine_scaleset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_scaleset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_manageddisk": {"py/object": "struct4.Module", "name": "azure_rm_manageddisk", "fqcn": "azure_rm_manageddisk", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_manageddisk.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqlconfiguration": {"py/object": "struct4.Module", "name": "azure_rm_postgresqlconfiguration", "fqcn": "azure_rm_postgresqlconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabvirtualmachine_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualmachine_facts", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualmachine_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_roledefinition_facts": {"py/object": "struct4.Module", "name": "azure_rm_roledefinition_facts", "fqcn": "azure_rm_roledefinition_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roledefinition_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_cdnendpoint": {"py/object": "struct4.Module", "name": "azure_rm_cdnendpoint", "fqcn": "azure_rm_cdnendpoint", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnendpoint.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_functionapp_facts": {"py/object": "struct4.Module", "name": "azure_rm_functionapp_facts", "fqcn": "azure_rm_functionapp_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_functionapp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabcustomimage": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabcustomimage", "fqcn": "azure_rm_devtestlabcustomimage", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabcustomimage.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqlconfiguration_facts": {"py/object": "struct4.Module", "name": "azure_rm_mysqlconfiguration_facts", "fqcn": "azure_rm_mysqlconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_cosmosdbaccount": {"py/object": "struct4.Module", "name": "azure_rm_cosmosdbaccount", "fqcn": "azure_rm_cosmosdbaccount", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cosmosdbaccount.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqlserver_facts": {"py/object": "struct4.Module", "name": "azure_rm_mysqlserver_facts", "fqcn": "azure_rm_mysqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_hdinsightcluster_facts": {"py/object": "struct4.Module", "name": "azure_rm_hdinsightcluster_facts", "fqcn": "azure_rm_hdinsightcluster_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_hdinsightcluster_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbserver_facts": {"py/object": "struct4.Module", "name": "azure_rm_mariadbserver_facts", "fqcn": "azure_rm_mariadbserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachinescaleset": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescaleset", "fqcn": "azure_rm_virtualmachinescaleset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescaleset.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqlconfiguration_facts": {"py/object": "struct4.Module", "name": "azure_rm_postgresqlconfiguration_facts", "fqcn": "azure_rm_postgresqlconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbserver": {"py/object": "struct4.Module", "name": "azure_rm_mariadbserver", "fqcn": "azure_rm_mariadbserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbserver.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_resource_facts": {"py/object": "struct4.Module", "name": "azure_rm_resource_facts", "fqcn": "azure_rm_resource_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resource_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_aksversion_facts": {"py/object": "struct4.Module", "name": "azure_rm_aksversion_facts", "fqcn": "azure_rm_aksversion_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aksversion_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_trafficmanagerendpoint": {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerendpoint", "fqcn": "azure_rm_trafficmanagerendpoint", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerendpoint.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabartifact_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifact_facts", "fqcn": "azure_rm_devtestlabartifact_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifact_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabartifactsource_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifactsource_facts", "fqcn": "azure_rm_devtestlabartifactsource_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifactsource_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_appgateway": {"py/object": "struct4.Module", "name": "azure_rm_appgateway", "fqcn": "azure_rm_appgateway", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appgateway.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_deployment": {"py/object": "struct4.Module", "name": "azure_rm_deployment", "fqcn": "azure_rm_deployment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_subnet": {"py/object": "struct4.Module", "name": "azure_rm_subnet", "fqcn": "azure_rm_subnet", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqlserver_facts": {"py/object": "struct4.Module", "name": "azure_rm_postgresqlserver_facts", "fqcn": "azure_rm_postgresqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_appserviceplan": {"py/object": "struct4.Module", "name": "azure_rm_appserviceplan", "fqcn": "azure_rm_appserviceplan", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appserviceplan.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_roleassignment": {"py/object": "struct4.Module", "name": "azure_rm_roleassignment", "fqcn": "azure_rm_roleassignment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roleassignment.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_autoscale": {"py/object": "struct4.Module", "name": "azure_rm_autoscale", "fqcn": "azure_rm_autoscale", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_autoscale.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_manageddisk_facts": {"py/object": "struct4.Module", "name": "azure_rm_manageddisk_facts", "fqcn": "azure_rm_manageddisk_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_manageddisk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_resource": {"py/object": "struct4.Module", "name": "azure_rm_resource", "fqcn": "azure_rm_resource", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resource.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachinescalesetinstance_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetinstance_facts", "fqcn": "azure_rm_virtualmachinescalesetinstance_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetinstance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_networkinterface": {"py/object": "struct4.Module", "name": "azure_rm_networkinterface", "fqcn": "azure_rm_networkinterface", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_networkinterface.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlab": {"py/object": "struct4.Module", "name": "azure_rm_devtestlab", "fqcn": "azure_rm_devtestlab", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlab.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_postgresqlserver": {"py/object": "struct4.Module", "name": "azure_rm_postgresqlserver", "fqcn": "azure_rm_postgresqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_loganalyticsworkspace": {"py/object": "struct4.Module", "name": "azure_rm_loganalyticsworkspace", "fqcn": "azure_rm_loganalyticsworkspace", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loganalyticsworkspace.py", "builtin": false, "used_in": [], "annotations": {}}, "_azure_rm_managed_disk": {"py/object": "struct4.Module", "name": "_azure_rm_managed_disk", "fqcn": "_azure_rm_managed_disk", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_managed_disk.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabschedule_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabschedule_facts", "fqcn": "azure_rm_devtestlabschedule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabschedule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_sqldatabase_facts": {"py/object": "struct4.Module", "name": "azure_rm_sqldatabase_facts", "fqcn": "azure_rm_sqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_keyvaultkey": {"py/object": "struct4.Module", "name": "azure_rm_keyvaultkey", "fqcn": "azure_rm_keyvaultkey", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvaultkey.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_roledefinition": {"py/object": "struct4.Module", "name": "azure_rm_roledefinition", "fqcn": "azure_rm_roledefinition", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roledefinition.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_image_facts": {"py/object": "struct4.Module", "name": "azure_rm_image_facts", "fqcn": "azure_rm_image_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_cosmosdbaccount_facts": {"py/object": "struct4.Module", "name": "azure_rm_cosmosdbaccount_facts", "fqcn": "azure_rm_cosmosdbaccount_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cosmosdbaccount_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachinescalesetextension": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetextension", "fqcn": "azure_rm_virtualmachinescalesetextension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetextension.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_routetable_facts": {"py/object": "struct4.Module", "name": "azure_rm_routetable_facts", "fqcn": "azure_rm_routetable_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_routetable_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_servicebussaspolicy": {"py/object": "struct4.Module", "name": "azure_rm_servicebussaspolicy", "fqcn": "azure_rm_servicebussaspolicy", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebussaspolicy.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_keyvault": {"py/object": "struct4.Module", "name": "azure_rm_keyvault", "fqcn": "azure_rm_keyvault", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvault.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_servicebusqueue": {"py/object": "struct4.Module", "name": "azure_rm_servicebusqueue", "fqcn": "azure_rm_servicebusqueue", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebusqueue.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mariadbdatabase": {"py/object": "struct4.Module", "name": "azure_rm_mariadbdatabase", "fqcn": "azure_rm_mariadbdatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbdatabase.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_publicipaddress": {"py/object": "struct4.Module", "name": "azure_rm_publicipaddress", "fqcn": "azure_rm_publicipaddress", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_publicipaddress.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_availabilityset_facts": {"py/object": "struct4.Module", "name": "azure_rm_availabilityset_facts", "fqcn": "azure_rm_availabilityset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_availabilityset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabenvironment_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabenvironment_facts", "fqcn": "azure_rm_devtestlabenvironment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabenvironment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqlfirewallrule_facts": {"py/object": "struct4.Module", "name": "azure_rm_mysqlfirewallrule_facts", "fqcn": "azure_rm_mysqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_mysqldatabase_facts": {"py/object": "struct4.Module", "name": "azure_rm_mysqldatabase_facts", "fqcn": "azure_rm_mysqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_virtualmachine_facts": {"py/object": "struct4.Module", "name": "azure_rm_virtualmachine_facts", "fqcn": "azure_rm_virtualmachine_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachine_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_aks": {"py/object": "struct4.Module", "name": "azure_rm_aks", "fqcn": "azure_rm_aks", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aks.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_rediscachefirewallrule": {"py/object": "struct4.Module", "name": "azure_rm_rediscachefirewallrule", "fqcn": "azure_rm_rediscachefirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscachefirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_applicationsecuritygroup": {"py/object": "struct4.Module", "name": "azure_rm_applicationsecuritygroup", "fqcn": "azure_rm_applicationsecuritygroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_applicationsecuritygroup.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_webappslot": {"py/object": "struct4.Module", "name": "azure_rm_webappslot", "fqcn": "azure_rm_webappslot", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webappslot.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_loadbalancer": {"py/object": "struct4.Module", "name": "azure_rm_loadbalancer", "fqcn": "azure_rm_loadbalancer", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_devtestlabvirtualnetwork_facts": {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualnetwork_facts", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualnetwork_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_sqldatabase": {"py/object": "struct4.Module", "name": "azure_rm_sqldatabase", "fqcn": "azure_rm_sqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_cdnendpoint_facts": {"py/object": "struct4.Module", "name": "azure_rm_cdnendpoint_facts", "fqcn": "azure_rm_cdnendpoint_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnendpoint_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_image": {"py/object": "struct4.Module", "name": "azure_rm_image", "fqcn": "azure_rm_image", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_image.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_webapp": {"py/object": "struct4.Module", "name": "azure_rm_webapp", "fqcn": "azure_rm_webapp", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webapp.py", "builtin": false, "used_in": [], "annotations": {}}, "_azure_rm_managed_disk_facts": {"py/object": "struct4.Module", "name": "_azure_rm_managed_disk_facts", "fqcn": "_azure_rm_managed_disk_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_managed_disk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, "azure_rm_securitygroup": {"py/object": "struct4.Module", "name": "azure_rm_securitygroup", "fqcn": "azure_rm_securitygroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_securitygroup.py", "builtin": false, "used_in": [], "annotations": {}}}, "task_dict": {"{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml", "options": {"when": "ansible_version.full < \"2.5.0\""}, "module_options": {"msg": ["Your Ansible version is lower than 2.5.0", "You may need to perform additional steps to install this roles:", "  sudo pip install -r {{ role_path }}/files/requirements-azure.txt", "or", "  pip install --user -r {{ role_path }}/files/requirements-azure.txt", "depending on your ansible setup."]}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"random_postfix": "{{ 1000 | random }}{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create instance of SQL Server", "module": "azure_rm_sqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create again instance of SQL Server", "module": "azure_rm_sqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Gather facts SQL Server", "module": "azure_rm_sqlserver_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None", "output.servers.sqlsrv{{ random_postfix }}.tags.aaa == 'bbb'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Gather facts SQL Server - unexisting", "module": "azure_rm_sqlserver_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - unexisting", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "unexisting"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers == {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Gather facts SQL Server - list", "module": "azure_rm_sqlserver_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - list", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Create again instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create second SQL Database", "module": "azure_rm_sqldatabase", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create second SQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None", "output.databases[1].id != None", "output.databases[1].name != None", "output.databases[1].location != None", "output.databases[1].sku.name != None", "output.databases[1].sku.tier != None", "output.databases[1].sku.capacity != None", "output.databases[1].kind != None", "output.databases[1].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Delete instance of secondary database", "module": "azure_rm_sqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of secondary database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Delete instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Delete instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned (one database is there by default)", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned (one database is there by default)"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_sqlfirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_sqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].resource_group != None", "output.rules[1].server_name != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Delete instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Delete instance of SQL Server", "module": "azure_rm_sqlserver", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Server", "module": "azure_rm_sqlserver", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"tmname": "tm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname1": "ep1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname2": "ep2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "azure_rm_trafficmanagerprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created"}, "module_options": {"that": "{{ fact.tms | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile", "register": "tm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well created"}, "module_options": {"that": ["tm.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile (idempotent)", "module": "azure_rm_trafficmanagerprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Update the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Update the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "disabled", "routing_method": "priority", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint(check mode)", "module": "azure_rm_trafficmanagerendpoint", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert check mode changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert check mode changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Check no endpoint created in check mode", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check no endpoint created in check mode"}, "module_options": {"that": ["facts.endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert endpoint create changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint create changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Check endpoint created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check endpoint created"}, "module_options": {"that": ["facts.endpoints | length == 1", "facts.endpoints[0].name == \"{{ endpointname1 }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create second Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create second Traffic Manager endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Check 2 endpoint in profile", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 2 endpoint in profile"}, "module_options": {"that": ["facts.endpoints | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Create endpoint (idempotent)", "module": "azure_rm_trafficmanagerendpoint", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create endpoint (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Assert endpoint creation idempotent", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint creation idempotent"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Delete second endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete second endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "state": "absent"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Assert endpoint deletion changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint deletion changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Check 1 endpoint left in profile", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 1 endpoint left in profile"}, "module_options": {"that": ["facts.endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Assert the traffic manager profile is still there", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the traffic manager profile is still there"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Get Traffic Manager profile fact", "module": "azure_rm_trafficmanagerprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get Traffic Manager profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.tms | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create an availability set with default options", "module": "azure_rm_availabilityset", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with default options", "register": "results"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "tags": {"tag1": "testtag"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create an availability set with advanced options", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with advanced options", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options - no changes, fail for immutable options", "module": "azure_rm_availabilityset", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options - no changes, fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "module": "azure_rm_availabilityset", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test1": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Modify availabilty set options to update tags", "module": "azure_rm_availabilityset", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set options to update tags", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test2": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.tags.test2 == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create availability set with incorrect fault domain parameter", "module": "azure_rm_availabilityset", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create availability set with incorrect fault domain parameter", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 4, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "'The specified fault domain count 4 must fall in the range 1 to' in results['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Test check_mode", "module": "azure_rm_availabilityset", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Test check_mode", "check_mode": true, "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"checktest1": "modified1", "checktest2": "modified2"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.state.tags.checktest1 == 'modified1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Get facts for created availability set", "module": "azure_rm_availabilityset_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Get facts for created availability set", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset_facts", "executable_type": "Module", "fqcn": "azure_rm_availabilityset_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "not results.failed", "results.ansible_facts.azure_availabilitysets[0].properties.platformFaultDomainCount == 2", "results.ansible_facts.azure_availabilitysets[0].properties.platformUpdateDomainCount == 5", "results.ansible_facts.azure_availabilitysets[0].sku == 'Aligned'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "public_ip_address_name": "testPublicIP"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create public IP address 1", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address 1"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP1"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create load balancer 1", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer 1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB1", "public_ip_address_name": "testPublicIP1"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create network security group within same resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group within same resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create network security group in different resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group in different resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create virtual network inteface cards for VM A and B", "module": "azure_rm_networkinterface", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network inteface cards for VM A and B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}nic", "virtual_network": "testVnet", "subnet": "testSubnet"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "admin_username": "testuser", "admin_password": "Password1234!", "vm_size": "Standard_B1ms", "network_interfaces": "vmforimage{{ rpfx }}nic", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create image A", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image A"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimagea", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create image B", "module": "azure_rm_image", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimageb", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create VMSS (check mode)", "module": "azure_rm_virtualmachinescaleset", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "load_balancer": "testLB", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Get VMSS to assert no VMSS is created in check mode", "module": "azure_rm_virtualmachinescaleset_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get VMSS to assert no VMSS is created in check mode", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Assert no VMSS created in check mode", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert no VMSS created in check mode"}, "module_options": {"that": ["output_scaleset.ansible_facts.azure_vmss | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "load_balancer": "testLB", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "module": "azure_rm_virtualmachinescaleset", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Automatic", "load_balancer": "testLB1", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Retrieve scaleset facts", "module": "azure_rm_virtualmachinescaleset_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset facts", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {}, "module_options": {"that": ["output_scaleset.vmss[0].load_balancer == \"testLB1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Retrieve scaleset VMs facts", "module": "azure_rm_virtualmachinescalesetinstance_facts", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset VMs facts", "register": "instances"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Assert that facts returned correctly", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts returned correctly"}, "module_options": {"that": ["instances.instances | length == 1", "instances.instances[0].id != None", "instances.instances[0].name != None", "instances.instances[0].instance_id != None", "instances.instances[0].provisioning_state != None", "instances.instances[0].vm_id != None", "instances.instances[0].latest_model != None", "instances.instances[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Get scaleset body", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get scaleset body"}, "module_options": {"body": "{{ output_scaleset.vmss[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Try to update VMSS using output as input", "module": "azure_rm_virtualmachinescaleset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Try to update VMSS using output as input", "register": "results"}, "module_options": {"resource_group": "{{ body.resource_group }}", "name": "{{ body.name }}", "vm_size": "{{ body.vm_size }}", "admin_username": "{{ body.admin_username }}", "ssh_password_enabled": "{{ body.ssh_password_enabled }}", "admin_password": "Password1234!", "capacity": "{{ body.capacity }}", "virtual_network_name": "{{ body.virtual_network_name }}", "subnet_name": "{{ body.subnet_name }}", "upgrade_policy": "{{ body.upgrade_policy }}", "load_balancer": "{{ body.load_balancer }}", "tier": "{{ body.tier }}", "managed_disk_type": "{{ body.managed_disk_type }}", "os_disk_caching": "{{ body.os_disk_caching }}", "image": "{{ body.image }}", "data_disks": "{{ body.data_disks }}", "overprovision": "{{ body.overprovision }}"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Install VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Assert that something was changed", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something was changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Install Again VMSS Extension - again", "module": "azure_rm_virtualmachinescalesetextension", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install Again VMSS Extension - again", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Delete VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Assert that change was reported", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that change was reported"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Upgrade instance to the latest image", "module": "azure_rm_virtualmachinescalesetinstance", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Upgrade instance to the latest image", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "latest_model": true}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Stop virtual machine", "module": "azure_rm_virtualmachinescalesetinstance", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Stop virtual machine", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "power_state": "stopped"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Delete instance", "module": "azure_rm_virtualmachinescalesetinstance", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete instance", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "module": "azure_rm_virtualmachinescaleset", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Assert that VMSS ran", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS ran"}, "module_options": {"that": ["results.changed", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.enableAcceleratedNetworking == true", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.networkSecurityGroup != {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "update VMSS with security group in different resource group.", "module": "azure_rm_virtualmachinescaleset", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "update VMSS with security group in different resource group.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_B1s", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": {"name": "testNetworkSecurityGroup2", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 56}": {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 57}": {"py/object": "struct4.Task", "name": "Fail when instance type is not supported to enable accelerated networking", "module": "azure_rm_virtualmachinescaleset", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Fail when instance type is not supported to enable accelerated networking", "register": "results", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}4", "vm_size": "Standard_B1s", "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "upgrade_policy": "Manual", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 58}": {"py/object": "struct4.Task", "name": "Assert failure to show that accelerated networking is enabled only with supported instance types.", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert failure to show that accelerated networking is enabled only with supported instance types."}, "module_options": {"that": ["\"VMSizeIsNotPermittedToEnableAcceleratedNetworkingForVmss\" in results.msg"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 59}": {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 60}": {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 61}": {"py/object": "struct4.Task", "name": "Delete load balancer", "module": "azure_rm_loadbalancer", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 62}": {"py/object": "struct4.Task", "name": "Delete public IP address", "module": "azure_rm_publicipaddress", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 63}": {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 64}": {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachinescaleset", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 65}": {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachinescaleset", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": ["testing"]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 66}": {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachinescaleset", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": "invalid-image"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml\", \"index\": 67}": {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachinescaleset", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Test invalid account name", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Test invalid account name", "register": "invalid_name", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "invalid_name['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create new storage account", "module": "azure_rm_storageaccount", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.id is defined", "output.state.blob_cors | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create new storage account (idempotence)", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_storageaccount_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["test", "galaxy"]}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": "azure_storageaccounts | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Change account type", "module": "azure_rm_storageaccount", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Premium_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert account type change failed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert account type change failed"}, "module_options": {"that": "change_account['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Change account type and add custom domain", "module": "azure_rm_storageaccount", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type and add custom domain", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_GRS", "custom_domain": {"name": "ansible.com", "use_sub_domain": false}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert CNAME failure", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert CNAME failure"}, "module_options": {"that": "'custom domain name could not be verified' in  change_account['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Update account tags", "module": "azure_rm_storageaccount", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Update account tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "append_tags": false, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.testing == 'testing'", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "show_connection_string": true, "show_blob_cors": true}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts| length == 1", "storageaccounts | length == 1", "not storageaccounts[0].custom_domain", "storageaccounts[0].account_type == \"Standard_GRS\"", "storageaccounts[0].primary_endpoints.blob.connectionstring", "storageaccounts[0].blob_cors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete acccount", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete acccount"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"fixed_resource_prefix": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"funcapp_name_basic": "fa{{ fixed_resource_prefix }}basic", "funcapp_name_container": "fa{{ fixed_resource_prefix }}container", "funcapp_name_params": "fa{{ fixed_resource_prefix }}params", "storage_account_name": "sa{{ fixed_resource_prefix }}", "plan_name": "ap{{ fixed_resource_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create storage account for function apps", "module": "azure_rm_storageaccount", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create storage account for function apps"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create basic function app", "module": "azure_rm_functionapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "storage_account": "{{ storage_account_name }}"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "assert the function was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "list facts for function", "module": "azure_rm_functionapp_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "list facts for function", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}"}, "executable": "azure_rm_functionapp_facts", "executable_type": "Module", "fqcn": "azure_rm_functionapp_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "assert the facts were retrieved", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the facts were retrieved"}, "module_options": {"that": ["results.ansible_facts.azure_functionapps|length == 1", "results.ansible_facts.azure_functionapps[0].name == \"{{ funcapp_name_basic }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "delete basic function app", "module": "azure_rm_functionapp", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "create a function with app settings", "module": "azure_rm_functionapp", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create a function with app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "assert the function with app settings was created", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function with app settings was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "change app settings", "module": "azure_rm_functionapp", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "change app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2", "another": "one"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create a linux app service plan", "module": "azure_rm_appserviceplan", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create a linux app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Create azure function app {{ function_app }}", "module": "azure_rm_functionapp", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create azure function app {{ function_app }}", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "storage_account": "{{ storage_account_name }}", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}"}, "container_settings": {"name": "httpd"}, "app_settings": {"FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "delete storage account", "module": "azure_rm_storageaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Delete virtual network, if it exists", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network, if it exists"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 2", "output.state.dns_servers | length == 2", "output.state.tags.delete == 'on-exit'", "output.state.tags | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Attach a subnet", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Attach a subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "virtual_network_name": "{{ vnetname }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Gather facts by name, tags", "module": "azure_rm_virtualnetwork_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by name, tags", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].dns_servers | length == 2", "facts.virtualnetworks[0].address_prefixes | length == 2", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Gather facts by resource group, tags", "module": "azure_rm_virtualnetwork_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by resource group, tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_virtualnetwork_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_virtualnetwork", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_virtualnetwork", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "tags": {"testing": "no", "delete": "never", "foo": "bar"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state.tags | length == 3"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "append_tags": false, "tags": {"testing": "always"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 1", "output.state.tags.testing == 'always'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Should require address_prefixes_cidr when purge_address_prefixes", "module": "azure_rm_virtualnetwork", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should require address_prefixes_cidr when purge_address_prefixes", "register": "output", "ignore_errors": true}, "module_options": {"name": "{{ vnetname }}", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Purge address prefixes", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge address prefixes", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": "10.1.0.0/16", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 1", "output.state.address_prefixes[0] == '10.1.0.0/16'", "output.state.dns_servers | length == 2", "output.state.dns_servers[0] == '127.0.0.1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Purge DNS servers", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge DNS servers", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "purge_dns_servers": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state['dns_servers'] is undefined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_virtualnetwork_facts", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}"}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"linux_app_plan_resource_group": "{{ resource_group_secondary }}", "win_app_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}{{ 1000 | random}}winapp", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_group_secondary | replace('-','x'))[-8:] }}linplan", "slot1_name": "stage1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a windows web app with non-exist app service plan", "module": "azure_rm_webapp", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with non-exist app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}1", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ win_plan_name }}", "is_linux": false, "sku": "S1"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan", "module": "azure_rm_webapp", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "stop the web app", "module": "azure_rm_webapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "stop the web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}", "app_state": "stopped"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan, try to update some root level params", "module": "azure_rm_webapp", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan, try to update some root level params", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "plan": "{{ win_plan_name }}", "dns_registration": true, "https_only": true, "tags": {"testwebapptag": "test"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "get web app with resource group and tag", "module": "azure_rm_webapp_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with resource group and tag", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "tags": ["testwebapptag"]}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create a win web app with java run time specific", "module": "azure_rm_webapp", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with java run time specific", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.8", "settings": {"java_container": "Tomcat", "java_container_version": "8.0"}}], "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "assert the web app was created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].app_settings | length == 1", "output.webapps[0].frameworks | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Update app settings and framework", "module": "azure_rm_webapp", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update app settings and framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.7", "settings": {"java_container": "Tomcat", "java_container_version": "8.5"}}], "app_settings": {"testkey2": "testvalue2"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.webapps[0].app_settings | length == 2", "output.webapps[0].app_settings['testkey'] == 'testvalue'", "output.webapps[0].app_settings['testkey2'] == 'testvalue2'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "get web app with return publishing profile", "module": "azure_rm_webapp_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with return publishing profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "return_publish_profile": true}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].publishing_username != \"\"", "output.webapps[0].publishing_password != \"\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Purge all existing app settings", "module": "azure_rm_webapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Purge all existing app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "purge_app_settings": true}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create a win web app with python run time and php run time", "module": "azure_rm_webapp", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with python run time and php run time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}5", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}, {"name": "php", "version": "7.0"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create a docker web app with some app settings", "module": "azure_rm_webapp", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with some app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}6", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}", "is_linux": true, "sku": "S1", "number_of_workers": 1}, "container_settings": {"name": "ansible/ansible:ubuntu1404"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Create a docker web app with private acr registry", "module": "azure_rm_webapp", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with private acr registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}7", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "container_settings": {"name": "ansible/ansible:ubuntu1404", "registry_server_url": "test.io", "registry_server_user": "user", "registry_server_password": "password"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Create a linux web app with nodejs framework", "module": "azure_rm_webapp", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Should be idempotent with linux web app created", "module": "azure_rm_webapp", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Should be idempotent with linux web app created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Update nodejs framework", "module": "azure_rm_webapp", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.9"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Create a linux web app with deployment source github", "module": "azure_rm_webapp", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with deployment source github", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}10", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "deployment_source": {"url": "https://github.com/test/test", "branch": "master"}, "scm_type": "GitHub"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Delete web app", "module": "azure_rm_webapp", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Delete web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "state": "absent"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Assert the web app was deleted", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "assert error that java is mutually exclusive with frameworks", "module": "azure_rm_webapp", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error that java is mutually exclusive with frameworks", "register": "fail_win_java_version_mutual_exclusive", "failed_when": "fail_win_java_version_mutual_exclusive.msg != \"Java is mutually exclusive with other frameworks.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}11", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "java", "version": "1.8"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "assert error when linux web app, only can specify one framework", "module": "azure_rm_webapp", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error when linux web app, only can specify one framework", "register": "fail_linux_one_framework_only", "failed_when": "fail_linux_one_framework_only.msg != \"Can specify one framework only for Linux web app.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ linux_plan_name }}12", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Create a linux web app with java tomcat container", "module": "azure_rm_webapp", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with java tomcat container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "java", "version": "8", "settings": {"java_container": "tomcat", "java_container_version": "8.5"}}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Get facts with publish profile", "module": "azure_rm_webapp_facts", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Get facts with publish profile", "no_log": true, "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Assert publish profile returned", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert publish profile returned"}, "module_options": {"that": ["facts.webapps[0].ftp_publish_url != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Create a webapp slot (Check mode)", "module": "azure_rm_webappslot", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Assert slot check mode creation", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Create a webapp slot", "module": "azure_rm_webappslot", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Assert slot creation", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "Update webapp slot (idempotence)", "module": "azure_rm_webappslot", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Update webapp slot", "module": "azure_rm_webappslot", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "frameworks": [{"name": "node", "version": "10.1"}], "app_settings": {"testkey": "testvalue2"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Swap webapp slot", "module": "azure_rm_webappslot", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Swap webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "swap": {"action": "swap"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Assert swap", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert swap"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Stop webapp slot", "module": "azure_rm_webappslot", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Stop webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_state": "stopped"}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "tenant_id": "{{ azure_tenant }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "lookup service principal object id", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "lookup service principal object id", "register": "object_id"}, "module_options": {"object_id": "{{ lookup('azure_service_principal_attribute', azure_client_id=azure_client_id, azure_secret=azure_secret, azure_tenant=tenant_id) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create instance of Key Vault", "module": "azure_rm_keyvault", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create instance of Key Vault again", "module": "azure_rm_keyvault", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Update existing Key Vault (add a rule and tags)", "module": "azure_rm_keyvault", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Update existing Key Vault (add a rule and tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == true"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Use REST API to retrieve keyvault (as facts not available yet)", "module": "azure_rm_resource_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Use REST API to retrieve keyvault (as facts not available yet)", "register": "output"}, "module_options": {"api_version": "2018-02-14", "resource_group": "{{ resource_group }}", "provider": "keyvault", "resource_type": "vaults", "resource_name": "vault{{ rpfx }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert the facts are properly set", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the facts are properly set"}, "module_options": {"that": ["output.response[0].tags.aaa == \"bbb\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultkey", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "key_name": "testkey", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "delete a keyvault key", "module": "azure_rm_keyvaultkey", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault key", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "key_name": "testkey"}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultsecret", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "secret_name": "testsecret", "secret_value": "mysecret", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "delete a keyvault secret", "module": "azure_rm_keyvaultsecret", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault secret", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "secret_name": "testsecret"}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Delete instance of Key Vault", "module": "azure_rm_keyvault", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of Key Vault", "module": "azure_rm_keyvault", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete unexisting instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a namespace", "module": "azure_rm_servicebus", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["namespace.id", "namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create a namespace (idempontent)", "module": "azure_rm_servicebus", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace (idempontent)", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create a queue", "module": "azure_rm_servicebusqueue", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a queue", "register": "queue"}, "module_options": {"name": "queue{{ rpfx }}", "namespace": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["queue.id", "queue.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create a topic (check mode)", "module": "azure_rm_servicebustopic", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create a topic", "module": "azure_rm_servicebustopic", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id", "'subscription_count' not in output"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create a topic (idempontent)", "module": "azure_rm_servicebustopic", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (idempontent)", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create test policy", "module": "azure_rm_servicebussaspolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create test policy"}, "module_options": {"name": "testpolicy", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "rights": "manage"}, "executable": "azure_rm_servicebussaspolicy", "executable_type": "Module", "fqcn": "azure_rm_servicebussaspolicy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Create a subscription", "module": "azure_rm_servicebustopicsubscription", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a subscription", "register": "subs"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["subs.id", "subs.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 1", "facts.servicebuses[0].id == output.id", "facts.servicebuses[0].subscription_count == 1", "facts.servicebuses[0].sas_policies.testpolicy", "facts.servicebuses[0].sas_policies.testpolicy.rights == 'manage'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Delete subscription", "module": "azure_rm_servicebustopicsubscription", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete subscription"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses[0].subscription_count == 0", "facts.servicebuses | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Delete topic", "module": "azure_rm_servicebustopic", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete topic"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"name": "topic{{ rpfx }}", "type": "topic", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Delete queue", "module": "azure_rm_servicebusqueue", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete queue"}, "module_options": {"name": "queue{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Delete namespace", "module": "azure_rm_servicebus", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Update instance of PostgreSQL Server, change storage size", "module": "azure_rm_postgresqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Update instance of PostgreSQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Gather facts postgresql Server", "module": "azure_rm_postgresqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts postgresql Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server -- add tags", "module": "azure_rm_postgresqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server -- add tags"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database without force_update", "module": "azure_rm_postgresqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database with force_update", "module": "azure_rm_postgresqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database with force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS", "force_update": true}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 56}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 57}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 58}": {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 59}": {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_postgresqlconfiguration", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 60}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 61}": {"py/object": "struct4.Task", "name": "Try to change default configuration", "module": "azure_rm_postgresqlconfiguration", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 62}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 63}": {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 64}": {"py/object": "struct4.Task", "name": "Assert that change was not registered", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was not registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 65}": {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_postgresqlconfiguration", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 66}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 67}": {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 68}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 69}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 70}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 71}": {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 72}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 73}": {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 74}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 75}": {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 76}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 77}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 78}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml\", \"index\": 79}": {"py/object": "struct4.Task", "name": "Delete second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete second instance of PostgreSQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"redis_name": "redis-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "vnet_name": "vnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "subnet_name": "subnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "rule_name": "rule1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert creating redis cache check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create a redis cache", "module": "azure_rm_rediscache", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].id != None", "facts.rediscaches[0].host_name != None", "facts.rediscaches[0].provisioning_state != None", "facts.rediscaches[0].sku.name == 'basic'", "facts.rediscaches[0].sku.size == 'C1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Update the redis cache (idempotent)", "module": "azure_rm_rediscache", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update the redis cache (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "(actually) update redis cache", "module": "azure_rm_rediscache", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "(actually) update redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Update redis cache configuration", "module": "azure_rm_rediscache", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update redis cache configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "maxmemory_policy": "allkeys_lru", "tags": {"testing": "foo"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Scale up the redis cache", "module": "azure_rm_rediscache", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Scale up the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "standard", "size": "C1"}, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Force reboot redis cache", "module": "azure_rm_rediscache", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Force reboot redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "reboot": {"reboot_type": "all"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Delete the redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "assert deleting redis cache check mode", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert deleting redis cache check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnet_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ subnet_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vnet_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Create redis with subnet", "module": "azure_rm_rediscache", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create redis with subnet", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "sku": {"name": "premium", "size": "P1"}, "subnet": {"name": "{{ subnet_name }}", "virtual_network_name": "{{ vnet_name }}"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "return_access_keys": true}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].subnet != None", "facts.rediscaches[0].access_keys.primary != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Create firewall rule (Check mode)", "module": "azure_rm_rediscachefirewallrule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Create firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Assert creation", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creation"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Update firewall rule idempotence", "module": "azure_rm_rediscachefirewallrule", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Update firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "end_ip_address": "192.168.1.5"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Delete firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "state": "absent"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert deletion", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Update instance of MariaDB Server, change storage size", "module": "azure_rm_mariadbserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of MariaDB Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mariadbdatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mariadbdatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mariadbfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 56}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 57}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mariadbfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 58}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 59}": {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 60}": {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mariadbconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 61}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 62}": {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 63}": {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 64}": {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 65}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 66}": {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 67}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 68}": {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 69}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 70}": {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mariadbconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 71}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 72}": {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 73}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 74}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 75}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 76}": {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 77}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 78}": {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 79}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 80}": {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 81}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 82}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 83}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml\", \"index\": 84}": {"py/object": "struct4.Task", "name": "Delete second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete second instance of MariaDB Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(8, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Find available k8s version", "module": "azure_rm_aksversion_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Find available k8s version", "register": "versions"}, "module_options": {"location": "eastus"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create an AKS instance (check mode)", "module": "azure_rm_aks", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (check mode)", "check_mode": true}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "azure_rm_aks_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create an AKS instance", "module": "azure_rm_aks", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the AKS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create an AKS instance (idempotent)", "module": "azure_rm_aks", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Get available version", "module": "azure_rm_aksversion_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get available version", "register": "version1"}, "module_options": {"location": "eastus", "version": "{{ versions.azure_aks_versions[0] }}"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon", "module": "azure_rm_aks", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert the AKS instance is upgraded", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is upgraded"}, "module_options": {"that": ["output.changed", "output.kubernetes_version == version1.azure_aks_versions[0]", "output.addon.httpApplicationRouting.enabled ==  True", "output.agent_pool_profiles[0].count == 1", "output.network_profile.network_plugin == 'kubenet'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon (idempontent)", "module": "azure_rm_aks", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon (idempontent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "show_kubeconfig": "user"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].kube_config == output.kube_config"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Delete the AKS instance", "module": "azure_rm_aks", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Assert the AKS instance is well deleted", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete the AKS instance (idempotent)", "module": "azure_rm_aks", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a virtual network"}, "module_options": {"name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.2"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create a subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a subnet", "register": "subnet_output"}, "module_options": {"name": "subnet{{ rpfx }}", "virtual_network_name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}", "name": "sample_gateway_frontend_ip_config"}}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "dump", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "dump"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create instance of Application Gateway", "module": "azure_rm_appgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - no change", "module": "azure_rm_appgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - no change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - single change", "module": "azure_rm_appgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - single change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 81, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway", "module": "azure_rm_appgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of Application Gateway", "module": "azure_rm_appgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete unexisting instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"secgroupname": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "asg_name1": "asg1{{ resource_group | hash('md5') | truncate(7, True, '') }}", "asg_name2": "asg2{{ resource_group | hash('md5') | truncate(7, True, '') }}", "sg_name1": "sgasg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "DenySSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Deny", "priority": 100, "direction": "Inbound"}, {"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "{{ output.state.rules | length }} == 2"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_securitygroup_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts by tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "azure_securitygroups | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add/Update rules on existing security group", "module": "azure_rm_securitygroup", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add/Update rules on existing security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 3", "output.state.rules[0].source_address_prefix == '174.108.158.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Test idempotence", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Test idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "never", "baz": "bar"}, "append_tags": false}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_securitygroup", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "append_tags": false, "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.delete == 'on-exit'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Gather facts for one accounts", "module": "azure_rm_securitygroup_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for one accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Gather facts for all accounts", "module": "azure_rm_securitygroup_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for all accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes", "module": "azure_rm_securitygroup", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 1", "{{ output.state.rules[0].source_address_prefixes | length }} == 3", "not output.state.rules[0].source_address_prefix"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes(idempontent)", "module": "azure_rm_securitygroup", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes(idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Add a single one group", "module": "azure_rm_securitygroup", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add a single one group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "rules": [{"name": "DenySSH", "protocol": "Tcp", "source_address_prefix": ["54.120.120.240"], "destination_port_range": 22, "access": "Deny", "priority": 102, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "{{ output.state.rules | length }} == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Create Application security group 1", "module": "azure_rm_applicationsecuritygroup", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 1", "register": "asg1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ asg_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Create Application security group 2", "module": "azure_rm_applicationsecuritygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 2", "register": "asg2"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Create security group with application security group", "module": "azure_rm_securitygroup", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg1.id }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Create security group with application security group - Idempotent", "module": "azure_rm_securitygroup", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group - Idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg_name1 }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Delete security group", "module": "azure_rm_securitygroup", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Delete all security groups", "module": "azure_rm_securitygroup", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete all security groups", "with_items": "{{ azure_securitygroups }}"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item.name }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Should have no security groups remaining", "module": "azure_rm_securitygroup_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Should have no security groups remaining", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"pipaname": "pipa{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "pipbname": "pipb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbvnname": "lbvn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_a": "lba{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_b": "lbb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_c": "lbc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_d": "lbd{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipbname }}", "sku": "Standard", "allocation_method": "Static", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipaname }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "clear load balancer", "module": "azure_rm_loadbalancer", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "clear load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "public_ip": "{{ pipaname }}"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "assert load balancer created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "assert load balancer deleted", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "delete load balancer (idempotent)", "module": "azure_rm_loadbalancer", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "assert load balancer deleted (idempotent)", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted (idempotent)"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "create another load balancer with more options", "module": "azure_rm_loadbalancer", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create another load balancer with more options", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": ["output.changed", "output.state.sku.name == 'Standard'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency", "module": "azure_rm_loadbalancer", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "assert that output has not changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency - change something", "module": "azure_rm_loadbalancer", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency - change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 81, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "assert that output has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}], "inbound_nat_rules": [{"name": "inboundnatrule0", "backend_port": 8080, "protocol": "Tcp", "frontend_port": 8080, "frontend_ip_configuration": "frontendipconf0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Add subnet", "register": "subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ lbvnname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "create internal loadbalancer", "module": "azure_rm_loadbalancer", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create internal loadbalancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "private_ip_address": "10.10.0.10", "private_ip_allocation_method": "Static", "subnet": "{{ subnet.state.id }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "cleanup public ip", "module": "azure_rm_publicipaddress", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup public ip", "with_items": ["{{ pipaname }}", "{{ pipbname }}"]}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "cleanup subnet", "module": "azure_rm_subnet", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "virtual_network": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "cleanup virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "set location", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "set location"}, "module_options": {"location": "eastus"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get facts for a specific image", "module": "azure_rm_virtualmachineimage_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "Get facts for a specific image", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3", "version": "7.3.20170707"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "List available versions", "module": "azure_rm_virtualmachineimage_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available versions", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "List available offers", "module": "azure_rm_virtualmachineimage_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available offers", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "List available publishers", "module": "azure_rm_virtualmachineimage_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available publishers", "register": "output"}, "module_options": {"location": "{{ location }}"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create an container registry", "module": "azure_rm_containerregistry", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create an container registry", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": true, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Assert the container registry instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the container registry instance is well created"}, "module_options": {"that": ["output.changed", "output.admin_user_enabled", "output.location == 'eastus2'", "output.sku == 'Premium'", "output.tags['Environment'] == 'Production'", "output.tags['Release'] == 'beta1'", "output.provisioning_state == 'Succeeded'", "output.credentials['password'] is defined", "output.credentials['password2'] is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Update the ACR instance sku, tags and admin_user_enabled", "module": "azure_rm_containerregistry", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Update the ACR instance sku, tags and admin_user_enabled", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Standard", "tags": {"NewTag": "newtag", "Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create second container registry (to test facts)", "module": "azure_rm_containerregistry", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create second container registry (to test facts)"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the ACR instance is well updated", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the ACR instance is well updated"}, "module_options": {"that": ["output.changed == True", "output.admin_user_enabled == False", "output.sku == 'Standard'", "output.tags['NewTag'] == 'newtag'", "output.credentials | length == 0", "output.credentials['password'] is not defined", "output.credentials['password2'] is not defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Gather facts for single Container Registry", "module": "azure_rm_containerregistry_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for single Container Registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Gather facts for all Container Registries in the resource group", "module": "azure_rm_containerregistry_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for all Container Registries in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None", "output.registries[1]['name'] != None", "output.registries[1]['location'] != None", "output.registries[1]['admin_user_enabled'] != None", "output.registries[1]['sku'] != None", "output.registries[1]['provisioning_state'] != None", "output.registries[1]['login_server'] != None", "output.registries[1]['id'] != None", "output.registries[1]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Delete first container registry", "module": "azure_rm_containerregistry", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete first container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Delete second container registry", "module": "azure_rm_containerregistry", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete second container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create random domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create random domain name"}, "module_options": {"domain_name": "{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a DNS zone (check mode)", "module": "azure_rm_dnszone", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create a DNS zone", "module": "azure_rm_dnszone", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Update DNS zone with tags", "module": "azure_rm_dnszone", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update DNS zone with tags", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "tags": {"test": "modified"}}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.changed", "results.state.tags.test == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Retrieve DNS Zone Facts", "module": "azure_rm_dnszone_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Zone Facts", "register": "zones"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone_facts", "executable_type": "Module", "fqcn": "azure_rm_dnszone_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert that facts module returned result", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result"}, "module_options": {"that": ["azure_dnszones[0].tags.test == 'modified'", "zones.dnszones[0].type == 'public'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create virtual network", "with_items": ["{{ domain_name }}registration1", "{{ domain_name }}resolution1", "{{ domain_name }}registration2", "{{ domain_name }}resolution2"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create private dns zone", "module": "azure_rm_dnszone", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}, {"name": "{{ domain_name }}resolution2"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 2", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Update private dns zone", "module": "azure_rm_dnszone", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 1", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Test idempotent", "module": "azure_rm_dnszone", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Test idempotent", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"], "register": "results"}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"with_items": "{{ results.results }}"}, "module_options": {"that": ["not {{ item.changed }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "create \"A\" record set with multiple records", "module": "azure_rm_dnsrecordset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create \"A\" record set with multiple records", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert that A record set was created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was created"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "re-run \"A\" record with same values", "module": "azure_rm_dnsrecordset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-run \"A\" record with same values", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert that new record was appended", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that new record was appended"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 4"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "re-update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Remove 1 record from record set", "module": "azure_rm_dnsrecordset", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Remove 1 record from record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert that record was deleted", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record was deleted"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Check_mode test", "module": "azure_rm_dnsrecordset", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Check_mode test", "check_mode": true, "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.105"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Assert that check_mode returns new state", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that check_mode returns new state"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "create SRV records in a new record set", "module": "azure_rm_dnsrecordset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create SRV records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_sip._tcp.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "time_to_live": 7200, "record_type": "SRV", "records": [{"entry": "sip.{{ domain_name }}.com", "priority": 20, "weight": 10, "port": 5060}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Assert that SRV record set was created", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that SRV record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "create TXT records in a new record set", "module": "azure_rm_dnsrecordset", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create TXT records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_txt.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "record_type": "TXT", "records": [{"entry": "v=spf1 a -all"}, {"entry": "foo"}, {"entry": ["bar", "baz"]}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Assert that TXT record set was created", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that TXT record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for single Record Set", "module": "azure_rm_dnsrecordset_facts", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for single Record Set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com", "relative_name": "www", "record_type": "A"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Assert that facts module returned result for single Record Set", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for single Record Set"}, "module_options": {"that": ["not results.changed", "azure_dnsrecordset[0].name == 'www'", "results.dnsrecordsets[0].relative_name == 'www'", "results.dnsrecordsets[0].records | length == 3", "results.dnsrecordsets[0].record_type == 'A'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Assert that facts module returned result for all Record Sets", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for all Record Sets"}, "module_options": {"that": ["not facts.changed", "facts.ansible_facts.azure_dnsrecordset[0].name == '@'", "facts.ansible_facts.azure_dnsrecordset[1].name == '@'", "facts.ansible_facts.azure_dnsrecordset[4].name == 'www'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "delete all record sets  except for @", "module": "azure_rm_dnsrecordset", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "delete all record sets  except for @", "with_items": "{{ facts.dnsrecordsets }}", "when": ["item.relative_name != '@'"], "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "{{ item.relative_name }}", "zone_name": "{{ domain_name }}.com", "record_type": "{{ item.record_type }}", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Assert that record set deleted", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record set deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Assert all record set deleted", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert all record set deleted", "with_items": "{{ facts.dnsrecordsets }}"}, "module_options": {"that": ["item.relative_name == '@'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "(idempotence test) re-run record set absent", "module": "azure_rm_dnsrecordset", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "(idempotence test) re-run record set absent", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": null, "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": null}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Delete DNS zone", "module": "azure_rm_dnszone", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Delete DNS zone (idempotent)", "module": "azure_rm_dnszone", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone (idempotent)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create sample container instance", "module": "azure_rm_containerinstance", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create sample container instance -- same parameters", "module": "azure_rm_containerinstance", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create sample container instance -- force update", "module": "azure_rm_containerinstance", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- force update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "force_update": true}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create second container instance for testing purposes", "module": "azure_rm_containerinstance", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create second container instance for testing purposes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "dns_name_label": "mydnslabel{{ resource_group | hash('md5') | truncate(7, True, '') }}", "location": "eastus", "restart_policy": "on_failure", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81], "commands": ["echo abc", "echo cdf"], "environment_variables": [{"name": "myvar", "value": "myvarvalue"}]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Gather facts for single Container Instance", "module": "azure_rm_containerinstance_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for single Container Instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[0]['containers'][0]['commands'] | length == 2", "output.containerinstances[0]['containers'][0]['environment_variables'] | length == 1", "output.containerinstances[0]['restart_policy'] == 'on_failure'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Gather facts for all Container Instances in the resource group", "module": "azure_rm_containerinstance_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for all Container Instances in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[1]['resource_group'] != None", "output.containerinstances[1]['name'] != None", "output.containerinstances[1]['os_type'] != None", "output.containerinstances[1]['location'] != None", "output.containerinstances[1]['ip_address'] != None", "output.containerinstances[1]['ports'] != None", "output.containerinstances[1]['containers'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Assert the container instance is deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Remove container instance again", "module": "azure_rm_containerinstance", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert the changed is false", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the changed is false"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create again instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Update instance of MySQL Server, change storage size", "module": "azure_rm_mysqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of MySQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create again instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mysqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mysqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Create second instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mysqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 56}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 57}": {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mysqlfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 58}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 59}": {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 60}": {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mysqlconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 61}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 62}": {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 63}": {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 64}": {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 65}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 66}": {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 67}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 68}": {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 69}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 70}": {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mysqlconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 71}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 72}": {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 73}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 74}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 75}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 76}": {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 77}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 78}": {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 79}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 80}": {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 81}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 82}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 83}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml\", \"index\": 84}": {"py/object": "struct4.Task", "name": "Delete second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete second instance of MySQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vngname": "vng{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings (check mode)", "module": "azure_rm_virtualnetworkgateway", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "GatewaySubnet", "address_prefix": "10.0.2.0/24", "virtual_network": "{{ vnetname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Update virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Update virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "mno"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Delete virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete virtual network gateway - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"lab_name": "lab{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vn_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vm_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "artifacts_name": "myartifacts", "github_token": "{{ lookup('env','GITHUB_ACCESS_TOKEN') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create instance of Lab", "module": "azure_rm_devtestlab", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create again instance of Lab", "module": "azure_rm_devtestlab", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create again instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Update lab - premium_data_disks", "module": "azure_rm_devtestlab", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update lab - premium_data_disks", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": true}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "List DevTest Lab in a resource group", "module": "azure_rm_devtestlab_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List DevTest Lab in a resource group", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Get DevTest Lab facts", "module": "azure_rm_devtestlab_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab facts", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['artifacts_storage_account'] != None", "output_lab.labs[0]['default_premium_storage_account'] != None", "output_lab.labs[0]['default_storage_account'] != None", "output_lab.labs[0]['premium_data_disk_storage_account'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- idempotent", "module": "azure_rm_devtestlabpolicy", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Assert if the change was not reported", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- change value", "module": "azure_rm_devtestlabpolicy", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- change value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 6}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "state": "absent"}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- idempotent", "module": "azure_rm_devtestlabschedule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- change time", "module": "azure_rm_devtestlabschedule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- change time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1130", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "state": "absent"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs virtual network", "module": "azure_rm_devtestlabvirtualnetwork", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs virtual network", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with same parameters", "module": "azure_rm_devtestlabvirtualnetwork", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with changed description", "module": "azure_rm_devtestlabvirtualnetwork", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with changed description", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab Updated"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Get DevTest Lab Virtual Network facts", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab Virtual Network facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "List all Virtual Networks in DevTest Lab", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all Virtual Networks in DevTest Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source with same parameters", "module": "azure_rm_devtestlabartifactsource", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "module": "azure_rm_devtestlabartifactsource", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/library", "security_token": "{{ github_token }}", "display_name": "My Artifacts Source"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length > 0"}, "module_options": {"artifact_source": [{"source_name": "{{ artifacts_name }}", "source_path": "/Artifacts/linux-install-mongodb"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length == 0"}, "module_options": {"artifact_source": null}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "Create instance of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DTL Virtual Machine", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 56}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 57}": {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine with same parameters", "module": "azure_rm_devtestlabvirtualmachine", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 58}": {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing has changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 59}": {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine - change notes", "module": "azure_rm_devtestlabvirtualmachine", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine - change notes", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something.... more text", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 60}": {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 61}": {"py/object": "struct4.Task", "name": "Get Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 62}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['compute_vm_resource_group'] != None", "output_vm.virtualmachines[0]['compute_vm_name'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 63}": {"py/object": "struct4.Task", "name": "List Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 64}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 65}": {"py/object": "struct4.Task", "name": "List all artifact sources", "module": "azure_rm_devtestlabartifactsource_facts", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all artifact sources", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 66}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None", "output.artifactsources | length >= 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 67}": {"py/object": "struct4.Task", "name": "Get artifacts source facts", "module": "azure_rm_devtestlabartifactsource_facts", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get artifacts source facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "public repo"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 68}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 69}": {"py/object": "struct4.Task", "name": "Delete instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "state": "absent"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 70}": {"py/object": "struct4.Task", "name": "Assert that change was correctly registered", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was correctly registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 71}": {"py/object": "struct4.Task", "name": "List ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 72}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 73}": {"py/object": "struct4.Task", "name": "Get ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo", "name": "ServiceFabric-LabCluster"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 74}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 75}": {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 76}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 77}": {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo", "name": "windows-webdeploy"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 78}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 79}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": "{{ output_lab.labs[0].id }}/artifactSources/public environment repo/armTemplates/WebApp"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 80}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 81}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment - idempotent", "module": "azure_rm_devtestlabenvironment", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": {"artifact_source_name": "public environment repo", "name": "WebApp"}}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 82}": {"py/object": "struct4.Task", "name": "Assert if the change was not detected", "module": "assert", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 83}": {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@mes", "name": "myEnvironment", "state": "absent"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 84}": {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 85}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image", "module": "azure_rm_devtestlabcustomimage", "index": 85, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 86}": {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 86, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 87}": {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image -- idempotent", "module": "azure_rm_devtestlabcustomimage", "index": 87, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 88}": {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 88, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 89}": {"py/object": "struct4.Task", "name": "Delete instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 89, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 90}": {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported in check mode", "module": "assert", "index": 90, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported in check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 91}": {"py/object": "struct4.Task", "name": "Delete instance of Lab", "module": "azure_rm_devtestlab", "index": 91, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 92}": {"py/object": "struct4.Task", "name": "Assert the change was correctly reported", "module": "assert", "index": 92, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 93}": {"py/object": "struct4.Task", "name": "Delete unexisting instance of Lab", "module": "azure_rm_devtestlab", "index": 93, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete unexisting instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}unexisting", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml\", \"index\": 94}": {"py/object": "struct4.Task", "name": "Assert thes state has not changed", "module": "assert", "index": 94, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert thes state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "Prepare facts"}, "module_options": {"linux_plan_resource_group": "{{ resource_group_secondary }}", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}linplan"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "create a windows plan", "module": "azure_rm_appserviceplan", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a windows plan", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B1"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create a linux plan", "module": "azure_rm_appserviceplan", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a linux plan", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "get app service plan by name", "module": "azure_rm_appserviceplan_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "get app service plan by name", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1"}, "executable": "azure_rm_appserviceplan_facts", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "assert is_linux is True", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert is_linux is True"}, "module_options": {"that": ["output.appserviceplans | length == 1", "output.appserviceplans[0].is_linux == True"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "create linux app service plan idempotent", "module": "azure_rm_appserviceplan", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create linux app service plan idempotent", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "update a windows plan sku", "module": "azure_rm_appserviceplan", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a windows plan sku", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B2"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "update a linux plan number of workers", "module": "azure_rm_appserviceplan", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a linux plan number of workers", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 2}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"vm_name": "vm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}x", "public_ip_name": "pip{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "security_group_name": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "empty_disk_name": "emptydisk{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ security_group_name }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create NIC", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "virtual_network": "{{ vm_name }}", "subnet": "{{ vm_name }}", "public_ip_name": "{{ public_ip_name }}", "security_group": "{{ security_group_name }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create virtual machine", "module": "azure_rm_virtualmachine", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual machine", "register": "vm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "vm_size": "Standard_A0", "managed_disk_type": "Standard_LRS", "admin_username": "adminuser", "admin_password": "Password123!", "os_type": "Linux", "network_interfaces": "{{ vm_name }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create new empty managed disk", "module": "azure_rm_manageddisk", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create new empty managed disk", "register": "emptydisk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "storage_account_type": "Standard_LRS", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create an image from VM (check mode)", "module": "azure_rm_image", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux", "data_disk_sources": ["{{ empty_disk_name }}"]}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create an image from VM", "module": "azure_rm_image", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": {"name": "{{ vm_name }}", "type": "disks"}, "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create an image from VM (idempotent)", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Gather information about image created", "module": "azure_rm_image_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Gather information about image created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001"}, "executable": "azure_rm_image_facts", "executable_type": "Module", "fqcn": "azure_rm_image_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.images != []"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete image (check mode)", "module": "azure_rm_image", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Delete image", "module": "azure_rm_image", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete image (idempotent)", "module": "azure_rm_image", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Delete empty disk", "module": "azure_rm_manageddisk", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete empty disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create random dns label", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create random dns label"}, "module_options": {"dns_label": "test{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create Azure Deploy", "module": "azure_rm_deployment", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create Azure Deploy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "eastus", "template_link": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/d01a5c06f4f1bc03a049ca17bbbd6e06d62657b3/101-vm-simple-linux/azuredeploy.json", "deployment_name": "{{ dns_label }}", "parameters": {"adminUsername": {"value": "chouseknecht"}, "adminPassword": {"value": "password123!"}, "dnsLabelPrefix": {"value": "{{ dns_label }}"}, "ubuntuOSVersion": {"value": "16.04.0-LTS"}}}, "executable": "azure_rm_deployment", "executable_type": "Module", "fqcn": "azure_rm_deployment", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add new instance to host group", "module": "add_host", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Add new instance to host group", "with_items": "{{ output.deployment.instances }}"}, "module_options": {"hostname": "{{ item.vm_name }}", "ansible_host": "{{ item['ips'][0].public_ip }}", "ansible_user": "chouseknecht", "ansible_ssh_pass": "password123!", "groupname": "azure_vms"}, "executable": "add_host", "executable_type": "Module", "fqcn": "ansible.builtin.add_host", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Get Deployment Facts", "module": "azure_rm_deployment_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Get Deployment Facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dns_label }}"}, "executable": "azure_rm_deployment_facts", "executable_type": "Module", "fqcn": "azure_rm_deployment_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert that values are returned", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Assert that values are returned"}, "module_options": {"that": ["not output.changed", "output.deployments[0]['provisioning_state'] != None", "output.deployments[0]['output_resources'] | length > 0", "output.deployments[0]['outputs'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create domain name"}, "module_options": {"domain_name": "ansible-{{ resource_group | hash('md5') | truncate(24, True, '') }}", "rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create public ip", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "Static", "domain_name": "{{ domain_name }}", "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.public_ip_allocation_method == 'static'", "output.state.dns_settings.domain_name_label == domain_name", "output.state.tags | length == 2", "output.state.tags.testing == 'testing'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_publicipaddress", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_publicipaddress", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": true, "tags": {"delete": "never", "foo": "bar"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Gather facts, filtering by tag", "module": "azure_rm_publicipaddress_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts, filtering by tag"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Purge all tags", "module": "azure_rm_publicipaddress", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Purge all tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": false}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip", "register": "pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["pip.publicipaddresses | length == 1", "pip.publicipaddresses[0].name == \"pip{{ rpfx }}\"", "pip.publicipaddresses[0].allocation_method == 'static'", "pip.publicipaddresses[0].dns_settings.domain_name_label == domain_name"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Gather facts for all public ips", "module": "azure_rm_publicipaddress_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for all public ips"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": null, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": {"name": "{{ resource_group }}", "list_resources": true}, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length == 1", "rg.resourcegroups[0].resources | length >= 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create resource group (idempontent)", "module": "azure_rm_resourcegroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Create resource group (idempontent)", "register": "output"}, "module_options": {"name": "{{ resource_group }}", "location": "{{ rg.resourcegroups[0].location }}"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "delete resource group", "module": "azure_rm_resourcegroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "delete resource group", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "My_Virtual_Network", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create route table", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create route table", "register": "route_table"}, "module_options": {"name": "routetableforsubnet", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Catch invalid cidr", "module": "azure_rm_subnet", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Catch invalid cidr", "register": "output", "ignore_errors": true}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Add the subnet back", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Add the subnet back (idempontent)", "module": "azure_rm_subnet", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back (idempontent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create network security group", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "secgroupfoo", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_subnet", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create network security group in another resource group", "module": "azure_rm_securitygroup", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group in another resource group", "register": "nsg"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "route_table": "{{ route_table.id }}", "security_group": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.network_security_group.id == nsg.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Update the subnet (idempotent)", "module": "azure_rm_subnet", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet (idempotent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "{{ nsg.state.id }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Get subnet facts", "module": "azure_rm_subnet_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Get subnet facts", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet_facts", "executable_type": "Module", "fqcn": "azure_rm_subnet_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.subnets[0]['id'] != None", "output.subnets[0]['resource_group'] != None", "output.subnets[0]['virtual_network_name'] != None", "output.subnets[0]['name'] != None", "output.subnets[0]['address_prefix_cidr'] != None", "output.subnets[0]['route_table'] != None", "output.subnets[0]['security_group'] != None", "output.subnets[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Remove subnet (idempotent)", "module": "azure_rm_subnet", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet (idempotent)", "register": "output"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Remove security group", "module": "azure_rm_securitygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "secgroupfoo", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Remove virtual network", "module": "azure_rm_virtualnetwork", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove virtual network"}, "module_options": {"name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create an ACS instance - DCOS", "module": "azure_rm_acs", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - DCOS", "module": "azure_rm_acs", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Delete the DCOS ACS instance - DCOS", "module": "azure_rm_acs", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the DCOS ACS instance - DCOS"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create an ACS instance - Swarm", "module": "azure_rm_acs", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - Swarm", "module": "azure_rm_acs", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Delete the ACS instance - Swarm", "module": "azure_rm_acs", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the ACS instance - Swarm"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create Random Storage Account Name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Random Storage Account Name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "rules": [{"name": "SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 1001, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create virtual network interface card", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network interface card"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNIC", "virtual_network": "testVnet", "subnet": "testSubnet", "public_ip_name": "testPublicIP", "security_group_name": "testNetworkSecurityGroup"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "create a storage account", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "create a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "network_interfaces": "testNIC", "storage_account_name": "{{ storage_account }}", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create VM Extension", "module": "azure_rm_virtualmachineextension", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Assert that VM Extension ran", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension ran"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachineextension_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachineextension_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Delete VM Extension", "module": "azure_rm_virtualmachineextension", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "state": "absent", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Assert that VM Extension deleted", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "state": "absent", "remove_on_absent": ["all"], "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "network_interfaces": "testNIC", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Delete a storage account", "module": "azure_rm_storageaccount", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Delete Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create container", "module": "azure_rm_storageblob", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create container"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Force upload blob", "module": "azure_rm_storageblob", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Force upload blob"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}, "force": true}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "storage blob seems to have some timing issues", "module": "wait_for", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "storage blob seems to have some timing issues"}, "module_options": {"delay": 10}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Upload blob idempotence", "module": "azure_rm_storageblob", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Upload blob idempotence", "register": "upload_facts"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not upload_facts.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Download file idempotence", "module": "azure_rm_storageblob", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file idempotence", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "./targets/azure_rm_storageblob/files/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "file", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": "path=\"/tmp/Ratings.png\" state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Download file", "module": "azure_rm_storageblob", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "/tmp/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "find", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"register": "find_results"}, "module_options": "paths='/tmp' patterns=\"Ratings.png\"", "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "find_results['matched'] == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Do not delete container that has blobs", "module": "azure_rm_storageblob", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Do not delete container that has blobs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete blob object", "module": "azure_rm_storageblob", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete blob object", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Delete container", "module": "azure_rm_storageblob", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"nsgname": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "storageaccountname": "stacc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "dbname": "mdb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus", "tags": {"a": "abc", "b": "cde"}}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Try to get information about account", "module": "azure_rm_resource_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to get information about account", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Try to query a list", "module": "azure_rm_resource_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Try to query a list - same without API version", "module": "azure_rm_resource_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list - same without API version", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Query all the resources in the resource group", "module": "azure_rm_resource_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Query all the resources in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "resource_type": "resources"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create storage account that requires LRO polling", "module": "azure_rm_resource", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Create storage account that requires LRO polling", "register": "output"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "api_version": "2018-07-01", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "body": {"sku": {"name": "Standard_GRS"}, "kind": "Storage", "location": "eastus"}}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Assert that storage was successfully created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that storage was successfully created"}, "module_options": {"that": "output['response']['name'] == '{{ storageaccountname }}'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Try to storage keys -- special case when subresource part has no name", "module": "azure_rm_resource", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to storage keys -- special case when subresource part has no name", "register": "keys"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "subresource": [{"type": "listkeys"}], "api_version": "2018-03-01-preview", "method": "POST"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Assert that key was returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that key was returned"}, "module_options": {"that": "keys['response']['keys'][0]['value'] | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Delete storage - without API version", "module": "azure_rm_resource", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Delete storage - without API version"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "method": "DELETE", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "name": "scale{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create VMSS", "register": "vmss"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 2, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "create auto scaling", "module": "azure_rm_autoscale", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": {"name": "testVMSS{{ rpfx }}", "types": "virtualMachineScaleSets", "namespace": "Microsoft.Compute"}, "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "create auto scaling (idemponent)", "module": "azure_rm_autoscale", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (idemponent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "update auto scaling", "module": "azure_rm_autoscale", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "update auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition 0", "rules": [{"time_aggregation": "Average", "time_window": 10, "direction": "Increase", "metric_name": "Percentage CPU", "metric_resource_uri": "{{ vmss.ansible_facts.azure_vmss.id }}", "value": "1", "threshold": 70, "cooldown": 5, "time_grain": 1, "statistic": "Average", "operator": "GreaterThan", "type": "ChangeCount"}], "max_count": "1", "recurrence_mins": ["0"], "min_count": "1", "recurrence_timezone": "China Standard Time", "recurrence_frequency": "Week", "recurrence_hours": ["6"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.profiles[0].rules[0].metric_resource_uri == vmss.ansible_facts.azure_vmss.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "delete auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "delete auto scaling", "module": "azure_rm_autoscale", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "delete auto scaling (idemponetent)", "module": "azure_rm_autoscale", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (idemponetent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Clean VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "vm_size": "Standard_DS1_v2", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Clean subnet", "module": "azure_rm_subnet", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "virtual_network": "testVnet", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Clean virtual network", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"dbname": "cosmos{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnname": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "subnetname": "subnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"name": "{{ subnetname }}", "virtual_network_name": "{{ vnname }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}], "database_account_offer_type": "Standard"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create again instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create again instance of Database Account -- change something", "module": "azure_rm_cosmosdbaccount", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account -- change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}], "enable_automatic_failover": true}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Get facts of single account", "module": "azure_rm_cosmosdbaccount_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts of single account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Get facts with keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "all"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['primary_master_key'] != None", "output.accounts[0]['secondary_master_key'] != None", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Get facts with readonly keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with readonly keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "readonly", "retrieve_connection_strings": true}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "'primary_master_key' not in output.accounts[0]", "'secondary_master_key' not in output.accounts[0]", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None", "output.accounts[0]['connection_strings'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "List acounts by resource group", "module": "azure_rm_cosmosdbaccount_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "List acounts by resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Delete instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Delete instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"role_name": "{{ (resource_group | replace('-','x'))[-8:] }}{{ 1000 | random }}testrole", "subscription_id": "{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}", "principal_id": "{{ lookup('env','AZURE_CLIENT_ID') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create a role definition", "module": "azure_rm_roledefinition", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert creating role definition", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Get facts by type", "module": "azure_rm_roledefinition_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by type", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Get facts by name", "module": "azure_rm_roledefinition_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by name", "register": "facts", "until": "{{ facts.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "role_name": "{{ role_name }}"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length == 1", "facts['roledefinitions'][0]['permissions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['not_data_actions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['data_actions'] | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Update the role definition (idempotent)", "module": "azure_rm_roledefinition", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition (idempotent)", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Update the role definition", "module": "azure_rm_roledefinition", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read", "Microsoft.Compute/virtualMachines/start/action"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Get role definition facts", "module": "azure_rm_roledefinition_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get role definition facts", "register": "roledef", "until": "{{ roledef.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"role_name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Assert role definition facts", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert role definition facts"}, "module_options": {"that": ["roledef['roledefinitions'] | length == 1", "roledef['roledefinitions'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create a role assignment (Check Mode)", "module": "azure_rm_roleassignment", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Create a role assignment", "module": "azure_rm_roleassignment", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment", "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Assert creating role assignment", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role assignment"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_roleassignment_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment_facts", "executable_type": "Module", "fqcn": "azure_rm_roleassignment_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "assert role assignment facts", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert role assignment facts"}, "module_options": {"that": ["facts['roleassignments'] | length > 0", "facts['roleassignments'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "delete role assignment", "module": "azure_rm_roleassignment", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "delete role assignment"}, "module_options": {"name": "{{ facts['roleassignments'][0]['id'].split('/')[-1] }}", "scope": "/subscriptions/{{ subscription_id }}", "state": "absent"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Delete the role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "assert deleting role definition check mode", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert deleting role definition check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Delete the role definition", "module": "azure_rm_roledefinition", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "storage{{ rpfx }}", "account_type": "Standard_LRS", "location": "eastus2"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Sample for Azure REST API - StorageAccounts_ListKeys", "module": "azure_rm_resource", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Sample for Azure REST API - StorageAccounts_ListKeys", "register": "storage_output"}, "module_options": {"api_version": "2018-07-01", "method": "POST", "resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageaccounts", "resource_name": "storage{{ rpfx }}", "subresource": [{"type": "listkeys"}]}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "storage_output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- idempotent", "module": "azure_rm_hdinsightcluster", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- resize and add tags", "module": "azure_rm_hdinsightcluster", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- resize and add tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 2, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Get facts of Cluster", "module": "azure_rm_hdinsightcluster_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Get facts of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}"}, "executable": "azure_rm_hdinsightcluster_facts", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.clusters[0]['id'] != None", "output.clusters[0]['resource_group'] != None", "output.clusters[0]['name'] != None", "output.clusters[0]['location'] != None", "output.clusters[0]['cluster_version'] != None", "output.clusters[0]['os_type'] != None", "output.clusters[0]['tier'] != None", "output.clusters[0]['cluster_definition'] != None", "output.clusters[0]['compute_profile_roles'] != None", "output.clusters[0]['connectivity_endpoints'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Delete instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Delete instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name1": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name2": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "nic_name1": "nic1{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefix": "10.10.0.0/24", "virtual_network": "tn{{ rpfx }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "lb"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "pip{{ rpfx }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}, {"name": "backendaddrpool1"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network id (check mode)", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network id (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network resource_group", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network resource_group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": {"name": "tn{{ rpfx }}", "resource_group": "{{ resource_group_secondary }}"}, "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 1", "not facts.networkinterfaces[0].security_group", "not facts.networkinterfaces[0].ip_configurations[0].public_ip_address", "not facts.networkinterfaces[0].enable_ip_forwarding", "not facts.networkinterfaces[0].enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create most simple NIC with ip configurations (idempotent)", "module": "azure_rm_networkinterface", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with ip configurations (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ facts.networkinterfaces[0].resource_group }}", "name": "{{ facts.networkinterfaces[0].name }}", "virtual_network": "{{ facts.networkinterfaces[0].virtual_network }}", "create_with_security_group": false, "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}], "subnet": "{{ facts.networkinterfaces[0].subnet }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create most simple NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Update security group (check mode)", "module": "azure_rm_networkinterface", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update security group (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "security_group": "tn{{ rpfx }}sg"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Update public ip address (check mode)", "module": "azure_rm_networkinterface", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update public ip address (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip_address_name": "tn{{ rpfx }}", "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Update accelerated networking (check mode)", "module": "azure_rm_networkinterface", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update accelerated networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Update IP forwarding networking (check mode)", "module": "azure_rm_networkinterface", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update IP forwarding networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "enable_ip_forwarding": true, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Update dns server (check mode)", "module": "azure_rm_networkinterface", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update dns server (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false, "dns_servers": ["8.9.10.11", "7.8.9.10"]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Update NIC", "module": "azure_rm_networkinterface", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "security_group": "tn{{ rpfx }}sg", "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11', '7.8.9.10']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Complicated NIC (idempontent)", "module": "azure_rm_networkinterface", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Complicated NIC (idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "security_group": "tn{{ rpfx }}sg", "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 2", "facts.networkinterfaces[0].security_group.endswith(\"tn{{ rpfx }}sg\")", "facts.networkinterfaces[0].enable_accelerated_networking", "facts.networkinterfaces[0].enable_ip_forwarding"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Remove one dns server and ip configuration", "module": "azure_rm_networkinterface", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Remove one dns server and ip configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "security_group": "tn{{ rpfx }}sg", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11"], "ip_configurations": [{"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "primary": true, "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.ip_configurations | length == 1", "output.state.ip_configurations[0].public_ip_address.name == \"tn{{ rpfx }}\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Create application security group(check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Create Application security group", "module": "azure_rm_applicationsecuritygroup", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert application security group creation", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert application security group creation"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Get Application security group", "module": "azure_rm_applicationsecuritygroup_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get Application security group", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}"}, "executable": "azure_rm_applicationsecuritygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['applicationsecuritygroups'] | length == 1", "facts['applicationsecuritygroups'][0]['name'] != None", "facts['applicationsecuritygroups'][0]['location'] != None", "facts['applicationsecuritygroups'][0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Create application security group (idempotent)", "module": "azure_rm_applicationsecuritygroup", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Update application security group", "module": "azure_rm_applicationsecuritygroup", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing", "foo": "bar"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Assert update", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert update"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "Create Application security group in secondary resource group", "module": "azure_rm_applicationsecuritygroup", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group in secondary resource group", "register": "asg"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Create Nic with application security groups", "module": "azure_rm_networkinterface", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}", "{{ asg.id }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "assert creation succeeded", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert creation succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "Create Nic with application security groups (idempotent)", "module": "azure_rm_networkinterface", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ asg.id }}", "{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "assert idempotent", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "Update Nic with application security groups", "module": "azure_rm_networkinterface", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "assert update succeeded", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert update succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces[0].ip_configurations[0].application_security_groups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Delete the NIC (check mode)", "module": "azure_rm_networkinterface", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 55}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 56}": {"py/object": "struct4.Task", "name": "Delete the NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 57}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 58}": {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 59}": {"py/object": "struct4.Task", "name": "delete public ip", "module": "azure_rm_publicipaddress", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 60}": {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 61}": {"py/object": "struct4.Task", "name": "Delete the application security group (check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 62}": {"py/object": "struct4.Task", "name": "Assert delete check mode", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert delete check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 63}": {"py/object": "struct4.Task", "name": "Delete the application security group", "module": "azure_rm_applicationsecuritygroup", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 64}": {"py/object": "struct4.Task", "name": "Assert the deletion", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert the deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml\", \"index\": 65}": {"py/object": "struct4.Task", "name": "Delete second application security group", "module": "azure_rm_applicationsecuritygroup", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete second application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml", "options": {}, "module_options": "virtualmachine.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create random names", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create random names"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}", "vm_name1": "vm1{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name2": "vm2{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name3": "vm3{{ resource_group | hash('md5') | truncate(5, True, '') }}", "abs_name1": "avbs1{{ resource_group | hash('md5') | truncate(3, True, '') }}", "abs_name2": "avbs2{{ resource_group | hash('md5') | truncate(3, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name1 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name1 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "purge_rules": true, "rules": [{"name": "ALLOW_SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 100, "direction": "Inbound"}, {"name": "ALLOW_HTTP", "protocol": "Tcp", "destination_port_range": 80, "access": "Allow", "priority": 110, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create NIC for single nic VM", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NIC for single nic VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "virtual_network": "{{ vm_name1 }}", "subnet": "{{ vm_name1 }}", "public_ip_name": "{{ vm_name1 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create virtual machine with a single NIC", "module": "azure_rm_virtualmachine", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "custom_data": "#!/bin/sh\necho \"custom_data was executed\" > /tmp/custom_data.txt\n"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Restart the virtual machine", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Restart the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "restarted": true, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Deallocate the virtual machine", "module": "azure_rm_virtualmachine", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Deallocate the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "allocated": false, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate == 'deallocated'", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Start the virtual machine", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Start the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Should be idempotent with a single NIC", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Resize VM", "module": "azure_rm_virtualmachine", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Resize VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A1", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["output.changed", "output.ansible_facts.azure_vm.properties.hardwareProfile.vmSize == \"Standard_A1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "NIC should be gone", "module": "azure_rm_networkinterface_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "NIC should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_networkinterfaces | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "PIP should be gone", "module": "azure_rm_publicipaddress_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "PIP should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Create virtual machine without public ip address", "module": "azure_rm_virtualmachine", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine without public ip address", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "vm_size": "Standard_A0", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "public_ip_allocation_method": "Disabled", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["not 'publicIPAddress' in output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Delete VM with no public ip", "module": "azure_rm_virtualmachine", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM with no public ip", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"niclist": [{"name": "testnic011", "resource_group": "{{ resource_group_secondary }}"}, {"name": "testnic012", "resource_group": "{{ resource_group_secondary  }}"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name2 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name2 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Create NICs for dual nic VM", "module": "azure_rm_networkinterface", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NICs for dual nic VM", "loop": "{{ niclist }}"}, "module_options": {"resource_group": "{{ item.resource_group }}", "name": "{{ item.name }}", "virtual_network": "{{ vn.state.id }}", "subnet": "{{ vm_name2 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Create virtual machine with two NICs", "module": "azure_rm_virtualmachine", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with two NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "os_disk_name": "testosdiskxx", "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "tags": {"abc": "def"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id", "azure_vm.properties.storageProfile.osDisk.name == 'testosdiskxx'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Retrieve vms facts (filtering by name)", "module": "azure_rm_virtualmachine_facts", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve vms facts (filtering by name)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 36}": {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length == 1", "results.vms[0].name == \"{{ vm_name2 }}\"", "results.vms[0].location == 'eastus'", "results.vms[0].admin_username == 'adminuser'", "results.vms[0].resource_group == \"{{ resource_group }}\"", "results.vms[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 37}": {"py/object": "struct4.Task", "name": "Retrieve facts by tags", "module": "azure_rm_virtualmachine_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve facts by tags", "register": "results"}, "module_options": {"tags": ["abc:def"]}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 38}": {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 39}": {"py/object": "struct4.Task", "name": "Should be idempotent with a dual NICs", "module": "azure_rm_virtualmachine", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a dual NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 40}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 41}": {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 42}": {"py/object": "struct4.Task", "name": "Gather facts and check if machine is generalized", "module": "azure_rm_virtualmachine_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Gather facts and check if machine is generalized", "register": "generalized_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 43}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "generalized_output.vms[0].power_state == 'generalized'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 44}": {"py/object": "struct4.Task", "name": "Delete dual NIC VM", "module": "azure_rm_virtualmachine", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete dual NIC VM", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 45}": {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachine", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 46}": {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachine", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": ["testing"]}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 47}": {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachine", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": "invalid-image"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 48}": {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachine", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 49}": {"py/object": "struct4.Task", "name": "Create minimal VM with defaults", "module": "azure_rm_virtualmachine", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create minimal VM with defaults", "register": "vm_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "admin_username": "testuser", "admin_password": "Pass123$$$abx!", "vm_size": "Standard_B1ms", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 50}": {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "remove_on_absent": "all_autocreated", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 51}": {"py/object": "struct4.Task", "name": "Query NIC", "module": "azure_rm_networkinterface_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NIC", "register": "output_nic"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 52}": {"py/object": "struct4.Task", "name": "Query NSG", "module": "azure_rm_securitygroup_facts", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NSG", "register": "output_nsg"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 53}": {"py/object": "struct4.Task", "name": "Query PIP", "module": "azure_rm_publicipaddress_facts", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query PIP", "register": "output_pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml\", \"index\": 54}": {"py/object": "struct4.Task", "name": "Assert that autocreated resources were deleted", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that autocreated resources were deleted"}, "module_options": {"that": ["output_nic.ansible_facts.azure_networkinterfaces | length == 0", "output_nsg.ansible_facts.azure_securitygroups | length == 0", "output_pip.ansible_facts.azure_publicipaddresses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "parameter": {}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Clearing (if) previous disks were created", "module": "azure_rm_manageddisk", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Clearing (if) previous disks were created", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Test invalid account name (should give error)", "module": "azure_rm_manageddisk", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Test invalid account name (should give error)", "register": "output", "ignore_errors": true, "check_mode": false}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert status succeeded (Check Mode)", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded (Check Mode)"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create new managed disk succesfully", "module": "azure_rm_manageddisk", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create new managed disk succesfully", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.disk_size_gb == 1", "output.state.id is defined", "output.state.os_type == None", "output.state.storage_account_type == \"Standard_LRS\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Copy disk to a new managed disk", "module": "azure_rm_manageddisk", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Copy disk to a new managed disk", "register": "disk2"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}2", "create_option": "copy", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk2.changed", "disk2.state.id is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create disk to a new managed disk with zone and os type", "module": "azure_rm_manageddisk", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk to a new managed disk with zone and os type", "register": "disk3"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}3", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1, "zone": "1", "os_type": "windows"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk3.changed", "disk3.state.id is defined", "disk3.state.zone == \"1\"", "disk3.state.os_type == \"windows\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Change storage account type to an invalid type", "module": "azure_rm_manageddisk", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Change storage account type to an invalid type", "register": "output", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "PremiumL", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert storage account type change failed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert storage account type change failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Update disk options (os_type, account_type, size, tags)", "module": "azure_rm_manageddisk", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Update disk options (os_type, account_type, size, tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "disk_size_gb": 2, "os_type": "linux", "storage_account_type": "StandardSSD_LRS", "tags": {"galaxy": "no", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.storage_account_type == \"StandardSSD_LRS\"", "output.state.disk_size_gb == 2", "output.state.tags | length == 2", "output.state.tags.galaxy == 'no'", "output.state.os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Gather facts to one specific disk", "module": "azure_rm_manageddisk_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Gather facts to one specific disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1"}, "executable": "azure_rm_manageddisk_facts", "executable_type": "Module", "fqcn": "azure_rm_manageddisk_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_managed_disk | length == 1", "azure_managed_disk[0].storage_account_type == \"StandardSSD_LRS\"", "azure_managed_disk[0].disk_size_gb == 2", "azure_managed_disk[0].os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"when": "{{item.key not in ['id', 'changed'] and item.value != None}}", "with_dict": "{{ azure_managed_disk[0] }}"}, "module_options": {"parameter": "{{parameter |combine({item.key: item.value})}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create disk with facts return value", "module": "azure_rm_manageddisk", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk with facts return value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "{{ parameter.location }}", "name": "{{ parameter.name }}", "storage_account_type": "{{ parameter.storage_account_type }}", "disk_size_gb": "{{ parameter.disk_size_gb }}", "create_option": "{{ parameter.create_option }}", "tags": "{{ parameter.tags }}"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Delete managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Assert status succeeded", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Delete all managed disk", "module": "azure_rm_manageddisk", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete all managed disk", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Delete virtual machine", "module": "azure_rm_virtualmachine", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete virtual machine"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tr{{ rpfx }}", "state": "absent", "vm_size": "Standard_DS1_v2"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "tr{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"name": "table{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "route_name": "route{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a route table (check mode)", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.id", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create a route table", "module": "azure_rm_routetable", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create a route table (idemponent)", "module": "azure_rm_routetable", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create route (check mode)", "module": "azure_rm_route", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "not output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create route", "module": "azure_rm_route", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create route (idemponent)", "module": "azure_rm_route", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "update route", "module": "azure_rm_route", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "update route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/24", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 1", "output.route_tables[0].routes[0].address_prefix == '10.1.0.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Delete route (check mode)", "module": "azure_rm_route", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (check mode)", "check_mode": true}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "route_table_name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Delete route", "module": "azure_rm_route", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Delete route (idemponent)", "module": "azure_rm_route", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Delete route table (check mode)", "module": "azure_rm_routetable", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (check mode)", "check_mode": true}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Delete route table", "module": "azure_rm_routetable", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Delete route table (idemponent)", "module": "azure_rm_routetable", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"name": "workspace{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create workspace", "module": "azure_rm_loganalyticsworkspace", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.retention_in_days == 40", "output.changed", "output.intelligence_packs"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1", "facts.workspaces[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"pack": "{{ pack | default({}) | combine({output.intelligence_packs[0].name: not output.intelligence_packs[0].enabled}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Update intelligence pack", "module": "azure_rm_loganalyticsworkspace", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Update intelligence pack", "register": "intelligence"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "intelligence_packs": "{{ pack }}"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["intelligence.intelligence_packs[0].enabled != output.intelligence_packs[0].enabled"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Remove workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Remove workspace", "module": "azure_rm_loganalyticsworkspace", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Remove workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"cdnprofilename": "cdnprofile{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname": "endpoint{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create a CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "azure_rm_cdnprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created"}, "module_options": {"that": "{{ fact.cdnprofiles | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create a CDN profile", "module": "azure_rm_cdnprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert the CDN profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well created"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Create a CDN profile (idempotent)", "module": "azure_rm_cdnprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Update the CDN profile", "module": "azure_rm_cdnprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar", "baz": "qux"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Assert the CDN profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Delete the CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Assert the CDN is still there", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN is still there"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'", "fact.cdnprofiles[0].tags.baz == 'qux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is well created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is well created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Get facts of a Azure CDN endpoint", "module": "azure_rm_cdnendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get facts of a Azure CDN endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Assert facts output", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert facts output"}, "module_options": {"that": ["facts['cdnendpoints'] | length == 1", "facts['cdnendpoints'][0]['id']", "facts['cdnendpoints'][0]['name']", "facts['cdnendpoints'][0]['profile_name']", "facts['cdnendpoints'][0]['origin']", "facts['cdnendpoints'][0]['location']", "facts['cdnendpoints'][0]['provisioning_state']", "facts['cdnendpoints'][0]['resource_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Assert still stopped and not changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert still stopped and not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Start a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Start a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": true}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Assert started", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert started"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Update the Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origin_path": "/test/", "tags": {"testing": "testing", "delete": "on-exit", "foo": "baz"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is updated", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Delete the CDN profile", "module": "azure_rm_cdnprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Assert the CDN profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "Get CDN profile fact", "module": "azure_rm_cdnprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get CDN profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.cdnprofiles | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname1": "vnet1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnetname2": "vnet2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "peering_name": "peering1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 100 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create first virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create first virtual network", "register": "vnet1"}, "module_options": {"name": "{{ vnetname1 }}", "address_prefixes_cidr": ["10.1.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create second virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create second virtual network", "register": "vnet2"}, "module_options": {"name": "{{ vnetname2 }}", "address_prefixes_cidr": ["10.2.0.0/24"], "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": ["vnet1.changed", "vnet2.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create virtual network peering (check mode)", "module": "azure_rm_virtualnetworkpeering", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Update virtual network peering (idempotent)", "module": "azure_rm_virtualnetworkpeering", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Update virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": true, "allow_forwarded_traffic": false}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_virtualnetworkpeering_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}"}, "executable": "azure_rm_virtualnetworkpeering_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering_facts", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Assert Facts", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Assert Facts"}, "module_options": {"that": ["facts['vnetpeerings'] | length == 1", "facts['vnetpeerings'][0]['id']", "facts['vnetpeerings'][0]['peering_state']", "facts['vnetpeerings'][0]['remote_virtual_network']", "facts['vnetpeerings'][0]['provisioning_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Delete virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Delete first virtual network", "module": "azure_rm_virtualnetwork", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete first virtual network"}, "module_options": {"name": "{{ vnetname1 }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, "{\"path\": \"./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname2 }}", "resource_group": "{{ resource_group_secondary }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}}, "taskfile_dict": {"./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml", "options": {"when": "ansible_version.full < \"2.5.0\""}, "module_options": {"msg": ["Your Ansible version is lower than 2.5.0", "You may need to perform additional steps to install this roles:", "  sudo pip install -r {{ role_path }}/files/requirements-azure.txt", "or", "  pip install --user -r {{ role_path }}/files/requirements-azure.txt", "depending on your ansible setup."]}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "azure.azure_modules", "used_in": [], "annotations": {}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"random_postfix": "{{ 1000 | random }}{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Server", "module": "azure_rm_sqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of SQL Server", "module": "azure_rm_sqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server", "module": "azure_rm_sqlserver_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None", "output.servers.sqlsrv{{ random_postfix }}.tags.aaa == 'bbb'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server - unexisting", "module": "azure_rm_sqlserver_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - unexisting", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "unexisting"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers == {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server - list", "module": "azure_rm_sqlserver_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - list", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second SQL Database", "module": "azure_rm_sqldatabase", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create second SQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None", "output.databases[1].id != None", "output.databases[1].name != None", "output.databases[1].location != None", "output.databases[1].sku.name != None", "output.databases[1].sku.tier != None", "output.databases[1].sku.capacity != None", "output.databases[1].kind != None", "output.databases[1].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of secondary database", "module": "azure_rm_sqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of secondary database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned (one database is there by default)", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned (one database is there by default)"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_sqlfirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_sqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].resource_group != None", "output.rules[1].server_name != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Server", "module": "azure_rm_sqlserver", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Server", "module": "azure_rm_sqlserver", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_sqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"tmname": "tm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname1": "ep1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname2": "ep2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "azure_rm_trafficmanagerprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created"}, "module_options": {"that": "{{ fact.tms | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile", "register": "tm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well created"}, "module_options": {"that": ["tm.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile (idempotent)", "module": "azure_rm_trafficmanagerprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Update the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "disabled", "routing_method": "priority", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint(check mode)", "module": "azure_rm_trafficmanagerendpoint", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert check mode changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check no endpoint created in check mode", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check no endpoint created in check mode"}, "module_options": {"that": ["facts.endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint create changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint create changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check endpoint created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check endpoint created"}, "module_options": {"that": ["facts.endpoints | length == 1", "facts.endpoints[0].name == \"{{ endpointname1 }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create second Traffic Manager endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check 2 endpoint in profile", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 2 endpoint in profile"}, "module_options": {"that": ["facts.endpoints | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create endpoint (idempotent)", "module": "azure_rm_trafficmanagerendpoint", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create endpoint (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint creation idempotent", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint creation idempotent"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete second endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "state": "absent"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint deletion changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint deletion changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check 1 endpoint left in profile", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 1 endpoint left in profile"}, "module_options": {"that": ["facts.endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the traffic manager profile is still there", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the traffic manager profile is still there"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Traffic Manager profile fact", "module": "azure_rm_trafficmanagerprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get Traffic Manager profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.tms | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_trafficmanagerprofile", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an availability set with default options", "module": "azure_rm_availabilityset", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with default options", "register": "results"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "tags": {"tag1": "testtag"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an availability set with advanced options", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with advanced options", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options - no changes, fail for immutable options", "module": "azure_rm_availabilityset", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options - no changes, fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "module": "azure_rm_availabilityset", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test1": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set options to update tags", "module": "azure_rm_availabilityset", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set options to update tags", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test2": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.tags.test2 == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create availability set with incorrect fault domain parameter", "module": "azure_rm_availabilityset", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create availability set with incorrect fault domain parameter", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 4, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "'The specified fault domain count 4 must fall in the range 1 to' in results['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test check_mode", "module": "azure_rm_availabilityset", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Test check_mode", "check_mode": true, "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"checktest1": "modified1", "checktest2": "modified2"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.state.tags.checktest1 == 'modified1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts for created availability set", "module": "azure_rm_availabilityset_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Get facts for created availability set", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset_facts", "executable_type": "Module", "fqcn": "azure_rm_availabilityset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "not results.failed", "results.ansible_facts.azure_availabilitysets[0].properties.platformFaultDomainCount == 2", "results.ansible_facts.azure_availabilitysets[0].properties.platformUpdateDomainCount == 5", "results.ansible_facts.azure_availabilitysets[0].sku == 'Aligned'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_availabilityset", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "public_ip_address_name": "testPublicIP"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address 1", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address 1"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP1"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create load balancer 1", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer 1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB1", "public_ip_address_name": "testPublicIP1"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create network security group within same resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group within same resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create network security group in different resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group in different resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network inteface cards for VM A and B", "module": "azure_rm_networkinterface", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network inteface cards for VM A and B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}nic", "virtual_network": "testVnet", "subnet": "testSubnet"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "admin_username": "testuser", "admin_password": "Password1234!", "vm_size": "Standard_B1ms", "network_interfaces": "vmforimage{{ rpfx }}nic", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create image A", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image A"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimagea", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create image B", "module": "azure_rm_image", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimageb", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS (check mode)", "module": "azure_rm_virtualmachinescaleset", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "load_balancer": "testLB", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get VMSS to assert no VMSS is created in check mode", "module": "azure_rm_virtualmachinescaleset_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get VMSS to assert no VMSS is created in check mode", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert no VMSS created in check mode", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert no VMSS created in check mode"}, "module_options": {"that": ["output_scaleset.ansible_facts.azure_vmss | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "load_balancer": "testLB", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "module": "azure_rm_virtualmachinescaleset", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Automatic", "load_balancer": "testLB1", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve scaleset facts", "module": "azure_rm_virtualmachinescaleset_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset facts", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {}, "module_options": {"that": ["output_scaleset.vmss[0].load_balancer == \"testLB1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve scaleset VMs facts", "module": "azure_rm_virtualmachinescalesetinstance_facts", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset VMs facts", "register": "instances"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts returned correctly", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts returned correctly"}, "module_options": {"that": ["instances.instances | length == 1", "instances.instances[0].id != None", "instances.instances[0].name != None", "instances.instances[0].instance_id != None", "instances.instances[0].provisioning_state != None", "instances.instances[0].vm_id != None", "instances.instances[0].latest_model != None", "instances.instances[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get scaleset body", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get scaleset body"}, "module_options": {"body": "{{ output_scaleset.vmss[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update VMSS using output as input", "module": "azure_rm_virtualmachinescaleset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Try to update VMSS using output as input", "register": "results"}, "module_options": {"resource_group": "{{ body.resource_group }}", "name": "{{ body.name }}", "vm_size": "{{ body.vm_size }}", "admin_username": "{{ body.admin_username }}", "ssh_password_enabled": "{{ body.ssh_password_enabled }}", "admin_password": "Password1234!", "capacity": "{{ body.capacity }}", "virtual_network_name": "{{ body.virtual_network_name }}", "subnet_name": "{{ body.subnet_name }}", "upgrade_policy": "{{ body.upgrade_policy }}", "load_balancer": "{{ body.load_balancer }}", "tier": "{{ body.tier }}", "managed_disk_type": "{{ body.managed_disk_type }}", "os_disk_caching": "{{ body.os_disk_caching }}", "image": "{{ body.image }}", "data_disks": "{{ body.data_disks }}", "overprovision": "{{ body.overprovision }}"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something was changed", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something was changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Again VMSS Extension - again", "module": "azure_rm_virtualmachinescalesetextension", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install Again VMSS Extension - again", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was reported", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that change was reported"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upgrade instance to the latest image", "module": "azure_rm_virtualmachinescalesetinstance", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Upgrade instance to the latest image", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "latest_model": true}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop virtual machine", "module": "azure_rm_virtualmachinescalesetinstance", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Stop virtual machine", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "power_state": "stopped"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance", "module": "azure_rm_virtualmachinescalesetinstance", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete instance", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "module": "azure_rm_virtualmachinescaleset", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS ran", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS ran"}, "module_options": {"that": ["results.changed", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.enableAcceleratedNetworking == true", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.networkSecurityGroup != {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update VMSS with security group in different resource group.", "module": "azure_rm_virtualmachinescaleset", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "update VMSS with security group in different resource group.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_B1s", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": {"name": "testNetworkSecurityGroup2", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Fail when instance type is not supported to enable accelerated networking", "module": "azure_rm_virtualmachinescaleset", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Fail when instance type is not supported to enable accelerated networking", "register": "results", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}4", "vm_size": "Standard_B1s", "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "upgrade_policy": "Manual", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert failure to show that accelerated networking is enabled only with supported instance types.", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert failure to show that accelerated networking is enabled only with supported instance types."}, "module_options": {"that": ["\"VMSizeIsNotPermittedToEnableAcceleratedNetworkingForVmss\" in results.msg"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete load balancer", "module": "azure_rm_loadbalancer", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public IP address", "module": "azure_rm_publicipaddress", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachinescaleset", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachinescaleset", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": ["testing"]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachinescaleset", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": "invalid-image"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachinescaleset", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualmachinescaleset", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test invalid account name", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Test invalid account name", "register": "invalid_name", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "invalid_name['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create new storage account", "module": "azure_rm_storageaccount", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.id is defined", "output.state.blob_cors | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create new storage account (idempotence)", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_storageaccount_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["test", "galaxy"]}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": "azure_storageaccounts | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change account type", "module": "azure_rm_storageaccount", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Premium_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert account type change failed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert account type change failed"}, "module_options": {"that": "change_account['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change account type and add custom domain", "module": "azure_rm_storageaccount", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type and add custom domain", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_GRS", "custom_domain": {"name": "ansible.com", "use_sub_domain": false}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert CNAME failure", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert CNAME failure"}, "module_options": {"that": "'custom domain name could not be verified' in  change_account['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update account tags", "module": "azure_rm_storageaccount", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Update account tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "append_tags": false, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.testing == 'testing'", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "show_connection_string": true, "show_blob_cors": true}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts| length == 1", "storageaccounts | length == 1", "not storageaccounts[0].custom_domain", "storageaccounts[0].account_type == \"Standard_GRS\"", "storageaccounts[0].primary_endpoints.blob.connectionstring", "storageaccounts[0].blob_cors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete acccount", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete acccount"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_storageaccount", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"fixed_resource_prefix": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"funcapp_name_basic": "fa{{ fixed_resource_prefix }}basic", "funcapp_name_container": "fa{{ fixed_resource_prefix }}container", "funcapp_name_params": "fa{{ fixed_resource_prefix }}params", "storage_account_name": "sa{{ fixed_resource_prefix }}", "plan_name": "ap{{ fixed_resource_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create storage account for function apps", "module": "azure_rm_storageaccount", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create storage account for function apps"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create basic function app", "module": "azure_rm_functionapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "storage_account": "{{ storage_account_name }}"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "list facts for function", "module": "azure_rm_functionapp_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "list facts for function", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}"}, "executable": "azure_rm_functionapp_facts", "executable_type": "Module", "fqcn": "azure_rm_functionapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the facts were retrieved", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the facts were retrieved"}, "module_options": {"that": ["results.ansible_facts.azure_functionapps|length == 1", "results.ansible_facts.azure_functionapps[0].name == \"{{ funcapp_name_basic }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete basic function app", "module": "azure_rm_functionapp", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a function with app settings", "module": "azure_rm_functionapp", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create a function with app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function with app settings was created", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function with app settings was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "change app settings", "module": "azure_rm_functionapp", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "change app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2", "another": "one"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux app service plan", "module": "azure_rm_appserviceplan", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create a linux app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create azure function app {{ function_app }}", "module": "azure_rm_functionapp", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create azure function app {{ function_app }}", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "storage_account": "{{ storage_account_name }}", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}"}, "container_settings": {"name": "httpd"}, "app_settings": {"FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "delete storage account", "module": "azure_rm_storageaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_functionapp", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network, if it exists", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network, if it exists"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 2", "output.state.dns_servers | length == 2", "output.state.tags.delete == 'on-exit'", "output.state.tags | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Attach a subnet", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Attach a subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "virtual_network_name": "{{ vnetname }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts by name, tags", "module": "azure_rm_virtualnetwork_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by name, tags", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].dns_servers | length == 2", "facts.virtualnetworks[0].address_prefixes | length == 2", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by resource group, tags", "module": "azure_rm_virtualnetwork_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by resource group, tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_virtualnetwork_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_virtualnetwork", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_virtualnetwork", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "tags": {"testing": "no", "delete": "never", "foo": "bar"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state.tags | length == 3"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "append_tags": false, "tags": {"testing": "always"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 1", "output.state.tags.testing == 'always'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should require address_prefixes_cidr when purge_address_prefixes", "module": "azure_rm_virtualnetwork", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should require address_prefixes_cidr when purge_address_prefixes", "register": "output", "ignore_errors": true}, "module_options": {"name": "{{ vnetname }}", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge address prefixes", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge address prefixes", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": "10.1.0.0/16", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 1", "output.state.address_prefixes[0] == '10.1.0.0/16'", "output.state.dns_servers | length == 2", "output.state.dns_servers[0] == '127.0.0.1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge DNS servers", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge DNS servers", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "purge_dns_servers": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state['dns_servers'] is undefined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_virtualnetwork_facts", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}"}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualnetwork", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"linux_app_plan_resource_group": "{{ resource_group_secondary }}", "win_app_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}{{ 1000 | random}}winapp", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_group_secondary | replace('-','x'))[-8:] }}linplan", "slot1_name": "stage1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a windows web app with non-exist app service plan", "module": "azure_rm_webapp", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with non-exist app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}1", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ win_plan_name }}", "is_linux": false, "sku": "S1"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan", "module": "azure_rm_webapp", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "stop the web app", "module": "azure_rm_webapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "stop the web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}", "app_state": "stopped"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan, try to update some root level params", "module": "azure_rm_webapp", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan, try to update some root level params", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "plan": "{{ win_plan_name }}", "dns_registration": true, "https_only": true, "tags": {"testwebapptag": "test"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "get web app with resource group and tag", "module": "azure_rm_webapp_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with resource group and tag", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "tags": ["testwebapptag"]}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a win web app with java run time specific", "module": "azure_rm_webapp", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with java run time specific", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.8", "settings": {"java_container": "Tomcat", "java_container_version": "8.0"}}], "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the web app was created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].app_settings | length == 1", "output.webapps[0].frameworks | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update app settings and framework", "module": "azure_rm_webapp", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update app settings and framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.7", "settings": {"java_container": "Tomcat", "java_container_version": "8.5"}}], "app_settings": {"testkey2": "testvalue2"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.webapps[0].app_settings | length == 2", "output.webapps[0].app_settings['testkey'] == 'testvalue'", "output.webapps[0].app_settings['testkey2'] == 'testvalue2'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with return publishing profile", "module": "azure_rm_webapp_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with return publishing profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "return_publish_profile": true}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].publishing_username != \"\"", "output.webapps[0].publishing_password != \"\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge all existing app settings", "module": "azure_rm_webapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Purge all existing app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "purge_app_settings": true}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a win web app with python run time and php run time", "module": "azure_rm_webapp", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with python run time and php run time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}5", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}, {"name": "php", "version": "7.0"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a docker web app with some app settings", "module": "azure_rm_webapp", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with some app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}6", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}", "is_linux": true, "sku": "S1", "number_of_workers": 1}, "container_settings": {"name": "ansible/ansible:ubuntu1404"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a docker web app with private acr registry", "module": "azure_rm_webapp", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with private acr registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}7", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "container_settings": {"name": "ansible/ansible:ubuntu1404", "registry_server_url": "test.io", "registry_server_user": "user", "registry_server_password": "password"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux web app with nodejs framework", "module": "azure_rm_webapp", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should be idempotent with linux web app created", "module": "azure_rm_webapp", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Should be idempotent with linux web app created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update nodejs framework", "module": "azure_rm_webapp", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.9"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux web app with deployment source github", "module": "azure_rm_webapp", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with deployment source github", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}10", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "deployment_source": {"url": "https://github.com/test/test", "branch": "master"}, "scm_type": "GitHub"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete web app", "module": "azure_rm_webapp", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Delete web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "state": "absent"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was deleted", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "assert error that java is mutually exclusive with frameworks", "module": "azure_rm_webapp", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error that java is mutually exclusive with frameworks", "register": "fail_win_java_version_mutual_exclusive", "failed_when": "fail_win_java_version_mutual_exclusive.msg != \"Java is mutually exclusive with other frameworks.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}11", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "java", "version": "1.8"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error when linux web app, only can specify one framework", "module": "azure_rm_webapp", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error when linux web app, only can specify one framework", "register": "fail_linux_one_framework_only", "failed_when": "fail_linux_one_framework_only.msg != \"Can specify one framework only for Linux web app.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ linux_plan_name }}12", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a linux web app with java tomcat container", "module": "azure_rm_webapp", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with java tomcat container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "java", "version": "8", "settings": {"java_container": "tomcat", "java_container_version": "8.5"}}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with publish profile", "module": "azure_rm_webapp_facts", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Get facts with publish profile", "no_log": true, "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert publish profile returned", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert publish profile returned"}, "module_options": {"that": ["facts.webapps[0].ftp_publish_url != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a webapp slot (Check mode)", "module": "azure_rm_webappslot", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert slot check mode creation", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a webapp slot", "module": "azure_rm_webappslot", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert slot creation", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update webapp slot (idempotence)", "module": "azure_rm_webappslot", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update webapp slot", "module": "azure_rm_webappslot", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "frameworks": [{"name": "node", "version": "10.1"}], "app_settings": {"testkey": "testvalue2"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Swap webapp slot", "module": "azure_rm_webappslot", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Swap webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "swap": {"action": "swap"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert swap", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert swap"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop webapp slot", "module": "azure_rm_webappslot", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Stop webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_state": "stopped"}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_webapp", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "tenant_id": "{{ azure_tenant }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "lookup service principal object id", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "lookup service principal object id", "register": "object_id"}, "module_options": {"object_id": "{{ lookup('azure_service_principal_attribute', azure_client_id=azure_client_id, azure_secret=azure_secret, azure_tenant=tenant_id) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault", "module": "azure_rm_keyvault", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault again", "module": "azure_rm_keyvault", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update existing Key Vault (add a rule and tags)", "module": "azure_rm_keyvault", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Update existing Key Vault (add a rule and tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == true"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use REST API to retrieve keyvault (as facts not available yet)", "module": "azure_rm_resource_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Use REST API to retrieve keyvault (as facts not available yet)", "register": "output"}, "module_options": {"api_version": "2018-02-14", "resource_group": "{{ resource_group }}", "provider": "keyvault", "resource_type": "vaults", "resource_name": "vault{{ rpfx }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the facts are properly set", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the facts are properly set"}, "module_options": {"that": ["output.response[0].tags.aaa == \"bbb\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultkey", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "key_name": "testkey", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete a keyvault key", "module": "azure_rm_keyvaultkey", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault key", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "key_name": "testkey"}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultsecret", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "secret_name": "testsecret", "secret_value": "mysecret", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete a keyvault secret", "module": "azure_rm_keyvaultsecret", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault secret", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "secret_name": "testsecret"}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Key Vault", "module": "azure_rm_keyvault", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Key Vault", "module": "azure_rm_keyvault", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete unexisting instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_keyvault", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a namespace", "module": "azure_rm_servicebus", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["namespace.id", "namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a namespace (idempontent)", "module": "azure_rm_servicebus", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace (idempontent)", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a queue", "module": "azure_rm_servicebusqueue", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a queue", "register": "queue"}, "module_options": {"name": "queue{{ rpfx }}", "namespace": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["queue.id", "queue.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic (check mode)", "module": "azure_rm_servicebustopic", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic", "module": "azure_rm_servicebustopic", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id", "'subscription_count' not in output"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic (idempontent)", "module": "azure_rm_servicebustopic", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (idempontent)", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create test policy", "module": "azure_rm_servicebussaspolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create test policy"}, "module_options": {"name": "testpolicy", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "rights": "manage"}, "executable": "azure_rm_servicebussaspolicy", "executable_type": "Module", "fqcn": "azure_rm_servicebussaspolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a subscription", "module": "azure_rm_servicebustopicsubscription", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a subscription", "register": "subs"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["subs.id", "subs.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 1", "facts.servicebuses[0].id == output.id", "facts.servicebuses[0].subscription_count == 1", "facts.servicebuses[0].sas_policies.testpolicy", "facts.servicebuses[0].sas_policies.testpolicy.rights == 'manage'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete subscription", "module": "azure_rm_servicebustopicsubscription", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete subscription"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses[0].subscription_count == 0", "facts.servicebuses | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete topic", "module": "azure_rm_servicebustopic", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete topic"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"name": "topic{{ rpfx }}", "type": "topic", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete queue", "module": "azure_rm_servicebusqueue", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete queue"}, "module_options": {"name": "queue{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete namespace", "module": "azure_rm_servicebus", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_servicebus", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of PostgreSQL Server, change storage size", "module": "azure_rm_postgresqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Update instance of PostgreSQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts postgresql Server", "module": "azure_rm_postgresqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts postgresql Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server -- add tags", "module": "azure_rm_postgresqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server -- add tags"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database without force_update", "module": "azure_rm_postgresqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database with force_update", "module": "azure_rm_postgresqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database with force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS", "force_update": true}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_postgresqlconfiguration", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration", "module": "azure_rm_postgresqlconfiguration", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was not registered", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was not registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_postgresqlconfiguration", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete second instance of PostgreSQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_postgresqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"redis_name": "redis-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "vnet_name": "vnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "subnet_name": "subnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "rule_name": "rule1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a redis cache", "module": "azure_rm_rediscache", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].id != None", "facts.rediscaches[0].host_name != None", "facts.rediscaches[0].provisioning_state != None", "facts.rediscaches[0].sku.name == 'basic'", "facts.rediscaches[0].sku.size == 'C1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the redis cache (idempotent)", "module": "azure_rm_rediscache", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update the redis cache (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "(actually) update redis cache", "module": "azure_rm_rediscache", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "(actually) update redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update redis cache configuration", "module": "azure_rm_rediscache", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update redis cache configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "maxmemory_policy": "allkeys_lru", "tags": {"testing": "foo"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale up the redis cache", "module": "azure_rm_rediscache", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Scale up the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "standard", "size": "C1"}, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force reboot redis cache", "module": "azure_rm_rediscache", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Force reboot redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "reboot": {"reboot_type": "all"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert deleting redis cache check mode", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert deleting redis cache check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnet_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ subnet_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vnet_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create redis with subnet", "module": "azure_rm_rediscache", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create redis with subnet", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "sku": {"name": "premium", "size": "P1"}, "subnet": {"name": "{{ subnet_name }}", "virtual_network_name": "{{ vnet_name }}"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "return_access_keys": true}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].subnet != None", "facts.rediscaches[0].access_keys.primary != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create firewall rule (Check mode)", "module": "azure_rm_rediscachefirewallrule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creation", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creation"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update firewall rule idempotence", "module": "azure_rm_rediscachefirewallrule", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "end_ip_address": "192.168.1.5"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "state": "absent"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert deletion", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_rediscache", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of MariaDB Server, change storage size", "module": "azure_rm_mariadbserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of MariaDB Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mariadbdatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mariadbdatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mariadbfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mariadbfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mariadbconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mariadbconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete second instance of MariaDB Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_mariadbserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(8, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find available k8s version", "module": "azure_rm_aksversion_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Find available k8s version", "register": "versions"}, "module_options": {"location": "eastus"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an AKS instance (check mode)", "module": "azure_rm_aks", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (check mode)", "check_mode": true}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "azure_rm_aks_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an AKS instance", "module": "azure_rm_aks", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an AKS instance (idempotent)", "module": "azure_rm_aks", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get available version", "module": "azure_rm_aksversion_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get available version", "register": "version1"}, "module_options": {"location": "eastus", "version": "{{ versions.azure_aks_versions[0] }}"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon", "module": "azure_rm_aks", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is upgraded", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is upgraded"}, "module_options": {"that": ["output.changed", "output.kubernetes_version == version1.azure_aks_versions[0]", "output.addon.httpApplicationRouting.enabled ==  True", "output.agent_pool_profiles[0].count == 1", "output.network_profile.network_plugin == 'kubenet'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon (idempontent)", "module": "azure_rm_aks", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon (idempontent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "show_kubeconfig": "user"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].kube_config == output.kube_config"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the AKS instance", "module": "azure_rm_aks", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is well deleted", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the AKS instance (idempotent)", "module": "azure_rm_aks", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_aks", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a virtual network"}, "module_options": {"name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.2"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a subnet", "register": "subnet_output"}, "module_options": {"name": "subnet{{ rpfx }}", "virtual_network_name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}", "name": "sample_gateway_frontend_ip_config"}}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "dump", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "dump"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Application Gateway", "module": "azure_rm_appgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - no change", "module": "azure_rm_appgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - no change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - single change", "module": "azure_rm_appgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - single change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 81, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway", "module": "azure_rm_appgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Application Gateway", "module": "azure_rm_appgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete unexisting instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_appgateway", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"secgroupname": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "asg_name1": "asg1{{ resource_group | hash('md5') | truncate(7, True, '') }}", "asg_name2": "asg2{{ resource_group | hash('md5') | truncate(7, True, '') }}", "sg_name1": "sgasg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "DenySSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Deny", "priority": 100, "direction": "Inbound"}, {"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "{{ output.state.rules | length }} == 2"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_securitygroup_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts by tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "azure_securitygroups | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add/Update rules on existing security group", "module": "azure_rm_securitygroup", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add/Update rules on existing security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 3", "output.state.rules[0].source_address_prefix == '174.108.158.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test idempotence", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Test idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "never", "baz": "bar"}, "append_tags": false}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_securitygroup", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "append_tags": false, "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.delete == 'on-exit'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for one accounts", "module": "azure_rm_securitygroup_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for one accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all accounts", "module": "azure_rm_securitygroup_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for all accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes", "module": "azure_rm_securitygroup", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 1", "{{ output.state.rules[0].source_address_prefixes | length }} == 3", "not output.state.rules[0].source_address_prefix"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes(idempontent)", "module": "azure_rm_securitygroup", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes(idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add a single one group", "module": "azure_rm_securitygroup", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add a single one group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "rules": [{"name": "DenySSH", "protocol": "Tcp", "source_address_prefix": ["54.120.120.240"], "destination_port_range": 22, "access": "Deny", "priority": 102, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "{{ output.state.rules | length }} == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group 1", "module": "azure_rm_applicationsecuritygroup", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 1", "register": "asg1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ asg_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Application security group 2", "module": "azure_rm_applicationsecuritygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 2", "register": "asg2"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group with application security group", "module": "azure_rm_securitygroup", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg1.id }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with application security group - Idempotent", "module": "azure_rm_securitygroup", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group - Idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg_name1 }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete security group", "module": "azure_rm_securitygroup", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete all security groups", "module": "azure_rm_securitygroup", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete all security groups", "with_items": "{{ azure_securitygroups }}"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item.name }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should have no security groups remaining", "module": "azure_rm_securitygroup_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Should have no security groups remaining", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_securitygroup", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"pipaname": "pipa{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "pipbname": "pipb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbvnname": "lbvn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_a": "lba{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_b": "lbb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_c": "lbc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_d": "lbd{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipbname }}", "sku": "Standard", "allocation_method": "Static", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipaname }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "clear load balancer", "module": "azure_rm_loadbalancer", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "clear load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "public_ip": "{{ pipaname }}"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer deleted", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer (idempotent)", "module": "azure_rm_loadbalancer", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer deleted (idempotent)", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted (idempotent)"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create another load balancer with more options", "module": "azure_rm_loadbalancer", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create another load balancer with more options", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": ["output.changed", "output.state.sku.name == 'Standard'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency", "module": "azure_rm_loadbalancer", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert that output has not changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency - change something", "module": "azure_rm_loadbalancer", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency - change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 81, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert that output has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}], "inbound_nat_rules": [{"name": "inboundnatrule0", "backend_port": 8080, "protocol": "Tcp", "frontend_port": 8080, "frontend_ip_configuration": "frontendipconf0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Add subnet", "register": "subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ lbvnname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create internal loadbalancer", "module": "azure_rm_loadbalancer", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create internal loadbalancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "private_ip_address": "10.10.0.10", "private_ip_allocation_method": "Static", "subnet": "{{ subnet.state.id }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup public ip", "module": "azure_rm_publicipaddress", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup public ip", "with_items": ["{{ pipaname }}", "{{ pipbname }}"]}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup subnet", "module": "azure_rm_subnet", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "virtual_network": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_loadbalancer", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "set location", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "set location"}, "module_options": {"location": "eastus"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts for a specific image", "module": "azure_rm_virtualmachineimage_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "Get facts for a specific image", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3", "version": "7.3.20170707"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available versions", "module": "azure_rm_virtualmachineimage_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available versions", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available offers", "module": "azure_rm_virtualmachineimage_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available offers", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available publishers", "module": "azure_rm_virtualmachineimage_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available publishers", "register": "output"}, "module_options": {"location": "{{ location }}"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualmachineimage_facts", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an container registry", "module": "azure_rm_containerregistry", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create an container registry", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": true, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container registry instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the container registry instance is well created"}, "module_options": {"that": ["output.changed", "output.admin_user_enabled", "output.location == 'eastus2'", "output.sku == 'Premium'", "output.tags['Environment'] == 'Production'", "output.tags['Release'] == 'beta1'", "output.provisioning_state == 'Succeeded'", "output.credentials['password'] is defined", "output.credentials['password2'] is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the ACR instance sku, tags and admin_user_enabled", "module": "azure_rm_containerregistry", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Update the ACR instance sku, tags and admin_user_enabled", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Standard", "tags": {"NewTag": "newtag", "Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second container registry (to test facts)", "module": "azure_rm_containerregistry", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create second container registry (to test facts)"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACR instance is well updated", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the ACR instance is well updated"}, "module_options": {"that": ["output.changed == True", "output.admin_user_enabled == False", "output.sku == 'Standard'", "output.tags['NewTag'] == 'newtag'", "output.credentials | length == 0", "output.credentials['password'] is not defined", "output.credentials['password2'] is not defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for single Container Registry", "module": "azure_rm_containerregistry_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for single Container Registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all Container Registries in the resource group", "module": "azure_rm_containerregistry_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for all Container Registries in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None", "output.registries[1]['name'] != None", "output.registries[1]['location'] != None", "output.registries[1]['admin_user_enabled'] != None", "output.registries[1]['sku'] != None", "output.registries[1]['provisioning_state'] != None", "output.registries[1]['login_server'] != None", "output.registries[1]['id'] != None", "output.registries[1]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete first container registry", "module": "azure_rm_containerregistry", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete first container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete second container registry", "module": "azure_rm_containerregistry", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete second container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_containerregistry", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create random domain name"}, "module_options": {"domain_name": "{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a DNS zone (check mode)", "module": "azure_rm_dnszone", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a DNS zone", "module": "azure_rm_dnszone", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update DNS zone with tags", "module": "azure_rm_dnszone", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update DNS zone with tags", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "tags": {"test": "modified"}}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.changed", "results.state.tags.test == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Zone Facts", "module": "azure_rm_dnszone_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Zone Facts", "register": "zones"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone_facts", "executable_type": "Module", "fqcn": "azure_rm_dnszone_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result"}, "module_options": {"that": ["azure_dnszones[0].tags.test == 'modified'", "zones.dnszones[0].type == 'public'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create virtual network", "with_items": ["{{ domain_name }}registration1", "{{ domain_name }}resolution1", "{{ domain_name }}registration2", "{{ domain_name }}resolution2"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create private dns zone", "module": "azure_rm_dnszone", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}, {"name": "{{ domain_name }}resolution2"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 2", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update private dns zone", "module": "azure_rm_dnszone", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 1", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test idempotent", "module": "azure_rm_dnszone", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Test idempotent", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"], "register": "results"}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"with_items": "{{ results.results }}"}, "module_options": {"that": ["not {{ item.changed }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create \"A\" record set with multiple records", "module": "azure_rm_dnsrecordset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create \"A\" record set with multiple records", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was created"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "re-run \"A\" record with same values", "module": "azure_rm_dnsrecordset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-run \"A\" record with same values", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that new record was appended", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that new record was appended"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 4"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "re-update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove 1 record from record set", "module": "azure_rm_dnsrecordset", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Remove 1 record from record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that record was deleted", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record was deleted"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check_mode test", "module": "azure_rm_dnsrecordset", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Check_mode test", "check_mode": true, "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.105"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that check_mode returns new state", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that check_mode returns new state"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create SRV records in a new record set", "module": "azure_rm_dnsrecordset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create SRV records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_sip._tcp.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "time_to_live": 7200, "record_type": "SRV", "records": [{"entry": "sip.{{ domain_name }}.com", "priority": 20, "weight": 10, "port": 5060}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that SRV record set was created", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that SRV record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create TXT records in a new record set", "module": "azure_rm_dnsrecordset", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create TXT records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_txt.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "record_type": "TXT", "records": [{"entry": "v=spf1 a -all"}, {"entry": "foo"}, {"entry": ["bar", "baz"]}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that TXT record set was created", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that TXT record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for single Record Set", "module": "azure_rm_dnsrecordset_facts", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for single Record Set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com", "relative_name": "www", "record_type": "A"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result for single Record Set", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for single Record Set"}, "module_options": {"that": ["not results.changed", "azure_dnsrecordset[0].name == 'www'", "results.dnsrecordsets[0].relative_name == 'www'", "results.dnsrecordsets[0].records | length == 3", "results.dnsrecordsets[0].record_type == 'A'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result for all Record Sets", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for all Record Sets"}, "module_options": {"that": ["not facts.changed", "facts.ansible_facts.azure_dnsrecordset[0].name == '@'", "facts.ansible_facts.azure_dnsrecordset[1].name == '@'", "facts.ansible_facts.azure_dnsrecordset[4].name == 'www'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete all record sets  except for @", "module": "azure_rm_dnsrecordset", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "delete all record sets  except for @", "with_items": "{{ facts.dnsrecordsets }}", "when": ["item.relative_name != '@'"], "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "{{ item.relative_name }}", "zone_name": "{{ domain_name }}.com", "record_type": "{{ item.record_type }}", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that record set deleted", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record set deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert all record set deleted", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert all record set deleted", "with_items": "{{ facts.dnsrecordsets }}"}, "module_options": {"that": ["item.relative_name == '@'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "(idempotence test) re-run record set absent", "module": "azure_rm_dnsrecordset", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "(idempotence test) re-run record set absent", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": null, "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": null}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete DNS zone", "module": "azure_rm_dnszone", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete DNS zone (idempotent)", "module": "azure_rm_dnszone", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone (idempotent)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_dnszone", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create sample container instance", "module": "azure_rm_containerinstance", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sample container instance -- same parameters", "module": "azure_rm_containerinstance", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sample container instance -- force update", "module": "azure_rm_containerinstance", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- force update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "force_update": true}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second container instance for testing purposes", "module": "azure_rm_containerinstance", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create second container instance for testing purposes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "dns_name_label": "mydnslabel{{ resource_group | hash('md5') | truncate(7, True, '') }}", "location": "eastus", "restart_policy": "on_failure", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81], "commands": ["echo abc", "echo cdf"], "environment_variables": [{"name": "myvar", "value": "myvarvalue"}]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts for single Container Instance", "module": "azure_rm_containerinstance_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for single Container Instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[0]['containers'][0]['commands'] | length == 2", "output.containerinstances[0]['containers'][0]['environment_variables'] | length == 1", "output.containerinstances[0]['restart_policy'] == 'on_failure'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all Container Instances in the resource group", "module": "azure_rm_containerinstance_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for all Container Instances in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[1]['resource_group'] != None", "output.containerinstances[1]['name'] != None", "output.containerinstances[1]['os_type'] != None", "output.containerinstances[1]['location'] != None", "output.containerinstances[1]['ip_address'] != None", "output.containerinstances[1]['ports'] != None", "output.containerinstances[1]['containers'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove container instance again", "module": "azure_rm_containerinstance", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the changed is false", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the changed is false"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_containerinstance", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of MySQL Server, change storage size", "module": "azure_rm_mysqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of MySQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mysqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mysqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mysqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mysqlfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mysqlconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mysqlconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete second instance of MySQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_mysqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vngname": "vng{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings (check mode)", "module": "azure_rm_virtualnetworkgateway", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "GatewaySubnet", "address_prefix": "10.0.2.0/24", "virtual_network": "{{ vnetname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Update virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "mno"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network gateway - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualnetworkgateway", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"lab_name": "lab{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vn_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vm_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "artifacts_name": "myartifacts", "github_token": "{{ lookup('env','GITHUB_ACCESS_TOKEN') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Lab", "module": "azure_rm_devtestlab", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Lab", "module": "azure_rm_devtestlab", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create again instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update lab - premium_data_disks", "module": "azure_rm_devtestlab", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update lab - premium_data_disks", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": true}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List DevTest Lab in a resource group", "module": "azure_rm_devtestlab_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List DevTest Lab in a resource group", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get DevTest Lab facts", "module": "azure_rm_devtestlab_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab facts", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['artifacts_storage_account'] != None", "output_lab.labs[0]['default_premium_storage_account'] != None", "output_lab.labs[0]['default_storage_account'] != None", "output_lab.labs[0]['premium_data_disk_storage_account'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- idempotent", "module": "azure_rm_devtestlabpolicy", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was not reported", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- change value", "module": "azure_rm_devtestlabpolicy", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- change value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 6}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "state": "absent"}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- idempotent", "module": "azure_rm_devtestlabschedule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- change time", "module": "azure_rm_devtestlabschedule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- change time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1130", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "state": "absent"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs virtual network", "module": "azure_rm_devtestlabvirtualnetwork", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs virtual network", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with same parameters", "module": "azure_rm_devtestlabvirtualnetwork", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with changed description", "module": "azure_rm_devtestlabvirtualnetwork", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with changed description", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab Updated"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get DevTest Lab Virtual Network facts", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab Virtual Network facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List all Virtual Networks in DevTest Lab", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all Virtual Networks in DevTest Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source with same parameters", "module": "azure_rm_devtestlabartifactsource", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "module": "azure_rm_devtestlabartifactsource", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/library", "security_token": "{{ github_token }}", "display_name": "My Artifacts Source"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length > 0"}, "module_options": {"artifact_source": [{"source_name": "{{ artifacts_name }}", "source_path": "/Artifacts/linux-install-mongodb"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length == 0"}, "module_options": {"artifact_source": null}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DTL Virtual Machine", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine with same parameters", "module": "azure_rm_devtestlabvirtualmachine", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing has changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine - change notes", "module": "azure_rm_devtestlabvirtualmachine", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine - change notes", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something.... more text", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['compute_vm_resource_group'] != None", "output_vm.virtualmachines[0]['compute_vm_name'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List all artifact sources", "module": "azure_rm_devtestlabartifactsource_facts", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all artifact sources", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None", "output.artifactsources | length >= 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get artifacts source facts", "module": "azure_rm_devtestlabartifactsource_facts", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get artifacts source facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "public repo"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "state": "absent"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was correctly registered", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was correctly registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo", "name": "ServiceFabric-LabCluster"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo", "name": "windows-webdeploy"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": "{{ output_lab.labs[0].id }}/artifactSources/public environment repo/armTemplates/WebApp"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment - idempotent", "module": "azure_rm_devtestlabenvironment", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": {"artifact_source_name": "public environment repo", "name": "WebApp"}}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was not detected", "module": "assert", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@mes", "name": "myEnvironment", "state": "absent"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image", "module": "azure_rm_devtestlabcustomimage", "index": 85, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 86, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image -- idempotent", "module": "azure_rm_devtestlabcustomimage", "index": 87, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 88, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 89, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported in check mode", "module": "assert", "index": 90, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported in check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Lab", "module": "azure_rm_devtestlab", "index": 91, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was correctly reported", "module": "assert", "index": 92, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Lab", "module": "azure_rm_devtestlab", "index": 93, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete unexisting instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}unexisting", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert thes state has not changed", "module": "assert", "index": 94, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert thes state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_devtestlab", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "Prepare facts"}, "module_options": {"linux_plan_resource_group": "{{ resource_group_secondary }}", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}linplan"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a windows plan", "module": "azure_rm_appserviceplan", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a windows plan", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B1"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a linux plan", "module": "azure_rm_appserviceplan", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a linux plan", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get app service plan by name", "module": "azure_rm_appserviceplan_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "get app service plan by name", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1"}, "executable": "azure_rm_appserviceplan_facts", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert is_linux is True", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert is_linux is True"}, "module_options": {"that": ["output.appserviceplans | length == 1", "output.appserviceplans[0].is_linux == True"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create linux app service plan idempotent", "module": "azure_rm_appserviceplan", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create linux app service plan idempotent", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update a windows plan sku", "module": "azure_rm_appserviceplan", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a windows plan sku", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B2"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update a linux plan number of workers", "module": "azure_rm_appserviceplan", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a linux plan number of workers", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 2}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_appserviceplan", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"vm_name": "vm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}x", "public_ip_name": "pip{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "security_group_name": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "empty_disk_name": "emptydisk{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ security_group_name }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NIC", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "virtual_network": "{{ vm_name }}", "subnet": "{{ vm_name }}", "public_ip_name": "{{ public_ip_name }}", "security_group": "{{ security_group_name }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine", "module": "azure_rm_virtualmachine", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual machine", "register": "vm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "vm_size": "Standard_A0", "managed_disk_type": "Standard_LRS", "admin_username": "adminuser", "admin_password": "Password123!", "os_type": "Linux", "network_interfaces": "{{ vm_name }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create new empty managed disk", "module": "azure_rm_manageddisk", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create new empty managed disk", "register": "emptydisk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "storage_account_type": "Standard_LRS", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an image from VM (check mode)", "module": "azure_rm_image", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux", "data_disk_sources": ["{{ empty_disk_name }}"]}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an image from VM", "module": "azure_rm_image", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": {"name": "{{ vm_name }}", "type": "disks"}, "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an image from VM (idempotent)", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather information about image created", "module": "azure_rm_image_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Gather information about image created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001"}, "executable": "azure_rm_image_facts", "executable_type": "Module", "fqcn": "azure_rm_image_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.images != []"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image (check mode)", "module": "azure_rm_image", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image", "module": "azure_rm_image", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image (idempotent)", "module": "azure_rm_image", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete empty disk", "module": "azure_rm_manageddisk", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete empty disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_image", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random dns label", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create random dns label"}, "module_options": {"dns_label": "test{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Azure Deploy", "module": "azure_rm_deployment", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create Azure Deploy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "eastus", "template_link": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/d01a5c06f4f1bc03a049ca17bbbd6e06d62657b3/101-vm-simple-linux/azuredeploy.json", "deployment_name": "{{ dns_label }}", "parameters": {"adminUsername": {"value": "chouseknecht"}, "adminPassword": {"value": "password123!"}, "dnsLabelPrefix": {"value": "{{ dns_label }}"}, "ubuntuOSVersion": {"value": "16.04.0-LTS"}}}, "executable": "azure_rm_deployment", "executable_type": "Module", "fqcn": "azure_rm_deployment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add new instance to host group", "module": "add_host", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Add new instance to host group", "with_items": "{{ output.deployment.instances }}"}, "module_options": {"hostname": "{{ item.vm_name }}", "ansible_host": "{{ item['ips'][0].public_ip }}", "ansible_user": "chouseknecht", "ansible_ssh_pass": "password123!", "groupname": "azure_vms"}, "executable": "add_host", "executable_type": "Module", "fqcn": "ansible.builtin.add_host", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Deployment Facts", "module": "azure_rm_deployment_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Get Deployment Facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dns_label }}"}, "executable": "azure_rm_deployment_facts", "executable_type": "Module", "fqcn": "azure_rm_deployment_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that values are returned", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Assert that values are returned"}, "module_options": {"that": ["not output.changed", "output.deployments[0]['provisioning_state'] != None", "output.deployments[0]['output_resources'] | length > 0", "output.deployments[0]['outputs'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_deployment", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create domain name"}, "module_options": {"domain_name": "ansible-{{ resource_group | hash('md5') | truncate(24, True, '') }}", "rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create public ip", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "Static", "domain_name": "{{ domain_name }}", "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.public_ip_allocation_method == 'static'", "output.state.dns_settings.domain_name_label == domain_name", "output.state.tags | length == 2", "output.state.tags.testing == 'testing'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_publicipaddress", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_publicipaddress", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": true, "tags": {"delete": "never", "foo": "bar"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts, filtering by tag", "module": "azure_rm_publicipaddress_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts, filtering by tag"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge all tags", "module": "azure_rm_publicipaddress", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Purge all tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": false}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip", "register": "pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["pip.publicipaddresses | length == 1", "pip.publicipaddresses[0].name == \"pip{{ rpfx }}\"", "pip.publicipaddresses[0].allocation_method == 'static'", "pip.publicipaddresses[0].dns_settings.domain_name_label == domain_name"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all public ips", "module": "azure_rm_publicipaddress_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for all public ips"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_publicipaddress", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": null, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": {"name": "{{ resource_group }}", "list_resources": true}, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length == 1", "rg.resourcegroups[0].resources | length >= 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create resource group (idempontent)", "module": "azure_rm_resourcegroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Create resource group (idempontent)", "register": "output"}, "module_options": {"name": "{{ resource_group }}", "location": "{{ rg.resourcegroups[0].location }}"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete resource group", "module": "azure_rm_resourcegroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "delete resource group", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_resourcegroup", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "My_Virtual_Network", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create route table", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create route table", "register": "route_table"}, "module_options": {"name": "routetableforsubnet", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Catch invalid cidr", "module": "azure_rm_subnet", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Catch invalid cidr", "register": "output", "ignore_errors": true}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the subnet back", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the subnet back (idempontent)", "module": "azure_rm_subnet", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back (idempontent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create network security group", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "secgroupfoo", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_subnet", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create network security group in another resource group", "module": "azure_rm_securitygroup", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group in another resource group", "register": "nsg"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "route_table": "{{ route_table.id }}", "security_group": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.network_security_group.id == nsg.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the subnet (idempotent)", "module": "azure_rm_subnet", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet (idempotent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "{{ nsg.state.id }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get subnet facts", "module": "azure_rm_subnet_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Get subnet facts", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet_facts", "executable_type": "Module", "fqcn": "azure_rm_subnet_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.subnets[0]['id'] != None", "output.subnets[0]['resource_group'] != None", "output.subnets[0]['virtual_network_name'] != None", "output.subnets[0]['name'] != None", "output.subnets[0]['address_prefix_cidr'] != None", "output.subnets[0]['route_table'] != None", "output.subnets[0]['security_group'] != None", "output.subnets[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove subnet (idempotent)", "module": "azure_rm_subnet", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet (idempotent)", "register": "output"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove security group", "module": "azure_rm_securitygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "secgroupfoo", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove virtual network", "module": "azure_rm_virtualnetwork", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove virtual network"}, "module_options": {"name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_subnet", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an ACS instance - DCOS", "module": "azure_rm_acs", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - DCOS", "module": "azure_rm_acs", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the DCOS ACS instance - DCOS", "module": "azure_rm_acs", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the DCOS ACS instance - DCOS"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an ACS instance - Swarm", "module": "azure_rm_acs", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - Swarm", "module": "azure_rm_acs", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the ACS instance - Swarm", "module": "azure_rm_acs", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the ACS instance - Swarm"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_acs", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create Random Storage Account Name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Random Storage Account Name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "rules": [{"name": "SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 1001, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network interface card", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network interface card"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNIC", "virtual_network": "testVnet", "subnet": "testSubnet", "public_ip_name": "testPublicIP", "security_group_name": "testNetworkSecurityGroup"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a storage account", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "create a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "network_interfaces": "testNIC", "storage_account_name": "{{ storage_account }}", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM Extension", "module": "azure_rm_virtualmachineextension", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VM Extension ran", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension ran"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachineextension_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachineextension_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM Extension", "module": "azure_rm_virtualmachineextension", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "state": "absent", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VM Extension deleted", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "state": "absent", "remove_on_absent": ["all"], "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "network_interfaces": "testNIC", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete a storage account", "module": "azure_rm_storageaccount", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualmachineextension", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create container", "module": "azure_rm_storageblob", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create container"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Force upload blob", "module": "azure_rm_storageblob", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Force upload blob"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}, "force": true}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "storage blob seems to have some timing issues", "module": "wait_for", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "storage blob seems to have some timing issues"}, "module_options": {"delay": 10}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upload blob idempotence", "module": "azure_rm_storageblob", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Upload blob idempotence", "register": "upload_facts"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not upload_facts.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download file idempotence", "module": "azure_rm_storageblob", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file idempotence", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "./targets/azure_rm_storageblob/files/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "file", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": "path=\"/tmp/Ratings.png\" state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download file", "module": "azure_rm_storageblob", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "/tmp/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "find", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"register": "find_results"}, "module_options": "paths='/tmp' patterns=\"Ratings.png\"", "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "find_results['matched'] == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do not delete container that has blobs", "module": "azure_rm_storageblob", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Do not delete container that has blobs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete blob object", "module": "azure_rm_storageblob", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete blob object", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete container", "module": "azure_rm_storageblob", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_storageblob", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"nsgname": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "storageaccountname": "stacc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "dbname": "mdb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus", "tags": {"a": "abc", "b": "cde"}}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to get information about account", "module": "azure_rm_resource_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to get information about account", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to query a list", "module": "azure_rm_resource_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to query a list - same without API version", "module": "azure_rm_resource_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list - same without API version", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query all the resources in the resource group", "module": "azure_rm_resource_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Query all the resources in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "resource_type": "resources"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account that requires LRO polling", "module": "azure_rm_resource", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Create storage account that requires LRO polling", "register": "output"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "api_version": "2018-07-01", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "body": {"sku": {"name": "Standard_GRS"}, "kind": "Storage", "location": "eastus"}}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage was successfully created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that storage was successfully created"}, "module_options": {"that": "output['response']['name'] == '{{ storageaccountname }}'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to storage keys -- special case when subresource part has no name", "module": "azure_rm_resource", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to storage keys -- special case when subresource part has no name", "register": "keys"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "subresource": [{"type": "listkeys"}], "api_version": "2018-03-01-preview", "method": "POST"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that key was returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that key was returned"}, "module_options": {"that": "keys['response']['keys'][0]['value'] | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage - without API version", "module": "azure_rm_resource", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Delete storage - without API version"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "method": "DELETE", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_resource", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "name": "scale{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create VMSS", "register": "vmss"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 2, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create auto scaling", "module": "azure_rm_autoscale", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": {"name": "testVMSS{{ rpfx }}", "types": "virtualMachineScaleSets", "namespace": "Microsoft.Compute"}, "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create auto scaling (idemponent)", "module": "azure_rm_autoscale", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (idemponent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update auto scaling", "module": "azure_rm_autoscale", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "update auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition 0", "rules": [{"time_aggregation": "Average", "time_window": 10, "direction": "Increase", "metric_name": "Percentage CPU", "metric_resource_uri": "{{ vmss.ansible_facts.azure_vmss.id }}", "value": "1", "threshold": 70, "cooldown": 5, "time_grain": 1, "statistic": "Average", "operator": "GreaterThan", "type": "ChangeCount"}], "max_count": "1", "recurrence_mins": ["0"], "min_count": "1", "recurrence_timezone": "China Standard Time", "recurrence_frequency": "Week", "recurrence_hours": ["6"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.profiles[0].rules[0].metric_resource_uri == vmss.ansible_facts.azure_vmss.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling", "module": "azure_rm_autoscale", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling (idemponetent)", "module": "azure_rm_autoscale", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (idemponetent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "vm_size": "Standard_DS1_v2", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Clean subnet", "module": "azure_rm_subnet", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "virtual_network": "testVnet", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Clean virtual network", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_autoscale", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"dbname": "cosmos{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnname": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "subnetname": "subnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"name": "{{ subnetname }}", "virtual_network_name": "{{ vnname }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}], "database_account_offer_type": "Standard"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Database Account -- change something", "module": "azure_rm_cosmosdbaccount", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account -- change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}], "enable_automatic_failover": true}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of single account", "module": "azure_rm_cosmosdbaccount_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts of single account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "all"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['primary_master_key'] != None", "output.accounts[0]['secondary_master_key'] != None", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with readonly keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with readonly keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "readonly", "retrieve_connection_strings": true}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "'primary_master_key' not in output.accounts[0]", "'secondary_master_key' not in output.accounts[0]", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None", "output.accounts[0]['connection_strings'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List acounts by resource group", "module": "azure_rm_cosmosdbaccount_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "List acounts by resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_cosmosdbaccount", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"role_name": "{{ (resource_group | replace('-','x'))[-8:] }}{{ 1000 | random }}testrole", "subscription_id": "{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}", "principal_id": "{{ lookup('env','AZURE_CLIENT_ID') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role definition", "module": "azure_rm_roledefinition", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts by type", "module": "azure_rm_roledefinition_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by type", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts by name", "module": "azure_rm_roledefinition_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by name", "register": "facts", "until": "{{ facts.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "role_name": "{{ role_name }}"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length == 1", "facts['roledefinitions'][0]['permissions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['not_data_actions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['data_actions'] | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the role definition (idempotent)", "module": "azure_rm_roledefinition", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition (idempotent)", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the role definition", "module": "azure_rm_roledefinition", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read", "Microsoft.Compute/virtualMachines/start/action"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get role definition facts", "module": "azure_rm_roledefinition_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get role definition facts", "register": "roledef", "until": "{{ roledef.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"role_name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert role definition facts", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert role definition facts"}, "module_options": {"that": ["roledef['roledefinitions'] | length == 1", "roledef['roledefinitions'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role assignment (Check Mode)", "module": "azure_rm_roleassignment", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role assignment", "module": "azure_rm_roleassignment", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment", "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role assignment", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role assignment"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_roleassignment_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment_facts", "executable_type": "Module", "fqcn": "azure_rm_roleassignment_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert role assignment facts", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert role assignment facts"}, "module_options": {"that": ["facts['roleassignments'] | length > 0", "facts['roleassignments'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete role assignment", "module": "azure_rm_roleassignment", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "delete role assignment"}, "module_options": {"name": "{{ facts['roleassignments'][0]['id'].split('/')[-1] }}", "scope": "/subscriptions/{{ subscription_id }}", "state": "absent"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert deleting role definition check mode", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert deleting role definition check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the role definition", "module": "azure_rm_roledefinition", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_roledefinition", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "storage{{ rpfx }}", "account_type": "Standard_LRS", "location": "eastus2"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Sample for Azure REST API - StorageAccounts_ListKeys", "module": "azure_rm_resource", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Sample for Azure REST API - StorageAccounts_ListKeys", "register": "storage_output"}, "module_options": {"api_version": "2018-07-01", "method": "POST", "resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageaccounts", "resource_name": "storage{{ rpfx }}", "subresource": [{"type": "listkeys"}]}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "storage_output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- idempotent", "module": "azure_rm_hdinsightcluster", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- resize and add tags", "module": "azure_rm_hdinsightcluster", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- resize and add tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 2, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of Cluster", "module": "azure_rm_hdinsightcluster_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Get facts of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}"}, "executable": "azure_rm_hdinsightcluster_facts", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.clusters[0]['id'] != None", "output.clusters[0]['resource_group'] != None", "output.clusters[0]['name'] != None", "output.clusters[0]['location'] != None", "output.clusters[0]['cluster_version'] != None", "output.clusters[0]['os_type'] != None", "output.clusters[0]['tier'] != None", "output.clusters[0]['cluster_definition'] != None", "output.clusters[0]['compute_profile_roles'] != None", "output.clusters[0]['connectivity_endpoints'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_hdinsightcluster", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name1": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name2": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "nic_name1": "nic1{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefix": "10.10.0.0/24", "virtual_network": "tn{{ rpfx }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "lb"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "pip{{ rpfx }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}, {"name": "backendaddrpool1"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network id (check mode)", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network id (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network resource_group", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network resource_group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": {"name": "tn{{ rpfx }}", "resource_group": "{{ resource_group_secondary }}"}, "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 1", "not facts.networkinterfaces[0].security_group", "not facts.networkinterfaces[0].ip_configurations[0].public_ip_address", "not facts.networkinterfaces[0].enable_ip_forwarding", "not facts.networkinterfaces[0].enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with ip configurations (idempotent)", "module": "azure_rm_networkinterface", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with ip configurations (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ facts.networkinterfaces[0].resource_group }}", "name": "{{ facts.networkinterfaces[0].name }}", "virtual_network": "{{ facts.networkinterfaces[0].virtual_network }}", "create_with_security_group": false, "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}], "subnet": "{{ facts.networkinterfaces[0].subnet }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update security group (check mode)", "module": "azure_rm_networkinterface", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update security group (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "security_group": "tn{{ rpfx }}sg"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update public ip address (check mode)", "module": "azure_rm_networkinterface", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update public ip address (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip_address_name": "tn{{ rpfx }}", "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update accelerated networking (check mode)", "module": "azure_rm_networkinterface", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update accelerated networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update IP forwarding networking (check mode)", "module": "azure_rm_networkinterface", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update IP forwarding networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "enable_ip_forwarding": true, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update dns server (check mode)", "module": "azure_rm_networkinterface", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update dns server (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false, "dns_servers": ["8.9.10.11", "7.8.9.10"]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update NIC", "module": "azure_rm_networkinterface", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "security_group": "tn{{ rpfx }}sg", "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11', '7.8.9.10']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Complicated NIC (idempontent)", "module": "azure_rm_networkinterface", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Complicated NIC (idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "security_group": "tn{{ rpfx }}sg", "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 2", "facts.networkinterfaces[0].security_group.endswith(\"tn{{ rpfx }}sg\")", "facts.networkinterfaces[0].enable_accelerated_networking", "facts.networkinterfaces[0].enable_ip_forwarding"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove one dns server and ip configuration", "module": "azure_rm_networkinterface", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Remove one dns server and ip configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "security_group": "tn{{ rpfx }}sg", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11"], "ip_configurations": [{"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "primary": true, "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.ip_configurations | length == 1", "output.state.ip_configurations[0].public_ip_address.name == \"tn{{ rpfx }}\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create application security group(check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group", "module": "azure_rm_applicationsecuritygroup", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert application security group creation", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert application security group creation"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Application security group", "module": "azure_rm_applicationsecuritygroup_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get Application security group", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}"}, "executable": "azure_rm_applicationsecuritygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['applicationsecuritygroups'] | length == 1", "facts['applicationsecuritygroups'][0]['name'] != None", "facts['applicationsecuritygroups'][0]['location'] != None", "facts['applicationsecuritygroups'][0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create application security group (idempotent)", "module": "azure_rm_applicationsecuritygroup", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update application security group", "module": "azure_rm_applicationsecuritygroup", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing", "foo": "bar"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert update", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert update"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group in secondary resource group", "module": "azure_rm_applicationsecuritygroup", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group in secondary resource group", "register": "asg"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Nic with application security groups", "module": "azure_rm_networkinterface", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}", "{{ asg.id }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert creation succeeded", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert creation succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nic with application security groups (idempotent)", "module": "azure_rm_networkinterface", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ asg.id }}", "{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert idempotent", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Nic with application security groups", "module": "azure_rm_networkinterface", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert update succeeded", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert update succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces[0].ip_configurations[0].application_security_groups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC (check mode)", "module": "azure_rm_networkinterface", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "delete public ip", "module": "azure_rm_publicipaddress", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the application security group (check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert delete check mode", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert delete check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the application security group", "module": "azure_rm_applicationsecuritygroup", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the deletion", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert the deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second application security group", "module": "azure_rm_applicationsecuritygroup", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete second application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_networkinterface", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml", "options": {}, "module_options": "virtualmachine.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "azure_rm_virtualmachine", "used_in": [], "annotations": {}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml": {"py/object": "struct4.TaskFile", "name": "virtualmachine.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random names", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create random names"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}", "vm_name1": "vm1{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name2": "vm2{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name3": "vm3{{ resource_group | hash('md5') | truncate(5, True, '') }}", "abs_name1": "avbs1{{ resource_group | hash('md5') | truncate(3, True, '') }}", "abs_name2": "avbs2{{ resource_group | hash('md5') | truncate(3, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name1 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name1 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "purge_rules": true, "rules": [{"name": "ALLOW_SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 100, "direction": "Inbound"}, {"name": "ALLOW_HTTP", "protocol": "Tcp", "destination_port_range": 80, "access": "Allow", "priority": 110, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NIC for single nic VM", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NIC for single nic VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "virtual_network": "{{ vm_name1 }}", "subnet": "{{ vm_name1 }}", "public_ip_name": "{{ vm_name1 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine with a single NIC", "module": "azure_rm_virtualmachine", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "custom_data": "#!/bin/sh\necho \"custom_data was executed\" > /tmp/custom_data.txt\n"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart the virtual machine", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Restart the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "restarted": true, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deallocate the virtual machine", "module": "azure_rm_virtualmachine", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Deallocate the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "allocated": false, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate == 'deallocated'", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the virtual machine", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Start the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent with a single NIC", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resize VM", "module": "azure_rm_virtualmachine", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Resize VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A1", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["output.changed", "output.ansible_facts.azure_vm.properties.hardwareProfile.vmSize == \"Standard_A1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "NIC should be gone", "module": "azure_rm_networkinterface_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "NIC should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_networkinterfaces | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "PIP should be gone", "module": "azure_rm_publicipaddress_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "PIP should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual machine without public ip address", "module": "azure_rm_virtualmachine", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine without public ip address", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "vm_size": "Standard_A0", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "public_ip_allocation_method": "Disabled", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["not 'publicIPAddress' in output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM with no public ip", "module": "azure_rm_virtualmachine", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM with no public ip", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"niclist": [{"name": "testnic011", "resource_group": "{{ resource_group_secondary }}"}, {"name": "testnic012", "resource_group": "{{ resource_group_secondary  }}"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name2 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name2 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NICs for dual nic VM", "module": "azure_rm_networkinterface", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NICs for dual nic VM", "loop": "{{ niclist }}"}, "module_options": {"resource_group": "{{ item.resource_group }}", "name": "{{ item.name }}", "virtual_network": "{{ vn.state.id }}", "subnet": "{{ vm_name2 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine with two NICs", "module": "azure_rm_virtualmachine", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with two NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "os_disk_name": "testosdiskxx", "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "tags": {"abc": "def"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id", "azure_vm.properties.storageProfile.osDisk.name == 'testosdiskxx'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve vms facts (filtering by name)", "module": "azure_rm_virtualmachine_facts", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve vms facts (filtering by name)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length == 1", "results.vms[0].name == \"{{ vm_name2 }}\"", "results.vms[0].location == 'eastus'", "results.vms[0].admin_username == 'adminuser'", "results.vms[0].resource_group == \"{{ resource_group }}\"", "results.vms[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve facts by tags", "module": "azure_rm_virtualmachine_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve facts by tags", "register": "results"}, "module_options": {"tags": ["abc:def"]}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent with a dual NICs", "module": "azure_rm_virtualmachine", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a dual NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts and check if machine is generalized", "module": "azure_rm_virtualmachine_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Gather facts and check if machine is generalized", "register": "generalized_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "generalized_output.vms[0].power_state == 'generalized'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete dual NIC VM", "module": "azure_rm_virtualmachine", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete dual NIC VM", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachine", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachine", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": ["testing"]}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachine", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": "invalid-image"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachine", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create minimal VM with defaults", "module": "azure_rm_virtualmachine", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create minimal VM with defaults", "register": "vm_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "admin_username": "testuser", "admin_password": "Pass123$$$abx!", "vm_size": "Standard_B1ms", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "remove_on_absent": "all_autocreated", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query NIC", "module": "azure_rm_networkinterface_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NIC", "register": "output_nic"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query NSG", "module": "azure_rm_securitygroup_facts", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NSG", "register": "output_nsg"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query PIP", "module": "azure_rm_publicipaddress_facts", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query PIP", "register": "output_pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that autocreated resources were deleted", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that autocreated resources were deleted"}, "module_options": {"that": ["output_nic.ansible_facts.azure_networkinterfaces | length == 0", "output_nsg.ansible_facts.azure_securitygroups | length == 0", "output_pip.ansible_facts.azure_publicipaddresses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualmachine", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "parameter": {}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clearing (if) previous disks were created", "module": "azure_rm_manageddisk", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Clearing (if) previous disks were created", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Test invalid account name (should give error)", "module": "azure_rm_manageddisk", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Test invalid account name (should give error)", "register": "output", "ignore_errors": true, "check_mode": false}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded (Check Mode)", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded (Check Mode)"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create new managed disk succesfully", "module": "azure_rm_manageddisk", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create new managed disk succesfully", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.disk_size_gb == 1", "output.state.id is defined", "output.state.os_type == None", "output.state.storage_account_type == \"Standard_LRS\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy disk to a new managed disk", "module": "azure_rm_manageddisk", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Copy disk to a new managed disk", "register": "disk2"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}2", "create_option": "copy", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk2.changed", "disk2.state.id is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create disk to a new managed disk with zone and os type", "module": "azure_rm_manageddisk", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk to a new managed disk with zone and os type", "register": "disk3"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}3", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1, "zone": "1", "os_type": "windows"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk3.changed", "disk3.state.id is defined", "disk3.state.zone == \"1\"", "disk3.state.os_type == \"windows\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change storage account type to an invalid type", "module": "azure_rm_manageddisk", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Change storage account type to an invalid type", "register": "output", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "PremiumL", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert storage account type change failed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert storage account type change failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update disk options (os_type, account_type, size, tags)", "module": "azure_rm_manageddisk", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Update disk options (os_type, account_type, size, tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "disk_size_gb": 2, "os_type": "linux", "storage_account_type": "StandardSSD_LRS", "tags": {"galaxy": "no", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.storage_account_type == \"StandardSSD_LRS\"", "output.state.disk_size_gb == 2", "output.state.tags | length == 2", "output.state.tags.galaxy == 'no'", "output.state.os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts to one specific disk", "module": "azure_rm_manageddisk_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Gather facts to one specific disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1"}, "executable": "azure_rm_manageddisk_facts", "executable_type": "Module", "fqcn": "azure_rm_manageddisk_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_managed_disk | length == 1", "azure_managed_disk[0].storage_account_type == \"StandardSSD_LRS\"", "azure_managed_disk[0].disk_size_gb == 2", "azure_managed_disk[0].os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"when": "{{item.key not in ['id', 'changed'] and item.value != None}}", "with_dict": "{{ azure_managed_disk[0] }}"}, "module_options": {"parameter": "{{parameter |combine({item.key: item.value})}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create disk with facts return value", "module": "azure_rm_manageddisk", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk with facts return value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "{{ parameter.location }}", "name": "{{ parameter.name }}", "storage_account_type": "{{ parameter.storage_account_type }}", "disk_size_gb": "{{ parameter.disk_size_gb }}", "create_option": "{{ parameter.create_option }}", "tags": "{{ parameter.tags }}"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete all managed disk", "module": "azure_rm_manageddisk", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete all managed disk", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual machine", "module": "azure_rm_virtualmachine", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete virtual machine"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tr{{ rpfx }}", "state": "absent", "vm_size": "Standard_DS1_v2"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "tr{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_manageddisk", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"name": "table{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "route_name": "route{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table (check mode)", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.id", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table", "module": "azure_rm_routetable", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table (idemponent)", "module": "azure_rm_routetable", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route (check mode)", "module": "azure_rm_route", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "not output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route", "module": "azure_rm_route", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route (idemponent)", "module": "azure_rm_route", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update route", "module": "azure_rm_route", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "update route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/24", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 1", "output.route_tables[0].routes[0].address_prefix == '10.1.0.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route (check mode)", "module": "azure_rm_route", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (check mode)", "check_mode": true}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "route_table_name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete route", "module": "azure_rm_route", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route (idemponent)", "module": "azure_rm_route", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route table (check mode)", "module": "azure_rm_routetable", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (check mode)", "check_mode": true}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete route table", "module": "azure_rm_routetable", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route table (idemponent)", "module": "azure_rm_routetable", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_routetable", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"name": "workspace{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace", "module": "azure_rm_loganalyticsworkspace", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.retention_in_days == 40", "output.changed", "output.intelligence_packs"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1", "facts.workspaces[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"pack": "{{ pack | default({}) | combine({output.intelligence_packs[0].name: not output.intelligence_packs[0].enabled}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update intelligence pack", "module": "azure_rm_loganalyticsworkspace", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Update intelligence pack", "register": "intelligence"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "intelligence_packs": "{{ pack }}"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["intelligence.intelligence_packs[0].enabled != output.intelligence_packs[0].enabled"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace", "module": "azure_rm_loganalyticsworkspace", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_workspace", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"cdnprofilename": "cdnprofile{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname": "endpoint{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "azure_rm_cdnprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created"}, "module_options": {"that": "{{ fact.cdnprofiles | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile", "module": "azure_rm_cdnprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well created"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile (idempotent)", "module": "azure_rm_cdnprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the CDN profile", "module": "azure_rm_cdnprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar", "baz": "qux"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN is still there", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN is still there"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'", "fact.cdnprofiles[0].tags.baz == 'qux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is well created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is well created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of a Azure CDN endpoint", "module": "azure_rm_cdnendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get facts of a Azure CDN endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts output", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert facts output"}, "module_options": {"that": ["facts['cdnendpoints'] | length == 1", "facts['cdnendpoints'][0]['id']", "facts['cdnendpoints'][0]['name']", "facts['cdnendpoints'][0]['profile_name']", "facts['cdnendpoints'][0]['origin']", "facts['cdnendpoints'][0]['location']", "facts['cdnendpoints'][0]['provisioning_state']", "facts['cdnendpoints'][0]['resource_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert still stopped and not changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert still stopped and not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Start a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": true}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert started", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert started"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origin_path": "/test/", "tags": {"testing": "testing", "delete": "on-exit", "foo": "baz"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is updated", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the CDN profile", "module": "azure_rm_cdnprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get CDN profile fact", "module": "azure_rm_cdnprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get CDN profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.cdnprofiles | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_cdnprofile", "used_in": [], "annotations": {"use-non-builtin-module": true}}, "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname1": "vnet1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnetname2": "vnet2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "peering_name": "peering1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 100 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create first virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create first virtual network", "register": "vnet1"}, "module_options": {"name": "{{ vnetname1 }}", "address_prefixes_cidr": ["10.1.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create second virtual network", "register": "vnet2"}, "module_options": {"name": "{{ vnetname2 }}", "address_prefixes_cidr": ["10.2.0.0/24"], "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": ["vnet1.changed", "vnet2.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network peering (check mode)", "module": "azure_rm_virtualnetworkpeering", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network peering (idempotent)", "module": "azure_rm_virtualnetworkpeering", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": true, "allow_forwarded_traffic": false}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_virtualnetworkpeering_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}"}, "executable": "azure_rm_virtualnetworkpeering_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert Facts", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Assert Facts"}, "module_options": {"that": ["facts['vnetpeerings'] | length == 1", "facts['vnetpeerings'][0]['id']", "facts['vnetpeerings'][0]['peering_state']", "facts['vnetpeerings'][0]['remote_virtual_network']", "facts['vnetpeerings'][0]['provisioning_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete first virtual network", "module": "azure_rm_virtualnetwork", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete first virtual network"}, "module_options": {"name": "{{ vnetname1 }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname2 }}", "resource_group": "{{ resource_group_secondary }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualnetworkpeering", "used_in": [], "annotations": {"use-non-builtin-module": true}}}, "role_dict": {"azure.azure_modules": {"py/object": "struct4.Role", "name": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules", "fqcn": "azure.azure_modules", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tasks/main.yml", "options": {"when": "ansible_version.full < \"2.5.0\""}, "module_options": {"msg": ["Your Ansible version is lower than 2.5.0", "You may need to perform additional steps to install this roles:", "  sudo pip install -r {{ role_path }}/files/requirements-azure.txt", "or", "  pip install --user -r {{ role_path }}/files/requirements-azure.txt", "depending on your ansible setup."]}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "azure.azure_modules", "used_in": [], "annotations": {}}], "modules": [{"py/object": "struct4.Module", "name": "azure_rm_resourcegroup_facts", "fqcn": "azure_rm_resourcegroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resourcegroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_applicationsecuritygroup_facts", "fqcn": "azure_rm_applicationsecuritygroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_applicationsecuritygroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roleassignment_facts", "fqcn": "azure_rm_roleassignment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roleassignment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnsrecordset_facts", "fqcn": "azure_rm_dnsrecordset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnsrecordset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabpolicy", "fqcn": "azure_rm_devtestlabpolicy", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabpolicy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loadbalancer_facts", "fqcn": "azure_rm_loadbalancer_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loadbalancer_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbdatabase_facts", "fqcn": "azure_rm_mariadbdatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbdatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerprofile_facts", "fqcn": "azure_rm_trafficmanagerprofile_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerprofile_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loganalyticsworkspace_facts", "fqcn": "azure_rm_loganalyticsworkspace_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loganalyticsworkspace_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetinstance", "fqcn": "azure_rm_virtualmachinescalesetinstance", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetinstance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabarmtemplate_facts", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabarmtemplate_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_storageaccount", "fqcn": "azure_rm_storageaccount", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageaccount.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabcustomimage_facts", "fqcn": "azure_rm_devtestlabcustomimage_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabcustomimage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerregistry", "fqcn": "azure_rm_containerregistry", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerregistry.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_scaleset", "fqcn": "_azure_rm_virtualmachine_scaleset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_scaleset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnszone", "fqcn": "azure_rm_dnszone", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnszone.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_webapp_facts", "fqcn": "azure_rm_webapp_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webapp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlab_facts", "fqcn": "azure_rm_devtestlab_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlab_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabschedule", "fqcn": "azure_rm_devtestlabschedule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabschedule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbconfiguration_facts", "fqcn": "azure_rm_mariadbconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineextension", "fqcn": "azure_rm_virtualmachineextension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineextension.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_subnet_facts", "fqcn": "azure_rm_subnet_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_subnet_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlserver", "fqcn": "azure_rm_sqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbfirewallrule_facts", "fqcn": "azure_rm_mariadbfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_deployment_facts", "fqcn": "azure_rm_deployment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_deployment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerprofile", "fqcn": "azure_rm_trafficmanagerprofile", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerprofile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabenvironment", "fqcn": "azure_rm_devtestlabenvironment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabenvironment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifactsource", "fqcn": "azure_rm_devtestlabartifactsource", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifactsource.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_acs", "fqcn": "azure_rm_acs", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_acs.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_networkinterface_facts", "fqcn": "azure_rm_networkinterface_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_networkinterface_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerinstance_facts", "fqcn": "azure_rm_containerinstance_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerinstance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnsrecordset", "fqcn": "azure_rm_dnsrecordset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnsrecordset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabpolicy_facts", "fqcn": "azure_rm_devtestlabpolicy_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabpolicy_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqldatabase_facts", "fqcn": "azure_rm_postgresqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_hdinsightcluster", "fqcn": "azure_rm_hdinsightcluster", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_hdinsightcluster.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerregistry_facts", "fqcn": "azure_rm_containerregistry_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerregistry_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetextension_facts", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetextension_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_storageblob", "fqcn": "azure_rm_storageblob", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageblob.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescaleset_facts", "fqcn": "azure_rm_virtualmachinescaleset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescaleset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlfirewallrule_facts", "fqcn": "azure_rm_sqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerendpoint_facts", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerendpoint_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure", "fqcn": "_azure", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_publicipaddress_facts", "fqcn": "azure_rm_publicipaddress_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_publicipaddress_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_appserviceplan_facts", "fqcn": "azure_rm_appserviceplan_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appserviceplan_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineimage_facts", "fqcn": "azure_rm_virtualmachineimage_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineimage_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_rediscache", "fqcn": "azure_rm_rediscache", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscache.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_route", "fqcn": "azure_rm_route", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_route.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_functionapp", "fqcn": "azure_rm_functionapp", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_functionapp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnprofile_facts", "fqcn": "azure_rm_cdnprofile_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnprofile_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlfirewallrule", "fqcn": "azure_rm_postgresqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetwork", "fqcn": "azure_rm_virtualnetwork", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebus", "fqcn": "azure_rm_servicebus", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebus.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbfirewallrule", "fqcn": "azure_rm_mariadbfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkpeering_facts", "fqcn": "azure_rm_virtualnetworkpeering_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkpeering_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlconfiguration", "fqcn": "azure_rm_mysqlconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_storageaccount_facts", "fqcn": "azure_rm_storageaccount_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_storageaccount_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_resourcegroup", "fqcn": "azure_rm_resourcegroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resourcegroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlfirewallrule", "fqcn": "azure_rm_mysqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_autoscale_facts", "fqcn": "azure_rm_autoscale_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_autoscale_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_availabilityset", "fqcn": "azure_rm_availabilityset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_availabilityset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_containerinstance", "fqcn": "azure_rm_containerinstance", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_containerinstance.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachineextension_facts", "fqcn": "azure_rm_virtualmachineextension_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachineextension_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualmachine", "fqcn": "azure_rm_devtestlabvirtualmachine", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualmachine.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqldatabase", "fqcn": "azure_rm_mysqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualnetwork", "fqcn": "azure_rm_devtestlabvirtualnetwork", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualnetwork.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_aks_facts", "fqcn": "azure_rm_aks_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aks_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebustopic", "fqcn": "azure_rm_servicebustopic", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebustopic.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlfirewallrule_facts", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnprofile", "fqcn": "azure_rm_cdnprofile", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnprofile.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkpeering", "fqcn": "azure_rm_virtualnetworkpeering", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkpeering.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebustopicsubscription", "fqcn": "azure_rm_servicebustopicsubscription", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebustopicsubscription.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlserver", "fqcn": "azure_rm_mysqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlserver_facts", "fqcn": "azure_rm_sqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachine", "fqcn": "azure_rm_virtualmachine", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachine.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_keyvaultsecret", "fqcn": "azure_rm_keyvaultsecret", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvaultsecret.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqldatabase", "fqcn": "azure_rm_postgresqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetworkgateway", "fqcn": "azure_rm_virtualnetworkgateway", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetworkgateway.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbconfiguration", "fqcn": "azure_rm_mariadbconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_extension", "fqcn": "_azure_rm_virtualmachine_extension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_extension.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_rediscache_facts", "fqcn": "azure_rm_rediscache_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscache_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_routetable", "fqcn": "azure_rm_routetable", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_routetable.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqlfirewallrule", "fqcn": "azure_rm_sqlfirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqlfirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebus_facts", "fqcn": "azure_rm_servicebus_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebus_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_dnszone_facts", "fqcn": "azure_rm_dnszone_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_dnszone_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_securitygroup_facts", "fqcn": "azure_rm_securitygroup_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_securitygroup_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualnetwork_facts", "fqcn": "azure_rm_virtualnetwork_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualnetwork_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_virtualmachine_scaleset_facts", "fqcn": "_azure_rm_virtualmachine_scaleset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_virtualmachine_scaleset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_manageddisk", "fqcn": "azure_rm_manageddisk", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_manageddisk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlconfiguration", "fqcn": "azure_rm_postgresqlconfiguration", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlconfiguration.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualmachine_facts", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualmachine_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roledefinition_facts", "fqcn": "azure_rm_roledefinition_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roledefinition_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnendpoint", "fqcn": "azure_rm_cdnendpoint", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnendpoint.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_functionapp_facts", "fqcn": "azure_rm_functionapp_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_functionapp_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabcustomimage", "fqcn": "azure_rm_devtestlabcustomimage", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabcustomimage.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlconfiguration_facts", "fqcn": "azure_rm_mysqlconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cosmosdbaccount", "fqcn": "azure_rm_cosmosdbaccount", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cosmosdbaccount.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlserver_facts", "fqcn": "azure_rm_mysqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_hdinsightcluster_facts", "fqcn": "azure_rm_hdinsightcluster_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_hdinsightcluster_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbserver_facts", "fqcn": "azure_rm_mariadbserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescaleset", "fqcn": "azure_rm_virtualmachinescaleset", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescaleset.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlconfiguration_facts", "fqcn": "azure_rm_postgresqlconfiguration_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlconfiguration_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbserver", "fqcn": "azure_rm_mariadbserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_resource_facts", "fqcn": "azure_rm_resource_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resource_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_aksversion_facts", "fqcn": "azure_rm_aksversion_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aksversion_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_trafficmanagerendpoint", "fqcn": "azure_rm_trafficmanagerendpoint", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_trafficmanagerendpoint.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifact_facts", "fqcn": "azure_rm_devtestlabartifact_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifact_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabartifactsource_facts", "fqcn": "azure_rm_devtestlabartifactsource_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabartifactsource_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_appgateway", "fqcn": "azure_rm_appgateway", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appgateway.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_deployment", "fqcn": "azure_rm_deployment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_deployment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_subnet", "fqcn": "azure_rm_subnet", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_subnet.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlserver_facts", "fqcn": "azure_rm_postgresqlserver_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlserver_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_appserviceplan", "fqcn": "azure_rm_appserviceplan", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_appserviceplan.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roleassignment", "fqcn": "azure_rm_roleassignment", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roleassignment.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_autoscale", "fqcn": "azure_rm_autoscale", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_autoscale.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_manageddisk_facts", "fqcn": "azure_rm_manageddisk_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_manageddisk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_resource", "fqcn": "azure_rm_resource", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_resource.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetinstance_facts", "fqcn": "azure_rm_virtualmachinescalesetinstance_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetinstance_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_networkinterface", "fqcn": "azure_rm_networkinterface", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_networkinterface.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlab", "fqcn": "azure_rm_devtestlab", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlab.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_postgresqlserver", "fqcn": "azure_rm_postgresqlserver", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_postgresqlserver.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loganalyticsworkspace", "fqcn": "azure_rm_loganalyticsworkspace", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loganalyticsworkspace.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_managed_disk", "fqcn": "_azure_rm_managed_disk", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_managed_disk.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabschedule_facts", "fqcn": "azure_rm_devtestlabschedule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabschedule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqldatabase_facts", "fqcn": "azure_rm_sqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_keyvaultkey", "fqcn": "azure_rm_keyvaultkey", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvaultkey.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_roledefinition", "fqcn": "azure_rm_roledefinition", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_roledefinition.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_image_facts", "fqcn": "azure_rm_image_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_image_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cosmosdbaccount_facts", "fqcn": "azure_rm_cosmosdbaccount_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cosmosdbaccount_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachinescalesetextension", "fqcn": "azure_rm_virtualmachinescalesetextension", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachinescalesetextension.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_routetable_facts", "fqcn": "azure_rm_routetable_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_routetable_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebussaspolicy", "fqcn": "azure_rm_servicebussaspolicy", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebussaspolicy.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_keyvault", "fqcn": "azure_rm_keyvault", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_keyvault.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_servicebusqueue", "fqcn": "azure_rm_servicebusqueue", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_servicebusqueue.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mariadbdatabase", "fqcn": "azure_rm_mariadbdatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mariadbdatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_publicipaddress", "fqcn": "azure_rm_publicipaddress", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_publicipaddress.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_availabilityset_facts", "fqcn": "azure_rm_availabilityset_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_availabilityset_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabenvironment_facts", "fqcn": "azure_rm_devtestlabenvironment_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabenvironment_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqlfirewallrule_facts", "fqcn": "azure_rm_mysqlfirewallrule_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqlfirewallrule_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_mysqldatabase_facts", "fqcn": "azure_rm_mysqldatabase_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_mysqldatabase_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_virtualmachine_facts", "fqcn": "azure_rm_virtualmachine_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_virtualmachine_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_aks", "fqcn": "azure_rm_aks", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_aks.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_rediscachefirewallrule", "fqcn": "azure_rm_rediscachefirewallrule", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_rediscachefirewallrule.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_applicationsecuritygroup", "fqcn": "azure_rm_applicationsecuritygroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_applicationsecuritygroup.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_webappslot", "fqcn": "azure_rm_webappslot", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webappslot.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_loadbalancer", "fqcn": "azure_rm_loadbalancer", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_loadbalancer.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_devtestlabvirtualnetwork_facts", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_devtestlabvirtualnetwork_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_sqldatabase", "fqcn": "azure_rm_sqldatabase", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_sqldatabase.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_cdnendpoint_facts", "fqcn": "azure_rm_cdnendpoint_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_cdnendpoint_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_image", "fqcn": "azure_rm_image", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_image.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_webapp", "fqcn": "azure_rm_webapp", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_webapp.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "_azure_rm_managed_disk_facts", "fqcn": "_azure_rm_managed_disk_facts", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/_azure_rm_managed_disk_facts.py", "builtin": false, "used_in": [], "annotations": {}}, {"py/object": "struct4.Module", "name": "azure_rm_securitygroup", "fqcn": "azure_rm_securitygroup", "collection": "", "role": "azure.azure_modules", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/library/azure_rm_securitygroup.py", "builtin": false, "used_in": [], "annotations": {}}], "source": "", "annotations": {}, "used_in": []}, "azure_rm_sqlserver": {"py/object": "struct4.Role", "name": "azure_rm_sqlserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver", "fqcn": "azure_rm_sqlserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"random_postfix": "{{ 1000 | random }}{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Server", "module": "azure_rm_sqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of SQL Server", "module": "azure_rm_sqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "location": "eastus", "admin_username": "mylogin", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server", "module": "azure_rm_sqlserver_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None", "output.servers.sqlsrv{{ random_postfix }}.tags.aaa == 'bbb'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server - unexisting", "module": "azure_rm_sqlserver_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - unexisting", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "unexisting"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers == {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Server - list", "module": "azure_rm_sqlserver_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Server - list", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_sqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers.sqlsrv{{ random_postfix }}.id != None", "output.servers.sqlsrv{{ random_postfix }}.name == \"sqlsrv{{ random_postfix }}\"", "output.servers.sqlsrv{{ random_postfix }}.type != None", "output.servers.sqlsrv{{ random_postfix }}.location != None", "output.servers.sqlsrv{{ random_postfix }}.kind != None", "output.servers.sqlsrv{{ random_postfix }}.version != None", "output.servers.sqlsrv{{ random_postfix }}.state != None", "output.servers.sqlsrv{{ random_postfix }}.fully_qualified_domain_name != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "location": "eastus", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.status == 'Online'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second SQL Database", "module": "azure_rm_sqldatabase", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create second SQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "location": "eastus"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0].id != None", "output.databases[0].name != None", "output.databases[0].location != None", "output.databases[0].sku.name != None", "output.databases[0].sku.tier != None", "output.databases[0].sku.capacity != None", "output.databases[0].kind != None", "output.databases[0].status != None", "output.databases[1].id != None", "output.databases[1].name != None", "output.databases[1].location != None", "output.databases[1].sku.name != None", "output.databases[1].sku.tier != None", "output.databases[1].sku.capacity != None", "output.databases[1].kind != None", "output.databases[1].status != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of secondary database", "module": "azure_rm_sqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of secondary database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Database -- check mode", "module": "azure_rm_sqldatabase", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Database", "module": "azure_rm_sqldatabase", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqldatabase", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "database{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Database", "module": "azure_rm_sqldatabase_facts", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_sqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned (one database is there by default)", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned (one database is there by default)"}, "module_options": {"that": ["output.changed == False", "output.databases | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_sqlfirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_sqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].id != None", "output.rules[0].resource_group != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].resource_group != None", "output.rules[1].server_name != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_sqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}second", "state": "absent"}, "executable": "azure_rm_sqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts SQL Firewall Rule", "module": "azure_rm_sqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Gather facts SQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "sqlsrv{{ random_postfix }}", "name": "firewallrule{{ random_postfix }}"}, "executable": "azure_rm_sqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_sqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty dictionary was returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert that empty dictionary was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Server -- check mode", "module": "azure_rm_sqlserver", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of SQL Server", "module": "azure_rm_sqlserver", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of SQL Server", "module": "azure_rm_sqlserver", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of SQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "sqlsrv{{ random_postfix }}", "state": "absent"}, "executable": "azure_rm_sqlserver", "executable_type": "Module", "fqcn": "azure_rm_sqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_sqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_sqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_trafficmanagerprofile": {"py/object": "struct4.Role", "name": "azure_rm_trafficmanagerprofile", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile", "fqcn": "azure_rm_trafficmanagerprofile", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"tmname": "tm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname1": "ep1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname2": "ep2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "azure_rm_trafficmanagerprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no Traffic Manager profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check there is no Traffic Manager profile created"}, "module_options": {"that": "{{ fact.tms | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile", "register": "tm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well created"}, "module_options": {"that": ["tm.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Traffic Manager profile (idempotent)", "module": "azure_rm_trafficmanagerprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create a Traffic Manager profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "enabled", "routing_method": "performance", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Update the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "location": "global", "profile_status": "disabled", "routing_method": "priority", "dns_config": {"relative_name": "{{ tmname }}", "ttl": 60}, "monitor_config": {"protocol": "HTTPS", "port": 80, "path": "/"}}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint(check mode)", "module": "azure_rm_trafficmanagerendpoint", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert check mode changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check no endpoint created in check mode", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check no endpoint created in check mode"}, "module_options": {"that": ["facts.endpoints | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create Traffic Manager endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname1 }}", "type": "external_endpoints", "location": "westus", "priority": 2, "weight": 1, "target": "1.2.3.4"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint create changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint create changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check endpoint created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check endpoint created"}, "module_options": {"that": ["facts.endpoints | length == 1", "facts.endpoints[0].name == \"{{ endpointname1 }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second Traffic Manager endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create second Traffic Manager endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check 2 endpoint in profile", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 2 endpoint in profile"}, "module_options": {"that": ["facts.endpoints | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create endpoint (idempotent)", "module": "azure_rm_trafficmanagerendpoint", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Create endpoint (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "location": "westus", "priority": 1, "weight": 3, "target": "4.3.2.1"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint creation idempotent", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint creation idempotent"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second endpoint", "module": "azure_rm_trafficmanagerendpoint", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete second endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}", "name": "{{ endpointname2 }}", "type": "external_endpoints", "state": "absent"}, "executable": "azure_rm_trafficmanagerendpoint", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert endpoint deletion changed", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert endpoint deletion changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get endpoint", "module": "azure_rm_trafficmanagerendpoint_facts", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "profile_name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check 1 endpoint left in profile", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Check 1 endpoint left in profile"}, "module_options": {"that": ["facts.endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile(check mode)", "module": "azure_rm_trafficmanagerprofile", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather Traffic Manager profile facts", "module": "azure_rm_trafficmanagerprofile_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Gather Traffic Manager profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the traffic manager profile is still there", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the traffic manager profile is still there"}, "module_options": {"that": ["fact.tms | length == 1", "fact.tms[0].id == tm.id", "fact.tms[0].endpoints | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the Traffic Manager profile", "module": "azure_rm_trafficmanagerprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Delete the Traffic Manager profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}", "state": "absent"}, "executable": "azure_rm_trafficmanagerprofile", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Traffic Manager profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert the Traffic Manager profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Traffic Manager profile fact", "module": "azure_rm_trafficmanagerprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Get Traffic Manager profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ tmname }}"}, "executable": "azure_rm_trafficmanagerprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_trafficmanagerprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_trafficmanagerprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.tms | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_trafficmanagerprofile", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_availabilityset": {"py/object": "struct4.Role", "name": "azure_rm_availabilityset", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset", "fqcn": "azure_rm_availabilityset", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an availability set with default options", "module": "azure_rm_availabilityset", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with default options", "register": "results"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "tags": {"tag1": "testtag"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an availability set with advanced options", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create an availability set with advanced options", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options - no changes, fail for immutable options", "module": "azure_rm_availabilityset", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options - no changes, fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "module": "azure_rm_availabilityset", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set immutable options and set tags - change tags and fail for immutable options", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 2, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test1": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.msg == 'You tried to change platform_update_domain_count but is was unsuccessful. An Availability Set is immutable, except tags'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Modify availabilty set options to update tags", "module": "azure_rm_availabilityset", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Modify availabilty set options to update tags", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"test2": "modified"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.tags.test2 == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create availability set with incorrect fault domain parameter", "module": "azure_rm_availabilityset", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Create availability set with incorrect fault domain parameter", "register": "results", "ignore_errors": true}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 4, "sku": "Aligned"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": "'The specified fault domain count 4 must fall in the range 1 to' in results['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test check_mode", "module": "azure_rm_availabilityset", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Test check_mode", "check_mode": true, "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "platform_update_domain_count": 5, "platform_fault_domain_count": 2, "sku": "Aligned", "tags": {"checktest1": "modified1", "checktest2": "modified2"}}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "results.state.tags.checktest1 == 'modified1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts for created availability set", "module": "azure_rm_availabilityset_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Get facts for created availability set", "register": "results"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset_facts", "executable_type": "Module", "fqcn": "azure_rm_availabilityset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {}, "module_options": {"that": ["not results.changed", "not results.failed", "results.ansible_facts.azure_availabilitysets[0].properties.platformFaultDomainCount == 2", "results.ansible_facts.azure_availabilitysets[0].properties.platformUpdateDomainCount == 5", "results.ansible_facts.azure_availabilitysets[0].sku == 'Aligned'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset1", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset2", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete an availability set", "module": "azure_rm_availabilityset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_availabilityset/tasks/main.yml", "options": {"name": "Delete an availability set"}, "module_options": {"name": "myavailabilityset3", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_availabilityset", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_virtualmachinescaleset": {"py/object": "struct4.Role", "name": "azure_rm_virtualmachinescaleset", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset", "fqcn": "azure_rm_virtualmachinescaleset", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "public_ip_address_name": "testPublicIP"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address 1", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create public IP address 1"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "testPublicIP1"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create load balancer 1", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create load balancer 1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB1", "public_ip_address_name": "testPublicIP1"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create network security group within same resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group within same resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create network security group in different resource group of VMSS.", "module": "azure_rm_securitygroup", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create network security group in different resource group of VMSS."}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network inteface cards for VM A and B", "module": "azure_rm_networkinterface", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create virtual network inteface cards for VM A and B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}nic", "virtual_network": "testVnet", "subnet": "testSubnet"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "admin_username": "testuser", "admin_password": "Password1234!", "vm_size": "Standard_B1ms", "network_interfaces": "vmforimage{{ rpfx }}nic", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create image A", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image A"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimagea", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create image B", "module": "azure_rm_image", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create image B"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimageb", "source": "vmforimage{{ rpfx }}"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "vmforimage{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS (check mode)", "module": "azure_rm_virtualmachinescaleset", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "load_balancer": "testLB", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get VMSS to assert no VMSS is created in check mode", "module": "azure_rm_virtualmachinescaleset_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get VMSS to assert no VMSS is created in check mode", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert no VMSS created in check mode", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert no VMSS created in check mode"}, "module_options": {"that": ["output_scaleset.ansible_facts.azure_vmss | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "load_balancer": "testLB", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "module": "azure_rm_virtualmachinescaleset", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS -- test upgrade_policy idempotence and load balancer", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_B1s", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 1, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Automatic", "load_balancer": "testLB1", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "custom_data": "#cloud-config", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS was created", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS was created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve scaleset facts", "module": "azure_rm_virtualmachinescaleset_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset facts", "register": "output_scaleset"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "format": "curated"}, "executable": "azure_rm_virtualmachinescaleset_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {}, "module_options": {"that": ["output_scaleset.vmss[0].load_balancer == \"testLB1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve scaleset VMs facts", "module": "azure_rm_virtualmachinescalesetinstance_facts", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Retrieve scaleset VMs facts", "register": "instances"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts returned correctly", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts returned correctly"}, "module_options": {"that": ["instances.instances | length == 1", "instances.instances[0].id != None", "instances.instances[0].name != None", "instances.instances[0].instance_id != None", "instances.instances[0].provisioning_state != None", "instances.instances[0].vm_id != None", "instances.instances[0].latest_model != None", "instances.instances[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get scaleset body", "module": "set_fact", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Get scaleset body"}, "module_options": {"body": "{{ output_scaleset.vmss[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update VMSS using output as input", "module": "azure_rm_virtualmachinescaleset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Try to update VMSS using output as input", "register": "results"}, "module_options": {"resource_group": "{{ body.resource_group }}", "name": "{{ body.name }}", "vm_size": "{{ body.vm_size }}", "admin_username": "{{ body.admin_username }}", "ssh_password_enabled": "{{ body.ssh_password_enabled }}", "admin_password": "Password1234!", "capacity": "{{ body.capacity }}", "virtual_network_name": "{{ body.virtual_network_name }}", "subnet_name": "{{ body.subnet_name }}", "upgrade_policy": "{{ body.upgrade_policy }}", "load_balancer": "{{ body.load_balancer }}", "tier": "{{ body.tier }}", "managed_disk_type": "{{ body.managed_disk_type }}", "os_disk_caching": "{{ body.os_disk_caching }}", "image": "{{ body.image }}", "data_disks": "{{ body.data_disks }}", "overprovision": "{{ body.overprovision }}"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something was changed", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something was changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Again VMSS Extension - again", "module": "azure_rm_virtualmachinescalesetextension", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Install Again VMSS Extension - again", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "publisher": "Microsoft.Azure.Extensions", "type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "sudo apt-get -y install apache2"}}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachinescalesetextension_facts", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}"}, "executable": "azure_rm_virtualmachinescalesetextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['vmss_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VMSS Extension", "module": "azure_rm_virtualmachinescalesetextension", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "name": "testExtension", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was reported", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that change was reported"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upgrade instance to the latest image", "module": "azure_rm_virtualmachinescalesetinstance", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Upgrade instance to the latest image", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "latest_model": true}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop virtual machine", "module": "azure_rm_virtualmachinescalesetinstance", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Stop virtual machine", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "power_state": "stopped"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance", "module": "azure_rm_virtualmachinescalesetinstance", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete instance", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "vmss_name": "testVMSS{{ rpfx }}", "instance_id": "{{ instances.instances[0].instance_id }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescalesetinstance", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescalesetinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "module": "azure_rm_virtualmachinescaleset", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking(check mode).", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS can be created", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS can be created"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VMSS ran", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that VMSS ran"}, "module_options": {"that": ["results.changed", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.enableAcceleratedNetworking == true", "results.ansible_facts.azure_vmss.properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations.0.properties.networkSecurityGroup != {}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimagea", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create VMSS with security group in same resource group, with accelerated networking.", "module": "azure_rm_virtualmachinescaleset", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Create VMSS with security group in same resource group, with accelerated networking.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_D3_v2", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": "testNetworkSecurityGroup", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update VMSS with security group in different resource group.", "module": "azure_rm_virtualmachinescaleset", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "update VMSS with security group in different resource group.", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "vm_size": "Standard_B1s", "capacity": 0, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"name": "testimageb", "resource_group": "{{ resource_group }}"}, "upgrade_policy": "Manual", "security_group": {"name": "testNetworkSecurityGroup2", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}2", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Fail when instance type is not supported to enable accelerated networking", "module": "azure_rm_virtualmachinescaleset", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Fail when instance type is not supported to enable accelerated networking", "register": "results", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}4", "vm_size": "Standard_B1s", "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "upgrade_policy": "Manual", "enable_accelerated_networking": true}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert failure to show that accelerated networking is enabled only with supported instance types.", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Assert failure to show that accelerated networking is enabled only with supported instance types."}, "module_options": {"that": ["\"VMSizeIsNotPermittedToEnableAcceleratedNetworkingForVmss\" in results.msg"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete network security group", "module": "azure_rm_securitygroup", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete network security group"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "testNetworkSecurityGroup2", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete load balancer", "module": "azure_rm_loadbalancer", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testLB", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public IP address", "module": "azure_rm_publicipaddress", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachinescaleset", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachinescaleset", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": ["testing"]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachinescaleset", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": "invalid-image"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachinescaleset", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachinescaleset/tasks/main.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "vm_size": "Standard_B1s", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualmachinescaleset", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_storageaccount": {"py/object": "struct4.Role", "name": "azure_rm_storageaccount", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount", "fqcn": "azure_rm_storageaccount", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test invalid account name", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Test invalid account name", "register": "invalid_name", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "invalid_name['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create new storage account", "module": "azure_rm_storageaccount", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.id is defined", "output.state.blob_cors | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create new storage account (idempotence)", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Create new storage account (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS", "append_tags": false, "blob_cors": [{"allowed_origins": ["http://www.example.com/"], "allowed_methods": ["GET", "POST"], "allowed_headers": ["x-ms-meta-data*", "x-ms-meta-target*", "x-ms-meta-abc"], "exposed_headers": ["x-ms-meta-*"], "max_age_in_seconds": 200}], "tags": {"test": "test", "galaxy": "galaxy"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_storageaccount_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["test", "galaxy"]}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": "azure_storageaccounts | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change account type", "module": "azure_rm_storageaccount", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Premium_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert account type change failed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert account type change failed"}, "module_options": {"that": "change_account['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change account type and add custom domain", "module": "azure_rm_storageaccount", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Change account type and add custom domain", "register": "change_account", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_GRS", "custom_domain": {"name": "ansible.com", "use_sub_domain": false}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert CNAME failure", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Assert CNAME failure"}, "module_options": {"that": "'custom domain name could not be verified' in  change_account['msg']"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update account tags", "module": "azure_rm_storageaccount", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Update account tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "append_tags": false, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.testing == 'testing'", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "show_connection_string": true, "show_blob_cors": true}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts| length == 1", "storageaccounts | length == 1", "not storageaccounts[0].custom_domain", "storageaccounts[0].account_type == \"Standard_GRS\"", "storageaccounts[0].primary_endpoints.blob.connectionstring", "storageaccounts[0].blob_cors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_storageaccount_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Gather facts"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_storageaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_storageaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_storageaccounts | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete acccount", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageaccount/tasks/main.yml", "options": {"name": "Delete acccount"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_storageaccount", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_functionapp": {"py/object": "struct4.Role", "name": "azure_rm_functionapp", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp", "fqcn": "azure_rm_functionapp", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"fixed_resource_prefix": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"funcapp_name_basic": "fa{{ fixed_resource_prefix }}basic", "funcapp_name_container": "fa{{ fixed_resource_prefix }}container", "funcapp_name_params": "fa{{ fixed_resource_prefix }}params", "storage_account_name": "sa{{ fixed_resource_prefix }}", "plan_name": "ap{{ fixed_resource_prefix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create storage account for function apps", "module": "azure_rm_storageaccount", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create storage account for function apps"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create basic function app", "module": "azure_rm_functionapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "storage_account": "{{ storage_account_name }}"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "list facts for function", "module": "azure_rm_functionapp_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "list facts for function", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}"}, "executable": "azure_rm_functionapp_facts", "executable_type": "Module", "fqcn": "azure_rm_functionapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the facts were retrieved", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the facts were retrieved"}, "module_options": {"that": ["results.ansible_facts.azure_functionapps|length == 1", "results.ansible_facts.azure_functionapps[0].name == \"{{ funcapp_name_basic }}\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete basic function app", "module": "azure_rm_functionapp", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete basic function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_basic }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a function with app settings", "module": "azure_rm_functionapp", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "create a function with app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function with app settings was created", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function with app settings was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "change app settings", "module": "azure_rm_functionapp", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "change app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "storage_account": "{{ storage_account_name }}", "app_settings": {"hello": "world", "things": "more stuff", "FUNCTIONS_EXTENSION_VERSION": "~2", "another": "one"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_params }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux app service plan", "module": "azure_rm_appserviceplan", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create a linux app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create azure function app {{ function_app }}", "module": "azure_rm_functionapp", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "Create azure function app {{ function_app }}", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "storage_account": "{{ storage_account_name }}", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ plan_name }}"}, "container_settings": {"name": "httpd"}, "app_settings": {"FUNCTIONS_EXTENSION_VERSION": "~2"}}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the function was changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "assert the function was changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete the function app", "module": "azure_rm_functionapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete the function app"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ funcapp_name_container }}", "state": "absent"}, "executable": "azure_rm_functionapp", "executable_type": "Module", "fqcn": "azure_rm_functionapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "delete storage account", "module": "azure_rm_storageaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_functionapp/tasks/main.yml", "options": {"name": "delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account_name }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_functionapp", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_virtualnetwork": {"py/object": "struct4.Role", "name": "azure_rm_virtualnetwork", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork", "fqcn": "azure_rm_virtualnetwork", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network, if it exists", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network, if it exists"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Create virtual network", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 2", "output.state.dns_servers | length == 2", "output.state.tags.delete == 'on-exit'", "output.state.tags | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Attach a subnet", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Attach a subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "virtual_network_name": "{{ vnetname }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts by name, tags", "module": "azure_rm_virtualnetwork_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by name, tags", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].dns_servers | length == 2", "facts.virtualnetworks[0].address_prefixes | length == 2", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by resource group, tags", "module": "azure_rm_virtualnetwork_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by resource group, tags"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_virtualnetwork_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts by tags"}, "module_options": {"tags": ["testing"]}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "azure_virtualnetworks | length >= 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_virtualnetwork", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_virtualnetwork", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "tags": {"testing": "no", "delete": "never", "foo": "bar"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state.tags | length == 3"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "append_tags": false, "tags": {"testing": "always"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 1", "output.state.tags.testing == 'always'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should require address_prefixes_cidr when purge_address_prefixes", "module": "azure_rm_virtualnetwork", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Should require address_prefixes_cidr when purge_address_prefixes", "register": "output", "ignore_errors": true}, "module_options": {"name": "{{ vnetname }}", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge address prefixes", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge address prefixes", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "address_prefixes_cidr": "10.1.0.0/16", "purge_address_prefixes": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.address_prefixes | length == 1", "output.state.address_prefixes[0] == '10.1.0.0/16'", "output.state.dns_servers | length == 2", "output.state.dns_servers[0] == '127.0.0.1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge DNS servers", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Purge DNS servers", "register": "output"}, "module_options": {"name": "{{ vnetname }}", "purge_dns_servers": true, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": "output.state['dns_servers'] is undefined"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts", "module": "azure_rm_virtualnetwork_facts", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Gather facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}"}, "executable": "azure_rm_virtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_virtualnetworks | length == 1", "facts.virtualnetworks | length == 1", "facts.virtualnetworks[0].subnets | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetwork/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualnetwork", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_webapp": {"py/object": "struct4.Role", "name": "azure_rm_webapp", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp", "fqcn": "azure_rm_webapp", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Fix resource prefix"}, "module_options": {"linux_app_plan_resource_group": "{{ resource_group_secondary }}", "win_app_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}{{ 1000 | random}}winapp", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_group_secondary | replace('-','x'))[-8:] }}linplan", "slot1_name": "stage1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a windows web app with non-exist app service plan", "module": "azure_rm_webapp", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with non-exist app service plan"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}1", "plan": {"resource_group": "{{ resource_group }}", "name": "{{ win_plan_name }}", "is_linux": false, "sku": "S1"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan", "module": "azure_rm_webapp", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "stop the web app", "module": "azure_rm_webapp", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "stop the web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}2", "plan": "{{ win_plan_name }}", "app_state": "stopped"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a windows web app with existing app service plan, try to update some root level params", "module": "azure_rm_webapp", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a windows web app with existing app service plan, try to update some root level params", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "plan": "{{ win_plan_name }}", "dns_registration": true, "https_only": true, "tags": {"testwebapptag": "test"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "get web app with resource group and tag", "module": "azure_rm_webapp_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with resource group and tag", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}3", "tags": ["testwebapptag"]}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a win web app with java run time specific", "module": "azure_rm_webapp", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with java run time specific", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.8", "settings": {"java_container": "Tomcat", "java_container_version": "8.0"}}], "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert the web app was created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].app_settings | length == 1", "output.webapps[0].frameworks | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update app settings and framework", "module": "azure_rm_webapp", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update app settings and framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "java", "version": "1.7", "settings": {"java_container": "Tomcat", "java_container_version": "8.5"}}], "app_settings": {"testkey2": "testvalue2"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with name", "module": "azure_rm_webapp_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with name", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.webapps[0].app_settings | length == 2", "output.webapps[0].app_settings['testkey'] == 'testvalue'", "output.webapps[0].app_settings['testkey2'] == 'testvalue2'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get web app with return publishing profile", "module": "azure_rm_webapp_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "get web app with return publishing profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "return_publish_profile": true}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": ["output.webapps | length == 1", "output.webapps[0].publishing_username != \"\"", "output.webapps[0].publishing_password != \"\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge all existing app settings", "module": "azure_rm_webapp", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Purge all existing app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}4", "plan": "{{ win_plan_name }}", "purge_app_settings": true}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was updated", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was updated"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a win web app with python run time and php run time", "module": "azure_rm_webapp", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a win web app with python run time and php run time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}5", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}, {"name": "php", "version": "7.0"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a docker web app with some app settings", "module": "azure_rm_webapp", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with some app settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}6", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}", "is_linux": true, "sku": "S1", "number_of_workers": 1}, "container_settings": {"name": "ansible/ansible:ubuntu1404"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a docker web app with private acr registry", "module": "azure_rm_webapp", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a docker web app with private acr registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}7", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "container_settings": {"name": "ansible/ansible:ubuntu1404", "registry_server_url": "test.io", "registry_server_user": "user", "registry_server_password": "password"}}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux web app with nodejs framework", "module": "azure_rm_webapp", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should be idempotent with linux web app created", "module": "azure_rm_webapp", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Should be idempotent with linux web app created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update nodejs framework", "module": "azure_rm_webapp", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update nodejs framework", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "node", "version": "6.9"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a linux web app with deployment source github", "module": "azure_rm_webapp", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with deployment source github", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}10", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "deployment_source": {"url": "https://github.com/test/test", "branch": "master"}, "scm_type": "GitHub"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete web app", "module": "azure_rm_webapp", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Delete web app", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}8", "state": "absent"}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was deleted", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "assert error that java is mutually exclusive with frameworks", "module": "azure_rm_webapp", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error that java is mutually exclusive with frameworks", "register": "fail_win_java_version_mutual_exclusive", "failed_when": "fail_win_java_version_mutual_exclusive.msg != \"Java is mutually exclusive with other frameworks.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}11", "plan": "{{ win_plan_name }}", "frameworks": [{"name": "python", "version": "2.7"}, {"name": "java", "version": "1.8"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error when linux web app, only can specify one framework", "module": "azure_rm_webapp", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "assert error when linux web app, only can specify one framework", "register": "fail_linux_one_framework_only", "failed_when": "fail_linux_one_framework_only.msg != \"Can specify one framework only for Linux web app.\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ linux_plan_name }}12", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "python", "version": "2.7"}, {"name": "node", "version": "6.6"}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a linux web app with java tomcat container", "module": "azure_rm_webapp", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a linux web app with java tomcat container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13", "plan": {"resource_group": "{{ linux_app_plan_resource_group }}", "name": "{{ linux_plan_name }}"}, "frameworks": [{"name": "java", "version": "8", "settings": {"java_container": "tomcat", "java_container_version": "8.5"}}]}, "executable": "azure_rm_webapp", "executable_type": "Module", "fqcn": "azure_rm_webapp", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the web app was created", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert the web app was created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with publish profile", "module": "azure_rm_webapp_facts", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Get facts with publish profile", "no_log": true, "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ win_app_name }}13"}, "executable": "azure_rm_webapp_facts", "executable_type": "Module", "fqcn": "azure_rm_webapp_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert publish profile returned", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert publish profile returned"}, "module_options": {"that": ["facts.webapps[0].ftp_publish_url != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a webapp slot (Check mode)", "module": "azure_rm_webappslot", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert slot check mode creation", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a webapp slot", "module": "azure_rm_webappslot", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Create a webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "configuration_source": "{{ win_app_name }}13", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert slot creation", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert slot creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update webapp slot (idempotence)", "module": "azure_rm_webappslot", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot (idempotence)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_settings": {"testkey": "testvalue"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update webapp slot", "module": "azure_rm_webappslot", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Update webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "frameworks": [{"name": "node", "version": "10.1"}], "app_settings": {"testkey": "testvalue2"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Swap webapp slot", "module": "azure_rm_webappslot", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Swap webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "swap": {"action": "swap"}}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert swap", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert swap"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop webapp slot", "module": "azure_rm_webappslot", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Stop webapp slot", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "webapp_name": "{{ win_app_name }}13", "name": "{{ slot1_name }}", "app_state": "stopped"}, "executable": "azure_rm_webappslot", "executable_type": "Module", "fqcn": "azure_rm_webappslot", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_webapp/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_webapp", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_keyvault": {"py/object": "struct4.Role", "name": "azure_rm_keyvault", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault", "fqcn": "azure_rm_keyvault", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "tenant_id": "{{ azure_tenant }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "lookup service principal object id", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "lookup service principal object id", "register": "object_id"}, "module_options": {"object_id": "{{ lookup('azure_service_principal_attribute', azure_client_id=azure_client_id, azure_secret=azure_secret, azure_tenant=tenant_id) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault", "module": "azure_rm_keyvault", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Key Vault again", "module": "azure_rm_keyvault", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Create instance of Key Vault again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}]}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update existing Key Vault (add a rule and tags)", "module": "azure_rm_keyvault", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Update existing Key Vault (add a rule and tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "enabled_for_deployment": true, "vault_tenant": "{{ tenant_id }}", "sku": {"name": "standard", "family": "A"}, "access_policies": [{"tenant_id": "{{ tenant_id }}", "object_id": "{{ object_id }}", "keys": ["get", "list", "update", "create", "import", "delete", "recover", "backup", "restore"], "secrets": ["get", "list", "set", "delete", "recover", "backup", "restore"]}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == true"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Use REST API to retrieve keyvault (as facts not available yet)", "module": "azure_rm_resource_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Use REST API to retrieve keyvault (as facts not available yet)", "register": "output"}, "module_options": {"api_version": "2018-02-14", "resource_group": "{{ resource_group }}", "provider": "keyvault", "resource_type": "vaults", "resource_name": "vault{{ rpfx }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the facts are properly set", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the facts are properly set"}, "module_options": {"that": ["output.response[0].tags.aaa == \"bbb\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultkey", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "key_name": "testkey", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete a keyvault key", "module": "azure_rm_keyvaultkey", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault key", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "key_name": "testkey"}, "executable": "azure_rm_keyvaultkey", "executable_type": "Module", "fqcn": "azure_rm_keyvaultkey", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "azure_rm_keyvaultsecret", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "secret_name": "testsecret", "secret_value": "mysecret", "tags": {"testing": "test", "delete": "on-exit"}}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete a keyvault secret", "module": "azure_rm_keyvaultsecret", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "delete a keyvault secret", "register": "output"}, "module_options": {"keyvault_uri": "https://vault{{ rpfx }}.vault.azure.net", "state": "absent", "secret_name": "testsecret"}, "executable": "azure_rm_keyvaultsecret", "executable_type": "Module", "fqcn": "azure_rm_keyvaultsecret", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Key Vault -- check mode", "module": "azure_rm_keyvault", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Key Vault", "module": "azure_rm_keyvault", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Key Vault", "module": "azure_rm_keyvault", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Delete unexisting instance of Key Vault", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "vault_name": "vault{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_keyvault", "executable_type": "Module", "fqcn": "azure_rm_keyvault", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_keyvault/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_keyvault", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_servicebus": {"py/object": "struct4.Role", "name": "azure_rm_servicebus", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus", "fqcn": "azure_rm_servicebus", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a namespace", "module": "azure_rm_servicebus", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["namespace.id", "namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a namespace (idempontent)", "module": "azure_rm_servicebus", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a namespace (idempontent)", "register": "namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not namespace.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a queue", "module": "azure_rm_servicebusqueue", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a queue", "register": "queue"}, "module_options": {"name": "queue{{ rpfx }}", "namespace": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["queue.id", "queue.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic (check mode)", "module": "azure_rm_servicebustopic", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic", "module": "azure_rm_servicebustopic", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id", "'subscription_count' not in output"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a topic (idempontent)", "module": "azure_rm_servicebustopic", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a topic (idempontent)", "register": "output"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "duplicate_detection_time_in_seconds": 600}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create test policy", "module": "azure_rm_servicebussaspolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create test policy"}, "module_options": {"name": "testpolicy", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "rights": "manage"}, "executable": "azure_rm_servicebussaspolicy", "executable_type": "Module", "fqcn": "azure_rm_servicebussaspolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a subscription", "module": "azure_rm_servicebustopicsubscription", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Create a subscription", "register": "subs"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["subs.id", "subs.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 1", "facts.servicebuses[0].id == output.id", "facts.servicebuses[0].subscription_count == 1", "facts.servicebuses[0].sas_policies.testpolicy", "facts.servicebuses[0].sas_policies.testpolicy.rights == 'manage'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete subscription", "module": "azure_rm_servicebustopicsubscription", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete subscription"}, "module_options": {"name": "subs{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "topic": "topic{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopicsubscription", "executable_type": "Module", "fqcn": "azure_rm_servicebustopicsubscription", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"type": "topic", "name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses[0].subscription_count == 0", "facts.servicebuses | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete topic", "module": "azure_rm_servicebustopic", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete topic"}, "module_options": {"name": "topic{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebustopic", "executable_type": "Module", "fqcn": "azure_rm_servicebustopic", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Retrive topic", "module": "azure_rm_servicebus_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Retrive topic", "register": "facts"}, "module_options": {"name": "topic{{ rpfx }}", "type": "topic", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "show_sas_policies": true}, "executable": "azure_rm_servicebus_facts", "executable_type": "Module", "fqcn": "azure_rm_servicebus_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.servicebuses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete queue", "module": "azure_rm_servicebusqueue", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete queue"}, "module_options": {"name": "queue{{ rpfx }}", "resource_group": "{{ resource_group }}", "namespace": "ns{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_servicebusqueue", "executable_type": "Module", "fqcn": "azure_rm_servicebusqueue", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete namespace", "module": "azure_rm_servicebus", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_servicebus/tasks/main.yml", "options": {"name": "Delete namespace"}, "module_options": {"name": "ns{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_servicebus", "executable_type": "Module", "fqcn": "azure_rm_servicebus", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_servicebus", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_postgresqlserver": {"py/object": "struct4.Role", "name": "azure_rm_postgresqlserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver", "fqcn": "azure_rm_postgresqlserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of PostgreSQL Server, change storage size", "module": "azure_rm_postgresqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Update instance of PostgreSQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts postgresql Server", "module": "azure_rm_postgresqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts postgresql Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Server -- add tags", "module": "azure_rm_postgresqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Server -- add tags"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Server", "module": "azure_rm_postgresqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_postgresqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "UTF8", "collation": "English_United States.1252"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database without force_update", "module": "azure_rm_postgresqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update PostgreSQL Database with force_update", "module": "azure_rm_postgresqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to update PostgreSQL Database with force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "charset": "WIN1252", "collation": "SQL_Latin1_General_CP1_CS_AS", "force_update": true}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create second instance of PostgreSQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Database", "module": "azure_rm_postgresqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database -- check mode", "module": "azure_rm_postgresqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Database", "module": "azure_rm_postgresqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_postgresqldatabase", "executable_type": "Module", "fqcn": "azure_rm_postgresqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_postgresqlfirewallrule", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_postgresqlfirewallrule", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_postgresqlfirewallrule", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Firewall Rule", "module": "azure_rm_postgresqlfirewallrule_facts", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_postgresqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_postgresqlconfiguration", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration", "module": "azure_rm_postgresqlconfiguration", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "value": 2000}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was not registered", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was not registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_postgresqlconfiguration", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_postgresqlconfiguration", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout", "state": "absent"}, "executable": "azure_rm_postgresqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}", "name": "deadlock_timeout"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts PostgreSQL Configuration", "module": "azure_rm_postgresqlconfiguration_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Gather facts PostgreSQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "postgresqlsrv{{ rpfx }}"}, "executable": "azure_rm_postgresqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_postgresqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server -- check mode", "module": "azure_rm_postgresqlserver", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of PostgreSQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of PostgreSQL Server", "module": "azure_rm_postgresqlserver", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_postgresqlserver/tasks/main.yml", "options": {"name": "Delete second instance of PostgreSQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "postgresqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_postgresqlserver", "executable_type": "Module", "fqcn": "azure_rm_postgresqlserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_postgresqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_rediscache": {"py/object": "struct4.Role", "name": "azure_rm_rediscache", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache", "fqcn": "azure_rm_rediscache", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"redis_name": "redis-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "vnet_name": "vnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "subnet_name": "subnet-{{ resource_group | hash('md5') | truncate(7, True, '') }}-{{ 1000 | random }}", "rule_name": "rule1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a redis cache", "module": "azure_rm_rediscache", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create a redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].id != None", "facts.rediscaches[0].host_name != None", "facts.rediscaches[0].provisioning_state != None", "facts.rediscaches[0].sku.name == 'basic'", "facts.rediscaches[0].sku.size == 'C1'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the redis cache (idempotent)", "module": "azure_rm_rediscache", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update the redis cache (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "(actually) update redis cache", "module": "azure_rm_rediscache", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "(actually) update redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update redis cache configuration", "module": "azure_rm_rediscache", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update redis cache configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "basic", "size": "C1"}, "enable_non_ssl_port": true, "maxmemory_policy": "allkeys_lru", "tags": {"testing": "foo"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale up the redis cache", "module": "azure_rm_rediscache", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Scale up the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "sku": {"name": "standard", "size": "C1"}, "tags": {"testing": "foo"}, "wait_for_provisioning": true}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Force reboot redis cache", "module": "azure_rm_rediscache", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Force reboot redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "reboot": {"reboot_type": "all"}}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache (Check Mode)", "module": "azure_rm_rediscache", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert deleting redis cache check mode", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "assert deleting redis cache check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnet_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ subnet_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vnet_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create redis with subnet", "module": "azure_rm_rediscache", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create redis with subnet", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "sku": {"name": "premium", "size": "P1"}, "subnet": {"name": "{{ subnet_name }}", "virtual_network_name": "{{ vnet_name }}"}, "wait_for_provisioning": false}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating redis cache", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creating redis cache"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_rediscache_facts", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "return_access_keys": true}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts.rediscaches | length == 1", "facts.rediscaches[0].subnet != None", "facts.rediscaches[0].access_keys.primary != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create firewall rule (Check mode)", "module": "azure_rm_rediscachefirewallrule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule (Check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Wait for Redis provisioning to complete", "module": "azure_rm_rediscache_facts", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Wait for Redis provisioning to complete", "register": "facts", "until": "facts.rediscaches[0]['provisioning_state'] == 'Succeeded'", "retries": 30, "delay": 60}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2"}, "executable": "azure_rm_rediscache_facts", "executable_type": "Module", "fqcn": "azure_rm_rediscache_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Create firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creation", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert creation"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update firewall rule idempotence", "module": "azure_rm_rediscachefirewallrule", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "start_ip_address": "192.168.1.1", "end_ip_address": "192.168.1.4"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotence", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert idempotence"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Update firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "end_ip_address": "192.168.1.5"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert updating", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert updating"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete firewall rule", "module": "azure_rm_rediscachefirewallrule", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete firewall rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "cache_name": "{{ redis_name }}2", "name": "{{ rule_name }}", "state": "absent"}, "executable": "azure_rm_rediscachefirewallrule", "executable_type": "Module", "fqcn": "azure_rm_rediscachefirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert deletion", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Assert deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the redis cache", "module": "azure_rm_rediscache", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_rediscache/tasks/main.yml", "options": {"name": "Delete the redis cache", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ redis_name }}2", "state": "absent"}, "executable": "azure_rm_rediscache", "executable_type": "Module", "fqcn": "azure_rm_rediscache", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_rediscache", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_mariadbserver": {"py/object": "struct4.Role", "name": "azure_rm_mariadbserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver", "fqcn": "azure_rm_mariadbserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of MariaDB Server, change storage size", "module": "azure_rm_mariadbserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of MariaDB Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 10.2, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Server", "module": "azure_rm_mariadbserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mariadbserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mariadbdatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mariadbdatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create second instance of MariaDB Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Database", "module": "azure_rm_mariadbdatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbdatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database -- check mode", "module": "azure_rm_mariadbdatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Database", "module": "azure_rm_mariadbdatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mariadbdatabase", "executable_type": "Module", "fqcn": "azure_rm_mariadbdatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mariadbfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mariadbfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mariadbfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mariadbfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Firewall Rule", "module": "azure_rm_mariadbfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mariadbfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mariadbconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mariadbconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mariadbconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mariadbconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mariadbconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MariaDB Configuration", "module": "azure_rm_mariadbconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Gather facts MariaDB Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mariadbsrv{{ rpfx }}"}, "executable": "azure_rm_mariadbconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mariadbconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server -- check mode", "module": "azure_rm_mariadbserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MariaDB Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of MariaDB Server", "module": "azure_rm_mariadbserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mariadbserver/tasks/main.yml", "options": {"name": "Delete second instance of MariaDB Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mariadbsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mariadbserver", "executable_type": "Module", "fqcn": "azure_rm_mariadbserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_mariadbserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_aks": {"py/object": "struct4.Role", "name": "azure_rm_aks", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks", "fqcn": "azure_rm_aks", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(8, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find available k8s version", "module": "azure_rm_aksversion_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Find available k8s version", "register": "versions"}, "module_options": {"location": "eastus"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an AKS instance (check mode)", "module": "azure_rm_aks", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (check mode)", "check_mode": true}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "azure_rm_aks_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no AKS created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Check there is no AKS created"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an AKS instance", "module": "azure_rm_aks", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}", "client_secret": "{{ azure_secret }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an AKS instance (idempotent)", "module": "azure_rm_aks", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Create an AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ versions.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get available version", "module": "azure_rm_aksversion_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get available version", "register": "version1"}, "module_options": {"location": "eastus", "version": "{{ versions.azure_aks_versions[0] }}"}, "executable": "azure_rm_aksversion_facts", "executable_type": "Module", "fqcn": "azure_rm_aksversion_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon", "module": "azure_rm_aks", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is upgraded", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is upgraded"}, "module_options": {"that": ["output.changed", "output.kubernetes_version == version1.azure_aks_versions[0]", "output.addon.httpApplicationRouting.enabled ==  True", "output.agent_pool_profiles[0].count == 1", "output.network_profile.network_plugin == 'kubenet'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upgrade the AKS instance with addon (idempontent)", "module": "azure_rm_aks", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Upgrade the AKS instance with addon (idempontent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "location": "eastus", "dns_prefix": "aks{{ rpfx }}", "kubernetes_version": "{{ version1.azure_aks_versions[0] }}", "service_principal": {"client_id": "{{ azure_client_id }}"}, "linux_profile": {"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSPmiqkvDH1/+MDAVDZT8381aYqp73Odz8cnD5hegNhqtXajqtiH0umVg7HybX3wt1HjcrwKJovZURcIbbcDvzdH2bnYbF93T4OLXA0bIfuIp6M86x1iutFtXdpN3TTicINrmSXEE2Ydm51iMu77B08ZERjVaToya2F7vC+egfoPvibf7OLxE336a5tPCywavvNihQjL8sjgpDT5AAScjb3YqK/6VLeQ18Ggt8/ufINsYkb+9/Ji/3OcGFeflnDXq80vPUyF3u4iIylob6RSZenC38cXmQB05tRNxS1B6BXCjMRdy0v4pa7oKM2GA4ADKpNrr0RI9ed+peRFwmsclH test@ansible"}, "agent_pool_profiles": [{"name": "default", "count": 1, "vm_size": "Standard_DS1_v2"}], "addon": {"http_application_routing": {}}, "network_profile": {"network_plugin": "kubenet"}, "enable_rbac": true}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "show_kubeconfig": "user"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.aks | length == 1", "fact.aks[0].kube_config == output.kube_config"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the AKS instance", "module": "azure_rm_aks", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the AKS instance is well deleted", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert the AKS instance is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the AKS instance (idempotent)", "module": "azure_rm_aks", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Delete the AKS instance (idempotent)", "register": "output"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_aks", "executable_type": "Module", "fqcn": "azure_rm_aks", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get AKS fact", "module": "azure_rm_aks_facts", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Get AKS fact", "register": "fact"}, "module_options": {"name": "aks{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_aks_facts", "executable_type": "Module", "fqcn": "azure_rm_aks_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_aks/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.aks | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_aks", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_appgateway": {"py/object": "struct4.Role", "name": "azure_rm_appgateway", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway", "fqcn": "azure_rm_appgateway", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a virtual network"}, "module_options": {"name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.2"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create a subnet", "register": "subnet_output"}, "module_options": {"name": "subnet{{ rpfx }}", "virtual_network_name": "vnet{{ rpfx }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}", "name": "sample_gateway_frontend_ip_config"}}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "dump", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "dump"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Application Gateway", "module": "azure_rm_appgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Create instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - no change", "module": "azure_rm_appgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - no change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 80, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update instance of Application Gateway - single change", "module": "azure_rm_appgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Try to update instance of Application Gateway - single change", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "sku": {"name": "standard_small", "tier": "standard", "capacity": 2}, "ssl_policy": {"policy_type": "predefined", "policy_name": "ssl_policy20150501", "disabled_ssl_protocols": ["tls_v1_0"], "cipher_suites": ["tls_ecdhe_ecdsa_with_aes_256_gcm_sha384"]}, "authentication_certificates": [{"name": "cert1", "data": "{{ lookup('file', 'cert1.txt') }}"}], "ssl_certificates": [{"name": "cert2", "password": "your-password", "data": "{{ lookup('file', 'cert2.txt') }}"}], "gateway_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "app_gateway_ip_config"}], "frontend_ip_configurations": [{"subnet": {"id": "{{ subnet_output.state.id }}"}, "name": "sample_gateway_frontend_ip_config"}], "frontend_ports": [{"port": 90, "name": "ag_frontend_port"}, {"port": 80, "name": "http_frontend_port"}], "backend_address_pools": [{"backend_addresses": [{"ip_address": "10.0.0.4"}], "name": "test_backend_address_pool"}], "probes": [{"name": "custom_probe", "protocol": "http", "host": "10.0.0.4", "path": "/healthz", "interval": 30, "timeout": 30, "unhealthy_threshold": 3}], "backend_http_settings_collection": [{"port": 81, "protocol": "http", "cookie_based_affinity": "enabled", "probe": "custom_probe", "name": "sample_appgateway_http_settings"}], "http_listeners": [{"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "ag_frontend_port", "protocol": "https", "ssl_certificate": "cert2", "name": "sample_http_listener"}, {"frontend_ip_configuration": "sample_gateway_frontend_ip_config", "frontend_port": "http_frontend_port", "protocol": "http", "name": "http_listener"}], "request_routing_rules": [{"rule_type": "Basic", "backend_address_pool": "test_backend_address_pool", "backend_http_settings": "sample_appgateway_http_settings", "http_listener": "sample_http_listener", "name": "rule1"}, {"rule_type": "Basic", "http_listener": "http_listener", "redirect_configuration": "redirect_site_to_https", "name": "http_redirect_rule"}], "redirect_configurations": [{"redirect_type": "permanent", "target_listener": "sample_http_listener", "include_path": true, "include_query_string": true, "name": "redirect_site_to_https"}]}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway -- check mode", "module": "azure_rm_appgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Application Gateway", "module": "azure_rm_appgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Application Gateway", "module": "azure_rm_appgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Delete unexisting instance of Application Gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "appgateway{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_appgateway", "executable_type": "Module", "fqcn": "azure_rm_appgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appgateway/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_appgateway", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_securitygroup": {"py/object": "struct4.Role", "name": "azure_rm_securitygroup", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup", "fqcn": "azure_rm_securitygroup", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"secgroupname": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "asg_name1": "asg1{{ resource_group | hash('md5') | truncate(7, True, '') }}", "asg_name2": "asg2{{ resource_group | hash('md5') | truncate(7, True, '') }}", "sg_name1": "sgasg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "DenySSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Deny", "priority": 100, "direction": "Inbound"}, {"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "{{ output.state.rules | length }} == 2"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts by tags", "module": "azure_rm_securitygroup_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts by tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "azure_securitygroups | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add/Update rules on existing security group", "module": "azure_rm_securitygroup", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add/Update rules on existing security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 3", "output.state.rules[0].source_address_prefix == '174.108.158.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test idempotence", "module": "azure_rm_securitygroup", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Test idempotence", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": "174.108.158.0/24", "destination_port_range": 22, "access": "Allow", "priority": 101}, {"name": "AllowSSHFromHome", "protocol": "Tcp", "source_address_prefix": "174.109.158.0/24", "destination_port_range": "22-23", "priority": 102}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "never", "baz": "bar"}, "append_tags": false}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge tags", "module": "azure_rm_securitygroup", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Purge tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "append_tags": false, "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 2", "output.state.tags.delete == 'on-exit'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for one accounts", "module": "azure_rm_securitygroup_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for one accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all accounts", "module": "azure_rm_securitygroup_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Gather facts for all accounts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes", "module": "azure_rm_securitygroup", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["{{ output.state.rules | length }} == 1", "{{ output.state.rules[0].source_address_prefixes | length }} == 3", "not output.state.rules[0].source_address_prefix"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with source_address_prefixes(idempontent)", "module": "azure_rm_securitygroup", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with source_address_prefixes(idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "purge_rules": true, "rules": [{"name": "AllowSSH", "protocol": "Tcp", "source_address_prefix": ["52.100.120.240", "53.100.250.190", "54.110.200.200"], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add a single one group", "module": "azure_rm_securitygroup", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Add a single one group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ secgroupname }}", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}, "rules": [{"name": "DenySSH", "protocol": "Tcp", "source_address_prefix": ["54.120.120.240"], "destination_port_range": 22, "access": "Deny", "priority": 102, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "{{ output.state.rules | length }} == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group 1", "module": "azure_rm_applicationsecuritygroup", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 1", "register": "asg1"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ asg_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Application security group 2", "module": "azure_rm_applicationsecuritygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create Application security group 2", "register": "asg2"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group with application security group", "module": "azure_rm_securitygroup", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg1.id }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security group with application security group - Idempotent", "module": "azure_rm_securitygroup", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Create security group with application security group - Idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "purge_rules": true, "rules": [{"name": "AsgToAsg", "protocol": "Tcp", "source_application_security_groups": ["{{ asg_name1 }}"], "destination_application_security_groups": [{"resource_group": "{{ resource_group_secondary }}", "name": "{{ asg_name2 }}"}], "destination_port_range": 22, "access": "Allow", "priority": 101, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete security group", "module": "azure_rm_securitygroup", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ sg_name1 }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete all security groups", "module": "azure_rm_securitygroup", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Delete all security groups", "with_items": "{{ azure_securitygroups }}"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item.name }}", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should have no security groups remaining", "module": "azure_rm_securitygroup_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {"name": "Should have no security groups remaining", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_securitygroup/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_securitygroups | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_securitygroup", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_loadbalancer": {"py/object": "struct4.Role", "name": "azure_rm_loadbalancer", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer", "fqcn": "azure_rm_loadbalancer", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"pipaname": "pipa{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "pipbname": "pipb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbvnname": "lbvn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_a": "lba{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_b": "lbb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_c": "lbc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "lbname_d": "lbd{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipbname }}", "sku": "Standard", "allocation_method": "Static", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "{{ pipaname }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "clear load balancer", "module": "azure_rm_loadbalancer", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "clear load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "public_ip": "{{ pipaname }}"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer deleted", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer (idempotent)", "module": "azure_rm_loadbalancer", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_a }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert load balancer deleted (idempotent)", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert load balancer deleted (idempotent)"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create another load balancer with more options", "module": "azure_rm_loadbalancer", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create another load balancer with more options", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": ["output.changed", "output.state.sku.name == 'Standard'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency", "module": "azure_rm_loadbalancer", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 80, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert that output has not changed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create load balancer again to check idempotency - change something", "module": "azure_rm_loadbalancer", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer again to check idempotency - change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "sku": "Standard", "public_ip_address": "{{ pipbname }}", "probe_protocol": "Tcp", "probe_port": 80, "probe_interval": 10, "probe_fail_count": 3, "protocol": "Tcp", "load_distribution": "Default", "frontend_port": 81, "backend_port": 8080, "idle_timeout": 4, "natpool_frontend_port_start": 30, "natpool_frontend_port_end": 40, "natpool_backend_port": 80, "natpool_protocol": "Tcp"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert that output has changed", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert that output has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_b }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "{{ pipaname }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}], "inbound_nat_rules": [{"name": "inboundnatrule0", "backend_port": 8080, "protocol": "Tcp", "frontend_port": 8080, "frontend_ip_configuration": "frontendipconf0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_c }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "Add subnet", "register": "subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ lbvnname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create internal loadbalancer", "module": "azure_rm_loadbalancer", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "create internal loadbalancer", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "private_ip_address": "10.10.0.10", "private_ip_allocation_method": "Static", "subnet": "{{ subnet.state.id }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert complex load balancer created", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "assert complex load balancer created"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbname_d }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup public ip", "module": "azure_rm_publicipaddress", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup public ip", "with_items": ["{{ pipaname }}", "{{ pipbname }}"]}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup subnet", "module": "azure_rm_subnet", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}sb", "virtual_network": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "cleanup virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_loadbalancer/tasks/main.yml", "options": {"name": "cleanup virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lbvnname }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_loadbalancer", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_virtualmachineimage_facts": {"py/object": "struct4.Role", "name": "azure_rm_virtualmachineimage_facts", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts", "fqcn": "azure_rm_virtualmachineimage_facts", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "set location", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "set location"}, "module_options": {"location": "eastus"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts for a specific image", "module": "azure_rm_virtualmachineimage_facts", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "Get facts for a specific image", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3", "version": "7.3.20170707"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available versions", "module": "azure_rm_virtualmachineimage_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available versions", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic", "offer": "CentOS", "sku": "7.3"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available offers", "module": "azure_rm_virtualmachineimage_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available offers", "register": "output"}, "module_options": {"location": "{{ location }}", "publisher": "OpenLogic"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List available publishers", "module": "azure_rm_virtualmachineimage_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {"name": "List available publishers", "register": "output"}, "module_options": {"location": "{{ location }}"}, "executable": "azure_rm_virtualmachineimage_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineimage_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineimage_facts/tasks/main.yml", "options": {}, "module_options": {"that": "azure_vmimages | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualmachineimage_facts", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_containerregistry": {"py/object": "struct4.Role", "name": "azure_rm_containerregistry", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry", "fqcn": "azure_rm_containerregistry", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an container registry", "module": "azure_rm_containerregistry", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create an container registry", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": true, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container registry instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the container registry instance is well created"}, "module_options": {"that": ["output.changed", "output.admin_user_enabled", "output.location == 'eastus2'", "output.sku == 'Premium'", "output.tags['Environment'] == 'Production'", "output.tags['Release'] == 'beta1'", "output.provisioning_state == 'Succeeded'", "output.credentials['password'] is defined", "output.credentials['password2'] is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the ACR instance sku, tags and admin_user_enabled", "module": "azure_rm_containerregistry", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Update the ACR instance sku, tags and admin_user_enabled", "register": "output"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Standard", "tags": {"NewTag": "newtag", "Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second container registry (to test facts)", "module": "azure_rm_containerregistry", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Create second container registry (to test facts)"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "location": "eastus2", "admin_user_enabled": false, "sku": "Premium", "tags": {"Release": "beta1", "Environment": "Production"}}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACR instance is well updated", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert the ACR instance is well updated"}, "module_options": {"that": ["output.changed == True", "output.admin_user_enabled == False", "output.sku == 'Standard'", "output.tags['NewTag'] == 'newtag'", "output.credentials | length == 0", "output.credentials['password'] is not defined", "output.credentials['password2'] is not defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for single Container Registry", "module": "azure_rm_containerregistry_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for single Container Registry", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all Container Registries in the resource group", "module": "azure_rm_containerregistry_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Gather facts for all Container Registries in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerregistry_facts", "executable_type": "Module", "fqcn": "azure_rm_containerregistry_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.registries[0]['name'] != None", "output.registries[0]['location'] != None", "output.registries[0]['admin_user_enabled'] != None", "output.registries[0]['sku'] != None", "output.registries[0]['provisioning_state'] != None", "output.registries[0]['login_server'] != None", "output.registries[0]['id'] != None", "output.registries[0]['credentials'] != None", "output.registries[1]['name'] != None", "output.registries[1]['location'] != None", "output.registries[1]['admin_user_enabled'] != None", "output.registries[1]['sku'] != None", "output.registries[1]['provisioning_state'] != None", "output.registries[1]['login_server'] != None", "output.registries[1]['id'] != None", "output.registries[1]['credentials'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete first container registry", "module": "azure_rm_containerregistry", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete first container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete second container registry", "module": "azure_rm_containerregistry", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerregistry/tasks/main.yml", "options": {"name": "Delete second container registry"}, "module_options": {"name": "acr{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_containerregistry", "executable_type": "Module", "fqcn": "azure_rm_containerregistry", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_containerregistry", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_dnszone": {"py/object": "struct4.Role", "name": "azure_rm_dnszone", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone", "fqcn": "azure_rm_dnszone", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create random domain name"}, "module_options": {"domain_name": "{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a DNS zone (check mode)", "module": "azure_rm_dnszone", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone (check mode)", "register": "results", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a DNS zone", "module": "azure_rm_dnszone", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create a DNS zone", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update DNS zone with tags", "module": "azure_rm_dnszone", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update DNS zone with tags", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "tags": {"test": "modified"}}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.changed", "results.state.tags.test == 'modified'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Zone Facts", "module": "azure_rm_dnszone_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Zone Facts", "register": "zones"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnszone_facts", "executable_type": "Module", "fqcn": "azure_rm_dnszone_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result"}, "module_options": {"that": ["azure_dnszones[0].tags.test == 'modified'", "zones.dnszones[0].type == 'public'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create virtual network", "with_items": ["{{ domain_name }}registration1", "{{ domain_name }}resolution1", "{{ domain_name }}registration2", "{{ domain_name }}resolution2"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create private dns zone", "module": "azure_rm_dnszone", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Create private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}, {"name": "{{ domain_name }}resolution2"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 2", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update private dns zone", "module": "azure_rm_dnszone", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update private dns zone", "register": "results"}, "module_options": {"name": "{{ domain_name }}.private", "resource_group": "{{ resource_group }}", "type": "private", "registration_virtual_networks": [{"name": "{{ domain_name }}registration1"}], "resolution_virtual_networks": [{"name": "{{ domain_name }}resolution1"}]}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": ["results.state.registration_virtual_networks | length == 1", "results.state.resolution_virtual_networks | length == 1", "results.state.type == 'private'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Test idempotent", "module": "azure_rm_dnszone", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Test idempotent", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"], "register": "results"}, "module_options": {"name": "{{ item }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"with_items": "{{ results.results }}"}, "module_options": {"that": ["not {{ item.changed }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create \"A\" record set with multiple records", "module": "azure_rm_dnsrecordset", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create \"A\" record set with multiple records", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was created"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "re-run \"A\" record with same values", "module": "azure_rm_dnsrecordset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-run \"A\" record with same values", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that new record was appended", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that new record was appended"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 4"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "re-update \"A\" record set with additional record", "module": "azure_rm_dnsrecordset", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "re-update \"A\" record set with additional record", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "record_mode": "append", "records": [{"entry": "192.168.100.104"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that A record set was not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that A record set was not changed"}, "module_options": {"that": ["not results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove 1 record from record set", "module": "azure_rm_dnsrecordset", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Remove 1 record from record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.101"}, {"entry": "192.168.100.102"}, {"entry": "192.168.100.103"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that record was deleted", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record was deleted"}, "module_options": {"that": ["results.changed", "results.state.arecords | length == 3"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check_mode test", "module": "azure_rm_dnsrecordset", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Check_mode test", "check_mode": true, "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "records": [{"entry": "192.168.100.105"}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that check_mode returns new state", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that check_mode returns new state"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create SRV records in a new record set", "module": "azure_rm_dnsrecordset", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create SRV records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_sip._tcp.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "time_to_live": 7200, "record_type": "SRV", "records": [{"entry": "sip.{{ domain_name }}.com", "priority": 20, "weight": 10, "port": 5060}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that SRV record set was created", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that SRV record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create TXT records in a new record set", "module": "azure_rm_dnsrecordset", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "create TXT records in a new record set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "_txt.{{ domain_name }}.com", "zone_name": "{{ domain_name }}.com", "record_type": "TXT", "records": [{"entry": "v=spf1 a -all"}, {"entry": "foo"}, {"entry": ["bar", "baz"]}]}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that TXT record set was created", "module": "assert", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that TXT record set was created"}, "module_options": {"that": ["results.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for single Record Set", "module": "azure_rm_dnsrecordset_facts", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for single Record Set", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com", "relative_name": "www", "record_type": "A"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result for single Record Set", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for single Record Set"}, "module_options": {"that": ["not results.changed", "azure_dnsrecordset[0].name == 'www'", "results.dnsrecordsets[0].relative_name == 'www'", "results.dnsrecordsets[0].records | length == 3", "results.dnsrecordsets[0].record_type == 'A'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned result for all Record Sets", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that facts module returned result for all Record Sets"}, "module_options": {"that": ["not facts.changed", "facts.ansible_facts.azure_dnsrecordset[0].name == '@'", "facts.ansible_facts.azure_dnsrecordset[1].name == '@'", "facts.ansible_facts.azure_dnsrecordset[4].name == 'www'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete all record sets  except for @", "module": "azure_rm_dnsrecordset", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "delete all record sets  except for @", "with_items": "{{ facts.dnsrecordsets }}", "when": ["item.relative_name != '@'"], "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "{{ item.relative_name }}", "zone_name": "{{ domain_name }}.com", "record_type": "{{ item.record_type }}", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that record set deleted", "module": "assert", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert that record set deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve DNS Record Set Facts for all Record Sets", "module": "azure_rm_dnsrecordset_facts", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Retrieve DNS Record Set Facts for all Record Sets", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "zone_name": "{{ domain_name }}.com"}, "executable": "azure_rm_dnsrecordset_facts", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert all record set deleted", "module": "assert", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Assert all record set deleted", "with_items": "{{ facts.dnsrecordsets }}"}, "module_options": {"that": ["item.relative_name == '@'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "(idempotence test) re-run record set absent", "module": "azure_rm_dnsrecordset", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "(idempotence test) re-run record set absent", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "relative_name": "www", "zone_name": "{{ domain_name }}.com", "record_type": "A", "state": "absent"}, "executable": "azure_rm_dnsrecordset", "executable_type": "Module", "fqcn": "azure_rm_dnsrecordset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": null, "module": "assert", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": null}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete DNS zone", "module": "azure_rm_dnszone", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone", "with_items": ["{{ domain_name }}.com", "{{ domain_name }}.private"]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ item }}", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete DNS zone (idempotent)", "module": "azure_rm_dnszone", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {"name": "Delete DNS zone (idempotent)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ domain_name }}.com", "state": "absent"}, "executable": "azure_rm_dnszone", "executable_type": "Module", "fqcn": "azure_rm_dnszone", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_dnszone/tasks/main.yml", "options": {}, "module_options": {"that": "not results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_dnszone", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_containerinstance": {"py/object": "struct4.Role", "name": "azure_rm_containerinstance", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance", "fqcn": "azure_rm_containerinstance", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create sample container instance", "module": "azure_rm_containerinstance", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sample container instance -- same parameters", "module": "azure_rm_containerinstance", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create sample container instance -- force update", "module": "azure_rm_containerinstance", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create sample container instance -- force update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "force_update": true}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is well created"}, "module_options": {"that": ["output.changed", "output.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second container instance for testing purposes", "module": "azure_rm_containerinstance", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Create second container instance for testing purposes", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "dns_name_label": "mydnslabel{{ resource_group | hash('md5') | truncate(7, True, '') }}", "location": "eastus", "restart_policy": "on_failure", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81], "commands": ["echo abc", "echo cdf"], "environment_variables": [{"name": "myvar", "value": "myvarvalue"}]}]}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts for single Container Instance", "module": "azure_rm_containerinstance_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for single Container Instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[0]['containers'][0]['commands'] | length == 2", "output.containerinstances[0]['containers'][0]['environment_variables'] | length == 1", "output.containerinstances[0]['restart_policy'] == 'on_failure'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all Container Instances in the resource group", "module": "azure_rm_containerinstance_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Gather facts for all Container Instances in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_containerinstance_facts", "executable_type": "Module", "fqcn": "azure_rm_containerinstance_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.containerinstances[0]['resource_group'] != None", "output.containerinstances[0]['name'] != None", "output.containerinstances[0]['os_type'] != None", "output.containerinstances[0]['location'] != None", "output.containerinstances[0]['ip_address'] != None", "output.containerinstances[0]['ports'] != None", "output.containerinstances[0]['containers'] != None", "output.containerinstances[1]['resource_group'] != None", "output.containerinstances[1]['name'] != None", "output.containerinstances[1]['os_type'] != None", "output.containerinstances[1]['location'] != None", "output.containerinstances[1]['ip_address'] != None", "output.containerinstances[1]['ports'] != None", "output.containerinstances[1]['containers'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the container instance is deleted", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the container instance is deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove container instance", "module": "azure_rm_containerinstance", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}sec", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove container instance again", "module": "azure_rm_containerinstance", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Remove container instance again", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "aci{{ resource_group | hash('md5') | truncate(7, True, '') }}", "os_type": "linux", "ip_address": "public", "location": "eastus", "ports": [80], "containers": [{"name": "mycontainer1", "image": "httpd", "memory": 1.5, "ports": [80, 81]}], "state": "absent"}, "executable": "azure_rm_containerinstance", "executable_type": "Module", "fqcn": "azure_rm_containerinstance", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the changed is false", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_containerinstance/tasks/main.yml", "options": {"name": "Assert the changed is false"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_containerinstance", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_mysqlserver": {"py/object": "struct4.Role", "name": "azure_rm_mysqlserver", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver", "fqcn": "azure_rm_mysqlserver", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of MySQL Server, change storage size", "module": "azure_rm_mysqlserver", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of MySQL Server, change storage size", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 128000, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed", "output.state == 'Ready'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage size is correct", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that storage size is correct"}, "module_options": {"that": ["output.servers[0]['storage_mb'] == 128000"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"aaa": "bbb"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Server"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "sku": {"name": "B_Gen5_1", "tier": "Basic"}, "location": "westus2", "storage_mb": 51200, "version": 5.6, "enforce_ssl": true, "admin_username": "zimxyz", "admin_password": "Testpasswordxyz12!", "tags": {"ccc": "ddd"}}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[0]['tags']['aaa'] == 'bbb'", "output.servers[0]['tags']['ccc'] == 'ddd'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Server", "module": "azure_rm_mysqlserver_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_mysqlserver_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.servers[0]['id'] != None", "output.servers[0]['name'] != None", "output.servers[0]['location'] != None", "output.servers[0]['sku']['name'] != None", "output.servers[0]['sku']['tier'] != None", "output.servers[0]['sku']['capacity'] != None", "output.servers[0]['version'] != None", "output.servers[0]['user_visible_state'] != None", "output.servers[0]['fully_qualified_domain_name'] != None", "output.servers[1]['id'] != None", "output.servers[1]['name'] != None", "output.servers[1]['location'] != None", "output.servers[1]['sku']['name'] != None", "output.servers[1]['sku']['tier'] != None", "output.servers[1]['sku']['capacity'] != None", "output.servers[1]['version'] != None", "output.servers[1]['user_visible_state'] != None", "output.servers[1]['fully_qualified_domain_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_swedish_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to update database without force_update", "module": "azure_rm_mysqldatabase", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to update database without force_update", "ignore_errors": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": ["output.changed == False"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of database using force_update", "module": "azure_rm_mysqldatabase", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Update instance of database using force_update", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "collation": "latin1_czech_ci", "charset": "latin1", "force_update": true}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed", "output.name == 'testdatabase'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create second instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create second instance of MySQL Database"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase2"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Database", "module": "azure_rm_mysqldatabase_facts", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqldatabase_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.databases[0]['server_name'] != None", "output.databases[0]['name'] != None", "output.databases[0]['charset'] != None", "output.databases[0]['collation'] != None", "output.databases[1]['server_name'] != None", "output.databases[1]['name'] != None", "output.databases[1]['charset'] != None", "output.databases[1]['collation'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database -- check mode", "module": "azure_rm_mysqldatabase", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Database", "module": "azure_rm_mysqldatabase", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Database", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "testdatabase", "state": "absent"}, "executable": "azure_rm_mysqldatabase", "executable_type": "Module", "fqcn": "azure_rm_mysqldatabase", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create again instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule -- check mode", "module": "azure_rm_mysqlfirewallrule", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Firewall Rule -- second", "module": "azure_rm_mysqlfirewallrule", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Firewall Rule -- second", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "start_ip_address": "172.28.10.136", "end_ip_address": "172.28.10.138"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.rules[0].id != None", "output.rules[0].server_name != None", "output.rules[0].name != None", "output.rules[0].start_ip_address != None", "output.rules[0].end_ip_address != None", "output.rules[1].id != None", "output.rules[1].name != None", "output.rules[1].start_ip_address != None", "output.rules[1].end_ip_address != None", "output.rules | length == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Firewall Rule", "module": "azure_rm_mysqlfirewallrule", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Firewall Rule - second", "module": "azure_rm_mysqlfirewallrule", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of Firewall Rule - second"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlfirewallrule", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Firewall Rule", "module": "azure_rm_mysqlfirewallrule_facts", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Firewall Rule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "firewallrule{{ rpfx }}"}, "executable": "azure_rm_mysqlfirewallrule_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlfirewallrule_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that empty list was returned", "module": "assert", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that empty list was returned"}, "module_options": {"that": ["output.changed == False", "output.rules | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Configuration -- check mode", "module": "azure_rm_mysqlconfiguration", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Create instance of Configuration -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration_facts", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Get facts of event_scheduler", "module": "debug", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Get facts of event_scheduler"}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to delete default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to delete default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuraion", "module": "azure_rm_mysqlconfiguration", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuraion", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to change default configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to change default configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "value": "ON"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration", "module": "azure_rm_mysqlconfiguration", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to reset configuration -- idempotent", "module": "azure_rm_mysqlconfiguration", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Try to reset configuration -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler", "state": "absent"}, "executable": "azure_rm_mysqlconfiguration", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that change was registered"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}", "name": "event_scheduler"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts MySQL Configuration", "module": "azure_rm_mysqlconfiguration_facts", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Gather facts MySQL Configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "server_name": "mysqlsrv{{ rpfx }}"}, "executable": "azure_rm_mysqlconfiguration_facts", "executable_type": "Module", "fqcn": "azure_rm_mysqlconfiguration_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.settings[0].id != None", "output.settings[0].name != None", "output.settings[0].value != None", "output.settings[0].description != None", "output.settings[0].source != None", "output.settings | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server -- check mode", "module": "azure_rm_mysqlserver", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete unexisting instance of MySQL Server", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second instance of MySQL Server", "module": "azure_rm_mysqlserver", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_mysqlserver/tasks/main.yml", "options": {"name": "Delete second instance of MySQL Server", "async": 400, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "mysqlsrv{{ rpfx }}second", "state": "absent"}, "executable": "azure_rm_mysqlserver", "executable_type": "Module", "fqcn": "azure_rm_mysqlserver", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_mysqlserver", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_virtualnetworkgateway": {"py/object": "struct4.Role", "name": "azure_rm_virtualnetworkgateway", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway", "fqcn": "azure_rm_virtualnetworkgateway", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname": "vnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vngname": "vng{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings (check mode)", "module": "azure_rm_virtualnetworkgateway", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnetname }}", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "GatewaySubnet", "address_prefix": "10.0.2.0/24", "virtual_network": "{{ vnetname }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings", "module": "azure_rm_virtualnetworkgateway", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network gateway without bgp settings - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Create virtual network gateway without bgp settings - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "xyz"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Update virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "ip_configurations": [{"name": "testipconfig", "private_ip_allocation_method": "Dynamic", "public_ip_address_name": "testPublicIP"}], "virtual_network": "{{ vnetname }}", "tags": {"common": "mno"}}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network gateway", "module": "azure_rm_virtualnetworkgateway", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network gateway - idempotent", "module": "azure_rm_virtualnetworkgateway", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {"name": "Delete virtual network gateway - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vngname }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkgateway", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkgateway", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkgateway/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualnetworkgateway", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_devtestlab": {"py/object": "struct4.Role", "name": "azure_rm_devtestlab", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab", "fqcn": "azure_rm_devtestlab", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"lab_name": "lab{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vn_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vm_name": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "artifacts_name": "myartifacts", "github_token": "{{ lookup('env','GITHUB_ACCESS_TOKEN') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Lab", "module": "azure_rm_devtestlab", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of Lab", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check if the change was correctly reported", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Check if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Lab", "module": "azure_rm_devtestlab", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create again instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": false}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update lab - premium_data_disks", "module": "azure_rm_devtestlab", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update lab - premium_data_disks", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "location": "eastus", "storage_type": "standard", "premium_data_disks": true}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List DevTest Lab in a resource group", "module": "azure_rm_devtestlab_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List DevTest Lab in a resource group", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get DevTest Lab facts", "module": "azure_rm_devtestlab_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab facts", "register": "output_lab"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlab_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output_lab.changed == False", "output_lab.labs[0]['id'] != None", "output_lab.labs[0]['resource_group'] != None", "output_lab.labs[0]['name'] != None", "output_lab.labs[0]['location'] != None", "output_lab.labs[0]['storage_type'] != None", "output_lab.labs[0]['premium_data_disks'] != None", "output_lab.labs[0]['provisioning_state'] != None", "output_lab.labs[0]['artifacts_storage_account'] != None", "output_lab.labs[0]['default_premium_storage_account'] != None", "output_lab.labs[0]['default_storage_account'] != None", "output_lab.labs[0]['premium_data_disk_storage_account'] != None", "output_lab.labs[0]['vault_name'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- idempotent", "module": "azure_rm_devtestlabpolicy", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 5}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was not reported", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Policy -- change value", "module": "azure_rm_devtestlabpolicy", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Policy -- change value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "fact_name": "user_owned_lab_vm_count", "threshold": 6}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Policy", "module": "azure_rm_devtestlabpolicy", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Policy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "policy_set_name": "myDtlPolicySet", "name": "myDtlPolicy", "state": "absent"}, "executable": "azure_rm_devtestlabpolicy", "executable_type": "Module", "fqcn": "azure_rm_devtestlabpolicy", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- idempotent", "module": "azure_rm_devtestlabschedule", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1030", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Lab Schedule -- change time", "module": "azure_rm_devtestlabschedule", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Lab Schedule -- change time", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "time": "1130", "time_zone_id": "UTC+12"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Schedule", "module": "azure_rm_devtestlabschedule", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Schedule", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "lab_vms_shutdown", "state": "absent"}, "executable": "azure_rm_devtestlabschedule", "executable_type": "Module", "fqcn": "azure_rm_devtestlabschedule", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs virtual network", "module": "azure_rm_devtestlabvirtualnetwork", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs virtual network", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was registered", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was registered"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with same parameters", "module": "azure_rm_devtestlabvirtualnetwork", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with same parameters", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs virtual network with changed description", "module": "azure_rm_devtestlabvirtualnetwork", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs virtual network with changed description", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}", "location": "eastus", "description": "My DevTest Lab Updated"}, "executable": "azure_rm_devtestlabvirtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get DevTest Lab Virtual Network facts", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get DevTest Lab Virtual Network facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vn_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List all Virtual Networks in DevTest Lab", "module": "azure_rm_devtestlabvirtualnetwork_facts", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all Virtual Networks in DevTest Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualnetwork_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualnetwork_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.virtualnetworks[0]['id'] != None", "output.virtualnetworks[0]['resource_group'] != None", "output.virtualnetworks[0]['lab_name'] != None", "output.virtualnetworks[0]['name'] != None", "output.virtualnetworks[0]['external_provider_resource_id'] != None", "output.virtualnetworks[0]['description'] != None", "output.virtualnetworks[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source with same parameters", "module": "azure_rm_devtestlabartifactsource", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/tasks", "security_token": "{{ github_token }}"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "module": "azure_rm_devtestlabartifactsource", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DevTest Labs artifacts source, add display name, change folder", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "uri": "https://github.com/Azure/azure_preview_modules.git", "source_type": "github", "folder_path": "/library", "security_token": "{{ github_token }}", "display_name": "My Artifacts Source"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing was changed", "module": "assert", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing was changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length > 0"}, "module_options": {"artifact_source": [{"source_name": "{{ artifacts_name }}", "source_path": "/Artifacts/linux-install-mongodb"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": null, "module": "set_fact", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": null, "when": "github_token | length == 0"}, "module_options": {"artifact_source": null}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DTL Virtual Machine", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine with same parameters", "module": "azure_rm_devtestlabvirtualmachine", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine with same parameters", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something....", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that nothing has changed", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update instance of DTL Virtual Machine - change notes", "module": "azure_rm_devtestlabvirtualmachine", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Update instance of DTL Virtual Machine - change notes", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}", "notes": "Virtual machine notes, just something.... more text", "os_type": "linux", "vm_size": "Standard_A2_v2", "user_name": "dtladmin", "password": "ZSasfovobocu$$21!", "lab_subnet": {"virtual_network_name": "{{ vn_name }}", "name": "{{ vn_name }}Subnet"}, "disallow_public_ip_address": false, "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "os_type": "Linux", "version": "latest"}, "artifacts": "{{ artifact_source }}", "allow_claim": false, "expiration_date": "2029-02-22T01:49:12.117974Z"}, "executable": "azure_rm_devtestlabvirtualmachine", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was registered", "module": "assert", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ vm_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['compute_vm_resource_group'] != None", "output_vm.virtualmachines[0]['compute_vm_name'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List Facts of DTL Virtual Machine", "module": "azure_rm_devtestlabvirtualmachine_facts", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List Facts of DTL Virtual Machine", "register": "output_vm"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabvirtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabvirtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned", "when": "github_token | length > 0"}, "module_options": {"that": ["output_vm.changed == False", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['resource_group'] != None", "output_vm.virtualmachines[0]['lab_name'] != None", "output_vm.virtualmachines[0]['name'] != None", "output_vm.virtualmachines[0]['compute_vm_id'] != None", "output_vm.virtualmachines[0]['disallow_public_ip_address'] != None", "output_vm.virtualmachines[0]['expiration_date'] != None", "output_vm.virtualmachines[0]['fqdn'] != None", "output_vm.virtualmachines[0]['id'] != None", "output_vm.virtualmachines[0]['image'] != None", "output_vm.virtualmachines[0]['notes'] != None", "output_vm.virtualmachines[0]['os_type'] != None", "output_vm.virtualmachines[0]['provisioning_state'] != None", "output_vm.virtualmachines[0]['storage_type'] != None", "output_vm.virtualmachines[0]['user_name'] != None", "output_vm.virtualmachines[0]['vm_size'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List all artifact sources", "module": "azure_rm_devtestlabartifactsource_facts", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List all artifact sources", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 66, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None", "output.artifactsources | length >= 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get artifacts source facts", "module": "azure_rm_devtestlabartifactsource_facts", "index": 67, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get artifacts source facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "public repo"}, "executable": "azure_rm_devtestlabartifactsource_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 68, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifactsources[0]['id'] != None", "output.artifactsources[0]['resource_group'] != None", "output.artifactsources[0]['lab_name'] != None", "output.artifactsources[0]['name'] != None", "output.artifactsources[0]['display_name'] != None", "output.artifactsources[0]['source_type'] != None", "output.artifactsources[0]['is_enabled'] != None", "output.artifactsources[0]['uri'] != None", "output.artifactsources[0]['folder_path'] != None", "output.artifactsources[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Labs artifacts source", "module": "azure_rm_devtestlabartifactsource", "index": 69, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Labs artifacts source", "register": "output", "when": "github_token | length > 0"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "{{ artifacts_name }}", "state": "absent"}, "executable": "azure_rm_devtestlabartifactsource", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifactsource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was correctly registered", "module": "assert", "index": 70, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was correctly registered", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 71, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "List ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 72, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get ARM Template facts", "module": "azure_rm_devtestlabarmtemplate_facts", "index": 73, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get ARM Template facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public environment repo", "name": "ServiceFabric-LabCluster"}, "executable": "azure_rm_devtestlabarmtemplate_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabarmtemplate_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 74, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.armtemplates[0]['id'] != None", "output.armtemplates[0]['resource_group'] != None", "output.armtemplates[0]['lab_name'] != None", "output.armtemplates[0]['artifact_source_name'] != None", "output.armtemplates[0]['name'] != None", "output.armtemplates[0]['display_name'] != None", "output.armtemplates[0]['description'] != None", "output.armtemplates[0]['publisher'] != None", "output.armtemplates | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 75, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 76, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Artifact facts", "module": "azure_rm_devtestlabartifact_facts", "index": 77, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Get Artifact facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "artifact_source_name": "public repo", "name": "windows-webdeploy"}, "executable": "azure_rm_devtestlabartifact_facts", "executable_type": "Module", "fqcn": "azure_rm_devtestlabartifact_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 78, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.artifacts[0]['id'] != None", "output.artifacts[0]['resource_group'] != None", "output.artifacts[0]['lab_name'] != None", "output.artifacts[0]['artifact_source_name'] != None", "output.artifacts[0]['name'] != None", "output.artifacts[0]['description'] != None", "output.artifacts[0]['file_path'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts[0]['target_os_type'] != None", "output.artifacts[0]['publisher'] != None", "output.artifacts | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 79, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": "{{ output_lab.labs[0].id }}/artifactSources/public environment repo/armTemplates/WebApp"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported", "module": "assert", "index": 80, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Environment - idempotent", "module": "azure_rm_devtestlabenvironment", "index": 81, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Environment - idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@me", "name": "myEnvironment", "location": "eastus", "deployment_template": {"artifact_source_name": "public environment repo", "name": "WebApp"}}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was not detected", "module": "assert", "index": 82, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was not detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of DevTest Lab Environment", "module": "azure_rm_devtestlabenvironment", "index": 83, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of DevTest Lab Environment", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "user_name": "@mes", "name": "myEnvironment", "state": "absent"}, "executable": "azure_rm_devtestlabenvironment", "executable_type": "Module", "fqcn": "azure_rm_devtestlabenvironment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 84, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image", "module": "azure_rm_devtestlabcustomimage", "index": 85, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 86, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of DevTest Lab Image -- idempotent", "module": "azure_rm_devtestlabcustomimage", "index": 87, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Create instance of DevTest Lab Image -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "lab_name": "{{ lab_name }}", "name": "myImage", "source_vm": "{{ output_vm.virtualmachines[0]['name'] }}", "linux_os_state": "non_deprovisioned"}, "executable": "azure_rm_devtestlabcustomimage", "executable_type": "Module", "fqcn": "azure_rm_devtestlabcustomimage", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that change was detected", "module": "assert", "index": 88, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert that change was detected", "when": "github_token | length > 0"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Lab -- check mode", "module": "azure_rm_devtestlab", "index": 89, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "state": "absent", "name": "{{ lab_name }}"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert if the change was correctly reported in check mode", "module": "assert", "index": 90, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert if the change was correctly reported in check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Lab", "module": "azure_rm_devtestlab", "index": 91, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the change was correctly reported", "module": "assert", "index": 92, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert the change was correctly reported"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete unexisting instance of Lab", "module": "azure_rm_devtestlab", "index": 93, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Delete unexisting instance of Lab", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ lab_name }}unexisting", "state": "absent"}, "executable": "azure_rm_devtestlab", "executable_type": "Module", "fqcn": "azure_rm_devtestlab", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert thes state has not changed", "module": "assert", "index": 94, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_devtestlab/tasks/main.yml", "options": {"name": "Assert thes state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_devtestlab", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_appserviceplan": {"py/object": "struct4.Role", "name": "azure_rm_appserviceplan", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan", "fqcn": "azure_rm_appserviceplan", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare facts", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "Prepare facts"}, "module_options": {"linux_plan_resource_group": "{{ resource_group_secondary }}", "win_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}winplan", "linux_plan_name": "{{ (resource_prefix | replace('-','x'))[-8:] }}linplan"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a windows plan", "module": "azure_rm_appserviceplan", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a windows plan", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B1"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create a linux plan", "module": "azure_rm_appserviceplan", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create a linux plan", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "get app service plan by name", "module": "azure_rm_appserviceplan_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "get app service plan by name", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1"}, "executable": "azure_rm_appserviceplan_facts", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert is_linux is True", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert is_linux is True"}, "module_options": {"that": ["output.appserviceplans | length == 1", "output.appserviceplans[0].is_linux == True"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create linux app service plan idempotent", "module": "azure_rm_appserviceplan", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "create linux app service plan idempotent", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 1}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was created", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was created"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update a windows plan sku", "module": "azure_rm_appserviceplan", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a windows plan sku", "register": "output"}, "module_options": {"name": "{{ win_plan_name }}1", "resource_group": "{{ resource_group }}", "sku": "B2"}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update a linux plan number of workers", "module": "azure_rm_appserviceplan", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "update a linux plan number of workers", "register": "output"}, "module_options": {"resource_group": "{{ linux_plan_resource_group }}", "name": "{{ linux_plan_name }}1", "sku": "S1", "is_linux": true, "number_of_workers": 2}, "executable": "azure_rm_appserviceplan", "executable_type": "Module", "fqcn": "azure_rm_appserviceplan", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert app service was updated", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_appserviceplan/tasks/main.yml", "options": {"name": "assert app service was updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_appserviceplan", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_image": {"py/object": "struct4.Role", "name": "azure_rm_image", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image", "fqcn": "azure_rm_image", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"vm_name": "vm{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}x", "public_ip_name": "pip{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "security_group_name": "sg{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "empty_disk_name": "emptydisk{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ security_group_name }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NIC", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "virtual_network": "{{ vm_name }}", "subnet": "{{ vm_name }}", "public_ip_name": "{{ public_ip_name }}", "security_group": "{{ security_group_name }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine", "module": "azure_rm_virtualmachine", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create virtual machine", "register": "vm"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "vm_size": "Standard_A0", "managed_disk_type": "Standard_LRS", "admin_username": "adminuser", "admin_password": "Password123!", "os_type": "Linux", "network_interfaces": "{{ vm_name }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create new empty managed disk", "module": "azure_rm_manageddisk", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create new empty managed disk", "register": "emptydisk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "storage_account_type": "Standard_LRS", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an image from VM (check mode)", "module": "azure_rm_image", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux", "data_disk_sources": ["{{ empty_disk_name }}"]}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an image from VM", "module": "azure_rm_image", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": {"name": "{{ vm_name }}", "type": "disks"}, "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an image from VM (idempotent)", "module": "azure_rm_image", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Create an image from VM (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "source": "{{ vm.ansible_facts.azure_vm.properties.storageProfile.osDisk.managedDisk.id }}", "name": "testimage001", "os_type": "Linux"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather information about image created", "module": "azure_rm_image_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Gather information about image created", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001"}, "executable": "azure_rm_image_facts", "executable_type": "Module", "fqcn": "azure_rm_image_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.images != []"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image (check mode)", "module": "azure_rm_image", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image", "module": "azure_rm_image", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete image (idempotent)", "module": "azure_rm_image", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete image (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testimage001", "state": "absent"}, "executable": "azure_rm_image", "executable_type": "Module", "fqcn": "azure_rm_image", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete empty disk", "module": "azure_rm_manageddisk", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete empty disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ empty_disk_name }}", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_image/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ public_ip_name }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_image", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_deployment": {"py/object": "struct4.Role", "name": "azure_rm_deployment", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment", "fqcn": "azure_rm_deployment", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random dns label", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create random dns label"}, "module_options": {"dns_label": "test{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Azure Deploy", "module": "azure_rm_deployment", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Create Azure Deploy", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "eastus", "template_link": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/d01a5c06f4f1bc03a049ca17bbbd6e06d62657b3/101-vm-simple-linux/azuredeploy.json", "deployment_name": "{{ dns_label }}", "parameters": {"adminUsername": {"value": "chouseknecht"}, "adminPassword": {"value": "password123!"}, "dnsLabelPrefix": {"value": "{{ dns_label }}"}, "ubuntuOSVersion": {"value": "16.04.0-LTS"}}}, "executable": "azure_rm_deployment", "executable_type": "Module", "fqcn": "azure_rm_deployment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add new instance to host group", "module": "add_host", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Add new instance to host group", "with_items": "{{ output.deployment.instances }}"}, "module_options": {"hostname": "{{ item.vm_name }}", "ansible_host": "{{ item['ips'][0].public_ip }}", "ansible_user": "chouseknecht", "ansible_ssh_pass": "password123!", "groupname": "azure_vms"}, "executable": "add_host", "executable_type": "Module", "fqcn": "ansible.builtin.add_host", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Deployment Facts", "module": "azure_rm_deployment_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Get Deployment Facts", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dns_label }}"}, "executable": "azure_rm_deployment_facts", "executable_type": "Module", "fqcn": "azure_rm_deployment_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that values are returned", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_deployment/tasks/main.yml", "options": {"name": "Assert that values are returned"}, "module_options": {"that": ["not output.changed", "output.deployments[0]['provisioning_state'] != None", "output.deployments[0]['output_resources'] | length > 0", "output.deployments[0]['outputs'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_deployment", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_publicipaddress": {"py/object": "struct4.Role", "name": "azure_rm_publicipaddress", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress", "fqcn": "azure_rm_publicipaddress", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create domain name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create domain name"}, "module_options": {"domain_name": "ansible-{{ resource_group | hash('md5') | truncate(24, True, '') }}", "rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Create public ip", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "Static", "domain_name": "{{ domain_name }}", "tags": {"testing": "testing", "delete": "on-exit"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.public_ip_allocation_method == 'static'", "output.state.dns_settings.domain_name_label == domain_name", "output.state.tags | length == 2", "output.state.tags.testing == 'testing'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_publicipaddress", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update tags", "module": "azure_rm_publicipaddress", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Update tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": true, "tags": {"delete": "never", "foo": "bar"}}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 3", "output.state.tags.delete == 'never'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts, filtering by tag", "module": "azure_rm_publicipaddress_facts", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts, filtering by tag"}, "module_options": {"resource_group": "{{ resource_group }}", "tags": ["testing", "foo:bar"]}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Purge all tags", "module": "azure_rm_publicipaddress", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Purge all tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "allocation_method": "static", "domain_name": "{{ domain_name }}", "append_tags": false}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["output.state.tags | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip", "register": "pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": ["pip.publicipaddresses | length == 1", "pip.publicipaddresses[0].name == \"pip{{ rpfx }}\"", "pip.publicipaddresses[0].allocation_method == 'static'", "pip.publicipaddresses[0].dns_settings.domain_name_label == domain_name"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts for all public ips", "module": "azure_rm_publicipaddress_facts", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for all public ips"}, "module_options": {"resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove public ip", "module": "azure_rm_publicipaddress", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Remove public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts for a public ip", "module": "azure_rm_publicipaddress_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {"name": "Gather facts for a public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "pip{{ rpfx }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_publicipaddress/tasks/main.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_publicipaddress", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_resourcegroup": {"py/object": "struct4.Role", "name": "azure_rm_resourcegroup", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup", "fqcn": "azure_rm_resourcegroup", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": null, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get resource group facts", "module": "azure_rm_resourcegroup_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Get resource group facts", "register": "rg"}, "module_options": {"name": "{{ resource_group }}", "list_resources": true}, "executable": "azure_rm_resourcegroup_facts", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["rg.resourcegroups | length == 1", "rg.resourcegroups[0].resources | length >= 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create resource group (idempontent)", "module": "azure_rm_resourcegroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "Create resource group (idempontent)", "register": "output"}, "module_options": {"name": "{{ resource_group }}", "location": "{{ rg.resourcegroups[0].location }}"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete resource group", "module": "azure_rm_resourcegroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {"name": "delete resource group", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_resourcegroup", "executable_type": "Module", "fqcn": "azure_rm_resourcegroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resourcegroup/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_resourcegroup", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_subnet": {"py/object": "struct4.Role", "name": "azure_rm_subnet", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet", "fqcn": "azure_rm_subnet", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"name": "My_Virtual_Network", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create route table", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create route table", "register": "route_table"}, "module_options": {"name": "routetableforsubnet", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Catch invalid cidr", "module": "azure_rm_subnet", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Catch invalid cidr", "register": "output", "ignore_errors": true}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.failed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the subnet back", "module": "azure_rm_subnet", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add the subnet back (idempontent)", "module": "azure_rm_subnet", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Add the subnet back (idempontent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create network security group", "module": "azure_rm_securitygroup", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "secgroupfoo", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Should be idempotent", "module": "azure_rm_subnet", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Should be idempotent", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "service_endpoints": [{"service": "Microsoft.Sql", "locations": ["eastus", "westus"]}]}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create network security group in another resource group", "module": "azure_rm_securitygroup", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Create network security group in another resource group", "register": "nsg"}, "module_options": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Update the subnet", "module": "azure_rm_subnet", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "route_table": "{{ route_table.id }}", "security_group": {"name": "secgroupfoo", "resource_group": "{{ resource_group_secondary }}"}}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.network_security_group.id == nsg.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the subnet (idempotent)", "module": "azure_rm_subnet", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Update the subnet (idempotent)", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/16", "security_group": "{{ nsg.state.id }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get subnet facts", "module": "azure_rm_subnet_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Get subnet facts", "register": "output"}, "module_options": {"name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet_facts", "executable_type": "Module", "fqcn": "azure_rm_subnet_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.subnets[0]['id'] != None", "output.subnets[0]['resource_group'] != None", "output.subnets[0]['virtual_network_name'] != None", "output.subnets[0]['name'] != None", "output.subnets[0]['address_prefix_cidr'] != None", "output.subnets[0]['route_table'] != None", "output.subnets[0]['security_group'] != None", "output.subnets[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove subnet", "module": "azure_rm_subnet", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove subnet (idempotent)", "module": "azure_rm_subnet", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove subnet (idempotent)", "register": "output"}, "module_options": {"state": "absent", "name": "foobar", "virtual_network_name": "My_Virtual_Network", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove security group", "module": "azure_rm_securitygroup", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "secgroupfoo", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Remove virtual network", "module": "azure_rm_virtualnetwork", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_subnet/tasks/main.yml", "options": {"name": "Remove virtual network"}, "module_options": {"name": "My_Virtual_Network", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_subnet", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_acs": {"py/object": "struct4.Role", "name": "azure_rm_acs", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs", "fqcn": "azure_rm_acs", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create an ACS instance - DCOS", "module": "azure_rm_acs", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - DCOS", "module": "azure_rm_acs", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - DCOS", "register": "output"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the DCOS ACS instance - DCOS", "module": "azure_rm_acs", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the DCOS ACS instance - DCOS"}, "module_options": {"name": "acsdcos{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "DCOS", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acsdcos{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an ACS instance - Swarm", "module": "azure_rm_acs", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Create an ACS instance - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well created"}, "module_options": {"that": ["output.changed", "output.state.provisioning_state == 'Succeeded'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Scale the ACS instance from 1 to 2 - Swarm", "module": "azure_rm_acs", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Scale the ACS instance from 1 to 2 - Swarm", "register": "output"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the ACS instance is well scaled", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Assert the ACS instance is well scaled"}, "module_options": {"that": ["output.changed", "output.state.agent_pool_profiles[0].count == 2"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the ACS instance - Swarm", "module": "azure_rm_acs", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_acs/tasks/main.yml", "options": {"name": "Delete the ACS instance - Swarm"}, "module_options": {"name": "acssw{{ resource_group | hash('md5') | truncate(7, True, '') }}", "resource_group": "{{ resource_group }}", "location": "eastus", "orchestration_platform": "Swarm", "state": "absent", "master_profile": [{"count": 1, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(10, True, '') }}", "vm_size": "Standard_A0"}], "linux_profile": [{"admin_username": "azureuser", "ssh_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+io238wdhjkasndq238e2/983289dasjnasey823/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+928dfsjsejk298r/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+dsajda82e78sdja/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt juliens@msft.com"}], "agent_pool_profiles": [{"name": "default", "count": 2, "dns_prefix": "acssw{{ resource_group | hash('md5') | truncate(12, True, '') }}", "vm_size": "Standard_A0"}], "diagnostics_profile": false}, "executable": "azure_rm_acs", "executable_type": "Module", "fqcn": "azure_rm_acs", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_acs", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_virtualmachineextension": {"py/object": "struct4.Role", "name": "azure_rm_virtualmachineextension", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension", "fqcn": "azure_rm_virtualmachineextension", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create Random Storage Account Name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Random Storage Account Name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public IP address", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create public IP address"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Dynamic", "name": "testPublicIP"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "rules": [{"name": "SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 1001, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network interface card", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create virtual network interface card"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNIC", "virtual_network": "testVnet", "subnet": "testSubnet", "public_ip_name": "testPublicIP", "security_group_name": "testNetworkSecurityGroup"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create a storage account", "module": "azure_rm_storageaccount", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "create a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM", "module": "azure_rm_virtualmachine", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "network_interfaces": "testNIC", "storage_account_name": "{{ storage_account }}", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VM Extension", "module": "azure_rm_virtualmachineextension", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Create VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VM Extension ran", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension ran"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query extension", "module": "azure_rm_virtualmachineextension_facts", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Query extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List extensions", "module": "azure_rm_virtualmachineextension_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "List extensions", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "virtual_machine_name": "testVM"}, "executable": "azure_rm_virtualmachineextension_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["results.changed == False", "results.extensions[0]['id'] != None", "results.extensions[0]['resource_group'] != None", "results.extensions[0]['virtual_machine_name'] != None", "results.extensions[0]['name'] != None", "results.extensions[0]['location'] != None", "results.extensions[0]['publisher'] != None", "results.extensions[0]['type'] != None", "results.extensions[0]['settings'] != None", "results.extensions[0]['auto_upgrade_minor_version'] != None", "results.extensions[0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM Extension", "module": "azure_rm_virtualmachineextension", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM Extension", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMExtension", "virtual_machine_name": "testVM", "state": "absent", "publisher": "Microsoft.Azure.Extensions", "virtual_machine_extension_type": "CustomScript", "type_handler_version": 2.0, "auto_upgrade_minor_version": true, "settings": {"commandToExecute": "hostname"}}, "executable": "azure_rm_virtualmachineextension", "executable_type": "Module", "fqcn": "azure_rm_virtualmachineextension", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that VM Extension deleted", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Assert that VM Extension deleted"}, "module_options": {"that": "results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVM", "state": "absent", "remove_on_absent": ["all"], "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "network_interfaces": "testNIC", "storage_container": "osdisk", "storage_blob": "osdisk.vhd", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete a storage account", "module": "azure_rm_storageaccount", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete a storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "type": "Standard_LRS", "state": "absent", "force_delete_nonempty": true}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete Network Security Group that allows SSH", "module": "azure_rm_securitygroup", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete Network Security Group that allows SSH"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testNetworkSecurityGroup", "state": "absent"}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachineextension/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualmachineextension", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_storageblob": {"py/object": "struct4.Role", "name": "azure_rm_storageblob", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob", "fqcn": "azure_rm_storageblob", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create storage account name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account name"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create container", "module": "azure_rm_storageblob", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Create container"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Force upload blob", "module": "azure_rm_storageblob", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Force upload blob"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}, "force": true}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "storage blob seems to have some timing issues", "module": "wait_for", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "storage blob seems to have some timing issues"}, "module_options": {"delay": 10}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Upload blob idempotence", "module": "azure_rm_storageblob", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Upload blob idempotence", "register": "upload_facts"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "src": "./targets/azure_rm_storageblob/files/Ratings.png", "content_type": "image/png", "tags": {"val1": "foo", "val2": "bar"}}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not upload_facts.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download file idempotence", "module": "azure_rm_storageblob", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file idempotence", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "./targets/azure_rm_storageblob/files/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "file", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": "path=\"/tmp/Ratings.png\" state=absent", "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download file", "module": "azure_rm_storageblob", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Download file", "register": "download_results"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "dest": "/tmp/Ratings.png"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "download_results.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "find", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"register": "find_results"}, "module_options": "paths='/tmp' patterns=\"Ratings.png\"", "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "find_results['matched'] == 1"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do not delete container that has blobs", "module": "azure_rm_storageblob", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Do not delete container that has blobs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete blob object", "module": "azure_rm_storageblob", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete blob object", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "blob": "Ratings.png", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete container", "module": "azure_rm_storageblob", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete container", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "account_name": "{{ storage_account }}", "container_name": "my-blobs", "state": "absent"}, "executable": "azure_rm_storageblob", "executable_type": "Module", "fqcn": "azure_rm_storageblob", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage account", "module": "azure_rm_storageaccount", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_storageblob/tasks/main.yml", "options": {"name": "Delete storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "state": "absent"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_storageblob", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_resource": {"py/object": "struct4.Role", "name": "azure_rm_resource", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource", "fqcn": "azure_rm_resource", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"nsgname": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "storageaccountname": "stacc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "dbname": "mdb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus"}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that nothing has changed", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that nothing has changed"}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Call REST API", "module": "azure_rm_resource", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Call REST API", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}", "body": {"location": "eastus", "tags": {"a": "abc", "b": "cde"}}, "idempotency": true}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that something has changed", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that something has changed"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to get information about account", "module": "azure_rm_resource_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to get information about account", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups", "resource_name": "{{ nsgname }}"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to query a list", "module": "azure_rm_resource_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list", "register": "output"}, "module_options": {"api_version": "2018-02-01", "resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to query a list - same without API version", "module": "azure_rm_resource_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to query a list - same without API version", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "network", "resource_type": "networksecuritygroups"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response[0]['name'] != None", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Query all the resources in the resource group", "module": "azure_rm_resource_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Query all the resources in the resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "resource_type": "resources"}, "executable": "azure_rm_resource_facts", "executable_type": "Module", "fqcn": "azure_rm_resource_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert value was returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert value was returned"}, "module_options": {"that": ["not output.changed", "output.response | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account that requires LRO polling", "module": "azure_rm_resource", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Create storage account that requires LRO polling", "register": "output"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "api_version": "2018-07-01", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "body": {"sku": {"name": "Standard_GRS"}, "kind": "Storage", "location": "eastus"}}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that storage was successfully created", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that storage was successfully created"}, "module_options": {"that": "output['response']['name'] == '{{ storageaccountname }}'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Try to storage keys -- special case when subresource part has no name", "module": "azure_rm_resource", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Try to storage keys -- special case when subresource part has no name", "register": "keys"}, "module_options": {"resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}", "subresource": [{"type": "listkeys"}], "api_version": "2018-03-01-preview", "method": "POST"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that key was returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Assert that key was returned"}, "module_options": {"that": "keys['response']['keys'][0]['value'] | length > 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete storage - without API version", "module": "azure_rm_resource", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_resource/tasks/main.yml", "options": {"name": "Delete storage - without API version"}, "module_options": {"polling_timeout": 600, "polling_interval": 60, "method": "DELETE", "resource_group": "{{ resource_group }}", "provider": "Storage", "resource_type": "storageAccounts", "resource_name": "{{ storageaccountname }}"}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_resource", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_autoscale": {"py/object": "struct4.Role", "name": "azure_rm_autoscale", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale", "fqcn": "azure_rm_autoscale", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "name": "scale{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "address_prefixes": "10.0.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "address_prefix": "10.0.1.0/24", "virtual_network": "testVnet"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Create VMSS", "register": "vmss"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVMSS{{ rpfx }}", "vm_size": "Standard_DS1_v2", "admin_username": "testuser", "ssh_password_enabled": true, "admin_password": "Password1234!", "capacity": 2, "virtual_network_name": "testVnet", "subnet_name": "testSubnet", "upgrade_policy": "Manual", "tier": "Standard", "managed_disk_type": "Standard_LRS", "os_disk_caching": "ReadWrite", "image": {"offer": "CoreOS", "publisher": "CoreOS", "sku": "Stable", "version": "latest"}, "data_disks": [{"lun": 0, "disk_size_gb": 64, "caching": "ReadWrite", "managed_disk_type": "Standard_LRS"}]}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create auto scaling", "module": "azure_rm_autoscale", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": {"name": "testVMSS{{ rpfx }}", "types": "virtualMachineScaleSets", "namespace": "Microsoft.Compute"}, "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "create auto scaling (idemponent)", "module": "azure_rm_autoscale", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "create auto scaling (idemponent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition", "recurrence_timezone": "China Standard Time", "recurrence_mins": ["0"], "min_count": "1", "max_count": "1", "recurrence_frequency": "Week", "recurrence_hours": ["18"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update auto scaling", "module": "azure_rm_autoscale", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "update auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "target": "{{ vmss.ansible_facts.azure_vmss.id }}", "enabled": true, "profiles": [{"count": "1", "recurrence_days": ["Monday"], "name": "Auto created scale condition 0", "rules": [{"time_aggregation": "Average", "time_window": 10, "direction": "Increase", "metric_name": "Percentage CPU", "metric_resource_uri": "{{ vmss.ansible_facts.azure_vmss.id }}", "value": "1", "threshold": 70, "cooldown": 5, "time_grain": 1, "statistic": "Average", "operator": "GreaterThan", "type": "ChangeCount"}], "max_count": "1", "recurrence_mins": ["0"], "min_count": "1", "recurrence_timezone": "China Standard Time", "recurrence_frequency": "Week", "recurrence_hours": ["6"]}]}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.profiles[0].rules[0].metric_resource_uri == vmss.ansible_facts.azure_vmss.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling (check mode)", "module": "azure_rm_autoscale", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling", "module": "azure_rm_autoscale", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete auto scaling (idemponetent)", "module": "azure_rm_autoscale", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "delete auto scaling (idemponetent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_autoscale", "executable_type": "Module", "fqcn": "azure_rm_autoscale", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean VMSS", "module": "azure_rm_virtualmachinescaleset", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean VMSS"}, "module_options": {"resource_group": "{{ resource_group }}", "vm_size": "Standard_DS1_v2", "name": "testVMSS{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_virtualmachinescaleset", "executable_type": "Module", "fqcn": "azure_rm_virtualmachinescaleset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Clean subnet", "module": "azure_rm_subnet", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testSubnet", "virtual_network": "testVnet", "state": "absent"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Clean virtual network", "module": "azure_rm_virtualnetwork", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_autoscale/tasks/main.yml", "options": {"name": "Clean virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testVnet", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_autoscale", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_cosmosdbaccount": {"py/object": "struct4.Role", "name": "azure_rm_cosmosdbaccount", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount", "fqcn": "azure_rm_cosmosdbaccount", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"dbname": "cosmos{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnname": "vn{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "subnetname": "subnet{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vnname }}", "address_prefixes_cidr": ["10.1.0.0/16", "172.100.0.0/16"], "dns_servers": ["127.0.0.1", "127.0.0.3"]}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"name": "{{ subnetname }}", "virtual_network_name": "{{ vnname }}", "resource_group": "{{ resource_group }}", "address_prefix_cidr": "10.1.0.0/24"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}], "database_account_offer_type": "Standard"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}]}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Database Account -- change something", "module": "azure_rm_cosmosdbaccount", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Create again instance of Database Account -- change something", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "location": "eastus", "kind": "global_document_db", "geo_rep_locations": [{"name": "eastus", "failover_priority": 0}, {"name": "westus", "failover_priority": 1}], "database_account_offer_type": "Standard", "is_virtual_network_filter_enabled": true, "virtual_network_rules": [{"subnet": {"resource_group": "{{ resource_group }}", "virtual_network_name": "{{ vnname }}", "subnet_name": "{{ subnetname }}"}, "ignore_missing_vnet_service_endpoint": true}], "enable_automatic_failover": true}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of single account", "module": "azure_rm_cosmosdbaccount_facts", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts of single account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "all"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['primary_master_key'] != None", "output.accounts[0]['secondary_master_key'] != None", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts with readonly keys", "module": "azure_rm_cosmosdbaccount_facts", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Get facts with readonly keys", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "retrieve_keys": "readonly", "retrieve_connection_strings": true}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "'primary_master_key' not in output.accounts[0]", "'secondary_master_key' not in output.accounts[0]", "output.accounts[0]['primary_readonly_master_key'] != None", "output.accounts[0]['secondary_readonly_master_key'] != None", "output.accounts[0]['connection_strings'] | length > 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "List acounts by resource group", "module": "azure_rm_cosmosdbaccount_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "List acounts by resource group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}"}, "executable": "azure_rm_cosmosdbaccount_facts", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.accounts[0]['id'] != None", "output.accounts[0]['resource_group'] != None", "output.accounts[0]['name'] != None", "output.accounts[0]['location'] != None", "output.accounts[0]['kind'] != None", "output.accounts[0]['consistency_policy'] != None", "output.accounts[0]['failover_policies'] != None", "output.accounts[0]['read_locations'] != None", "output.accounts[0]['write_locations'] != None", "output.accounts[0]['database_account_offer_type'] != None", "output.accounts[0]['ip_range_filter'] != None", "output.accounts[0]['is_virtual_network_filter_enabled'] != None", "output.accounts[0]['enable_automatic_failover'] != None", "output.accounts[0]['enable_cassandra'] != None", "output.accounts[0]['enable_table'] != None", "output.accounts[0]['enable_gremlin'] != None", "output.accounts[0]['virtual_network_rules'] != None", "output.accounts[0]['enable_multiple_write_locations'] != None", "output.accounts[0]['document_endpoint'] != None", "output.accounts[0]['provisioning_state'] != None", "output.accounts[0]['tags'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Database Account -- check mode", "module": "azure_rm_cosmosdbaccount", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Database Account", "module": "azure_rm_cosmosdbaccount", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Delete instance of Database Account", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ dbname }}", "state": "absent"}, "executable": "azure_rm_cosmosdbaccount", "executable_type": "Module", "fqcn": "azure_rm_cosmosdbaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cosmosdbaccount/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_cosmosdbaccount", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_roledefinition": {"py/object": "struct4.Role", "name": "azure_rm_roledefinition", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition", "fqcn": "azure_rm_roledefinition", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix resource prefix", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Fix resource prefix", "run_once": true}, "module_options": {"role_name": "{{ (resource_group | replace('-','x'))[-8:] }}{{ 1000 | random }}testrole", "subscription_id": "{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}", "principal_id": "{{ lookup('env','AZURE_CLIENT_ID') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role definition", "module": "azure_rm_roledefinition", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts by type", "module": "azure_rm_roledefinition_facts", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by type", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length > 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts by name", "module": "azure_rm_roledefinition_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts by name", "register": "facts", "until": "{{ facts.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "role_name": "{{ role_name }}"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['roledefinitions'] | length == 1", "facts['roledefinitions'][0]['permissions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['not_data_actions'] | length == 1", "facts['roledefinitions'][0]['permissions'][0]['data_actions'] | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the role definition (idempotent)", "module": "azure_rm_roledefinition", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition (idempotent)", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output not changed", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the role definition", "module": "azure_rm_roledefinition", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Update the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "permissions": [{"actions": ["Microsoft.Compute/virtualMachines/read", "Microsoft.Compute/virtualMachines/start/action"], "not_actions": ["Microsoft.Compute/virtualMachines/write"], "data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"], "not_data_actions": ["Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write"]}], "assignable_scopes": ["/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}"]}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert output changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert output changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get role definition facts", "module": "azure_rm_roledefinition_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get role definition facts", "register": "roledef", "until": "{{ roledef.roledefinitions | length > 0 }}", "retries": 50, "delay": 60}, "module_options": {"role_name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "type": "custom"}, "executable": "azure_rm_roledefinition_facts", "executable_type": "Module", "fqcn": "azure_rm_roledefinition_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert role definition facts", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert role definition facts"}, "module_options": {"that": ["roledef['roledefinitions'] | length == 1", "roledef['roledefinitions'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role assignment (Check Mode)", "module": "azure_rm_roleassignment", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role definition check mode", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role definition check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a role assignment", "module": "azure_rm_roleassignment", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Create a role assignment", "register": "output"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee_object_id": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert creating role assignment", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Assert creating role assignment"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_roleassignment_facts", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "assignee": "{{ principal_id }}", "role_definition_id": "{{ roledef['roledefinitions'][0]['id'] }}"}, "executable": "azure_rm_roleassignment_facts", "executable_type": "Module", "fqcn": "azure_rm_roleassignment_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert role assignment facts", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert role assignment facts"}, "module_options": {"that": ["facts['roleassignments'] | length > 0", "facts['roleassignments'][0]['id']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete role assignment", "module": "azure_rm_roleassignment", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "delete role assignment"}, "module_options": {"name": "{{ facts['roleassignments'][0]['id'].split('/')[-1] }}", "scope": "/subscriptions/{{ subscription_id }}", "state": "absent"}, "executable": "azure_rm_roleassignment", "executable_type": "Module", "fqcn": "azure_rm_roleassignment", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the role definition (Check Mode)", "module": "azure_rm_roledefinition", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition (Check Mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert deleting role definition check mode", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "assert deleting role definition check mode"}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the role definition", "module": "azure_rm_roledefinition", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {"name": "Delete the role definition", "register": "output"}, "module_options": {"name": "{{ role_name }}", "scope": "/subscriptions/{{ subscription_id }}/resourceGroups/{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_roledefinition", "executable_type": "Module", "fqcn": "azure_rm_roledefinition", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_roledefinition/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_roledefinition", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_hdinsightcluster": {"py/object": "struct4.Role", "name": "azure_rm_hdinsightcluster", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster", "fqcn": "azure_rm_hdinsightcluster", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "storage{{ rpfx }}", "account_type": "Standard_LRS", "location": "eastus2"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Sample for Azure REST API - StorageAccounts_ListKeys", "module": "azure_rm_resource", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Sample for Azure REST API - StorageAccounts_ListKeys", "register": "storage_output"}, "module_options": {"api_version": "2018-07-01", "method": "POST", "resource_group": "{{ resource_group }}", "provider": "storage", "resource_type": "storageaccounts", "resource_name": "storage{{ rpfx }}", "subresource": [{"type": "listkeys"}]}, "executable": "azure_rm_resource", "executable_type": "Module", "fqcn": "azure_rm_resource", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "storage_output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the resource instance is well created", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the resource instance is well created"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- idempotent", "module": "azure_rm_hdinsightcluster", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- idempotent", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}]}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has not changed", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has not changed"}, "module_options": {"that": ["output.changed == false"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create again instance of Cluster -- resize and add tags", "module": "azure_rm_hdinsightcluster", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Create again instance of Cluster -- resize and add tags", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "location": "eastus2", "cluster_version": 3.6, "os_type": "linux", "tier": "standard", "cluster_definition": {"kind": "spark", "gateway_rest_username": "http-user", "gateway_rest_password": "MuABCPassword!!@123"}, "storage_accounts": [{"name": "storage{{ rpfx }}.blob.core.windows.net", "is_default": true, "container": "cluster{{ rpfx }}", "key": "{{ storage_output['response']['keys'][0]['value'] }}"}], "compute_profile_roles": [{"name": "headnode", "target_instance_count": 1, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "workernode", "target_instance_count": 2, "vm_size": "Standard_D3", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}, {"name": "zookeepernode", "target_instance_count": 3, "vm_size": "Medium", "linux_profile": {"username": "sshuser", "password": "MuABCPassword!!@123"}}], "tags": {"aaa": "bbb"}}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "debug", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {}, "module_options": {"var": "output"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of Cluster", "module": "azure_rm_hdinsightcluster_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Get facts of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}"}, "executable": "azure_rm_hdinsightcluster_facts", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts are returned", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert that facts are returned"}, "module_options": {"that": ["output.changed == False", "output.clusters[0]['id'] != None", "output.clusters[0]['resource_group'] != None", "output.clusters[0]['name'] != None", "output.clusters[0]['location'] != None", "output.clusters[0]['cluster_version'] != None", "output.clusters[0]['os_type'] != None", "output.clusters[0]['tier'] != None", "output.clusters[0]['cluster_definition'] != None", "output.clusters[0]['compute_profile_roles'] != None", "output.clusters[0]['connectivity_endpoints'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Cluster -- check mode", "module": "azure_rm_hdinsightcluster", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster -- check mode", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete instance of Cluster", "module": "azure_rm_hdinsightcluster", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Delete instance of Cluster", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "cluster{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_hdinsightcluster", "executable_type": "Module", "fqcn": "azure_rm_hdinsightcluster", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the state has changed", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_hdinsightcluster/tasks/main.yml", "options": {"name": "Assert the state has changed"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_hdinsightcluster", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_networkinterface": {"py/object": "struct4.Role", "name": "azure_rm_networkinterface", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface", "fqcn": "azure_rm_networkinterface", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name1": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "applicationsecuritygroup_name2": "asg{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}", "nic_name1": "nic1{{ resource_group | hash('md5') | truncate(5, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "tn{{ rpfx }}", "address_prefix": "10.10.0.0/24", "virtual_network": "tn{{ rpfx }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create public ip", "module": "azure_rm_publicipaddress", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "create load balancer with multiple parameters", "module": "azure_rm_loadbalancer", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "create load balancer with multiple parameters", "register": "lb"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "frontend_ip_configurations": [{"name": "frontendipconf0", "public_ip_address": "pip{{ rpfx }}"}], "backend_address_pools": [{"name": "backendaddrpool0"}, {"name": "backendaddrpool1"}], "probes": [{"name": "prob0", "port": 80}], "inbound_nat_pools": [{"name": "inboundnatpool0", "frontend_ip_configuration_name": "frontendipconf0", "protocol": "Tcp", "frontend_port_range_start": 80, "frontend_port_range_end": 81, "backend_port": 8080}], "load_balancing_rules": [{"name": "lbrbalancingrule0", "frontend_ip_configuration": "frontendipconf0", "backend_address_pool": "backendaddrpool0", "frontend_port": 80, "backend_port": 80, "probe": "prob0"}]}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network id (check mode)", "module": "azure_rm_networkinterface", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network id (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with virtual_network resource_group", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with virtual_network resource_group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": {"name": "tn{{ rpfx }}", "resource_group": "{{ resource_group_secondary }}"}, "subnet": "tn{{ rpfx }}", "public_ip": false, "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 1", "not facts.networkinterfaces[0].security_group", "not facts.networkinterfaces[0].ip_configurations[0].public_ip_address", "not facts.networkinterfaces[0].enable_ip_forwarding", "not facts.networkinterfaces[0].enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC with ip configurations (idempotent)", "module": "azure_rm_networkinterface", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC with ip configurations (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ facts.networkinterfaces[0].resource_group }}", "name": "{{ facts.networkinterfaces[0].name }}", "virtual_network": "{{ facts.networkinterfaces[0].virtual_network }}", "create_with_security_group": false, "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}], "subnet": "{{ facts.networkinterfaces[0].subnet }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create most simple NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create most simple NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update security group (check mode)", "module": "azure_rm_networkinterface", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update security group (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip": false, "security_group": "tn{{ rpfx }}sg"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update public ip address (check mode)", "module": "azure_rm_networkinterface", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update public ip address (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "public_ip_address_name": "tn{{ rpfx }}", "create_with_security_group": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update accelerated networking (check mode)", "module": "azure_rm_networkinterface", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update accelerated networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "create_with_security_group": false, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update IP forwarding networking (check mode)", "module": "azure_rm_networkinterface", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update IP forwarding networking (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "enable_ip_forwarding": true, "public_ip": false}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update dns server (check mode)", "module": "azure_rm_networkinterface", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update dns server (check mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": false, "public_ip": false, "dns_servers": ["8.9.10.11", "7.8.9.10"]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update NIC", "module": "azure_rm_networkinterface", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "security_group": "tn{{ rpfx }}sg", "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11', '7.8.9.10']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Complicated NIC (idempontent)", "module": "azure_rm_networkinterface", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Complicated NIC (idempontent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "enable_accelerated_networking": true, "security_group": "tn{{ rpfx }}sg", "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11", "7.8.9.10"], "ip_configurations": [{"name": "{{ facts.networkinterfaces[0].ip_configurations[0].name }}", "private_ip_address": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_address }}", "private_ip_allocation_method": "{{ facts.networkinterfaces[0].ip_configurations[0].private_ip_allocation_method }}", "primary": "{{ facts.networkinterfaces[0].ip_configurations[0].primary }}"}, {"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces | length == 1", "facts.networkinterfaces[0].id == output.state.id", "facts.networkinterfaces[0].ip_configurations | length == 2", "facts.networkinterfaces[0].security_group.endswith(\"tn{{ rpfx }}sg\")", "facts.networkinterfaces[0].enable_accelerated_networking", "facts.networkinterfaces[0].enable_ip_forwarding"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove one dns server and ip configuration", "module": "azure_rm_networkinterface", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Remove one dns server and ip configuration", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "security_group": "tn{{ rpfx }}sg", "enable_accelerated_networking": true, "enable_ip_forwarding": true, "dns_servers": ["8.9.10.11"], "ip_configurations": [{"name": "ipconfig1", "public_ip_name": "tn{{ rpfx }}", "primary": true, "load_balancer_backend_address_pools": ["{{ lb.state.backend_address_pools[0].id }}", {"name": "backendaddrpool1", "load_balancer": "lb{{ rpfx }}"}]}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.dns_settings.dns_servers == ['8.9.10.11']", "output.state.enable_ip_forwarding", "output.state.network_security_group.name == \"tn{{ rpfx }}sg\"", "output.state.ip_configurations | length == 1", "output.state.ip_configurations[0].public_ip_address.name == \"tn{{ rpfx }}\"", "output.state.enable_accelerated_networking"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create application security group(check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group(check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert check mode creation", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert check mode creation"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group", "module": "azure_rm_applicationsecuritygroup", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert application security group creation", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert application security group creation"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Application security group", "module": "azure_rm_applicationsecuritygroup_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get Application security group", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}"}, "executable": "azure_rm_applicationsecuritygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert facts"}, "module_options": {"that": ["facts['applicationsecuritygroups'] | length == 1", "facts['applicationsecuritygroups'][0]['name'] != None", "facts['applicationsecuritygroups'][0]['location'] != None", "facts['applicationsecuritygroups'][0]['provisioning_state'] != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create application security group (idempotent)", "module": "azure_rm_applicationsecuritygroup", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create application security group (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update application security group", "module": "azure_rm_applicationsecuritygroup", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "tags": {"testing": "testing", "foo": "bar"}}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert update", "module": "assert", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert update"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Application security group in secondary resource group", "module": "azure_rm_applicationsecuritygroup", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Application security group in secondary resource group", "register": "asg"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create Nic with application security groups", "module": "azure_rm_networkinterface", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}", "{{ asg.id }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert creation succeeded", "module": "assert", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert creation succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Nic with application security groups (idempotent)", "module": "azure_rm_networkinterface", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Create Nic with application security groups (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ asg.id }}", "{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert idempotent", "module": "assert", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Nic with application security groups", "module": "azure_rm_networkinterface", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Update Nic with application security groups", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "virtual_network": "{{ vn.state.id }}", "subnet": "tn{{ rpfx }}", "create_with_security_group": true, "public_ip": false, "ip_configurations": [{"name": "ipconfig1", "application_security_groups": ["{{ applicationsecuritygroup_name1 }}"], "primary": true}]}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert update succeeded", "module": "assert", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "assert update succeeded"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get fact of the new created NIC", "module": "azure_rm_networkinterface_facts", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Get fact of the new created NIC", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.networkinterfaces[0].ip_configurations[0].application_security_groups | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC (check mode)", "module": "azure_rm_networkinterface", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 55, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the NIC (idempotent)", "module": "azure_rm_networkinterface", "index": 56, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tn{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 57, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "delete load balancer", "module": "azure_rm_loadbalancer", "index": 58, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete load balancer"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "lb{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_loadbalancer", "executable_type": "Module", "fqcn": "azure_rm_loadbalancer", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "delete public ip", "module": "azure_rm_publicipaddress", "index": 59, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "delete public ip"}, "module_options": {"name": "pip{{ rpfx }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the NIC", "module": "azure_rm_networkinterface", "index": 60, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the NIC"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ nic_name1 }}", "state": "absent"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the application security group (check mode)", "module": "azure_rm_applicationsecuritygroup", "index": 61, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert delete check mode", "module": "assert", "index": 62, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert delete check mode"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the application security group", "module": "azure_rm_applicationsecuritygroup", "index": 63, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete the application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ applicationsecuritygroup_name1 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the deletion", "module": "assert", "index": 64, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Assert the deletion"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete second application security group", "module": "azure_rm_applicationsecuritygroup", "index": 65, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_networkinterface/tasks/main.yml", "options": {"name": "Delete second application security group", "register": "output"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ applicationsecuritygroup_name2 }}", "state": "absent"}, "executable": "azure_rm_applicationsecuritygroup", "executable_type": "Module", "fqcn": "azure_rm_applicationsecuritygroup", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_networkinterface", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_virtualmachine": {"py/object": "struct4.Role", "name": "azure_rm_virtualmachine", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine", "fqcn": "azure_rm_virtualmachine", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/main.yml", "options": {}, "module_options": "virtualmachine.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}], "role": "azure_rm_virtualmachine", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "virtualmachine.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create random names", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create random names"}, "module_options": {"storage_account": "{{ resource_group | hash('md5') | truncate(24, True, '') }}", "vm_name1": "vm1{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name2": "vm2{{ resource_group | hash('md5') | truncate(5, True, '') }}", "vm_name3": "vm3{{ resource_group | hash('md5') | truncate(5, True, '') }}", "abs_name1": "avbs1{{ resource_group | hash('md5') | truncate(3, True, '') }}", "abs_name2": "avbs2{{ resource_group | hash('md5') | truncate(3, True, '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create storage account", "module": "azure_rm_storageaccount", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create storage account"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ storage_account }}", "account_type": "Standard_LRS"}, "executable": "azure_rm_storageaccount", "executable_type": "Module", "fqcn": "azure_rm_storageaccount", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name1 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name1 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create public ip", "module": "azure_rm_publicipaddress", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create security group", "module": "azure_rm_securitygroup", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create security group"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "purge_rules": true, "rules": [{"name": "ALLOW_SSH", "protocol": "Tcp", "destination_port_range": 22, "access": "Allow", "priority": 100, "direction": "Inbound"}, {"name": "ALLOW_HTTP", "protocol": "Tcp", "destination_port_range": 80, "access": "Allow", "priority": 110, "direction": "Inbound"}]}, "executable": "azure_rm_securitygroup", "executable_type": "Module", "fqcn": "azure_rm_securitygroup", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NIC for single nic VM", "module": "azure_rm_networkinterface", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NIC for single nic VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "virtual_network": "{{ vm_name1 }}", "subnet": "{{ vm_name1 }}", "public_ip_name": "{{ vm_name1 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine with a single NIC", "module": "azure_rm_virtualmachine", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "custom_data": "#!/bin/sh\necho \"custom_data was executed\" > /tmp/custom_data.txt\n"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Restart the virtual machine", "module": "azure_rm_virtualmachine", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Restart the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "restarted": true, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deallocate the virtual machine", "module": "azure_rm_virtualmachine", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Deallocate the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "allocated": false, "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate == 'deallocated'", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start the virtual machine", "module": "azure_rm_virtualmachine", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Start the virtual machine", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.powerstate in ['starting', 'running']", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent with a single NIC", "module": "azure_rm_virtualmachine", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a single NIC", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resize VM", "module": "azure_rm_virtualmachine", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Resize VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "vm_size": "Standard_A1", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name1 }}", "storage_blob": "{{ vm_name1 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "network_interfaces": "{{ vm_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["output.changed", "output.ansible_facts.azure_vm.properties.hardwareProfile.vmSize == \"Standard_A1\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "NIC should be gone", "module": "azure_rm_networkinterface_facts", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "NIC should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_networkinterfaces | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "PIP should be gone", "module": "azure_rm_publicipaddress_facts", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "PIP should be gone", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name1 }}"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "azure_publicipaddresses | length == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual machine without public ip address", "module": "azure_rm_virtualmachine", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine without public ip address", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "vm_size": "Standard_A0", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "public_ip_allocation_method": "Disabled", "availability_set": "{{ abs_name1 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["not 'publicIPAddress' in output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete VM with no public ip", "module": "azure_rm_virtualmachine", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM with no public ip", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvmnoip", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"niclist": [{"name": "testnic011", "resource_group": "{{ resource_group_secondary }}"}, {"name": "testnic012", "resource_group": "{{ resource_group_secondary  }}"}]}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create an availability set", "module": "azure_rm_availabilityset", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create an availability set"}, "module_options": {"name": "{{ abs_name2 }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_availabilityset", "executable_type": "Module", "fqcn": "azure_rm_availabilityset", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual network", "module": "azure_rm_virtualnetwork", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual network", "register": "vn"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefixes": "10.10.0.0/16"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Add subnet", "module": "azure_rm_subnet", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Add subnet"}, "module_options": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vm_name2 }}", "address_prefix": "10.10.0.0/24", "virtual_network": "{{ vm_name2 }}"}, "executable": "azure_rm_subnet", "executable_type": "Module", "fqcn": "azure_rm_subnet", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create NICs for dual nic VM", "module": "azure_rm_networkinterface", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create NICs for dual nic VM", "loop": "{{ niclist }}"}, "module_options": {"resource_group": "{{ item.resource_group }}", "name": "{{ item.name }}", "virtual_network": "{{ vn.state.id }}", "subnet": "{{ vm_name2 }}", "security_group": "{{ vm_name1 }}"}, "executable": "azure_rm_networkinterface", "executable_type": "Module", "fqcn": "azure_rm_networkinterface", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create virtual machine with two NICs", "module": "azure_rm_virtualmachine", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create virtual machine with two NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "os_disk_name": "testosdiskxx", "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}, "tags": {"abc": "def"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": ["azure_vm.properties.availabilitySet.id", "azure_vm.properties.storageProfile.osDisk.name == 'testosdiskxx'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve vms facts (filtering by name)", "module": "azure_rm_virtualmachine_facts", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve vms facts (filtering by name)", "register": "results"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 36, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length == 1", "results.vms[0].name == \"{{ vm_name2 }}\"", "results.vms[0].location == 'eastus'", "results.vms[0].admin_username == 'adminuser'", "results.vms[0].resource_group == \"{{ resource_group }}\"", "results.vms[0].power_state != None"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Retrieve facts by tags", "module": "azure_rm_virtualmachine_facts", "index": 37, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Retrieve facts by tags", "register": "results"}, "module_options": {"tags": ["abc:def"]}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that facts module returned the second vm", "module": "assert", "index": 38, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that facts module returned the second vm"}, "module_options": {"that": ["results.vms | length >= 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Should be idempotent with a dual NICs", "module": "azure_rm_virtualmachine", "index": 39, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Should be idempotent with a dual NICs", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "vm_size": "Standard_A0", "storage_account": "{{ storage_account }}", "storage_container": "{{ vm_name2 }}", "storage_blob": "{{ vm_name2 }}.vhd", "admin_username": "adminuser", "admin_password": "Password123!", "short_hostname": "testvm", "os_type": "Linux", "os_disk_size_gb": 64, "network_interfaces": "{{ niclist }}", "availability_set": "{{ abs_name2 }}", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 40, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generalize VM", "module": "azure_rm_virtualmachine", "index": 41, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Generalize VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "generalized": true}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather facts and check if machine is generalized", "module": "azure_rm_virtualmachine_facts", "index": 42, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Gather facts and check if machine is generalized", "register": "generalized_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}"}, "executable": "azure_rm_virtualmachine_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 43, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {}, "module_options": {"that": "generalized_output.vms[0].power_state == 'generalized'"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete dual NIC VM", "module": "azure_rm_virtualmachine", "index": 44, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete dual NIC VM", "async": 5000, "poll": 0}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name2 }}", "state": "absent", "vm_size": "Standard_A0"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image dict", "module": "azure_rm_virtualmachine", "index": 45, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image dict", "register": "fail_invalid_image_dict", "failed_when": "fail_invalid_image_dict.msg != \"parameter error: expecting image to contain [publisher, offer, sku, version] or [name, resource_group]\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"offer": "UbuntuServer"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error thrown with invalid image type", "module": "azure_rm_virtualmachine", "index": 46, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error thrown with invalid image type", "register": "fail_invalid_image_type", "failed_when": "fail_invalid_image_type.msg != \"parameter error: expecting image to be a string or dict not list\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": ["testing"]}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image", "module": "azure_rm_virtualmachine", "index": 47, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image", "register": "fail_missing_custom_image", "failed_when": "fail_missing_custom_image.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": "invalid-image"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "assert error finding missing custom image (dict style)", "module": "azure_rm_virtualmachine", "index": 48, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "assert error finding missing custom image (dict style)", "register": "fail_missing_custom_image_dict", "failed_when": "fail_missing_custom_image_dict.msg != \"Error could not find image with name invalid-image\""}, "module_options": {"resource_group": "{{ resource_group }}", "name": "testvm002", "image": {"name": "invalid-image"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create minimal VM with defaults", "module": "azure_rm_virtualmachine", "index": 49, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Create minimal VM with defaults", "register": "vm_output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "admin_username": "testuser", "admin_password": "Pass123$$$abx!", "vm_size": "Standard_B1ms", "image": {"offer": "UbuntuServer", "publisher": "Canonical", "sku": "16.04-LTS", "version": "latest"}}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete VM", "module": "azure_rm_virtualmachine", "index": 50, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Delete VM"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}", "remove_on_absent": "all_autocreated", "state": "absent"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query NIC", "module": "azure_rm_networkinterface_facts", "index": 51, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NIC", "register": "output_nic"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_networkinterface_facts", "executable_type": "Module", "fqcn": "azure_rm_networkinterface_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query NSG", "module": "azure_rm_securitygroup_facts", "index": 52, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query NSG", "register": "output_nsg"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_securitygroup_facts", "executable_type": "Module", "fqcn": "azure_rm_securitygroup_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Query PIP", "module": "azure_rm_publicipaddress_facts", "index": 53, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Query PIP", "register": "output_pip"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ vm_name3 }}01"}, "executable": "azure_rm_publicipaddress_facts", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert that autocreated resources were deleted", "module": "assert", "index": 54, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualmachine/tasks/virtualmachine.yml", "options": {"name": "Assert that autocreated resources were deleted"}, "module_options": {"that": ["output_nic.ansible_facts.azure_networkinterfaces | length == 0", "output_nsg.ansible_facts.azure_securitygroups | length == 0", "output_pip.ansible_facts.azure_publicipaddresses | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_virtualmachine", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_manageddisk": {"py/object": "struct4.Role", "name": "azure_rm_manageddisk", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk", "fqcn": "azure_rm_manageddisk", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"rpfx": "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "parameter": {}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clearing (if) previous disks were created", "module": "azure_rm_manageddisk", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Clearing (if) previous disks were created", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Test invalid account name (should give error)", "module": "azure_rm_manageddisk", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Test invalid account name (should give error)", "register": "output", "ignore_errors": true, "check_mode": false}, "module_options": {"resource_group": "{{ resource_group }}", "name": "invalid_char$", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert task failed", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert task failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded (Check Mode)", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded (Check Mode)"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create new managed disk succesfully", "module": "azure_rm_manageddisk", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create new managed disk succesfully", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "Standard_LRS", "disk_size_gb": 1, "tags": {"testing": "testing", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["output.changed", "output.state.disk_size_gb == 1", "output.state.id is defined", "output.state.os_type == None", "output.state.storage_account_type == \"Standard_LRS\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy disk to a new managed disk", "module": "azure_rm_manageddisk", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Copy disk to a new managed disk", "register": "disk2"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}2", "create_option": "copy", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk2.changed", "disk2.state.id is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create disk to a new managed disk with zone and os type", "module": "azure_rm_manageddisk", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk to a new managed disk with zone and os type", "register": "disk3"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}3", "source_uri": "{{ output.state.id }}", "disk_size_gb": 1, "zone": "1", "os_type": "windows"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded and results include an Id value", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded and results include an Id value"}, "module_options": {"that": ["disk3.changed", "disk3.state.id is defined", "disk3.state.zone == \"1\"", "disk3.state.os_type == \"windows\""]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change storage account type to an invalid type", "module": "azure_rm_manageddisk", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Change storage account type to an invalid type", "register": "output", "ignore_errors": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "storage_account_type": "PremiumL", "disk_size_gb": 1}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert storage account type change failed", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert storage account type change failed"}, "module_options": {"that": "output['failed'] == True"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update disk options (os_type, account_type, size, tags)", "module": "azure_rm_manageddisk", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Update disk options (os_type, account_type, size, tags)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "disk_size_gb": 2, "os_type": "linux", "storage_account_type": "StandardSSD_LRS", "tags": {"galaxy": "no", "delete": "never"}}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.state.storage_account_type == \"StandardSSD_LRS\"", "output.state.disk_size_gb == 2", "output.state.tags | length == 2", "output.state.tags.galaxy == 'no'", "output.state.os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather facts to one specific disk", "module": "azure_rm_manageddisk_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Gather facts to one specific disk"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1"}, "executable": "azure_rm_manageddisk_facts", "executable_type": "Module", "fqcn": "azure_rm_manageddisk_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["azure_managed_disk | length == 1", "azure_managed_disk[0].storage_account_type == \"StandardSSD_LRS\"", "azure_managed_disk[0].disk_size_gb == 2", "azure_managed_disk[0].os_type == 'linux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"when": "{{item.key not in ['id', 'changed'] and item.value != None}}", "with_dict": "{{ azure_managed_disk[0] }}"}, "module_options": {"parameter": "{{parameter |combine({item.key: item.value})}}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create disk with facts return value", "module": "azure_rm_manageddisk", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Create disk with facts return value", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "location": "{{ parameter.location }}", "name": "{{ parameter.name }}", "storage_account_type": "{{ parameter.storage_account_type }}", "disk_size_gb": "{{ parameter.disk_size_gb }}", "create_option": "{{ parameter.create_option }}", "tags": "{{ parameter.tags }}"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete managed disk (Check Mode)", "module": "azure_rm_manageddisk", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete managed disk (Check Mode)", "register": "output", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}1", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert status succeeded", "module": "assert", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Assert status succeeded"}, "module_options": {"that": ["output.changed", "output.state"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete all managed disk", "module": "azure_rm_manageddisk", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete all managed disk", "with_items": [1, 2, 3]}, "module_options": {"resource_group": "{{ resource_group }}", "name": "md{{ rpfx }}{{ item }}", "managed_by": "", "state": "absent"}, "executable": "azure_rm_manageddisk", "executable_type": "Module", "fqcn": "azure_rm_manageddisk", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual machine", "module": "azure_rm_virtualmachine", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete virtual machine"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "tr{{ rpfx }}", "state": "absent", "vm_size": "Standard_DS1_v2"}, "executable": "azure_rm_virtualmachine", "executable_type": "Module", "fqcn": "azure_rm_virtualmachine", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete public ip", "module": "azure_rm_publicipaddress", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_manageddisk/tasks/main.yml", "options": {"name": "Delete public ip"}, "module_options": {"resource_group": "{{ resource_group }}", "allocation_method": "Static", "name": "tr{{ rpfx }}", "state": "absent"}, "executable": "azure_rm_publicipaddress", "executable_type": "Module", "fqcn": "azure_rm_publicipaddress", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_manageddisk", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_routetable": {"py/object": "struct4.Role", "name": "azure_rm_routetable", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable", "fqcn": "azure_rm_routetable", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"name": "table{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "route_name": "route{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table (check mode)", "module": "azure_rm_routetable", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.id", "output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table", "module": "azure_rm_routetable", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a route table (idemponent)", "module": "azure_rm_routetable", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create a route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "tags": {"purpose": "testing"}}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route (check mode)", "module": "azure_rm_route", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "not output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route", "module": "azure_rm_route", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create route (idemponent)", "module": "azure_rm_route", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Create route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/16", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "update route", "module": "azure_rm_route", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "update route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "next_hop_type": "virtual_network_gateway", "address_prefix": "10.1.0.0/24", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of the table", "module": "azure_rm_routetable_facts", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Get facts of the table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_routetable_facts", "executable_type": "Module", "fqcn": "azure_rm_routetable_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.route_tables | length == 1", "output.route_tables[0].routes | length == 1", "output.route_tables[0].routes[0].address_prefix == '10.1.0.0/24'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route (check mode)", "module": "azure_rm_route", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (check mode)", "check_mode": true}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "route_table_name": "{{ name }}", "state": "absent"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete route", "module": "azure_rm_route", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route (idemponent)", "module": "azure_rm_route", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route (idemponent)", "register": "output"}, "module_options": {"name": "{{ route_name }}", "resource_group": "{{ resource_group }}", "state": "absent", "route_table_name": "{{ name }}"}, "executable": "azure_rm_route", "executable_type": "Module", "fqcn": "azure_rm_route", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route table (check mode)", "module": "azure_rm_routetable", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (check mode)", "check_mode": true}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete route table", "module": "azure_rm_routetable", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete route table (idemponent)", "module": "azure_rm_routetable", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {"name": "Delete route table (idemponent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_routetable", "executable_type": "Module", "fqcn": "azure_rm_routetable", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_routetable/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_routetable", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_workspace": {"py/object": "struct4.Role", "name": "azure_rm_workspace", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace", "fqcn": "azure_rm_workspace", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"name": "workspace{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace", "module": "azure_rm_loganalyticsworkspace", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.retention_in_days == 40", "output.changed", "output.intelligence_packs"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Create workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "retention_in_days": 40}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1", "facts.workspaces[0].id == output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"pack": "{{ pack | default({}) | combine({output.intelligence_packs[0].name: not output.intelligence_packs[0].enabled}) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update intelligence pack", "module": "azure_rm_loganalyticsworkspace", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Update intelligence pack", "register": "intelligence"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "intelligence_packs": "{{ pack }}"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["intelligence.intelligence_packs[0].enabled != output.intelligence_packs[0].enabled"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace (check mode)", "module": "azure_rm_loganalyticsworkspace", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (check mode)", "check_mode": true, "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 1"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace", "module": "azure_rm_loganalyticsworkspace", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get workspace", "module": "azure_rm_loganalyticsworkspace_facts", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Get workspace", "register": "facts"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_loganalyticsworkspace_facts", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["facts.workspaces | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove workspace (idempontent)", "module": "azure_rm_loganalyticsworkspace", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {"name": "Remove workspace (idempontent)", "register": "output"}, "module_options": {"name": "{{ name }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_loganalyticsworkspace", "executable_type": "Module", "fqcn": "azure_rm_loganalyticsworkspace", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_workspace/tasks/main.yml", "options": {}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_workspace", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_cdnprofile": {"py/object": "struct4.Role", "name": "azure_rm_cdnprofile", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile", "fqcn": "azure_rm_cdnprofile", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Prepare random number", "run_once": true}, "module_options": {"cdnprofilename": "cdnprofile{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "endpointname": "endpoint{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "azure_rm_cdnprofile_facts", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Check there is no CDN profile created", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Check there is no CDN profile created"}, "module_options": {"that": "{{ fact.cdnprofiles | length }} == 0"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile", "module": "azure_rm_cdnprofile", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is well created", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well created"}, "module_options": {"that": ["output.changed", "output.id != ''"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns the created one", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns the created one"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a CDN profile (idempotent)", "module": "azure_rm_cdnprofile", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a CDN profile (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the CDN profile", "module": "azure_rm_cdnprofile", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "sku": "standard_akamai", "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar", "baz": "qux"}}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is updated", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete the CDN profile(check mode)", "module": "azure_rm_cdnprofile", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Gather CDN profile facts", "module": "azure_rm_cdnprofile_facts", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Gather CDN profile facts", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN is still there", "module": "assert", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN is still there"}, "module_options": {"that": ["fact.cdnprofiles | length == 1", "fact.cdnprofiles[0].sku == 'Standard_Akamai'", "fact.cdnprofiles[0].tags.foo == 'bar'", "fact.cdnprofiles[0].tags.baz == 'qux'"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is well created", "module": "assert", "index": 17, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is well created"}, "module_options": {"that": ["output.changed", "output.id"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts of a Azure CDN endpoint", "module": "azure_rm_cdnendpoint_facts", "index": 18, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get facts of a Azure CDN endpoint", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnendpoint_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert facts output", "module": "assert", "index": 19, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert facts output"}, "module_options": {"that": ["facts['cdnendpoints'] | length == 1", "facts['cdnendpoints'][0]['id']", "facts['cdnendpoints'][0]['name']", "facts['cdnendpoints'][0]['profile_name']", "facts['cdnendpoints'][0]['origin']", "facts['cdnendpoints'][0]['location']", "facts['cdnendpoints'][0]['provisioning_state']", "facts['cdnendpoints'][0]['resource_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 20, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Create a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origins": [{"name": "org{{ endpointname }}", "host_name": "www.google.com"}], "tags": {"testing": "testing", "delete": "on-exit", "foo": "bar"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert idempotent", "module": "assert", "index": 21, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert idempotent"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 22, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert stopped", "module": "assert", "index": 23, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert stopped"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop a Azure CDN endpoint(idempotent)", "module": "azure_rm_cdnendpoint", "index": 24, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Stop a Azure CDN endpoint(idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": false}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert still stopped and not changed", "module": "assert", "index": 25, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert still stopped and not changed"}, "module_options": {"that": ["not output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 26, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Start a Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "started": true}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert started", "module": "assert", "index": 27, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert started"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update the Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 28, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Update the Azure CDN endpoint", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "origin_path": "/test/", "tags": {"testing": "testing", "delete": "on-exit", "foo": "baz"}}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the Azure CDN endpoint is updated", "module": "assert", "index": 29, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the Azure CDN endpoint is updated"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint(check mode)", "module": "azure_rm_cdnendpoint", "index": 30, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint(check mode)", "check_mode": true}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete a Azure CDN endpoint", "module": "azure_rm_cdnendpoint", "index": 31, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete a Azure CDN endpoint"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ endpointname }}", "profile_name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnendpoint", "executable_type": "Module", "fqcn": "azure_rm_cdnendpoint", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete the CDN profile", "module": "azure_rm_cdnprofile", "index": 32, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Delete the CDN profile", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}", "state": "absent"}, "executable": "azure_rm_cdnprofile", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert the CDN profile is well deleted", "module": "assert", "index": 33, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert the CDN profile is well deleted"}, "module_options": {"that": ["output.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get CDN profile fact", "module": "azure_rm_cdnprofile_facts", "index": 34, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Get CDN profile fact", "register": "fact"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ cdnprofilename }}"}, "executable": "azure_rm_cdnprofile_facts", "executable_type": "Module", "fqcn": "azure_rm_cdnprofile_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert fact returns empty", "module": "assert", "index": 35, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_cdnprofile/tasks/main.yml", "options": {"name": "Assert fact returns empty"}, "module_options": {"that": ["fact.cdnprofiles | length == 0"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "azure_rm_cdnprofile", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}, "azure_rm_virtualnetworkpeering": {"py/object": "struct4.Role", "name": "azure_rm_virtualnetworkpeering", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering", "fqcn": "azure_rm_virtualnetworkpeering", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Prepare random number", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Prepare random number"}, "module_options": {"vnetname1": "vnet1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "vnetname2": "vnet2{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}", "peering_name": "peering1{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 100 | random }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create first virtual network", "module": "azure_rm_virtualnetwork", "index": 1, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create first virtual network", "register": "vnet1"}, "module_options": {"name": "{{ vnetname1 }}", "address_prefixes_cidr": ["10.1.0.0/16"], "tags": {"testing": "testing", "delete": "on-exit"}, "resource_group": "{{ resource_group }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Create second virtual network", "module": "azure_rm_virtualnetwork", "index": 2, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create second virtual network", "register": "vnet2"}, "module_options": {"name": "{{ vnetname2 }}", "address_prefixes_cidr": ["10.2.0.0/24"], "resource_group": "{{ resource_group_secondary }}"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": ["vnet1.changed", "vnet2.changed"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network peering (check mode)", "module": "azure_rm_virtualnetworkpeering", "index": 4, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering (check mode)", "check_mode": true, "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 6, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Create virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 7, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network peering (idempotent)", "module": "azure_rm_virtualnetworkpeering", "index": 8, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering (idempotent)", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": false, "allow_forwarded_traffic": true}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 9, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "not output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 10, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Update virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "remote_virtual_network": {"resource_group": "{{ resource_group_secondary }}", "name": "{{ vnetname2 }}"}, "allow_virtual_network_access": true, "allow_forwarded_traffic": false}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "", "module": "assert", "index": 11, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {}, "module_options": {"that": "output.changed"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get facts", "module": "azure_rm_virtualnetworkpeering_facts", "index": 12, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Get facts", "register": "facts"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}"}, "executable": "azure_rm_virtualnetworkpeering_facts", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering_facts", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Assert Facts", "module": "assert", "index": 13, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Assert Facts"}, "module_options": {"that": ["facts['vnetpeerings'] | length == 1", "facts['vnetpeerings'][0]['id']", "facts['vnetpeerings'][0]['peering_state']", "facts['vnetpeerings'][0]['remote_virtual_network']", "facts['vnetpeerings'][0]['provisioning_state']"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete virtual network peering", "module": "azure_rm_virtualnetworkpeering", "index": 14, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network peering", "register": "output"}, "module_options": {"resource_group": "{{ resource_group }}", "name": "{{ peering_name }}", "virtual_network": "{{ vnetname1 }}", "state": "absent"}, "executable": "azure_rm_virtualnetworkpeering", "executable_type": "Module", "fqcn": "azure_rm_virtualnetworkpeering", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete first virtual network", "module": "azure_rm_virtualnetwork", "index": 15, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete first virtual network"}, "module_options": {"name": "{{ vnetname1 }}", "resource_group": "{{ resource_group }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}, {"py/object": "struct4.Task", "name": "Delete virtual network", "module": "azure_rm_virtualnetwork", "index": 16, "defined_in": "./role-test/testdata/azure-azure_modules/azure.azure_modules/tests/integration/targets/azure_rm_virtualnetworkpeering/tasks/main.yml", "options": {"name": "Delete virtual network"}, "module_options": {"name": "{{ vnetname2 }}", "resource_group": "{{ resource_group_secondary }}", "state": "absent"}, "executable": "azure_rm_virtualnetwork", "executable_type": "Module", "fqcn": "azure_rm_virtualnetwork", "annotations": {"use-non-builtin-module": true}}], "role": "azure_rm_virtualnetworkpeering", "used_in": [], "annotations": {"use-non-builtin-module": true}}], "modules": [], "source": "", "annotations": {"use-non-builtin-module": true}, "used_in": []}}, "annotations": {}}