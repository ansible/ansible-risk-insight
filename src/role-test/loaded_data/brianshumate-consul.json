{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/brianshumate-consul", "installed_roles": [{"py/object": "struct4.Role", "name": "brianshumate.consul", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul", "fqcn": "brianshumate.consul", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "(Windows) Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Expose bind_address, datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Expose bind_address, datacenter and node_role as facts"}, "module_options": {"consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Read bootstrapped state", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Include directory settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check for existing Consul binary", "module": "win_stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Install OS packages and consul", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Install OS packages and consul", "when": ["not consul_binary_installed.stat.exists | bool"]}, "module_options": "install_windows.yml", "executable": "install_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Deserialize existing configuration", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Save gossip encryption key from existing configuration", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Write gossip encryption key locally for use with new servers", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "run_once": true, "register": "consul_local_key", "delegate_to": "localhost", "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Generate gossip encryption key", "module": "win_shell", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "{{ consul_binary }} keygen", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Write key locally to share with other nodes", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Read gossip encryption key for servers that require it", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Delete gossip encryption key file", "module": "file", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create Consul configuration", "module": "import_tasks", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create Consul configuration"}, "module_options": "config_windows.yml", "executable": "config_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Ensure neither ACL nor TLS are requested", "module": "fail", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Ensure neither ACL nor TLS are requested", "when": ["(consul_acl_enable | bool) or (consul_tls_enable | bool)"]}, "module_options": {"msg": "ACL and TLS are not supported on Windows hosts yet."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create ACL configuration", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create TLS configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul as a service", "module": "win_service", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "Create Consul as a service"}, "module_options": {"name": "Consul", "path": "{{ consul_binary }} agent -config-file={{ consul_config_path }}/config.json -config-dir={{ consul_configd_path }}", "display_name": "Consul Service", "description": "Consul", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check Consul HTTP API", "module": "win_wait_for", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check Consul HTTP API"}, "module_options": {"delay": 5, "port": 8500}, "executable": "win_wait_for", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create bootstrapped state file", "module": "win_file", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create bootstrapped state file", "when": "ansible_os_family == \"Windows\""}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify TLS1.2 is used", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Verify TLS1.2 is used"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319", "name": "SchUseStrongCrypto", "data": 1, "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "win_get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "win_shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum", "args": {"chdir": "/tmp/consul"}, "register": "consul_pkg_checksum", "tags": "installation"}, "module_options": "findstr {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul", "module": "win_get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Calculate checksum", "module": "win_stat", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Calculate checksum", "register": "consul_pkg_hash", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}", "checksum_algorithm": "sha256"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compare checksum to hashfile", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Compare checksum to hashfile", "when": ["consul_pkg_hash.stat.checksum != (consul_pkg_checksum.stdout.split(' ') | first)"]}, "module_options": {"msg": "Checksum {{ consul_pkg_checksum.stdout.split(' ') | first }} did not match calculated SHA256 {{ consul_pkg_hash.stat.checksum }}!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "win_unzip", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Unarchive Consul and install binary", "tags": "installation"}, "module_options": {"src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "config_windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create configuration", "module": "win_copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "asserts.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": ["ansible_distribution not in ['RedHat', 'CentOS', 'OracleLinux', 'Fedora', 'Debian', 'FreeBSD', 'SmartOS', 'Ubuntu', 'Archlinux', 'Alpine', 'Amazon']", "ansible_os_family != 'Windows'"]}, "module_options": {"msg": "{{ ansible_distribution }} is not currently supported by this role."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check CentOS, Red Hat or Oracle Linux version", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check CentOS, Red Hat or Oracle Linux version", "when": ["ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Debian version", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Debian version", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version_compare(8, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check FreeBSD version", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check FreeBSD version", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version_compare(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Ubuntu version", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Ubuntu version", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version_compare(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check specified ethernet interface", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check specified ethernet interface", "when": ["ansible_os_family != 'Windows'", "consul_iface not in ansible_interfaces"]}, "module_options": {"msg": "The ethernet interface specified by consul_iface was not found."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check iptables on Red Hat, CentOS or Oracle Linux", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check iptables on Red Hat, CentOS or Oracle Linux", "when": ["consul_iptables_enable | bool", "ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '>=')"]}, "module_options": {"msg": "Use DNSmasq instead of iptables on {{ ansible_distribution }}."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for both Dnsmasq and iptables enabled", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for both Dnsmasq and iptables enabled", "when": ["consul_dnsmasq_enable | bool", "consul_iptables_enable | bool"]}, "module_options": {"msg": "EONEORTHEOTHER: DNSmasq and iptables together is not supported."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for iptables enabled but no recursors", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for iptables enabled but no recursors", "when": ["consul_iptables_enable | bool", "consul_recursors | length == 0"]}, "module_options": {"msg": "Recursors are required if iptables is enabled."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check consul_group_name is included in groups", "module": "fail", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check consul_group_name is included in groups", "when": "consul_group_name not in groups"}, "module_options": {"msg": "consul_group_name must be included in groups."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if more than one bootstrap server is defined", "module": "fail", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if more than one bootstrap server is defined", "when": ["_consul_bootstrap_servers | length > 1"]}, "module_options": {"msg": "You can not define more than one bootstrap server."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "module": "fail", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "when": ["_consul_bootstrap_servers | length > 0", "consul_bootstrap_expect | bool"]}, "module_options": {"msg": "Can't use a bootstrap server and bootstrap_expect at the same time."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if unzip is installed on control host", "module": "shell", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check if unzip is installed on control host", "become": false, "changed_when": false, "check_mode": false, "run_once": true, "register": "is_unzip_installed", "ignore_errors": true, "delegate_to": "127.0.0.1"}, "module_options": "command -v unzip -h >/dev/null 2>&1", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install remotely if unzip is not installed on control host", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Install remotely if unzip is not installed on control host", "when": ["is_unzip_installed.rc == 1"]}, "module_options": {"consul_install_remotely": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_remote.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "changed_when": false, "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "validate_certs": false}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum", "register": "consul_sha256", "changed_when": false, "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Check Consul package file", "register": "consul_package", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul", "register": "consul_download", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout.split(' ')|first }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Unarchive Consul and install binary", "register": "consul_install", "notify": ["restart consul"], "when": "consul_download is changed", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool", "consul_install is changed"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "user_group.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add Consul group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul group", "when": ["consul_manage_group | bool"]}, "module_options": {"name": "{{ consul_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Consul user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul user", "when": ["consul_manage_user | bool"]}, "module_options": {"name": "{{ consul_user }}", "comment": "Consul user", "group": "{{ consul_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "syslog.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "tasks": [{"py/object": "struct4.Task", "name": "Detect syslog program", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Detect syslog program", "register": "stat_syslogng", "when": ["ansible_os_family != 'Windows'", "consul_configure_syslogd | bool"]}, "module_options": {"path": "/usr/sbin/syslog-ng"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install syslog-ng config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install syslog-ng config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "stat_syslogng.stat.exists"], "notify": ["restart syslog-ng", "restart consul"]}, "module_options": {"src": "syslogng_consul.conf.j2", "dest": "/etc/syslog-ng/conf.d/consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install rsyslogd config", "module": "template", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install rsyslogd config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "not stat_syslogng.stat.exists"], "notify": ["restart rsyslog", "restart consul"]}, "module_options": {"src": "rsyslogd_00-consul.conf.j2", "dest": "/etc/rsyslog.d/00-consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "acl.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "tasks": [{"py/object": "struct4.Task", "name": "Read ACL master token from previously boostrapped server", "module": "command", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL master token from previously boostrapped server", "register": "config_read", "no_log": true, "changed_when": false, "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save acl_master_token from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_master_token from existing configuration", "vars": {"query": "acl.tokens.master"}, "no_log": true}, "module_options": {"consul_acl_master_token": "{{ config_read.stdout | from_json | json_query(query) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ACL master token", "module": "command", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL master token", "register": "consul_acl_master_token_keygen", "run_once": true, "no_log": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save ACL master token", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL master token", "no_log": true}, "module_options": {"consul_acl_master_token": "{{ consul_acl_master_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Display ACL Master Token", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Display ACL Master Token", "run_once": true, "when": ["consul_acl_master_token_display | bool", "consul_node_role == 'server'"]}, "module_options": {"msg": "{{ consul_acl_master_token }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read ACL replication token from previously boostrapped server", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL replication token from previously boostrapped server", "changed_when": false, "check_mode": false, "register": "consul_acl_replication_token_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json | grep \"replication\" | sed -E 's/\"replication\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save acl_replication_token from existing configuration", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_replication_token from existing configuration", "ignore_errors": true}, "module_options": "consul_acl_replication_token=\"{{ consul_acl_replication_token_read.stdout }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ACL replication token", "module": "command", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL replication token", "register": "consul_acl_replication_token_keygen", "no_log": true, "run_once": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save ACL replication token", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL replication token", "no_log": true}, "module_options": {"consul_acl_replication_token": "{{ consul_acl_replication_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ACL policy configuration", "module": "template", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Create ACL policy configuration", "notify": ["restart consul"], "when": "consul_acl_policy | bool"}, "module_options": {"src": "configd_50acl_policy.hcl.j2", "dest": "{{ consul_configd_path }}/50acl_policy.hcl", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "iptables.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install iptables", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Install iptables"}, "module_options": {"name": "iptables"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (1/4)", "module": "iptables", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (1/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (2/4)", "module": "iptables", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (2/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (3/4)", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (3/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (4/4)", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (4/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nix.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Expose advertise_address(_wan) datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Expose advertise_address(_wan) datacenter and node_role as facts"}, "module_options": {"consul_advertise_address_wan": "{{ consul_advertise_address_wan }}", "consul_advertise_address": "{{ consul_advertise_address }}", "consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read bootstrapped state", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include user and group settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include user and group settings"}, "module_options": "user_group.yml", "executable": "user_group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include directory settings", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for existing Consul binary", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Calculate whether to install consul binary", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Calculate whether to install consul binary"}, "module_options": {"consul_install_binary": "{{ consul_install_upgrade | bool or not consul_binary_installed.stat.exists }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and consul - locally", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - locally", "when": ["consul_install_binary | bool", "not consul_install_remotely | bool"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and consul - remotely", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - remotely", "when": ["consul_install_binary | bool", "consul_install_remotely | bool"]}, "module_options": "install_remote.yml", "executable": "install_remote.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deserialize existing configuration", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "register": "consul_local_key", "delegate_to": "localhost", "changed_when": false, "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write key locally to share with other nodes", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost", "changed_when": false}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ACL configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul configuration", "module": "import_tasks", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Consul configuration"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create TLS configuration", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create syslog configuration", "module": "import_tasks", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create syslog configuration"}, "module_options": "syslog.yml", "executable": "syslog.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create BSD init script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "consul_bsdinit.j2", "dest": "/etc/rc.d/consul", "owner": "root", "group": "wheel", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create SYSV init script", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_sysvinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Debian init script", "module": "template", "index": 23, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_debianinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create systemd script", "module": "template", "index": 24, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create systemd script", "register": "systemd_unit", "notify": "restart consul", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_systemd.service.j2", "dest": "/lib/systemd/system/consul.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 25, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Reload systemd", "when": "systemd_unit is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create smf manifest", "module": "template", "index": 26, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create smf manifest", "when": "ansible_os_family == \"Solaris\"", "register": "smfmanifest"}, "module_options": {"src": "consul_smf_manifest.j2", "dest": "{{ consul_smf_manifest }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import smf manifest", "module": "shell", "index": 27, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf manifest", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svccfg import {{ consul_smf_manifest }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import smf script", "module": "shell", "index": 28, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf script", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svcadm refresh consul", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable Consul Snapshots on servers", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Enable Consul Snapshots on servers", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": "snapshot.yml", "executable": "snapshot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Consul", "module": "service", "index": 30, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Start Consul"}, "module_options": {"name": "consul", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via TCP socket)", "module": "wait_for", "index": 31, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via TCP socket)", "when": "(consul_ports.http|int > -1) and (consul_addresses.http|ipaddr)"}, "module_options": {"delay": 15, "port": "{{ consul_ports.http|int }}", "host": "{{ consul_addresses.http }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via unix socket)", "module": "wait_for", "index": 32, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via unix socket)", "when": "consul_addresses.http is match(\"unix://*\")"}, "module_options": {"delay": 15, "path": "{{ consul_addresses.http | replace('unix://', '', 1) }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create bootstrapped state file", "module": "file", "index": 33, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create bootstrapped state file"}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 34, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 35, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "services.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure consul services", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Configure consul services", "with_items": "{{ consul_services }}", "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/service_{{ item.name }}.json", "src": "service.json.j2", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the list of service config file", "module": "find", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file", "register": "services_enabled_unix", "when": "ansible_os_family != 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the list of service config file [Windows]", "module": "win_find", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file [Windows]", "register": "services_enabled_windows", "when": "ansible_os_family == 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "set var for enabled services", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services", "when": "ansible_os_family != 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_unix['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set var for enabled services [Windows]", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services [Windows]", "when": "ansible_os_family == 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_windows['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact with list of existing configuration files", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of existing configuration files", "with_items": "{{ services_enabled_files }}"}, "module_options": {"list_current_service_config": "{{ list_current_service_config |default([]) + [ item.path ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact with list of service we manage", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of service we manage", "with_items": "{{ consul_services }}"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/service_{{ item.name }}.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete non declared services", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services", "when": "ansible_os_family != 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete non declared services [Windows]", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services [Windows]", "when": "ansible_os_family == 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "snapshot.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create snapshot systemd script", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot systemd script", "register": "systemd_unit", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_systemd_snapshot.service.j2", "dest": "/lib/systemd/system/consul_snapshot.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create snapshot agent config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot agent config", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_snapshot.json.j2", "dest": "{{ consul_config_path }}/consul_snapshot.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Reload systemd", "when": "systemd_unit | changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create snaps storage folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snaps storage folder"}, "module_options": {"state": "directory", "path": "{{ consul_snapshot_storage }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 484}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tls.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create SSL directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Create SSL directory"}, "module_options": {"dest": "{{ consul_tls_dir }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA certificate", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy CA certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_ca_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_ca_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy server certificate", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy server key", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server key", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_key | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_key }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "encrypt_gossip.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "tasks": [{"py/object": "struct4.Task", "name": "Read gossip encryption key from previously boostrapped server", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key from previously boostrapped server", "register": "consul_key_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/bootstrap/config.json | grep \"encrypt\" | sed -E 's/\"encrypt\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Save gossip encryption key from existing configuration", "ignore_errors": true}, "module_options": "consul_raw_key={{ consul_key_read.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key for servers that require it", "when": ["consul_raw_key is not defined", "bootstrap_state.stat.exists | bool"]}, "module_options": "consul_raw_key=\"{{ lookup('file', '/tmp/consul_raw.key') }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen", "run_once": true}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key to fact", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key to fact"}, "module_options": "consul_raw_key={{ consul_keygen.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "config.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create configuration", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "dirs.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configuration and data directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Configuration and data directories", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Run directory"}, "module_options": {"dest": "{{ consul_run_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "when": ["ansible_os_family != 'Windows'", "not consul_syslog_enable | bool", "not consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ consul_log_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "with_items": ["{{ consul_log_path }}"], "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ syslog_user }}", "group": "{{ syslog_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify binary path", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Verify binary path", "when": "ansible_os_family != 'Windows'"}, "module_options": {"path": "{{ consul_bin_path }}", "state": "directory", "owner": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories on Windows", "module": "win_file", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create directories on Windows", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}", "{{ consul_log_path }}", "{{ consul_bin_path }}"], "when": "ansible_os_family == 'Windows'"}, "module_options": {"dest": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read package checksum file", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "register": "consul_checksum", "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download package checksum file", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "tags": "installation", "when": "not consul_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read package checksum", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum", "become": false, "vars": {"ansible_become": false}, "register": "consul_sha256", "tags": ["installation", "skip_ansible_lint"], "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": "grep \"{{ consul_pkg }}\" \"{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS\" | awk '{print $1}'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Check Consul package file", "become": false, "vars": {"ansible_become": false}, "register": "consul_package", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "when": "not consul_package.stat.exists | bool", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "{{ role_path }}/files/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Alpine Package Manager (APK)", "module": "apk", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Update Alpine Package Manager (APK)", "run_once": true, "when": "ansible_os_family == \"Alpine\"", "delegate_to": "127.0.0.1"}, "module_options": {"update_cache": true}, "executable": "apk", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Temporary Directory for Extraction", "module": "tempfile", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Create Temporary Directory for Extraction", "become": false, "vars": {"ansible_become": false}, "register": "install_temp", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"state": "directory", "prefix": "ansible-consul."}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul package", "module": "unarchive", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Unarchive Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ consul_pkg }}", "dest": "{{ install_temp.path }}/", "creates": "{{ install_temp.path }}/consul"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Consul", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install Consul", "notify": ["restart consul"], "tags": "installation"}, "module_options": {"src": "{{ install_temp.path }}/consul", "dest": "{{ consul_bin_path }}/consul", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Cleanup", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ install_temp.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (with --user)", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (with --user)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "not is_virtualenv or is_virtualenv == None"}, "module_options": {"name": "netaddr", "extra_args": "--user"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (virtualenv)", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (virtualenv)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "is_virtualenv is defined"}, "module_options": {"name": "netaddr"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include checks/asserts", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include checks/asserts"}, "module_options": "asserts.yml", "executable": "asserts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": "always"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include NIX tasks", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include NIX tasks", "when": "ansible_os_family != 'Windows'"}, "module_options": "nix.yml", "executable": "nix.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Windows tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include Windows tasks", "when": "ansible_os_family == 'Windows'"}, "module_options": "windows.yml", "executable": "windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include services management", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include services management", "when": "consul_services is defined and consul_services|length>0", "tags": ["consul_services"]}, "module_options": "services.yml", "executable": "services.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush_handlers", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "flush_handlers"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "dnsmasq.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"RedHat\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"Debian\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "pkgng", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable dnsmasq service", "module": "service", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Enable dnsmasq service", "tags": "dnsmasq"}, "module_options": {"name": "dnsmasq", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration directory", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"path": "/usr/local/etc/dnsmasq.d", "state": "directory", "owner": "root", "group": "wheel"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration", "module": "template", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family in [\"Debian\", \"RedHat\"]", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/etc/dnsmasq.d/10-consul", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create FreeBSD-specific configuration", "module": "lineinfile", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"dest": "/usr/local/etc/dnsmasq.conf", "line": "conf-dir=/usr/local/etc/dnsmasq.d/,*.conf"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create FreeBSD-specific Dnsmasq configuration", "module": "template", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/usr/local/etc/dnsmasq.d/consul.conf", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(Windows) Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(Windows) Expose bind_address, datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Expose bind_address, datacenter and node_role as facts"}, "module_options": {"consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(Windows) Read bootstrapped state", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(Windows) Include directory settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "(Windows) Check for existing Consul binary", "module": "win_stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "(Windows) Install OS packages and consul", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Install OS packages and consul", "when": ["not consul_binary_installed.stat.exists | bool"]}, "module_options": "install_windows.yml", "executable": "install_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "(Windows) Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "(Windows) Deserialize existing configuration", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "(Windows) Save gossip encryption key from existing configuration", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "(Windows) Write gossip encryption key locally for use with new servers", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "run_once": true, "register": "consul_local_key", "delegate_to": "localhost", "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "(Windows) Generate gossip encryption key", "module": "win_shell", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "{{ consul_binary }} keygen", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "(Windows) Write key locally to share with other nodes", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "(Windows) Read gossip encryption key for servers that require it", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "(Windows) Delete gossip encryption key file", "module": "file", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "(Windows) Create Consul configuration", "module": "import_tasks", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create Consul configuration"}, "module_options": "config_windows.yml", "executable": "config_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "(Windows) Ensure neither ACL nor TLS are requested", "module": "fail", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Ensure neither ACL nor TLS are requested", "when": ["(consul_acl_enable | bool) or (consul_tls_enable | bool)"]}, "module_options": {"msg": "ACL and TLS are not supported on Windows hosts yet."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "(Windows) Create ACL configuration", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "(Windows) Create TLS configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create Consul as a service", "module": "win_service", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "Create Consul as a service"}, "module_options": {"name": "Consul", "path": "{{ consul_binary }} agent -config-file={{ consul_config_path }}/config.json -config-dir={{ consul_configd_path }}", "display_name": "Consul Service", "description": "Consul", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "(Windows) Check Consul HTTP API", "module": "win_wait_for", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check Consul HTTP API"}, "module_options": {"delay": 5, "port": 8500}, "executable": "win_wait_for", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "(Windows) Create bootstrapped state file", "module": "win_file", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create bootstrapped state file", "when": "ansible_os_family == \"Windows\""}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Verify TLS1.2 is used", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Verify TLS1.2 is used"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319", "name": "SchUseStrongCrypto", "data": 1, "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "win_get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "win_shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum", "args": {"chdir": "/tmp/consul"}, "register": "consul_pkg_checksum", "tags": "installation"}, "module_options": "findstr {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Download Consul", "module": "win_get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Calculate checksum", "module": "win_stat", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Calculate checksum", "register": "consul_pkg_hash", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}", "checksum_algorithm": "sha256"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Compare checksum to hashfile", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Compare checksum to hashfile", "when": ["consul_pkg_hash.stat.checksum != (consul_pkg_checksum.stdout.split(' ') | first)"]}, "module_options": {"msg": "Checksum {{ consul_pkg_checksum.stdout.split(' ') | first }} did not match calculated SHA256 {{ consul_pkg_hash.stat.checksum }}!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "win_unzip", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Unarchive Consul and install binary", "tags": "installation"}, "module_options": {"src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Cleanup", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create configuration", "module": "win_copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": ["ansible_distribution not in ['RedHat', 'CentOS', 'OracleLinux', 'Fedora', 'Debian', 'FreeBSD', 'SmartOS', 'Ubuntu', 'Archlinux', 'Alpine', 'Amazon']", "ansible_os_family != 'Windows'"]}, "module_options": {"msg": "{{ ansible_distribution }} is not currently supported by this role."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check CentOS, Red Hat or Oracle Linux version", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check CentOS, Red Hat or Oracle Linux version", "when": ["ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check Debian version", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Debian version", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version_compare(8, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Check FreeBSD version", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check FreeBSD version", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version_compare(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check Ubuntu version", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Ubuntu version", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version_compare(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check specified ethernet interface", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check specified ethernet interface", "when": ["ansible_os_family != 'Windows'", "consul_iface not in ansible_interfaces"]}, "module_options": {"msg": "The ethernet interface specified by consul_iface was not found."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check iptables on Red Hat, CentOS or Oracle Linux", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check iptables on Red Hat, CentOS or Oracle Linux", "when": ["consul_iptables_enable | bool", "ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '>=')"]}, "module_options": {"msg": "Use DNSmasq instead of iptables on {{ ansible_distribution }}."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Check for both Dnsmasq and iptables enabled", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for both Dnsmasq and iptables enabled", "when": ["consul_dnsmasq_enable | bool", "consul_iptables_enable | bool"]}, "module_options": {"msg": "EONEORTHEOTHER: DNSmasq and iptables together is not supported."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Check for iptables enabled but no recursors", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for iptables enabled but no recursors", "when": ["consul_iptables_enable | bool", "consul_recursors | length == 0"]}, "module_options": {"msg": "Recursors are required if iptables is enabled."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Check consul_group_name is included in groups", "module": "fail", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check consul_group_name is included in groups", "when": "consul_group_name not in groups"}, "module_options": {"msg": "consul_group_name must be included in groups."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Fail if more than one bootstrap server is defined", "module": "fail", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if more than one bootstrap server is defined", "when": ["_consul_bootstrap_servers | length > 1"]}, "module_options": {"msg": "You can not define more than one bootstrap server."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "module": "fail", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "when": ["_consul_bootstrap_servers | length > 0", "consul_bootstrap_expect | bool"]}, "module_options": {"msg": "Can't use a bootstrap server and bootstrap_expect at the same time."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Check if unzip is installed on control host", "module": "shell", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check if unzip is installed on control host", "become": false, "changed_when": false, "check_mode": false, "run_once": true, "register": "is_unzip_installed", "ignore_errors": true, "delegate_to": "127.0.0.1"}, "module_options": "command -v unzip -h >/dev/null 2>&1", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Install remotely if unzip is not installed on control host", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Install remotely if unzip is not installed on control host", "when": ["is_unzip_installed.rc == 1"]}, "module_options": {"consul_install_remotely": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "changed_when": false, "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "validate_certs": false}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum", "register": "consul_sha256", "changed_when": false, "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Check Consul package file", "register": "consul_package", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Download Consul", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul", "register": "consul_download", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout.split(' ')|first }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Unarchive Consul and install binary", "register": "consul_install", "notify": ["restart consul"], "when": "consul_download is changed", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool", "consul_install is changed"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Add Consul group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul group", "when": ["consul_manage_group | bool"]}, "module_options": {"name": "{{ consul_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add Consul user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul user", "when": ["consul_manage_user | bool"]}, "module_options": {"name": "{{ consul_user }}", "comment": "Consul user", "group": "{{ consul_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Detect syslog program", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Detect syslog program", "register": "stat_syslogng", "when": ["ansible_os_family != 'Windows'", "consul_configure_syslogd | bool"]}, "module_options": {"path": "/usr/sbin/syslog-ng"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install syslog-ng config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install syslog-ng config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "stat_syslogng.stat.exists"], "notify": ["restart syslog-ng", "restart consul"]}, "module_options": {"src": "syslogng_consul.conf.j2", "dest": "/etc/syslog-ng/conf.d/consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install rsyslogd config", "module": "template", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install rsyslogd config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "not stat_syslogng.stat.exists"], "notify": ["restart rsyslog", "restart consul"]}, "module_options": {"src": "rsyslogd_00-consul.conf.j2", "dest": "/etc/rsyslog.d/00-consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Read ACL master token from previously boostrapped server", "module": "command", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL master token from previously boostrapped server", "register": "config_read", "no_log": true, "changed_when": false, "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Save acl_master_token from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_master_token from existing configuration", "vars": {"query": "acl.tokens.master"}, "no_log": true}, "module_options": {"consul_acl_master_token": "{{ config_read.stdout | from_json | json_query(query) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Generate ACL master token", "module": "command", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL master token", "register": "consul_acl_master_token_keygen", "run_once": true, "no_log": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Save ACL master token", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL master token", "no_log": true}, "module_options": {"consul_acl_master_token": "{{ consul_acl_master_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Display ACL Master Token", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Display ACL Master Token", "run_once": true, "when": ["consul_acl_master_token_display | bool", "consul_node_role == 'server'"]}, "module_options": {"msg": "{{ consul_acl_master_token }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Read ACL replication token from previously boostrapped server", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL replication token from previously boostrapped server", "changed_when": false, "check_mode": false, "register": "consul_acl_replication_token_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json | grep \"replication\" | sed -E 's/\"replication\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Save acl_replication_token from existing configuration", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_replication_token from existing configuration", "ignore_errors": true}, "module_options": "consul_acl_replication_token=\"{{ consul_acl_replication_token_read.stdout }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Generate ACL replication token", "module": "command", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL replication token", "register": "consul_acl_replication_token_keygen", "no_log": true, "run_once": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Save ACL replication token", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL replication token", "no_log": true}, "module_options": {"consul_acl_replication_token": "{{ consul_acl_replication_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create ACL policy configuration", "module": "template", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Create ACL policy configuration", "notify": ["restart consul"], "when": "consul_acl_policy | bool"}, "module_options": {"src": "configd_50acl_policy.hcl.j2", "dest": "{{ consul_configd_path }}/50acl_policy.hcl", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install iptables", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Install iptables"}, "module_options": {"name": "iptables"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Redirect local DNS (1/4)", "module": "iptables", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (1/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Redirect local DNS (2/4)", "module": "iptables", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (2/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Redirect local DNS (3/4)", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (3/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Redirect local DNS (4/4)", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (4/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Expose advertise_address(_wan) datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Expose advertise_address(_wan) datacenter and node_role as facts"}, "module_options": {"consul_advertise_address_wan": "{{ consul_advertise_address_wan }}", "consul_advertise_address": "{{ consul_advertise_address }}", "consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Read bootstrapped state", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Include user and group settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include user and group settings"}, "module_options": "user_group.yml", "executable": "user_group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Include directory settings", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Check for existing Consul binary", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Calculate whether to install consul binary", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Calculate whether to install consul binary"}, "module_options": {"consul_install_binary": "{{ consul_install_upgrade | bool or not consul_binary_installed.stat.exists }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install OS packages and consul - locally", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - locally", "when": ["consul_install_binary | bool", "not consul_install_remotely | bool"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install OS packages and consul - remotely", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - remotely", "when": ["consul_install_binary | bool", "consul_install_remotely | bool"]}, "module_options": "install_remote.yml", "executable": "install_remote.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Deserialize existing configuration", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "register": "consul_local_key", "delegate_to": "localhost", "changed_when": false, "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Write key locally to share with other nodes", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost", "changed_when": false}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Create ACL configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create Consul configuration", "module": "import_tasks", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Consul configuration"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Create TLS configuration", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Create syslog configuration", "module": "import_tasks", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create syslog configuration"}, "module_options": "syslog.yml", "executable": "syslog.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Create BSD init script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "consul_bsdinit.j2", "dest": "/etc/rc.d/consul", "owner": "root", "group": "wheel", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create SYSV init script", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_sysvinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Create Debian init script", "module": "template", "index": 23, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_debianinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Create systemd script", "module": "template", "index": 24, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create systemd script", "register": "systemd_unit", "notify": "restart consul", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_systemd.service.j2", "dest": "/lib/systemd/system/consul.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 25}": {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 25, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Reload systemd", "when": "systemd_unit is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 26}": {"py/object": "struct4.Task", "name": "Create smf manifest", "module": "template", "index": 26, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create smf manifest", "when": "ansible_os_family == \"Solaris\"", "register": "smfmanifest"}, "module_options": {"src": "consul_smf_manifest.j2", "dest": "{{ consul_smf_manifest }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 27}": {"py/object": "struct4.Task", "name": "Import smf manifest", "module": "shell", "index": 27, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf manifest", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svccfg import {{ consul_smf_manifest }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 28}": {"py/object": "struct4.Task", "name": "Import smf script", "module": "shell", "index": 28, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf script", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svcadm refresh consul", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 29}": {"py/object": "struct4.Task", "name": "Enable Consul Snapshots on servers", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Enable Consul Snapshots on servers", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": "snapshot.yml", "executable": "snapshot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 30}": {"py/object": "struct4.Task", "name": "Start Consul", "module": "service", "index": 30, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Start Consul"}, "module_options": {"name": "consul", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 31}": {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via TCP socket)", "module": "wait_for", "index": 31, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via TCP socket)", "when": "(consul_ports.http|int > -1) and (consul_addresses.http|ipaddr)"}, "module_options": {"delay": 15, "port": "{{ consul_ports.http|int }}", "host": "{{ consul_addresses.http }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 32}": {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via unix socket)", "module": "wait_for", "index": 32, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via unix socket)", "when": "consul_addresses.http is match(\"unix://*\")"}, "module_options": {"delay": 15, "path": "{{ consul_addresses.http | replace('unix://', '', 1) }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 33}": {"py/object": "struct4.Task", "name": "Create bootstrapped state file", "module": "file", "index": 33, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create bootstrapped state file"}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 34}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 34, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml\", \"index\": 35}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 35, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Configure consul services", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Configure consul services", "with_items": "{{ consul_services }}", "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/service_{{ item.name }}.json", "src": "service.json.j2", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get the list of service config file", "module": "find", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file", "register": "services_enabled_unix", "when": "ansible_os_family != 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Get the list of service config file [Windows]", "module": "win_find", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file [Windows]", "register": "services_enabled_windows", "when": "ansible_os_family == 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "set var for enabled services", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services", "when": "ansible_os_family != 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_unix['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "set var for enabled services [Windows]", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services [Windows]", "when": "ansible_os_family == 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_windows['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set fact with list of existing configuration files", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of existing configuration files", "with_items": "{{ services_enabled_files }}"}, "module_options": {"list_current_service_config": "{{ list_current_service_config |default([]) + [ item.path ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Set fact with list of service we manage", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of service we manage", "with_items": "{{ consul_services }}"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/service_{{ item.name }}.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Delete non declared services", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services", "when": "ansible_os_family != 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Delete non declared services [Windows]", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services [Windows]", "when": "ansible_os_family == 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create snapshot systemd script", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot systemd script", "register": "systemd_unit", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_systemd_snapshot.service.j2", "dest": "/lib/systemd/system/consul_snapshot.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create snapshot agent config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot agent config", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_snapshot.json.j2", "dest": "{{ consul_config_path }}/consul_snapshot.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Reload systemd", "when": "systemd_unit | changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create snaps storage folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snaps storage folder"}, "module_options": {"state": "directory", "path": "{{ consul_snapshot_storage }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 484}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create SSL directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Create SSL directory"}, "module_options": {"dest": "{{ consul_tls_dir }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Copy CA certificate", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy CA certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_ca_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_ca_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy server certificate", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Copy server key", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server key", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_key | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_key }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Read gossip encryption key from previously boostrapped server", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key from previously boostrapped server", "register": "consul_key_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/bootstrap/config.json | grep \"encrypt\" | sed -E 's/\"encrypt\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Save gossip encryption key from existing configuration", "ignore_errors": true}, "module_options": "consul_raw_key={{ consul_key_read.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key for servers that require it", "when": ["consul_raw_key is not defined", "bootstrap_state.stat.exists | bool"]}, "module_options": "consul_raw_key=\"{{ lookup('file', '/tmp/consul_raw.key') }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen", "run_once": true}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Write gossip encryption key to fact", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key to fact"}, "module_options": "consul_raw_key={{ consul_keygen.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create configuration", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Configuration and data directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Configuration and data directories", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Run directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Run directory"}, "module_options": {"dest": "{{ consul_run_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "when": ["ansible_os_family != 'Windows'", "not consul_syslog_enable | bool", "not consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ consul_log_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "with_items": ["{{ consul_log_path }}"], "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ syslog_user }}", "group": "{{ syslog_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Verify binary path", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Verify binary path", "when": "ansible_os_family != 'Windows'"}, "module_options": {"path": "{{ consul_bin_path }}", "state": "directory", "owner": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create directories on Windows", "module": "win_file", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create directories on Windows", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}", "{{ consul_log_path }}", "{{ consul_bin_path }}"], "when": "ansible_os_family == 'Windows'"}, "module_options": {"dest": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Read package checksum file", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "register": "consul_checksum", "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Download package checksum file", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "tags": "installation", "when": "not consul_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Read package checksum", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum", "become": false, "vars": {"ansible_become": false}, "register": "consul_sha256", "tags": ["installation", "skip_ansible_lint"], "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": "grep \"{{ consul_pkg }}\" \"{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS\" | awk '{print $1}'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Check Consul package file", "become": false, "vars": {"ansible_become": false}, "register": "consul_package", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Download Consul package", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "when": "not consul_package.stat.exists | bool", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "{{ role_path }}/files/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Update Alpine Package Manager (APK)", "module": "apk", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Update Alpine Package Manager (APK)", "run_once": true, "when": "ansible_os_family == \"Alpine\"", "delegate_to": "127.0.0.1"}, "module_options": {"update_cache": true}, "executable": "apk", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create Temporary Directory for Extraction", "module": "tempfile", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Create Temporary Directory for Extraction", "become": false, "vars": {"ansible_become": false}, "register": "install_temp", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"state": "directory", "prefix": "ansible-consul."}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Unarchive Consul package", "module": "unarchive", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Unarchive Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ consul_pkg }}", "dest": "{{ install_temp.path }}/", "creates": "{{ install_temp.path }}/consul"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install Consul", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install Consul", "notify": ["restart consul"], "tags": "installation"}, "module_options": {"src": "{{ install_temp.path }}/consul", "dest": "{{ consul_bin_path }}/consul", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Cleanup", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ install_temp.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (with --user)", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (with --user)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "not is_virtualenv or is_virtualenv == None"}, "module_options": {"name": "netaddr", "extra_args": "--user"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (virtualenv)", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (virtualenv)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "is_virtualenv is defined"}, "module_options": {"name": "netaddr"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Include checks/asserts", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include checks/asserts"}, "module_options": "asserts.yml", "executable": "asserts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": "always"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Include NIX tasks", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include NIX tasks", "when": "ansible_os_family != 'Windows'"}, "module_options": "nix.yml", "executable": "nix.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Include Windows tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include Windows tasks", "when": "ansible_os_family == 'Windows'"}, "module_options": "windows.yml", "executable": "windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Include services management", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include services management", "when": "consul_services is defined and consul_services|length>0", "tags": ["consul_services"]}, "module_options": "services.yml", "executable": "services.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "flush_handlers", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "flush_handlers"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"RedHat\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"Debian\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "pkgng", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Enable dnsmasq service", "module": "service", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Enable dnsmasq service", "tags": "dnsmasq"}, "module_options": {"name": "dnsmasq", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration directory", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"path": "/usr/local/etc/dnsmasq.d", "state": "directory", "owner": "root", "group": "wheel"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration", "module": "template", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family in [\"Debian\", \"RedHat\"]", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/etc/dnsmasq.d/10-consul", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create FreeBSD-specific configuration", "module": "lineinfile", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"dest": "/usr/local/etc/dnsmasq.conf", "line": "conf-dir=/usr/local/etc/dnsmasq.d/,*.conf"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create FreeBSD-specific Dnsmasq configuration", "module": "template", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/usr/local/etc/dnsmasq.d/consul.conf", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml": {"py/object": "struct4.TaskFile", "name": "windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "(Windows) Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Expose bind_address, datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Expose bind_address, datacenter and node_role as facts"}, "module_options": {"consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Read bootstrapped state", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Include directory settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check for existing Consul binary", "module": "win_stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Install OS packages and consul", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Install OS packages and consul", "when": ["not consul_binary_installed.stat.exists | bool"]}, "module_options": "install_windows.yml", "executable": "install_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Deserialize existing configuration", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Save gossip encryption key from existing configuration", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Write gossip encryption key locally for use with new servers", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "run_once": true, "register": "consul_local_key", "delegate_to": "localhost", "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Generate gossip encryption key", "module": "win_shell", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "{{ consul_binary }} keygen", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Write key locally to share with other nodes", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Read gossip encryption key for servers that require it", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Delete gossip encryption key file", "module": "file", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create Consul configuration", "module": "import_tasks", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create Consul configuration"}, "module_options": "config_windows.yml", "executable": "config_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Ensure neither ACL nor TLS are requested", "module": "fail", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Ensure neither ACL nor TLS are requested", "when": ["(consul_acl_enable | bool) or (consul_tls_enable | bool)"]}, "module_options": {"msg": "ACL and TLS are not supported on Windows hosts yet."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create ACL configuration", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create TLS configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul as a service", "module": "win_service", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "Create Consul as a service"}, "module_options": {"name": "Consul", "path": "{{ consul_binary }} agent -config-file={{ consul_config_path }}/config.json -config-dir={{ consul_configd_path }}", "display_name": "Consul Service", "description": "Consul", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check Consul HTTP API", "module": "win_wait_for", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check Consul HTTP API"}, "module_options": {"delay": 5, "port": 8500}, "executable": "win_wait_for", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create bootstrapped state file", "module": "win_file", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create bootstrapped state file", "when": "ansible_os_family == \"Windows\""}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml": {"py/object": "struct4.TaskFile", "name": "install_windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify TLS1.2 is used", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Verify TLS1.2 is used"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319", "name": "SchUseStrongCrypto", "data": 1, "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "win_get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "win_shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum", "args": {"chdir": "/tmp/consul"}, "register": "consul_pkg_checksum", "tags": "installation"}, "module_options": "findstr {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul", "module": "win_get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Calculate checksum", "module": "win_stat", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Calculate checksum", "register": "consul_pkg_hash", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}", "checksum_algorithm": "sha256"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compare checksum to hashfile", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Compare checksum to hashfile", "when": ["consul_pkg_hash.stat.checksum != (consul_pkg_checksum.stdout.split(' ') | first)"]}, "module_options": {"msg": "Checksum {{ consul_pkg_checksum.stdout.split(' ') | first }} did not match calculated SHA256 {{ consul_pkg_hash.stat.checksum }}!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "win_unzip", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Unarchive Consul and install binary", "tags": "installation"}, "module_options": {"src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml": {"py/object": "struct4.TaskFile", "name": "config_windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create configuration", "module": "win_copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml": {"py/object": "struct4.TaskFile", "name": "asserts.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": ["ansible_distribution not in ['RedHat', 'CentOS', 'OracleLinux', 'Fedora', 'Debian', 'FreeBSD', 'SmartOS', 'Ubuntu', 'Archlinux', 'Alpine', 'Amazon']", "ansible_os_family != 'Windows'"]}, "module_options": {"msg": "{{ ansible_distribution }} is not currently supported by this role."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check CentOS, Red Hat or Oracle Linux version", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check CentOS, Red Hat or Oracle Linux version", "when": ["ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Debian version", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Debian version", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version_compare(8, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check FreeBSD version", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check FreeBSD version", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version_compare(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Ubuntu version", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Ubuntu version", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version_compare(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check specified ethernet interface", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check specified ethernet interface", "when": ["ansible_os_family != 'Windows'", "consul_iface not in ansible_interfaces"]}, "module_options": {"msg": "The ethernet interface specified by consul_iface was not found."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check iptables on Red Hat, CentOS or Oracle Linux", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check iptables on Red Hat, CentOS or Oracle Linux", "when": ["consul_iptables_enable | bool", "ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '>=')"]}, "module_options": {"msg": "Use DNSmasq instead of iptables on {{ ansible_distribution }}."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for both Dnsmasq and iptables enabled", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for both Dnsmasq and iptables enabled", "when": ["consul_dnsmasq_enable | bool", "consul_iptables_enable | bool"]}, "module_options": {"msg": "EONEORTHEOTHER: DNSmasq and iptables together is not supported."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for iptables enabled but no recursors", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for iptables enabled but no recursors", "when": ["consul_iptables_enable | bool", "consul_recursors | length == 0"]}, "module_options": {"msg": "Recursors are required if iptables is enabled."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check consul_group_name is included in groups", "module": "fail", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check consul_group_name is included in groups", "when": "consul_group_name not in groups"}, "module_options": {"msg": "consul_group_name must be included in groups."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if more than one bootstrap server is defined", "module": "fail", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if more than one bootstrap server is defined", "when": ["_consul_bootstrap_servers | length > 1"]}, "module_options": {"msg": "You can not define more than one bootstrap server."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "module": "fail", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "when": ["_consul_bootstrap_servers | length > 0", "consul_bootstrap_expect | bool"]}, "module_options": {"msg": "Can't use a bootstrap server and bootstrap_expect at the same time."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if unzip is installed on control host", "module": "shell", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check if unzip is installed on control host", "become": false, "changed_when": false, "check_mode": false, "run_once": true, "register": "is_unzip_installed", "ignore_errors": true, "delegate_to": "127.0.0.1"}, "module_options": "command -v unzip -h >/dev/null 2>&1", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install remotely if unzip is not installed on control host", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Install remotely if unzip is not installed on control host", "when": ["is_unzip_installed.rc == 1"]}, "module_options": {"consul_install_remotely": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml": {"py/object": "struct4.TaskFile", "name": "install_remote.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "changed_when": false, "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "validate_certs": false}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum", "register": "consul_sha256", "changed_when": false, "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Check Consul package file", "register": "consul_package", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul", "register": "consul_download", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout.split(' ')|first }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Unarchive Consul and install binary", "register": "consul_install", "notify": ["restart consul"], "when": "consul_download is changed", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool", "consul_install is changed"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml": {"py/object": "struct4.TaskFile", "name": "user_group.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add Consul group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul group", "when": ["consul_manage_group | bool"]}, "module_options": {"name": "{{ consul_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Consul user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul user", "when": ["consul_manage_user | bool"]}, "module_options": {"name": "{{ consul_user }}", "comment": "Consul user", "group": "{{ consul_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml": {"py/object": "struct4.TaskFile", "name": "syslog.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "tasks": [{"py/object": "struct4.Task", "name": "Detect syslog program", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Detect syslog program", "register": "stat_syslogng", "when": ["ansible_os_family != 'Windows'", "consul_configure_syslogd | bool"]}, "module_options": {"path": "/usr/sbin/syslog-ng"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install syslog-ng config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install syslog-ng config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "stat_syslogng.stat.exists"], "notify": ["restart syslog-ng", "restart consul"]}, "module_options": {"src": "syslogng_consul.conf.j2", "dest": "/etc/syslog-ng/conf.d/consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install rsyslogd config", "module": "template", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install rsyslogd config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "not stat_syslogng.stat.exists"], "notify": ["restart rsyslog", "restart consul"]}, "module_options": {"src": "rsyslogd_00-consul.conf.j2", "dest": "/etc/rsyslog.d/00-consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml": {"py/object": "struct4.TaskFile", "name": "acl.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "tasks": [{"py/object": "struct4.Task", "name": "Read ACL master token from previously boostrapped server", "module": "command", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL master token from previously boostrapped server", "register": "config_read", "no_log": true, "changed_when": false, "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save acl_master_token from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_master_token from existing configuration", "vars": {"query": "acl.tokens.master"}, "no_log": true}, "module_options": {"consul_acl_master_token": "{{ config_read.stdout | from_json | json_query(query) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ACL master token", "module": "command", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL master token", "register": "consul_acl_master_token_keygen", "run_once": true, "no_log": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save ACL master token", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL master token", "no_log": true}, "module_options": {"consul_acl_master_token": "{{ consul_acl_master_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Display ACL Master Token", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Display ACL Master Token", "run_once": true, "when": ["consul_acl_master_token_display | bool", "consul_node_role == 'server'"]}, "module_options": {"msg": "{{ consul_acl_master_token }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read ACL replication token from previously boostrapped server", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL replication token from previously boostrapped server", "changed_when": false, "check_mode": false, "register": "consul_acl_replication_token_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json | grep \"replication\" | sed -E 's/\"replication\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save acl_replication_token from existing configuration", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_replication_token from existing configuration", "ignore_errors": true}, "module_options": "consul_acl_replication_token=\"{{ consul_acl_replication_token_read.stdout }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ACL replication token", "module": "command", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL replication token", "register": "consul_acl_replication_token_keygen", "no_log": true, "run_once": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save ACL replication token", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL replication token", "no_log": true}, "module_options": {"consul_acl_replication_token": "{{ consul_acl_replication_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ACL policy configuration", "module": "template", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Create ACL policy configuration", "notify": ["restart consul"], "when": "consul_acl_policy | bool"}, "module_options": {"src": "configd_50acl_policy.hcl.j2", "dest": "{{ consul_configd_path }}/50acl_policy.hcl", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml": {"py/object": "struct4.TaskFile", "name": "iptables.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install iptables", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Install iptables"}, "module_options": {"name": "iptables"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (1/4)", "module": "iptables", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (1/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (2/4)", "module": "iptables", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (2/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (3/4)", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (3/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (4/4)", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (4/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml": {"py/object": "struct4.TaskFile", "name": "nix.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Expose advertise_address(_wan) datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Expose advertise_address(_wan) datacenter and node_role as facts"}, "module_options": {"consul_advertise_address_wan": "{{ consul_advertise_address_wan }}", "consul_advertise_address": "{{ consul_advertise_address }}", "consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read bootstrapped state", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include user and group settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include user and group settings"}, "module_options": "user_group.yml", "executable": "user_group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include directory settings", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for existing Consul binary", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Calculate whether to install consul binary", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Calculate whether to install consul binary"}, "module_options": {"consul_install_binary": "{{ consul_install_upgrade | bool or not consul_binary_installed.stat.exists }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and consul - locally", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - locally", "when": ["consul_install_binary | bool", "not consul_install_remotely | bool"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and consul - remotely", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - remotely", "when": ["consul_install_binary | bool", "consul_install_remotely | bool"]}, "module_options": "install_remote.yml", "executable": "install_remote.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deserialize existing configuration", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "register": "consul_local_key", "delegate_to": "localhost", "changed_when": false, "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write key locally to share with other nodes", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost", "changed_when": false}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ACL configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul configuration", "module": "import_tasks", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Consul configuration"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create TLS configuration", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create syslog configuration", "module": "import_tasks", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create syslog configuration"}, "module_options": "syslog.yml", "executable": "syslog.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create BSD init script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "consul_bsdinit.j2", "dest": "/etc/rc.d/consul", "owner": "root", "group": "wheel", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create SYSV init script", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_sysvinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Debian init script", "module": "template", "index": 23, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_debianinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create systemd script", "module": "template", "index": 24, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create systemd script", "register": "systemd_unit", "notify": "restart consul", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_systemd.service.j2", "dest": "/lib/systemd/system/consul.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 25, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Reload systemd", "when": "systemd_unit is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create smf manifest", "module": "template", "index": 26, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create smf manifest", "when": "ansible_os_family == \"Solaris\"", "register": "smfmanifest"}, "module_options": {"src": "consul_smf_manifest.j2", "dest": "{{ consul_smf_manifest }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import smf manifest", "module": "shell", "index": 27, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf manifest", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svccfg import {{ consul_smf_manifest }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import smf script", "module": "shell", "index": 28, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf script", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svcadm refresh consul", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable Consul Snapshots on servers", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Enable Consul Snapshots on servers", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": "snapshot.yml", "executable": "snapshot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Consul", "module": "service", "index": 30, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Start Consul"}, "module_options": {"name": "consul", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via TCP socket)", "module": "wait_for", "index": 31, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via TCP socket)", "when": "(consul_ports.http|int > -1) and (consul_addresses.http|ipaddr)"}, "module_options": {"delay": 15, "port": "{{ consul_ports.http|int }}", "host": "{{ consul_addresses.http }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via unix socket)", "module": "wait_for", "index": 32, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via unix socket)", "when": "consul_addresses.http is match(\"unix://*\")"}, "module_options": {"delay": 15, "path": "{{ consul_addresses.http | replace('unix://', '', 1) }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create bootstrapped state file", "module": "file", "index": 33, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create bootstrapped state file"}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 34, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 35, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml": {"py/object": "struct4.TaskFile", "name": "services.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure consul services", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Configure consul services", "with_items": "{{ consul_services }}", "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/service_{{ item.name }}.json", "src": "service.json.j2", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the list of service config file", "module": "find", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file", "register": "services_enabled_unix", "when": "ansible_os_family != 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the list of service config file [Windows]", "module": "win_find", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file [Windows]", "register": "services_enabled_windows", "when": "ansible_os_family == 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "set var for enabled services", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services", "when": "ansible_os_family != 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_unix['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set var for enabled services [Windows]", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services [Windows]", "when": "ansible_os_family == 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_windows['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact with list of existing configuration files", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of existing configuration files", "with_items": "{{ services_enabled_files }}"}, "module_options": {"list_current_service_config": "{{ list_current_service_config |default([]) + [ item.path ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact with list of service we manage", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of service we manage", "with_items": "{{ consul_services }}"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/service_{{ item.name }}.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete non declared services", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services", "when": "ansible_os_family != 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete non declared services [Windows]", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services [Windows]", "when": "ansible_os_family == 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml": {"py/object": "struct4.TaskFile", "name": "snapshot.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create snapshot systemd script", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot systemd script", "register": "systemd_unit", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_systemd_snapshot.service.j2", "dest": "/lib/systemd/system/consul_snapshot.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create snapshot agent config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot agent config", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_snapshot.json.j2", "dest": "{{ consul_config_path }}/consul_snapshot.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Reload systemd", "when": "systemd_unit | changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create snaps storage folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snaps storage folder"}, "module_options": {"state": "directory", "path": "{{ consul_snapshot_storage }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 484}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml": {"py/object": "struct4.TaskFile", "name": "tls.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create SSL directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Create SSL directory"}, "module_options": {"dest": "{{ consul_tls_dir }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA certificate", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy CA certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_ca_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_ca_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy server certificate", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy server key", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server key", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_key | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_key }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml": {"py/object": "struct4.TaskFile", "name": "encrypt_gossip.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "tasks": [{"py/object": "struct4.Task", "name": "Read gossip encryption key from previously boostrapped server", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key from previously boostrapped server", "register": "consul_key_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/bootstrap/config.json | grep \"encrypt\" | sed -E 's/\"encrypt\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Save gossip encryption key from existing configuration", "ignore_errors": true}, "module_options": "consul_raw_key={{ consul_key_read.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key for servers that require it", "when": ["consul_raw_key is not defined", "bootstrap_state.stat.exists | bool"]}, "module_options": "consul_raw_key=\"{{ lookup('file', '/tmp/consul_raw.key') }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen", "run_once": true}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key to fact", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key to fact"}, "module_options": "consul_raw_key={{ consul_keygen.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml": {"py/object": "struct4.TaskFile", "name": "config.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create configuration", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml": {"py/object": "struct4.TaskFile", "name": "dirs.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configuration and data directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Configuration and data directories", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Run directory"}, "module_options": {"dest": "{{ consul_run_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "when": ["ansible_os_family != 'Windows'", "not consul_syslog_enable | bool", "not consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ consul_log_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "with_items": ["{{ consul_log_path }}"], "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ syslog_user }}", "group": "{{ syslog_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify binary path", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Verify binary path", "when": "ansible_os_family != 'Windows'"}, "module_options": {"path": "{{ consul_bin_path }}", "state": "directory", "owner": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories on Windows", "module": "win_file", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create directories on Windows", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}", "{{ consul_log_path }}", "{{ consul_bin_path }}"], "when": "ansible_os_family == 'Windows'"}, "module_options": {"dest": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read package checksum file", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "register": "consul_checksum", "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download package checksum file", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "tags": "installation", "when": "not consul_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read package checksum", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum", "become": false, "vars": {"ansible_become": false}, "register": "consul_sha256", "tags": ["installation", "skip_ansible_lint"], "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": "grep \"{{ consul_pkg }}\" \"{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS\" | awk '{print $1}'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Check Consul package file", "become": false, "vars": {"ansible_become": false}, "register": "consul_package", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "when": "not consul_package.stat.exists | bool", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "{{ role_path }}/files/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Alpine Package Manager (APK)", "module": "apk", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Update Alpine Package Manager (APK)", "run_once": true, "when": "ansible_os_family == \"Alpine\"", "delegate_to": "127.0.0.1"}, "module_options": {"update_cache": true}, "executable": "apk", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Temporary Directory for Extraction", "module": "tempfile", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Create Temporary Directory for Extraction", "become": false, "vars": {"ansible_become": false}, "register": "install_temp", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"state": "directory", "prefix": "ansible-consul."}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul package", "module": "unarchive", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Unarchive Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ consul_pkg }}", "dest": "{{ install_temp.path }}/", "creates": "{{ install_temp.path }}/consul"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Consul", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install Consul", "notify": ["restart consul"], "tags": "installation"}, "module_options": {"src": "{{ install_temp.path }}/consul", "dest": "{{ consul_bin_path }}/consul", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Cleanup", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ install_temp.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (with --user)", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (with --user)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "not is_virtualenv or is_virtualenv == None"}, "module_options": {"name": "netaddr", "extra_args": "--user"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (virtualenv)", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (virtualenv)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "is_virtualenv is defined"}, "module_options": {"name": "netaddr"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include checks/asserts", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include checks/asserts"}, "module_options": "asserts.yml", "executable": "asserts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": "always"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include NIX tasks", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include NIX tasks", "when": "ansible_os_family != 'Windows'"}, "module_options": "nix.yml", "executable": "nix.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Windows tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include Windows tasks", "when": "ansible_os_family == 'Windows'"}, "module_options": "windows.yml", "executable": "windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include services management", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include services management", "when": "consul_services is defined and consul_services|length>0", "tags": ["consul_services"]}, "module_options": "services.yml", "executable": "services.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush_handlers", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "flush_handlers"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml": {"py/object": "struct4.TaskFile", "name": "dnsmasq.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"RedHat\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"Debian\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "pkgng", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable dnsmasq service", "module": "service", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Enable dnsmasq service", "tags": "dnsmasq"}, "module_options": {"name": "dnsmasq", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration directory", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"path": "/usr/local/etc/dnsmasq.d", "state": "directory", "owner": "root", "group": "wheel"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration", "module": "template", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family in [\"Debian\", \"RedHat\"]", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/etc/dnsmasq.d/10-consul", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create FreeBSD-specific configuration", "module": "lineinfile", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"dest": "/usr/local/etc/dnsmasq.conf", "line": "conf-dir=/usr/local/etc/dnsmasq.d/,*.conf"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create FreeBSD-specific Dnsmasq configuration", "module": "template", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/usr/local/etc/dnsmasq.d/consul.conf", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}}, "role_dict": {"brianshumate.consul": {"py/object": "struct4.Role", "name": "brianshumate.consul", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul", "fqcn": "brianshumate.consul", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "(Windows) Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Expose bind_address, datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Expose bind_address, datacenter and node_role as facts"}, "module_options": {"consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Read bootstrapped state", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Include directory settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check for existing Consul binary", "module": "win_stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Install OS packages and consul", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Install OS packages and consul", "when": ["not consul_binary_installed.stat.exists | bool"]}, "module_options": "install_windows.yml", "executable": "install_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Deserialize existing configuration", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Save gossip encryption key from existing configuration", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Write gossip encryption key locally for use with new servers", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "run_once": true, "register": "consul_local_key", "delegate_to": "localhost", "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Generate gossip encryption key", "module": "win_shell", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "{{ consul_binary }} keygen", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Write key locally to share with other nodes", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key", "mode": 448}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Read gossip encryption key for servers that require it", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Delete gossip encryption key file", "module": "file", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create Consul configuration", "module": "import_tasks", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create Consul configuration"}, "module_options": "config_windows.yml", "executable": "config_windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Ensure neither ACL nor TLS are requested", "module": "fail", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Ensure neither ACL nor TLS are requested", "when": ["(consul_acl_enable | bool) or (consul_tls_enable | bool)"]}, "module_options": {"msg": "ACL and TLS are not supported on Windows hosts yet."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create ACL configuration", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create TLS configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul as a service", "module": "win_service", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "Create Consul as a service"}, "module_options": {"name": "Consul", "path": "{{ consul_binary }} agent -config-file={{ consul_config_path }}/config.json -config-dir={{ consul_configd_path }}", "display_name": "Consul Service", "description": "Consul", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Check Consul HTTP API", "module": "win_wait_for", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Check Consul HTTP API"}, "module_options": {"delay": 5, "port": 8500}, "executable": "win_wait_for", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Windows) Create bootstrapped state file", "module": "win_file", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"name": "(Windows) Create bootstrapped state file", "when": "ansible_os_family == \"Windows\""}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/windows.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "win_file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify TLS1.2 is used", "module": "win_regedit", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Verify TLS1.2 is used"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319", "name": "SchUseStrongCrypto", "data": 1, "type": "dword"}, "executable": "win_regedit", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "win_stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "win_get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "win_shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Read Consul package checksum", "args": {"chdir": "/tmp/consul"}, "register": "consul_pkg_checksum", "tags": "installation"}, "module_options": "findstr {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul", "module": "win_get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Download Consul", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Calculate checksum", "module": "win_stat", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Calculate checksum", "register": "consul_pkg_hash", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}", "checksum_algorithm": "sha256"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Compare checksum to hashfile", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Compare checksum to hashfile", "when": ["consul_pkg_hash.stat.checksum != (consul_pkg_checksum.stdout.split(' ') | first)"]}, "module_options": {"msg": "Checksum {{ consul_pkg_checksum.stdout.split(' ') | first }} did not match calculated SHA256 {{ consul_pkg_hash.stat.checksum }}!"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "win_unzip", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Unarchive Consul and install binary", "tags": "installation"}, "module_options": {"src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_windows.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "config_windows.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create configuration", "module": "win_copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config_windows.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "asserts.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check distribution compatibility", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check distribution compatibility", "when": ["ansible_distribution not in ['RedHat', 'CentOS', 'OracleLinux', 'Fedora', 'Debian', 'FreeBSD', 'SmartOS', 'Ubuntu', 'Archlinux', 'Alpine', 'Amazon']", "ansible_os_family != 'Windows'"]}, "module_options": {"msg": "{{ ansible_distribution }} is not currently supported by this role."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check CentOS, Red Hat or Oracle Linux version", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check CentOS, Red Hat or Oracle Linux version", "when": ["ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Debian version", "module": "fail", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Debian version", "when": ["ansible_distribution == \"Debian\"", "(ansible_distribution_version != 'buster/sid') and (ansible_distribution_version is version_compare(8, '<'))"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check FreeBSD version", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check FreeBSD version", "when": ["ansible_distribution == \"FreeBSD\"", "ansible_distribution_version is version_compare(10, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Ubuntu version", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check Ubuntu version", "when": ["ansible_distribution == \"Ubuntu\"", "ansible_distribution_version is version_compare(13.04, '<')"]}, "module_options": {"msg": "{{ ansible_distribution_version }} is not a supported version."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check specified ethernet interface", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check specified ethernet interface", "when": ["ansible_os_family != 'Windows'", "consul_iface not in ansible_interfaces"]}, "module_options": {"msg": "The ethernet interface specified by consul_iface was not found."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check iptables on Red Hat, CentOS or Oracle Linux", "module": "fail", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check iptables on Red Hat, CentOS or Oracle Linux", "when": ["consul_iptables_enable | bool", "ansible_distribution in ['RedHat', 'CentOS', 'OracleLinux']", "ansible_distribution_version is version_compare(6, '>=')"]}, "module_options": {"msg": "Use DNSmasq instead of iptables on {{ ansible_distribution }}."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for both Dnsmasq and iptables enabled", "module": "fail", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for both Dnsmasq and iptables enabled", "when": ["consul_dnsmasq_enable | bool", "consul_iptables_enable | bool"]}, "module_options": {"msg": "EONEORTHEOTHER: DNSmasq and iptables together is not supported."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for iptables enabled but no recursors", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check for iptables enabled but no recursors", "when": ["consul_iptables_enable | bool", "consul_recursors | length == 0"]}, "module_options": {"msg": "Recursors are required if iptables is enabled."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check consul_group_name is included in groups", "module": "fail", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check consul_group_name is included in groups", "when": "consul_group_name not in groups"}, "module_options": {"msg": "consul_group_name must be included in groups."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if more than one bootstrap server is defined", "module": "fail", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if more than one bootstrap server is defined", "when": ["_consul_bootstrap_servers | length > 1"]}, "module_options": {"msg": "You can not define more than one bootstrap server."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "module": "fail", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Fail if a bootstrap server is defined and bootstrap_expect is true", "when": ["_consul_bootstrap_servers | length > 0", "consul_bootstrap_expect | bool"]}, "module_options": {"msg": "Can't use a bootstrap server and bootstrap_expect at the same time."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if unzip is installed on control host", "module": "shell", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Check if unzip is installed on control host", "become": false, "changed_when": false, "check_mode": false, "run_once": true, "register": "is_unzip_installed", "ignore_errors": true, "delegate_to": "127.0.0.1"}, "module_options": "command -v unzip -h >/dev/null 2>&1", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install remotely if unzip is not installed on control host", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/asserts.yml", "options": {"name": "Install remotely if unzip is not installed on control host", "when": ["is_unzip_installed.rc == 1"]}, "module_options": {"consul_install_remotely": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install_remote.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate remote Consul directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Validate remote Consul directory"}, "module_options": {"path": "/tmp/consul", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum file", "register": "consul_checksum", "changed_when": false, "tags": "installation"}, "module_options": {"path": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package checksum file", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul package checksum file", "tags": "installation", "when": "not consul_checksum.stat.exists | bool"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "/tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "validate_certs": false}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read Consul package checksum", "module": "shell", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Read Consul package checksum", "register": "consul_sha256", "changed_when": false, "tags": ["installation", "skip_ansible_lint"]}, "module_options": "grep {{ consul_pkg }} /tmp/consul/consul_{{ consul_version }}_SHA256SUMS", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Check Consul package file", "register": "consul_package", "tags": "installation"}, "module_options": {"path": "/tmp/consul/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Download Consul", "register": "consul_download", "tags": "installation"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "/tmp/consul/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout.split(' ')|first }}", "timeout": 42}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul and install binary", "module": "unarchive", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Unarchive Consul and install binary", "register": "consul_install", "notify": ["restart consul"], "when": "consul_download is changed", "tags": "installation"}, "module_options": {"remote_src": true, "src": "/tmp/consul/{{ consul_pkg }}", "dest": "{{ consul_bin_path }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool", "consul_install is changed"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install_remote.yml", "options": {"name": "Cleanup", "tags": "installation"}, "module_options": {"path": "/tmp/consul", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "user_group.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "tasks": [{"py/object": "struct4.Task", "name": "Add Consul group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul group", "when": ["consul_manage_group | bool"]}, "module_options": {"name": "{{ consul_group }}", "state": "present"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add Consul user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/user_group.yml", "options": {"name": "Add Consul user", "when": ["consul_manage_user | bool"]}, "module_options": {"name": "{{ consul_user }}", "comment": "Consul user", "group": "{{ consul_group }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "syslog.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "tasks": [{"py/object": "struct4.Task", "name": "Detect syslog program", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Detect syslog program", "register": "stat_syslogng", "when": ["ansible_os_family != 'Windows'", "consul_configure_syslogd | bool"]}, "module_options": {"path": "/usr/sbin/syslog-ng"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install syslog-ng config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install syslog-ng config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "stat_syslogng.stat.exists"], "notify": ["restart syslog-ng", "restart consul"]}, "module_options": {"src": "syslogng_consul.conf.j2", "dest": "/etc/syslog-ng/conf.d/consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install rsyslogd config", "module": "template", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/syslog.yml", "options": {"name": "Install rsyslogd config", "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool", "not stat_syslogng.stat.exists"], "notify": ["restart rsyslog", "restart consul"]}, "module_options": {"src": "rsyslogd_00-consul.conf.j2", "dest": "/etc/rsyslog.d/00-consul.conf", "owner": "root", "group": "root", "mode": 292}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "acl.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "tasks": [{"py/object": "struct4.Task", "name": "Read ACL master token from previously boostrapped server", "module": "command", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL master token from previously boostrapped server", "register": "config_read", "no_log": true, "changed_when": false, "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save acl_master_token from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_master_token from existing configuration", "vars": {"query": "acl.tokens.master"}, "no_log": true}, "module_options": {"consul_acl_master_token": "{{ config_read.stdout | from_json | json_query(query) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ACL master token", "module": "command", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL master token", "register": "consul_acl_master_token_keygen", "run_once": true, "no_log": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save ACL master token", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL master token", "no_log": true}, "module_options": {"consul_acl_master_token": "{{ consul_acl_master_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Display ACL Master Token", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Display ACL Master Token", "run_once": true, "when": ["consul_acl_master_token_display | bool", "consul_node_role == 'server'"]}, "module_options": {"msg": "{{ consul_acl_master_token }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read ACL replication token from previously boostrapped server", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Read ACL replication token from previously boostrapped server", "changed_when": false, "check_mode": false, "register": "consul_acl_replication_token_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/config.json | grep \"replication\" | sed -E 's/\"replication\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save acl_replication_token from existing configuration", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save acl_replication_token from existing configuration", "ignore_errors": true}, "module_options": "consul_acl_replication_token=\"{{ consul_acl_replication_token_read.stdout }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate ACL replication token", "module": "command", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Generate ACL replication token", "register": "consul_acl_replication_token_keygen", "no_log": true, "run_once": true}, "module_options": "echo {{ lookup('password', '/dev/null length=32 chars=ascii_letters') | to_uuid }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save ACL replication token", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Save ACL replication token", "no_log": true}, "module_options": {"consul_acl_replication_token": "{{ consul_acl_replication_token_keygen.stdout }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ACL policy configuration", "module": "template", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/acl.yml", "options": {"name": "Create ACL policy configuration", "notify": ["restart consul"], "when": "consul_acl_policy | bool"}, "module_options": {"src": "configd_50acl_policy.hcl.j2", "dest": "{{ consul_configd_path }}/50acl_policy.hcl", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "iptables.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install iptables", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Install iptables"}, "module_options": {"name": "iptables"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (1/4)", "module": "iptables", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (1/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (2/4)", "module": "iptables", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (2/4)"}, "module_options": {"table": "nat", "chain": "PREROUTING", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (3/4)", "module": "iptables", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (3/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "udp", "match": "udp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Redirect local DNS (4/4)", "module": "iptables", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/iptables.yml", "options": {"name": "Redirect local DNS (4/4)"}, "module_options": {"table": "nat", "chain": "OUTPUT", "protocol": "tcp", "match": "tcp", "destination_port": 53, "jump": "REDIRECT", "to_ports": 8600, "destination": "localhost"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "nix.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather facts from other servers", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Gather facts from other servers", "delegate_to": "{{ item }}", "delegate_facts": true, "with_items": "{{ consul_servers | difference(play_hosts) }}", "ignore_errors": true, "when": "consul_gather_server_facts | bool"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, {"py/object": "struct4.Task", "name": "Expose advertise_address(_wan) datacenter and node_role as facts", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Expose advertise_address(_wan) datacenter and node_role as facts"}, "module_options": {"consul_advertise_address_wan": "{{ consul_advertise_address_wan }}", "consul_advertise_address": "{{ consul_advertise_address }}", "consul_bind_address": "{{ consul_bind_address }}", "consul_datacenter": "{{ consul_datacenter }}", "consul_node_role": "{{ consul_node_role }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read bootstrapped state", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read bootstrapped state", "register": "bootstrap_state", "ignore_errors": true, "tags": "always"}, "module_options": {"path": "{{ consul_bootstrap_state }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include user and group settings", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include user and group settings"}, "module_options": "user_group.yml", "executable": "user_group.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include directory settings", "module": "import_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Include directory settings"}, "module_options": "dirs.yml", "executable": "dirs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for existing Consul binary", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for existing Consul binary", "register": "consul_binary_installed"}, "module_options": {"path": "{{ consul_binary }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Calculate whether to install consul binary", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Calculate whether to install consul binary"}, "module_options": {"consul_install_binary": "{{ consul_install_upgrade | bool or not consul_binary_installed.stat.exists }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and consul - locally", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - locally", "when": ["consul_install_binary | bool", "not consul_install_remotely | bool"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install OS packages and consul - remotely", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Install OS packages and consul - remotely", "when": ["consul_install_binary | bool", "consul_install_remotely | bool"]}, "module_options": "install_remote.yml", "executable": "install_remote.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check for gossip encryption key on previously boostrapped server", "module": "slurp", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check for gossip encryption key on previously boostrapped server", "register": "consul_config_b64", "ignore_errors": true}, "module_options": {"src": "{{ consul_config_path }}/config.json"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Deserialize existing configuration", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Deserialize existing configuration", "when": "consul_config_b64.content is defined"}, "module_options": {"consul_config": "{{ consul_config_b64.content | b64decode | from_json }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Save gossip encryption key from existing configuration", "when": "consul_config is defined"}, "module_options": {"consul_raw_key": "{{ consul_config.encrypt }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "no_log": true, "register": "consul_local_key", "delegate_to": "localhost", "changed_when": false, "when": "consul_raw_key is defined"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 13, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen"}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write key locally to share with other nodes", "module": "copy", "index": 14, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Write key locally to share with other nodes", "become": false, "vars": {"ansible_become": false}, "delegate_to": "localhost"}, "module_options": {"content": "{{ consul_keygen.stdout }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Read gossip encryption key for servers that require it", "no_log": true, "when": ["consul_raw_key is not defined"]}, "module_options": {"consul_raw_key": "{{ lookup('file', '/tmp/consul_raw.key') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 16, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "delegate_to": "localhost", "changed_when": false}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create ACL configuration", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create ACL configuration", "when": "consul_acl_enable | bool"}, "module_options": "acl.yml", "executable": "acl.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Consul configuration", "module": "import_tasks", "index": 18, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Consul configuration"}, "module_options": "config.yml", "executable": "config.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create TLS configuration", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create TLS configuration", "when": "consul_tls_enable | bool"}, "module_options": "tls.yml", "executable": "tls.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create syslog configuration", "module": "import_tasks", "index": 20, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create syslog configuration"}, "module_options": "syslog.yml", "executable": "syslog.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create BSD init script", "module": "template", "index": 21, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create BSD init script", "when": "ansible_os_family == \"FreeBSD\""}, "module_options": {"src": "consul_bsdinit.j2", "dest": "/etc/rc.d/consul", "owner": "root", "group": "wheel", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create SYSV init script", "module": "template", "index": 22, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create SYSV init script", "when": ["not ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_sysvinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Debian init script", "module": "template", "index": 23, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create Debian init script", "when": ["not ansible_service_mgr == \"systemd\"", "ansible_os_family == \"Debian\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_debianinit.j2", "dest": "/etc/init.d/consul", "owner": "root", "group": "root", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create systemd script", "module": "template", "index": 24, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create systemd script", "register": "systemd_unit", "notify": "restart consul", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\""]}, "module_options": {"src": "consul_systemd.service.j2", "dest": "/lib/systemd/system/consul.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 25, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Reload systemd", "when": "systemd_unit is changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create smf manifest", "module": "template", "index": 26, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create smf manifest", "when": "ansible_os_family == \"Solaris\"", "register": "smfmanifest"}, "module_options": {"src": "consul_smf_manifest.j2", "dest": "{{ consul_smf_manifest }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import smf manifest", "module": "shell", "index": 27, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf manifest", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svccfg import {{ consul_smf_manifest }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import smf script", "module": "shell", "index": 28, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Import smf script", "when": ["smfmanifest is changed", "ansible_os_family == \"Solaris\""], "tags": "skip_ansible_lint"}, "module_options": "svcadm refresh consul", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable Consul Snapshots on servers", "module": "include_tasks", "index": 29, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Enable Consul Snapshots on servers", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": "snapshot.yml", "executable": "snapshot.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Start Consul", "module": "service", "index": 30, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Start Consul"}, "module_options": {"name": "consul", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via TCP socket)", "module": "wait_for", "index": 31, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via TCP socket)", "when": "(consul_ports.http|int > -1) and (consul_addresses.http|ipaddr)"}, "module_options": {"delay": 15, "port": "{{ consul_ports.http|int }}", "host": "{{ consul_addresses.http }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul HTTP API (via unix socket)", "module": "wait_for", "index": 32, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Check Consul HTTP API (via unix socket)", "when": "consul_addresses.http is match(\"unix://*\")"}, "module_options": {"delay": 15, "path": "{{ consul_addresses.http | replace('unix://', '', 1) }}"}, "executable": "wait_for", "executable_type": "Module", "fqcn": "ansible.builtin.wait_for", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create bootstrapped state file", "module": "file", "index": 33, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"name": "Create bootstrapped state file"}, "module_options": {"dest": "{{ consul_bootstrap_state }}", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 34, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_iptables_enable | bool"}, "module_options": "../tasks/iptables.yml", "executable": "../tasks/iptables.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 35, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/nix.yml", "options": {"when": "consul_dnsmasq_enable | bool"}, "module_options": "../tasks/dnsmasq.yml", "executable": "../tasks/dnsmasq.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "services.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configure consul services", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Configure consul services", "with_items": "{{ consul_services }}", "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/service_{{ item.name }}.json", "src": "service.json.j2", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the list of service config file", "module": "find", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file", "register": "services_enabled_unix", "when": "ansible_os_family != 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get the list of service config file [Windows]", "module": "win_find", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Get the list of service config file [Windows]", "register": "services_enabled_windows", "when": "ansible_os_family == 'Windows'"}, "module_options": {"paths": "{{ consul_configd_path }}", "file_type": "file"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "set var for enabled services", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services", "when": "ansible_os_family != 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_unix['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set var for enabled services [Windows]", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "set var for enabled services [Windows]", "when": "ansible_os_family == 'Windows'"}, "module_options": {"services_enabled_files": "{{ services_enabled_windows['files'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact with list of existing configuration files", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of existing configuration files", "with_items": "{{ services_enabled_files }}"}, "module_options": {"list_current_service_config": "{{ list_current_service_config |default([]) + [ item.path ] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact with list of service we manage", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Set fact with list of service we manage", "with_items": "{{ consul_services }}"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/service_{{ item.name }}.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete non declared services", "module": "file", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services", "when": "ansible_os_family != 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete non declared services [Windows]", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/services.yml", "options": {"name": "Delete non declared services [Windows]", "when": "ansible_os_family == 'Windows' and item not in managed_files", "with_items": "{{ list_current_service_config }}", "notify": ["restart consul"]}, "module_options": {"path": "{{ item }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "snapshot.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create snapshot systemd script", "module": "template", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot systemd script", "register": "systemd_unit", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_systemd_snapshot.service.j2", "dest": "/lib/systemd/system/consul_snapshot.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create snapshot agent config", "module": "template", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snapshot agent config", "notify": "start snapshot", "when": ["ansible_service_mgr == \"systemd\"", "not ansible_os_family == \"FreeBSD\"", "not ansible_os_family == \"Solaris\"", "consul_snapshot | bool"]}, "module_options": {"src": "consul_snapshot.json.j2", "dest": "{{ consul_config_path }}/consul_snapshot.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd", "module": "systemd", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Reload systemd", "when": "systemd_unit | changed"}, "module_options": {"daemon_reload": true}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create snaps storage folder", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/snapshot.yml", "options": {"name": "Create snaps storage folder"}, "module_options": {"state": "directory", "path": "{{ consul_snapshot_storage }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 484}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tls.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create SSL directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Create SSL directory"}, "module_options": {"dest": "{{ consul_tls_dir }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy CA certificate", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy CA certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_ca_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_ca_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy server certificate", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server certificate", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_crt | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_crt }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 420}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy server key", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/tls.yml", "options": {"name": "Copy server key", "notify": "restart consul"}, "module_options": {"remote_src": "{{ consul_tls_files_remote_src }}", "src": "{{ consul_tls_src_files }}/{{ consul_tls_server_key | basename }}", "dest": "{{ consul_tls_dir }}/{{ consul_tls_server_key }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 384}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "encrypt_gossip.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "tasks": [{"py/object": "struct4.Task", "name": "Read gossip encryption key from previously boostrapped server", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key from previously boostrapped server", "register": "consul_key_read", "run_once": true}, "module_options": "cat {{ consul_config_path }}/bootstrap/config.json | grep \"encrypt\" | sed -E 's/\"encrypt\": \"(.+)\",?/\\1/' | sed 's/^ *//;s/ *$//'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Save gossip encryption key from existing configuration", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Save gossip encryption key from existing configuration", "ignore_errors": true}, "module_options": "consul_raw_key={{ consul_key_read.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key locally for use with new servers", "module": "copy", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key locally for use with new servers", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"content": "{{ consul_raw_key }}", "dest": "/tmp/consul_raw.key"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read gossip encryption key for servers that require it", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Read gossip encryption key for servers that require it", "when": ["consul_raw_key is not defined", "bootstrap_state.stat.exists | bool"]}, "module_options": "consul_raw_key=\"{{ lookup('file', '/tmp/consul_raw.key') }}\"", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete gossip encryption key file", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Delete gossip encryption key file", "become": false, "vars": {"ansible_become": false}, "when": ["consul_raw_key is defined", "bootstrap_state.stat.exists | bool"], "delegate_to": "127.0.0.1"}, "module_options": {"path": "/tmp/consul_raw.key", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Generate gossip encryption key", "module": "shell", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Generate gossip encryption key", "register": "consul_keygen", "run_once": true}, "module_options": "PATH={{ consul_bin_path }}:$PATH consul keygen", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Write gossip encryption key to fact", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/encrypt_gossip.yml", "options": {"name": "Write gossip encryption key to fact"}, "module_options": "consul_raw_key={{ consul_keygen.stdout }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "config.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create configuration", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create configuration", "with_items": [{"dest": "{{ consul_config_path }}/config.json", "config_version": "{{ consul_node_role }}", "when": true}, {"dest": "{{ consul_config_path }}/bootstrap.json", "config_version": "bootstrap", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/server.json", "config_version": "server", "when": "{{ consul_debug | bool }}"}, {"dest": "{{ consul_config_path }}/client.json", "config_version": "client", "when": "{{ consul_debug | bool }}"}], "when": ["item.when"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ item.dest }}", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/config.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom configuration", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Create custom configuration", "when": ["consul_config_custom is defined"], "notify": ["restart consul"]}, "module_options": {"dest": "{{ consul_configd_path }}/50custom.json", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "content": "{{ lookup('template', 'templates/configd_50custom.json.j2') | to_nice_json }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set fact list with custom configuration file", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/config.yml", "options": {"name": "Set fact list with custom configuration file"}, "module_options": {"managed_files": "{{ managed_files |default([]) }} + [ '{{ consul_configd_path }}/50custom.json' ]"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "dirs.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "tasks": [{"py/object": "struct4.Task", "name": "Configuration and data directories", "module": "file", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Configuration and data directories", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 448}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Run directory"}, "module_options": {"dest": "{{ consul_run_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 488}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "when": ["ansible_os_family != 'Windows'", "not consul_syslog_enable | bool", "not consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ consul_log_path }}", "state": "directory", "owner": "{{ consul_user }}", "group": "{{ consul_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create log directory", "module": "file", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create log directory", "with_items": ["{{ consul_log_path }}"], "when": ["ansible_os_family != 'Windows'", "consul_syslog_enable | bool", "consul_configure_syslogd | bool"]}, "module_options": {"dest": "{{ item }}", "state": "directory", "owner": "{{ syslog_user }}", "group": "{{ syslog_group }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Verify binary path", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Verify binary path", "when": "ansible_os_family != 'Windows'"}, "module_options": {"path": "{{ consul_bin_path }}", "state": "directory", "owner": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directories on Windows", "module": "win_file", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dirs.yml", "options": {"name": "Create directories on Windows", "with_items": ["{{ consul_config_path }}", "{{ consul_configd_path }}", "{{ consul_data_path }}", "{{ consul_log_path }}", "{{ consul_bin_path }}"], "when": "ansible_os_family == 'Windows'"}, "module_options": {"dest": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install OS packages", "module": "package", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install OS packages", "with_items": "{{ consul_os_packages }}", "tags": "installation"}, "module_options": {"name": "{{ item }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read package checksum file", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "register": "consul_checksum", "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download package checksum file", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download package checksum file", "become": false, "vars": {"ansible_become": false}, "run_once": true, "tags": "installation", "when": "not consul_checksum.stat.exists | bool", "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_checksum_file_url }}", "dest": "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Read package checksum", "module": "shell", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Read package checksum", "become": false, "vars": {"ansible_become": false}, "register": "consul_sha256", "tags": ["installation", "skip_ansible_lint"], "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": "grep \"{{ consul_pkg }}\" \"{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS\" | awk '{print $1}'", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check Consul package file", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Check Consul package file", "become": false, "vars": {"ansible_become": false}, "register": "consul_package", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ role_path }}/files/{{ consul_pkg }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download Consul package", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Download Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "when": "not consul_package.stat.exists | bool", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"url": "{{ consul_zip_url }}", "dest": "{{ role_path }}/files/{{ consul_pkg }}", "checksum": "sha256:{{ consul_sha256.stdout }}", "timeout": "42"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update Alpine Package Manager (APK)", "module": "apk", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Update Alpine Package Manager (APK)", "run_once": true, "when": "ansible_os_family == \"Alpine\"", "delegate_to": "127.0.0.1"}, "module_options": {"update_cache": true}, "executable": "apk", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Temporary Directory for Extraction", "module": "tempfile", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Create Temporary Directory for Extraction", "become": false, "vars": {"ansible_become": false}, "register": "install_temp", "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"state": "directory", "prefix": "ansible-consul."}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unarchive Consul package", "module": "unarchive", "index": 8, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Unarchive Consul package", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "delegate_to": "127.0.0.1"}, "module_options": {"src": "{{ role_path }}/files/{{ consul_pkg }}", "dest": "{{ install_temp.path }}/", "creates": "{{ install_temp.path }}/consul"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Consul", "module": "copy", "index": 9, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Install Consul", "notify": ["restart consul"], "tags": "installation"}, "module_options": {"src": "{{ install_temp.path }}/consul", "dest": "{{ consul_bin_path }}/consul", "owner": "{{ consul_user }}", "group": "{{ consul_group }}", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Daemon reload systemd in case the binaries upgraded", "module": "systemd", "index": 10, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Daemon reload systemd in case the binaries upgraded", "become": true, "when": ["ansible_service_mgr == \"systemd\"", "consul_install_upgrade | bool"]}, "module_options": "daemon_reload=yes", "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}, {"py/object": "struct4.Task", "name": "Cleanup", "module": "file", "index": 11, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/install.yml", "options": {"name": "Cleanup", "become": false, "vars": {"ansible_become": false}, "tags": "installation", "run_once": true, "delegate_to": "127.0.0.1"}, "module_options": {"path": "{{ install_temp.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (with --user)", "module": "pip", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (with --user)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "not is_virtualenv or is_virtualenv == None"}, "module_options": {"name": "netaddr", "extra_args": "--user"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install netaddr dependency on controlling host (virtualenv)", "module": "pip", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Install netaddr dependency on controlling host (virtualenv)", "delegate_to": "127.0.0.1", "become": false, "vars": {"ansible_become": false}, "run_once": true, "when": "is_virtualenv is defined"}, "module_options": {"name": "netaddr"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include checks/asserts", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include checks/asserts"}, "module_options": "asserts.yml", "executable": "asserts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": "always"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include NIX tasks", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include NIX tasks", "when": "ansible_os_family != 'Windows'"}, "module_options": "nix.yml", "executable": "nix.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Windows tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include Windows tasks", "when": "ansible_os_family == 'Windows'"}, "module_options": "windows.yml", "executable": "windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include services management", "module": "import_tasks", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "Include services management", "when": "consul_services is defined and consul_services|length>0", "tags": ["consul_services"]}, "module_options": "services.yml", "executable": "services.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "flush_handlers", "module": "meta", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/main.yml", "options": {"name": "flush_handlers"}, "module_options": "flush_handlers", "executable": "meta", "executable_type": "Module", "fqcn": "ansible.builtin.meta", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "dnsmasq.yml", "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "yum", "index": 0, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"RedHat\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"Debian\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Dnsmasq package", "module": "pkgng", "index": 2, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Install Dnsmasq package", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq, installation"}, "module_options": {"name": "dnsmasq", "state": "present"}, "executable": "pkgng", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Enable dnsmasq service", "module": "service", "index": 3, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Enable dnsmasq service", "tags": "dnsmasq"}, "module_options": {"name": "dnsmasq", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration directory", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"path": "/usr/local/etc/dnsmasq.d", "state": "directory", "owner": "root", "group": "wheel"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Dnsmasq configuration", "module": "template", "index": 5, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family in [\"Debian\", \"RedHat\"]", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/etc/dnsmasq.d/10-consul", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create FreeBSD-specific configuration", "module": "lineinfile", "index": 6, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"dest": "/usr/local/etc/dnsmasq.conf", "line": "conf-dir=/usr/local/etc/dnsmasq.d/,*.conf"}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create FreeBSD-specific Dnsmasq configuration", "module": "template", "index": 7, "defined_in": "./role-test/testdata/brianshumate-consul/brianshumate.consul/tasks/dnsmasq.yml", "options": {"name": "Create FreeBSD-specific Dnsmasq configuration", "notify": "restart dnsmasq", "when": "ansible_os_family == \"FreeBSD\"", "tags": "dnsmasq"}, "module_options": {"src": "dnsmasq-10-consul.j2", "dest": "/usr/local/etc/dnsmasq.d/consul.conf", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "brianshumate.consul", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}