{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/DataDog-datadog", "installed_roles": [{"py/object": "struct4.Role", "name": "DataDog.datadog", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog", "fqcn": "DataDog.datadog", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "pkg-windows-opts.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set DD Username Arg", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set DD Username Arg", "when": "datadog_windows_ddagentuser_name | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_NAME={{ datadog_windows_ddagentuser_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existing config file Directory", "module": "win_reg_stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing config file Directory", "register": "config_root_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "ConfigRoot"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existing installPath Directory", "module": "win_reg_stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing installPath Directory", "register": "install_path_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "InstallPath"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate config path", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ config_root_from_registry.value }} != {{ datadog_windows_config_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validated config path", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ config_root_from_registry.value }} == {{ datadog_windows_config_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate install path", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ install_path_from_registry.value }} != {{ datadog_windows_program_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validated install path", "module": "debug", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ install_path_from_registry.value }} == {{ datadog_windows_program_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Program Files Target Directory", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Program Files Target Directory", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} PROJECTLOCATION=\"{{ datadog_windows_program_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Config Files Target Directory", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Config Files Target Directory", "when": "datadog_windows_config_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} APPLICATIONDATADIRECTORY=\"{{ datadog_windows_config_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set config root for config Files", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config Files", "when": "((datadog_windows_config_files_dir | length > 0) and (not config_root_from_registry.exists))"}, "module_options": {"datadog_windows_config_root": "{{ datadog_windows_config_files_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set config root for config files from current location", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config files from current location", "when": "config_root_from_registry.exists"}, "module_options": {"datadog_windows_config_root": "{{ config_root_from_registry.value | regex_replace('\\\\$','') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Test", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Test"}, "module_options": {"win_install_args": "{{ win_install_args }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Windows NPM flag", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Windows NPM flag", "when": "datadog_sysprobe_enabled"}, "module_options": {"win_install_args": "{{ win_install_args }} ADDLOCAL=MainApplication,NPM"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "_apt-key-import.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set local variables for processed key {{ item.key }}", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local variables for processed key {{ item.key }}"}, "module_options": {"key_fingerprint": "{{ item.key }}", "keyring_url": "{{ item.value }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find out whether key {{ key_fingerprint }} is already imported", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Find out whether key {{ key_fingerprint }} is already imported", "register": "key_exists_result", "failed_when": false, "changed_when": "key_exists_result.rc != 0", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": "gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --list-keys --with-fingerprint --with-colons | grep {{ key_fingerprint }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "{{ 'false' if key_exists_result.rc == 0 else 'true' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "true"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create temporary directory for key manipulation", "module": "tempfile", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Create temporary directory for key manipulation", "register": "tempdir", "when": "key_needs_import", "changed_when": false}, "module_options": {"state": "directory", "suffix": "keys"}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "when": "key_needs_import", "changed_when": false}, "module_options": {"url": "{{ keyring_url }}", "dest": "{{ tempdir.path }}/{{ key_fingerprint }}", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "when": "key_needs_import", "changed_when": false}, "module_options": "cat {{ tempdir.path }}/{{ key_fingerprint }} | gpg --dearmor > {{ tempdir.path }}/binary.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": "gpg --no-default-keyring --keyring {{ tempdir.path }}/binary.gpg --export {{ key_fingerprint }} > {{ tempdir.path }}/single.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": {"src": "{{ tempdir.path }}/binary.gpg", "dest": "{{ tempdir.path }}/single.gpg", "mode": "0600", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "when": "key_needs_import", "register": "key_import_result", "changed_when": "\"imported: 1\" in key_import_result.stderr"}, "module_options": "cat {{ tempdir.path }}/single.gpg | gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --import --batch", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "agent-win.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "datadog.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\datadog.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "win_find", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d", "patterns": ["*.d"], "file_type": "directory"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "win_file", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete default checks", "module": "win_file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml.default", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "win_file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "checks.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d\\conf.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "win_file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent-win"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "{{ datadog_windows_config_root }}\\checks.d\\{{ item }}.py"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "module": "win_service", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode", "with_list": ["datadog-trace-agent", "datadog-process-agent"]}, "module_options": {"name": "{{ item }}", "start_mode": "manual"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "win_template", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\system-probe.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "win_service", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadogagent", "state": "started", "start_mode": "delayed"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is disabled", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is disabled", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-trace-agent", "datadog-process-agent", "datadogagent"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "start_mode": "disabled"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "{{ datadog_windows_config_root }}\\install_info", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "os-check.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail if OS is not supported", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml", "options": {"name": "Fail if OS is not supported", "when": "ansible_facts.os_family not in [\"RedHat\", \"Rocky\", \"AlmaLinux\", \"Debian\", \"Suse\", \"Windows\"]"}, "module_options": {"msg": "The Datadog Ansible role does not support your OS yet. Please email support@datadoghq.com to open a feature request."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-windows.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail if Agent 5", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Fail if Agent 5", "when": "datadog_agent_major_version|int == 5"}, "module_options": {"msg": "The Datadog ansible role does not currently support Agent 5"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download windows datadog agent 614 fix script", "module": "win_get_url", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent 614 fix script", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": {"url": "{{ datadog_windows_614_fix_script_url }}", "dest": "%TEMP%\\fix_6_14.ps1"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run 6.14.0/1 PowerShell fix", "module": "win_shell", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Run 6.14.0/1 PowerShell fix", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": "Set-ExecutionPolicy Bypass -Scope Process -Force\n&$env:temp\\fix_6_14.ps1\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is not defined)"}, "module_options": "win_agent_latest.yml", "executable": "win_agent_latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is defined)"}, "module_options": "win_agent_version.yml", "executable": "win_agent_version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "show URL var", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "show URL var", "when": "not datadog_skip_install"}, "module_options": {"var": "dd_download_url"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set windows NPM installed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set windows NPM installed"}, "module_options": {"datadog_sysprobe_enabled": "{{ network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {}, "module_options": "pkg-windows-opts.yml", "executable": "pkg-windows-opts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "pre-Delete temporary msi", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "pre-Delete temporary msi", "when": "not datadog_skip_install"}, "module_options": {"path": "%TEMP%\\ddagent.msi", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download windows datadog agent", "module": "win_get_url", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent", "register": "download_msi_result", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"url": "{{ dd_download_url }}", "dest": "%TEMP%\\ddagent.msi"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Binary directory root (if not default)", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Create Binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default permissions on binary directory root (if not default)", "module": "win_acl", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set default permissions on binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "inherit": "ContainerInherit,ObjectInherit", "user": "BUILTIN\\USERS", "rights": "ReadAndExecute", "type": "allow", "state": "present", "propagation": "None"}, "executable": "win_acl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Show installation flags", "module": "debug", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Show installation flags"}, "module_options": {"msg": "{{ win_install_args }}{% if datadog_windows_ddagentuser_password | default('', true) | length > 0 %} DDAGENTUSER_PASSWORD=<REDACTED>{% endif %}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set DD Password Arg", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set DD Password Arg", "when": "datadog_windows_ddagentuser_password | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_PASSWORD={{ datadog_windows_ddagentuser_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install downloaded agent", "module": "win_package", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Install downloaded agent", "register": "datadog_agent_install", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "arguments": "{{ win_install_args }}"}, "executable": "win_package", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete temporary msi", "module": "win_file", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Delete temporary msi", "when": "(not datadog_skip_install) and (not ansible_check_mode) and (download_msi_result.status_code == 200)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "agent5-linux.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "(agent5) Create Datadog agent config directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/dd-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Create main Datadog agent configuration file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.conf.j2", "dest": "/etc/dd-agent/datadog.conf", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is running", "module": "service", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is not running", "module": "service", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is not running", "when": "not datadog_skip_running_check and not datadog_enabled"}, "module_options": {"name": "datadog-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files", "when": "datadog_manage_config and datadog_disable_untracked_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files_default", "when": "datadog_manage_config and datadog_disable_default_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml.default"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_files.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete default checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_files_default.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml.default$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Create a configuration file for each Datadog check", "module": "template", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/dd-agent/conf.d/{{ item }}.yaml", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "set-parse-version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Convert datadog_agent_major_version to string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Convert datadog_agent_major_version to string"}, "module_options": {"datadog_agent_major_version": "{{ datadog_agent_major_version | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize skip install flag to false", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Initialize skip install flag to false"}, "module_options": {"datadog_skip_install": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"when": "datadog_agent_version | default('', true) | length > 0"}, "module_options": "parse-version.yml", "executable": "parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Agent default major version", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Set Agent default major version", "when": "datadog_agent_major_version | length == 0"}, "module_options": {"datadog_agent_major_version": "7"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "integration.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "tasks": [{"py/object": "struct4.Task", "name": "set agent binary path (windows)", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent binary path (unix)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent user for integration commmand (windows)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent user for integration commmand (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent agent binary path (unix)", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate integrations actions", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Validate integrations actions", "when": "item.value.action != \"install\" and item.value.action != \"remove\"", "loop": "{{ datadog_integration|dict2items }}"}, "module_options": {"msg": "Unkown action '{{ item.value.action }}' for integration command ({{ item.key }}). Valid actions are 'install' and 'remove'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Removing integrations (Unix)", "module": "command", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family != \"Windows\""}, "module_options": {"argv": ["{{ datadog_agent_binary_path }}", "integration", "remove", "{{ item.key }}"]}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Removing integrations (Windows)", "module": "win_command", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Windows)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family == \"Windows\""}, "module_options": "\"{{ datadog_agent_binary_path }}\" integration remove {{ item.key }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Unix)", "module": "command", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "vars": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family != \"Windows\""}, "module_options": "{{ datadog_agent_binary_path }} integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Windows)", "module": "vars", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Windows)", "win_command": "\"{{ datadog_agent_binary_path }}\" integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family == \"Windows\""}, "module_options": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "facts-ansible10.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "ansible.builtin.setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "ansible.builtin.setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "parse-version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Parse Agent version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Parse Agent version", "vars": {"regexp": "(?:(?P<epoch>[0-9]+):)?(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<bugfix>[0-9]+)(?P<suffix>(?:~|-)[^0-9\\s-]+[^-\\s]*)?(?:-(?P<release>[0-9]+))?"}}, "module_options": {"agent_version": "{{ datadog_agent_version | regex_search(regexp, '\\g<epoch>', '\\g<major>', '\\g<minor>', '\\g<bugfix>', '\\g<suffix>', '\\g<release>') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set version vars", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set version vars"}, "module_options": {"datadog_epoch": "{{ agent_version.0 | default('', true) | string }}", "datadog_major": "{{ agent_version.1 | default('', true) | string }}", "datadog_minor": "{{ agent_version.2 | default('', true) | string }}", "datadog_bugfix": "{{ agent_version.3 | default('', true) | string }}", "datadog_suffix": "{{ agent_version.4 | default('', true) | string }}", "datadog_release": "{{ agent_version.5 | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fill empty version epoch with default", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version epoch with default", "when": "datadog_epoch | length == 0"}, "module_options": {"datadog_epoch": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fill empty version release with default", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version release with default", "when": "datadog_release | length == 0"}, "module_options": {"datadog_release": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "when": "datadog_agent_major_version | length > 0 and datadog_major != datadog_agent_major_version"}, "module_options": {"msg": "The provided major version {{ datadog_agent_major_version }} is not compatible with the version {{ datadog_major }} deduced from datadog_agent_version ({{ datadog_agent_version }}). Aborting play."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set datadog_agent_major_version to deduced value from datadog_agent_version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set datadog_agent_major_version to deduced value from datadog_agent_version"}, "module_options": {"datadog_agent_major_version": "{{ datadog_major }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set helper variables", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set helper variables"}, "module_options": {"datadog_agent_linux_version": "{{ datadog_epoch }}:{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}-{{ datadog_release }}", "datadog_rpm_version_finding_cmd": "rpm -q --qf '%{EPOCH}:%{VERSION}-%{RELEASE}' {{ datadog_agent_flavor }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set OS-specific versions", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set OS-specific versions"}, "module_options": {"datadog_agent_debian_version": "{{ datadog_agent_linux_version }}", "datadog_agent_redhat_version": "{{ datadog_agent_linux_version }}", "datadog_agent_suse_version": "{{ datadog_agent_linux_version }}", "datadog_agent_windows_version": "{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Construct commands to find Agent version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Construct commands to find Agent version"}, "module_options": {"datadog_version_finding_cmds": {"Debian": "dpkg -s {{ datadog_agent_flavor }} | grep '^Version:' | awk '{print $2}'", "RedHat": "{{ datadog_rpm_version_finding_cmd }}", "Rocky": "{{ datadog_rpm_version_finding_cmd }}", "AlmaLinux": "{{ datadog_rpm_version_finding_cmd }}", "Suse": "{{ datadog_rpm_version_finding_cmd }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create OS-specific version dict", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Create OS-specific version dict"}, "module_options": {"datadog_agent_os2version": {"Debian": "{{ datadog_agent_debian_version }}", "RedHat": "{{ datadog_agent_redhat_version }}", "Rocky": "{{ datadog_agent_redhat_version }}", "AlmaLinux": "{{ datadog_agent_redhat_version }}", "Suse": "{{ datadog_agent_suse_version }}", "Windows": "{{ datadog_agent_windows_version }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Linux Agent version", "module": "shell", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Get Linux Agent version", "register": "datadog_version_check_linux", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": "{{ datadog_version_finding_cmds[ansible_facts.os_family] }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Windows Agent version tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Include Windows Agent version tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "parse-version-windows.yml", "executable": "parse-version-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Linux)", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Linux)", "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_linux.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Windows)", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_win.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-suse.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_zypper_repo_gpgcheck": "{{ datadog_zypper_repo_gpgcheck if datadog_zypper_repo_gpgcheck != '' else (\n  'yes' if datadog_zypper_repo == '' and datadog_agent_major_version|int != 5 else 'no'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if current RPM key already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if current RPM key already exists", "register": "ddkeycurrent"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_CURRENT.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key (SLES11)", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key (SLES11)", "when": "not ddkeycurrent.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if RPM key already exists", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if RPM key already exists", "register": "ddkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download RPM key (SLES11)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key (SLES11)", "when": "not ddkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download RPM key", "module": "get_url", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key", "when": "datadog_agent_major_version|int < 7 and ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import RPM key", "module": "rpm_key", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import RPM key", "when": "datadog_agent_major_version|int < 7 and not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "register": "ddnewkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "module": "get_url", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "when": "not ddnewkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key", "module": "get_url", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import E09422B3 key (Expires 2022) RPM key", "module": "rpm_key", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import E09422B3 key (Expires 2022) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "module": "stat", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "register": "ddnewkey_20200908"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "module": "get_url", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "when": "not  ddnewkey_20200908.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key", "module": "get_url", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import 20200908 key (Expires 2024) RPM key", "module": "rpm_key", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import 20200908 key (Expires 2024) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install DataDog zypper repo", "module": "template", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Install DataDog zypper repo", "register": "datadog_zypper_repo"}, "module_options": {"src": "zypper.repo.j2", "dest": "/etc/zypp/repos.d/datadog.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "refresh Datadog zypper_repos", "module": "command", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "refresh Datadog zypper_repos", "when": "datadog_zypper_repo.changed and not ansible_check_mode", "args": {"warn": false}}, "module_options": "zypper refresh datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is defined"}, "module_options": "pkg-suse/install-pinned.yml", "executable": "pkg-suse/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is not defined"}, "module_options": "pkg-suse/install-latest.yml", "executable": "pkg-suse/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "win_agent_version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check agent pinned version on Windows", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "Check agent pinned version on Windows", "when": "datadog_agent_version == \"6.14.0\" or datadog_agent_version == \"6.14.1\""}, "module_options": {"msg": "The Agent versions you pinned (6.14.0 or 6.14.1) have been blacklisted, please use 6.14.2 instead. See https://dtdg.co/win-614-fix."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent download filename to a specific version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "set agent download filename to a specific version"}, "module_options": {"dd_download_url": "{{ datadog_windows_versioned_url }}-{{ datadog_agent_windows_version }}.msi"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-debian.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install apt-transport-https", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt-transport-https", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gnupg", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install gnupg", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "register": "apt_keyring_file"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "when": "not ansible_check_mode and (not apt_keyring_file.stat.exists or not apt_keyring_file.stat.mode == \"0644\")"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}", "owner": "root", "group": "root", "mode": "0644", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt keys from default URLs", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from default URLs", "with_items": "{{ datadog_apt_default_keys }}", "when": "datadog_apt_key_url_new is not defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt keys from custom URL", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from custom URL", "with_items": [{"key": "A2923DFF56EDA6E76E55E492D3A80E30382E94DE", "value": "{{ datadog_apt_key_url_new }}"}, {"key": "D75CEA17048B9ACBF186794B32637D44F14F620E", "value": "{{ datadog_apt_key_url_new }}"}], "when": "datadog_apt_key_url_new is defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "when": "((ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 9) or (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 16)) and not ansible_check_mode"}, "module_options": {"src": "{{ datadog_apt_usr_share_keyring }}", "dest": "{{ datadog_apt_trusted_d_keyring }}", "mode": "0644", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "with_items": ["deb http://apt.datadoghq.com/ stable main", "deb http://apt.datadoghq.com/ stable 6", "deb http://apt.datadoghq.com/ stable 7", "deb https://apt.datadoghq.com/ stable main", "deb https://apt.datadoghq.com/ stable 6", "deb https://apt.datadoghq.com/ stable 7"], "when": "not ansible_check_mode"}, "module_options": {"repo": "{{ item }}", "state": "absent", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog repository is up-to-date", "when": "(not ansible_check_mode)", "with_dict": {"5": "{{ datadog_agent5_apt_repo }}", "6": "{{ datadog_agent6_apt_repo }}", "7": "{{ datadog_agent7_apt_repo }}"}}, "module_options": {"filename": "ansible_datadog_{{ item.key }}", "repo": "{{ item.value }}", "state": "{% if item.key == datadog_agent_major_version|int and datadog_apt_repo | length == 0 %}present{% else %}absent{% endif %}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize custom repo file deletion flag to False", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Initialize custom repo file deletion flag to False"}, "module_options": {"datadog_remove_custom_repo_file": "False"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if custom repository file exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if custom repository file exists", "register": "datadog_custom_repo_file"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch custom repository file", "module": "slurp", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Fetch custom repository file", "register": "datadog_custom_repo_file_contents", "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"src": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flag custom repository file for deletion if different from current repository config", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Flag custom repository file for deletion if different from current repository config", "vars": {"datadog_repo_file_contents": "{{ datadog_custom_repo_file_contents['content'] | b64decode | trim }}"}, "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"datadog_remove_custom_repo_file": "{{ datadog_repo_file_contents != datadog_apt_repo }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Custom) Remove Datadog custom repository file when not set or updated", "module": "file", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Remove Datadog custom repository file when not set or updated", "when": "(datadog_apt_repo | length == 0) or datadog_remove_custom_repo_file and (not ansible_check_mode)"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Custom) Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Ensure Datadog repository is up-to-date", "when": "(datadog_apt_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"filename": "ansible_datadog_custom", "repo": "{{ datadog_apt_repo }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is defined"}, "module_options": "pkg-debian/install-pinned.yml", "executable": "pkg-debian/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is not defined"}, "module_options": "pkg-debian/install-latest.yml", "executable": "pkg-debian/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest datadog-signing-keys package", "module": "apt", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install latest datadog-signing-keys package", "register": "datadog_signing_keys_install", "when": "not ansible_check_mode"}, "module_options": {"name": "datadog-signing-keys", "state": "latest"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "sanitize-checks.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "tasks": [{"py/object": "struct4.Task", "name": "Defend against defined but null datadog_checks variable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Defend against defined but null datadog_checks variable"}, "module_options": {"datadog_checks": "{{ datadog_checks | default({}, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Resolve datadog_tracked_checks"}, "module_options": {"datadog_tracked_checks": "{{ datadog_checks | list + datadog_additional_checks | default([], true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that datadog_checks is a mapping", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Check that datadog_checks is a mapping"}, "module_options": {"that": ["datadog_checks is mapping"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "agent-linux.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set before 6/7.24.1 flag", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.24.1 flag"}, "module_options": {"datadog_before_7241": "{{ datadog_major is defined and datadog_minor is defined and datadog_bugfix is defined and datadog_major | int < 8 and (datadog_minor | int < 24 or (datadog_minor | int == 24 and datadog_bugfix | int < 1)) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set before 6/7.18.0 flag", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.18.0 flag"}, "module_options": {"datadog_before_7180": "{{ datadog_major is defined and datadog_minor is defined and datadog_major | int < 8 and datadog_minor | int < 18 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add \"{{ datadog_user }}\" user to additional groups", "module": "user", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Add \"{{ datadog_user }}\" user to additional groups", "when": "datadog_additional_groups | default([], true) | length > 0", "notify": "restart datadog-agent"}, "module_options": "name=\"{{ datadog_user }}\" groups=\"{{ datadog_additional_groups }}\" append=yes", "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Datadog agent config directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.yaml.j2", "dest": "/etc/datadog-agent/datadog.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "find", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "/etc/datadog-agent/conf.d/", "patterns": ["*.d"], "file_type": "directory"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete all default checks", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete all default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.d", "state": "directory", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "template", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "/etc/datadog-agent/checks.d/{{ item }}.py", "mode": 493, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "/etc/datadog-agent/system-probe.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe installed", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe installed", "when": "not datadog_skip_running_check"}, "module_options": {"datadog_sysprobe_installed": "{{ ansible_facts.services['datadog-agent-sysprobe'] is defined or ansible_facts.services['datadog-agent-sysprobe.service'] is defined }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe enabled (before 6/7.24.1)", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (before 6/7.24.1)", "when": "not datadog_skip_running_check and datadog_before_7241"}, "module_options": {"datadog_sysprobe_enabled": "{{ system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled'] and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe enabled (since 6/7.24.1)", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (since 6/7.24.1)", "when": "not datadog_skip_running_check and (not datadog_before_7241)"}, "module_options": {"datadog_sysprobe_enabled": "{{ ((system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled']) or (network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'])) and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "service", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "module": "service", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode and datadog_sysprobe_enabled"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "module": "service", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-agent", "datadog-agent-process", "datadog-agent-trace"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "module": "service", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "when": "not datadog_skip_running_check and (not datadog_enabled or not datadog_sysprobe_enabled) and datadog_before_7180 and datadog_sysprobe_installed"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-security is not running", "module": "service", "index": 21, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-security is not running", "when": "not datadog_skip_running_check and not datadog_enabled", "ignore_errors": true}, "module_options": {"name": "datadog-agent-security", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security-agent configuration file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create security-agent configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "security-agent.yaml.j2", "dest": "/etc/datadog-agent/security-agent.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 23, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "/etc/datadog-agent/install_info", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "facts-ansible9.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-redhat.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "when": "(not datadog_ignore_old_centos_python3_error) and (ansible_version.full is version(\"2.11\", operator=\"lt\", strict=True)) and (ansible_pkg_mgr == \"yum\") and (ansible_facts.python.version.major | int >= 3)"}, "module_options": {"msg": "The installation of the Agent on RedHat family systems using yum is not compatible with Python 3 with older Ansible versions. To run this role, use a Python 2 interpreter on hosts running CentOS / RHEL < 8 or upgrade Ansible to version 2.11+"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_yum_repo_gpgcheck": "{{ datadog_yum_repo_gpgcheck if datadog_yum_repo_gpgcheck != '' else (\n  'no' if (\n    ansible_facts.distribution_version.startswith('8.1.') or ansible_facts.distribution_version == '8.1' or\n    datadog_yum_repo != ''\n  ) else 'yes'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download current RPM key"}, "module_options": {"url": "{{ datadog_yum_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2022)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2022)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_yum_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2022)", "module": "rpm_key", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2022)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2024)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2024)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_yum_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2024)", "module": "rpm_key", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2024)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 5 yum repo", "module": "yum_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 5 yum repo", "register": "repofile5", "when": "(datadog_agent_major_version|int == 5) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent5_yum_repo }}", "enabled": true, "repo_gpgcheck": false, "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 6 yum repo", "module": "yum_repository", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 6 yum repo", "register": "repofile6", "when": "(datadog_agent_major_version|int == 6) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent6_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 7 yum repo", "module": "yum_repository", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 7 yum repo", "register": "repofile7", "when": "(datadog_agent_major_version|int == 7) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent7_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Custom yum repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Custom yum repo", "register": "repofilecustom", "when": "(datadog_yum_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean repo metadata if repo changed", "module": "command", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Clean repo metadata if repo changed", "ignore_errors": true, "args": {"warn": false}, "when": "repofile5.changed or repofile6.changed or repofile7.changed or repofilecustom.changed"}, "module_options": "yum clean metadata --disablerepo=\"*\" --enablerepo=datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old yum repo files", "module": "yum_repository", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Remove old yum repo files", "with_items": [5, 6, 7, "custom"]}, "module_options": {"name": "ansible_datadog_{{ item }}", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is defined"}, "module_options": "pkg-redhat/install-pinned.yml", "executable": "pkg-redhat/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is not defined"}, "module_options": "pkg-redhat/install-latest.yml", "executable": "pkg-redhat/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "win_agent_latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "(Custom) Set agent download filename to latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "(Custom) Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length > 0"}, "module_options": {"dd_download_url": "{{ datadog_windows_download_url }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set agent download filename to latest", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length == 0"}, "module_options": {"dd_download_url": "{% if datadog_agent_major_version|int == 7 %}{{ datadog_windows_agent7_latest_url }} {% else %}{{ datadog_windows_agent6_latest_url }}{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "parse-version-windows.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get Windows Agent version", "module": "win_shell", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml", "options": {"name": "Get Windows Agent version", "register": "datadog_version_check_win", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "$product_name = \"Datadog Agent\"\n$query = \"Select Name,IdentifyingNumber,InstallDate,InstallLocation,ProductID,Version FROM Win32_Product where Name like '$product_name%'\"\n$installs = Get-WmiObject -query $query\n\nif (!$installs -or ($installs.Count -eq 0) -or ($installs.Count -gt 1)) {\n  Write-Host \"\"\n} else {\n  $ddmaj, $ddmin, $ddpatch, $ddbuild = $installs.Version.split(\".\")\n  Write-Host \"$($ddmaj).$($ddmin).$($ddpatch)\"\n}\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible >= 2.10", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible >= 2.10", "when": "ansible_version.major >= 2 and ansible_version.minor >= 10"}, "module_options": "facts-ansible10.yml", "executable": "facts-ansible10.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible < 2.10", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible < 2.10", "when": "ansible_version.major == 2 and ansible_version.minor < 10"}, "module_options": "facts-ansible9.yml", "executable": "facts-ansible9.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if OS is supported", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Check if OS is supported"}, "module_options": "os-check.yml", "executable": "os-check.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks"}, "module_options": "sanitize-checks.yml", "executable": "sanitize-checks.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Facts for Datadog Agent Major Version", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Set Facts for Datadog Agent Major Version"}, "module_options": "set-parse-version.yml", "executable": "set-parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian Install Tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Debian Install Tasks", "when": "ansible_facts.os_family == \"Debian\" and not datadog_skip_install"}, "module_options": "pkg-debian.yml", "executable": "pkg-debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat Install Tasks", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "RedHat Install Tasks", "when": "ansible_facts.os_family in [\"RedHat\", \"Rocky\", \"AlmaLinux\"] and not datadog_skip_install"}, "module_options": "pkg-redhat.yml", "executable": "pkg-redhat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse Install Tasks", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Suse Install Tasks", "when": "ansible_facts.os_family == \"Suse\" and not datadog_skip_install"}, "module_options": "pkg-suse.yml", "executable": "pkg-suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows Install Tasks", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Install Tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "pkg-windows.yml", "executable": "pkg-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux Configuration Tasks (Agent 5)", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks (Agent 5)", "when": "datadog_agent_major_version | int == 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent5-linux.yml", "executable": "agent5-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux Configuration Tasks", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent-linux.yml", "executable": "agent-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows Configuration Tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family == \"Windows\""}, "module_options": "agent-win.yml", "executable": "agent-win.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Integrations Tasks", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Integrations Tasks", "when": "datadog_integration is defined"}, "module_options": "integration.yml", "executable": "integration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}={{ datadog_agent_debian_version }}", "state": "present", "force": "{{ datadog_agent_allow_downgrade }}", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install latest datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml", "options": {"name": "Install latest datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "state": "latest", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent={{ datadog_agent_suse_version }}", "state": "present", "oldpackage": "{{ datadog_agent_allow_downgrade }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Datadog agent is installed", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml", "options": {"name": "Ensure Datadog agent is installed", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent", "state": "latest"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}.{{ ansible_facts.architecture }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install latest datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set DD Username Arg", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set DD Username Arg", "when": "datadog_windows_ddagentuser_name | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_NAME={{ datadog_windows_ddagentuser_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Check existing config file Directory", "module": "win_reg_stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing config file Directory", "register": "config_root_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "ConfigRoot"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check existing installPath Directory", "module": "win_reg_stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing installPath Directory", "register": "install_path_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "InstallPath"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Validate config path", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ config_root_from_registry.value }} != {{ datadog_windows_config_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Validated config path", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ config_root_from_registry.value }} == {{ datadog_windows_config_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Validate install path", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ install_path_from_registry.value }} != {{ datadog_windows_program_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Validated install path", "module": "debug", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ install_path_from_registry.value }} == {{ datadog_windows_program_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Set Program Files Target Directory", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Program Files Target Directory", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} PROJECTLOCATION=\"{{ datadog_windows_program_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Set Config Files Target Directory", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Config Files Target Directory", "when": "datadog_windows_config_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} APPLICATIONDATADIRECTORY=\"{{ datadog_windows_config_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Set config root for config Files", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config Files", "when": "((datadog_windows_config_files_dir | length > 0) and (not config_root_from_registry.exists))"}, "module_options": {"datadog_windows_config_root": "{{ datadog_windows_config_files_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Set config root for config files from current location", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config files from current location", "when": "config_root_from_registry.exists"}, "module_options": {"datadog_windows_config_root": "{{ config_root_from_registry.value | regex_replace('\\\\$','') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Set Test", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Test"}, "module_options": {"win_install_args": "{{ win_install_args }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Set Windows NPM flag", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Windows NPM flag", "when": "datadog_sysprobe_enabled"}, "module_options": {"win_install_args": "{{ win_install_args }} ADDLOCAL=MainApplication,NPM"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set local variables for processed key {{ item.key }}", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local variables for processed key {{ item.key }}"}, "module_options": {"key_fingerprint": "{{ item.key }}", "keyring_url": "{{ item.value }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Find out whether key {{ key_fingerprint }} is already imported", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Find out whether key {{ key_fingerprint }} is already imported", "register": "key_exists_result", "failed_when": false, "changed_when": "key_exists_result.rc != 0", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": "gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --list-keys --with-fingerprint --with-colons | grep {{ key_fingerprint }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "{{ 'false' if key_exists_result.rc == 0 else 'true' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "true"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create temporary directory for key manipulation", "module": "tempfile", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Create temporary directory for key manipulation", "register": "tempdir", "when": "key_needs_import", "changed_when": false}, "module_options": {"state": "directory", "suffix": "keys"}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "when": "key_needs_import", "changed_when": false}, "module_options": {"url": "{{ keyring_url }}", "dest": "{{ tempdir.path }}/{{ key_fingerprint }}", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "when": "key_needs_import", "changed_when": false}, "module_options": "cat {{ tempdir.path }}/{{ key_fingerprint }} | gpg --dearmor > {{ tempdir.path }}/binary.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": "gpg --no-default-keyring --keyring {{ tempdir.path }}/binary.gpg --export {{ key_fingerprint }} > {{ tempdir.path }}/single.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": {"src": "{{ tempdir.path }}/binary.gpg", "dest": "{{ tempdir.path }}/single.gpg", "mode": "0600", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "when": "key_needs_import", "register": "key_import_result", "changed_when": "\"imported: 1\" in key_import_result.stderr"}, "module_options": "cat {{ tempdir.path }}/single.gpg | gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --import --batch", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "datadog.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\datadog.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "win_find", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d", "patterns": ["*.d"], "file_type": "directory"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "win_file", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Delete default checks", "module": "win_file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml.default", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "win_file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "checks.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d\\conf.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "win_file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent-win"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "{{ datadog_windows_config_root }}\\checks.d\\{{ item }}.py"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "module": "win_service", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode", "with_list": ["datadog-trace-agent", "datadog-process-agent"]}, "module_options": {"name": "{{ item }}", "start_mode": "manual"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "win_template", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\system-probe.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "win_service", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadogagent", "state": "started", "start_mode": "delayed"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Ensure datadog-agent is disabled", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is disabled", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-trace-agent", "datadog-process-agent", "datadogagent"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "start_mode": "disabled"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "{{ datadog_windows_config_root }}\\install_info", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fail if OS is not supported", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml", "options": {"name": "Fail if OS is not supported", "when": "ansible_facts.os_family not in [\"RedHat\", \"Rocky\", \"AlmaLinux\", \"Debian\", \"Suse\", \"Windows\"]"}, "module_options": {"msg": "The Datadog Ansible role does not support your OS yet. Please email support@datadoghq.com to open a feature request."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fail if Agent 5", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Fail if Agent 5", "when": "datadog_agent_major_version|int == 5"}, "module_options": {"msg": "The Datadog ansible role does not currently support Agent 5"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Download windows datadog agent 614 fix script", "module": "win_get_url", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent 614 fix script", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": {"url": "{{ datadog_windows_614_fix_script_url }}", "dest": "%TEMP%\\fix_6_14.ps1"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Run 6.14.0/1 PowerShell fix", "module": "win_shell", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Run 6.14.0/1 PowerShell fix", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": "Set-ExecutionPolicy Bypass -Scope Process -Force\n&$env:temp\\fix_6_14.ps1\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is not defined)"}, "module_options": "win_agent_latest.yml", "executable": "win_agent_latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is defined)"}, "module_options": "win_agent_version.yml", "executable": "win_agent_version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "show URL var", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "show URL var", "when": "not datadog_skip_install"}, "module_options": {"var": "dd_download_url"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Set windows NPM installed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set windows NPM installed"}, "module_options": {"datadog_sysprobe_enabled": "{{ network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {}, "module_options": "pkg-windows-opts.yml", "executable": "pkg-windows-opts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "pre-Delete temporary msi", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "pre-Delete temporary msi", "when": "not datadog_skip_install"}, "module_options": {"path": "%TEMP%\\ddagent.msi", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Download windows datadog agent", "module": "win_get_url", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent", "register": "download_msi_result", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"url": "{{ dd_download_url }}", "dest": "%TEMP%\\ddagent.msi"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create Binary directory root (if not default)", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Create Binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Set default permissions on binary directory root (if not default)", "module": "win_acl", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set default permissions on binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "inherit": "ContainerInherit,ObjectInherit", "user": "BUILTIN\\USERS", "rights": "ReadAndExecute", "type": "allow", "state": "present", "propagation": "None"}, "executable": "win_acl", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Show installation flags", "module": "debug", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Show installation flags"}, "module_options": {"msg": "{{ win_install_args }}{% if datadog_windows_ddagentuser_password | default('', true) | length > 0 %} DDAGENTUSER_PASSWORD=<REDACTED>{% endif %}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Set DD Password Arg", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set DD Password Arg", "when": "datadog_windows_ddagentuser_password | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_PASSWORD={{ datadog_windows_ddagentuser_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Install downloaded agent", "module": "win_package", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Install downloaded agent", "register": "datadog_agent_install", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "arguments": "{{ win_install_args }}"}, "executable": "win_package", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Delete temporary msi", "module": "win_file", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Delete temporary msi", "when": "(not datadog_skip_install) and (not ansible_check_mode) and (download_msi_result.status_code == 200)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(agent5) Create Datadog agent config directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/dd-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "(agent5) Create main Datadog agent configuration file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.conf.j2", "dest": "/etc/dd-agent/datadog.conf", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is running", "module": "service", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is not running", "module": "service", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is not running", "when": "not datadog_skip_running_check and not datadog_enabled"}, "module_options": {"name": "datadog-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files", "when": "datadog_manage_config and datadog_disable_untracked_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files_default", "when": "datadog_manage_config and datadog_disable_default_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml.default"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_files.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Delete default checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_files_default.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml.default$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "(agent5) Create a configuration file for each Datadog check", "module": "template", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/dd-agent/conf.d/{{ item }}.yaml", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Convert datadog_agent_major_version to string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Convert datadog_agent_major_version to string"}, "module_options": {"datadog_agent_major_version": "{{ datadog_agent_major_version | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Initialize skip install flag to false", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Initialize skip install flag to false"}, "module_options": {"datadog_skip_install": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"when": "datadog_agent_version | default('', true) | length > 0"}, "module_options": "parse-version.yml", "executable": "parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set Agent default major version", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Set Agent default major version", "when": "datadog_agent_major_version | length == 0"}, "module_options": {"datadog_agent_major_version": "7"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "set agent binary path (windows)", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "set agent binary path (unix)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "set agent user for integration commmand (windows)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent user for integration commmand (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "set agent agent binary path (unix)", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Validate integrations actions", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Validate integrations actions", "when": "item.value.action != \"install\" and item.value.action != \"remove\"", "loop": "{{ datadog_integration|dict2items }}"}, "module_options": {"msg": "Unkown action '{{ item.value.action }}' for integration command ({{ item.key }}). Valid actions are 'install' and 'remove'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Removing integrations (Unix)", "module": "command", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family != \"Windows\""}, "module_options": {"argv": ["{{ datadog_agent_binary_path }}", "integration", "remove", "{{ item.key }}"]}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Removing integrations (Windows)", "module": "win_command", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Windows)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family == \"Windows\""}, "module_options": "\"{{ datadog_agent_binary_path }}\" integration remove {{ item.key }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Unix)", "module": "command", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "vars": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family != \"Windows\""}, "module_options": "{{ datadog_agent_binary_path }} integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Windows)", "module": "vars", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Windows)", "win_command": "\"{{ datadog_agent_binary_path }}\" integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family == \"Windows\""}, "module_options": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "ansible.builtin.setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "ansible.builtin.setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Parse Agent version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Parse Agent version", "vars": {"regexp": "(?:(?P<epoch>[0-9]+):)?(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<bugfix>[0-9]+)(?P<suffix>(?:~|-)[^0-9\\s-]+[^-\\s]*)?(?:-(?P<release>[0-9]+))?"}}, "module_options": {"agent_version": "{{ datadog_agent_version | regex_search(regexp, '\\g<epoch>', '\\g<major>', '\\g<minor>', '\\g<bugfix>', '\\g<suffix>', '\\g<release>') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set version vars", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set version vars"}, "module_options": {"datadog_epoch": "{{ agent_version.0 | default('', true) | string }}", "datadog_major": "{{ agent_version.1 | default('', true) | string }}", "datadog_minor": "{{ agent_version.2 | default('', true) | string }}", "datadog_bugfix": "{{ agent_version.3 | default('', true) | string }}", "datadog_suffix": "{{ agent_version.4 | default('', true) | string }}", "datadog_release": "{{ agent_version.5 | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Fill empty version epoch with default", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version epoch with default", "when": "datadog_epoch | length == 0"}, "module_options": {"datadog_epoch": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Fill empty version release with default", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version release with default", "when": "datadog_release | length == 0"}, "module_options": {"datadog_release": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "when": "datadog_agent_major_version | length > 0 and datadog_major != datadog_agent_major_version"}, "module_options": {"msg": "The provided major version {{ datadog_agent_major_version }} is not compatible with the version {{ datadog_major }} deduced from datadog_agent_version ({{ datadog_agent_version }}). Aborting play."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set datadog_agent_major_version to deduced value from datadog_agent_version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set datadog_agent_major_version to deduced value from datadog_agent_version"}, "module_options": {"datadog_agent_major_version": "{{ datadog_major }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Set helper variables", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set helper variables"}, "module_options": {"datadog_agent_linux_version": "{{ datadog_epoch }}:{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}-{{ datadog_release }}", "datadog_rpm_version_finding_cmd": "rpm -q --qf '%{EPOCH}:%{VERSION}-%{RELEASE}' {{ datadog_agent_flavor }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Set OS-specific versions", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set OS-specific versions"}, "module_options": {"datadog_agent_debian_version": "{{ datadog_agent_linux_version }}", "datadog_agent_redhat_version": "{{ datadog_agent_linux_version }}", "datadog_agent_suse_version": "{{ datadog_agent_linux_version }}", "datadog_agent_windows_version": "{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Construct commands to find Agent version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Construct commands to find Agent version"}, "module_options": {"datadog_version_finding_cmds": {"Debian": "dpkg -s {{ datadog_agent_flavor }} | grep '^Version:' | awk '{print $2}'", "RedHat": "{{ datadog_rpm_version_finding_cmd }}", "Rocky": "{{ datadog_rpm_version_finding_cmd }}", "AlmaLinux": "{{ datadog_rpm_version_finding_cmd }}", "Suse": "{{ datadog_rpm_version_finding_cmd }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Create OS-specific version dict", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Create OS-specific version dict"}, "module_options": {"datadog_agent_os2version": {"Debian": "{{ datadog_agent_debian_version }}", "RedHat": "{{ datadog_agent_redhat_version }}", "Rocky": "{{ datadog_agent_redhat_version }}", "AlmaLinux": "{{ datadog_agent_redhat_version }}", "Suse": "{{ datadog_agent_suse_version }}", "Windows": "{{ datadog_agent_windows_version }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Get Linux Agent version", "module": "shell", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Get Linux Agent version", "register": "datadog_version_check_linux", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": "{{ datadog_version_finding_cmds[ansible_facts.os_family] }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Include Windows Agent version tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Include Windows Agent version tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "parse-version-windows.yml", "executable": "parse-version-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Linux)", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Linux)", "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_linux.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Windows)", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_win.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_zypper_repo_gpgcheck": "{{ datadog_zypper_repo_gpgcheck if datadog_zypper_repo_gpgcheck != '' else (\n  'yes' if datadog_zypper_repo == '' and datadog_agent_major_version|int != 5 else 'no'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Stat if current RPM key already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if current RPM key already exists", "register": "ddkeycurrent"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_CURRENT.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Download current RPM key (SLES11)", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key (SLES11)", "when": "not ddkeycurrent.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Stat if RPM key already exists", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if RPM key already exists", "register": "ddkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Download RPM key (SLES11)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key (SLES11)", "when": "not ddkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Download RPM key", "module": "get_url", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key", "when": "datadog_agent_major_version|int < 7 and ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Import RPM key", "module": "rpm_key", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import RPM key", "when": "datadog_agent_major_version|int < 7 and not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "register": "ddnewkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "module": "get_url", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "when": "not ddnewkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key", "module": "get_url", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Import E09422B3 key (Expires 2022) RPM key", "module": "rpm_key", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import E09422B3 key (Expires 2022) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "module": "stat", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "register": "ddnewkey_20200908"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "module": "get_url", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "when": "not  ddnewkey_20200908.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key", "module": "get_url", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Import 20200908 key (Expires 2024) RPM key", "module": "rpm_key", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import 20200908 key (Expires 2024) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Install DataDog zypper repo", "module": "template", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Install DataDog zypper repo", "register": "datadog_zypper_repo"}, "module_options": {"src": "zypper.repo.j2", "dest": "/etc/zypp/repos.d/datadog.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "refresh Datadog zypper_repos", "module": "command", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "refresh Datadog zypper_repos", "when": "datadog_zypper_repo.changed and not ansible_check_mode", "args": {"warn": false}}, "module_options": "zypper refresh datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is defined"}, "module_options": "pkg-suse/install-pinned.yml", "executable": "pkg-suse/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is not defined"}, "module_options": "pkg-suse/install-latest.yml", "executable": "pkg-suse/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check agent pinned version on Windows", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "Check agent pinned version on Windows", "when": "datadog_agent_version == \"6.14.0\" or datadog_agent_version == \"6.14.1\""}, "module_options": {"msg": "The Agent versions you pinned (6.14.0 or 6.14.1) have been blacklisted, please use 6.14.2 instead. See https://dtdg.co/win-614-fix."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "set agent download filename to a specific version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "set agent download filename to a specific version"}, "module_options": {"dd_download_url": "{{ datadog_windows_versioned_url }}-{{ datadog_agent_windows_version }}.msi"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install apt-transport-https", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt-transport-https", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install gnupg", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install gnupg", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "register": "apt_keyring_file"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "when": "not ansible_check_mode and (not apt_keyring_file.stat.exists or not apt_keyring_file.stat.mode == \"0644\")"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}", "owner": "root", "group": "root", "mode": "0644", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install apt keys from default URLs", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from default URLs", "with_items": "{{ datadog_apt_default_keys }}", "when": "datadog_apt_key_url_new is not defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install apt keys from custom URL", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from custom URL", "with_items": [{"key": "A2923DFF56EDA6E76E55E492D3A80E30382E94DE", "value": "{{ datadog_apt_key_url_new }}"}, {"key": "D75CEA17048B9ACBF186794B32637D44F14F620E", "value": "{{ datadog_apt_key_url_new }}"}], "when": "datadog_apt_key_url_new is defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "when": "((ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 9) or (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 16)) and not ansible_check_mode"}, "module_options": {"src": "{{ datadog_apt_usr_share_keyring }}", "dest": "{{ datadog_apt_trusted_d_keyring }}", "mode": "0644", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "with_items": ["deb http://apt.datadoghq.com/ stable main", "deb http://apt.datadoghq.com/ stable 6", "deb http://apt.datadoghq.com/ stable 7", "deb https://apt.datadoghq.com/ stable main", "deb https://apt.datadoghq.com/ stable 6", "deb https://apt.datadoghq.com/ stable 7"], "when": "not ansible_check_mode"}, "module_options": {"repo": "{{ item }}", "state": "absent", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog repository is up-to-date", "when": "(not ansible_check_mode)", "with_dict": {"5": "{{ datadog_agent5_apt_repo }}", "6": "{{ datadog_agent6_apt_repo }}", "7": "{{ datadog_agent7_apt_repo }}"}}, "module_options": {"filename": "ansible_datadog_{{ item.key }}", "repo": "{{ item.value }}", "state": "{% if item.key == datadog_agent_major_version|int and datadog_apt_repo | length == 0 %}present{% else %}absent{% endif %}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Initialize custom repo file deletion flag to False", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Initialize custom repo file deletion flag to False"}, "module_options": {"datadog_remove_custom_repo_file": "False"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Check if custom repository file exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if custom repository file exists", "register": "datadog_custom_repo_file"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Fetch custom repository file", "module": "slurp", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Fetch custom repository file", "register": "datadog_custom_repo_file_contents", "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"src": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Flag custom repository file for deletion if different from current repository config", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Flag custom repository file for deletion if different from current repository config", "vars": {"datadog_repo_file_contents": "{{ datadog_custom_repo_file_contents['content'] | b64decode | trim }}"}, "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"datadog_remove_custom_repo_file": "{{ datadog_repo_file_contents != datadog_apt_repo }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "(Custom) Remove Datadog custom repository file when not set or updated", "module": "file", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Remove Datadog custom repository file when not set or updated", "when": "(datadog_apt_repo | length == 0) or datadog_remove_custom_repo_file and (not ansible_check_mode)"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "(Custom) Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Ensure Datadog repository is up-to-date", "when": "(datadog_apt_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"filename": "ansible_datadog_custom", "repo": "{{ datadog_apt_repo }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is defined"}, "module_options": "pkg-debian/install-pinned.yml", "executable": "pkg-debian/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is not defined"}, "module_options": "pkg-debian/install-latest.yml", "executable": "pkg-debian/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Install latest datadog-signing-keys package", "module": "apt", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install latest datadog-signing-keys package", "register": "datadog_signing_keys_install", "when": "not ansible_check_mode"}, "module_options": {"name": "datadog-signing-keys", "state": "latest"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Defend against defined but null datadog_checks variable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Defend against defined but null datadog_checks variable"}, "module_options": {"datadog_checks": "{{ datadog_checks | default({}, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Resolve datadog_tracked_checks"}, "module_options": {"datadog_tracked_checks": "{{ datadog_checks | list + datadog_additional_checks | default([], true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check that datadog_checks is a mapping", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Check that datadog_checks is a mapping"}, "module_options": {"that": ["datadog_checks is mapping"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set before 6/7.24.1 flag", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.24.1 flag"}, "module_options": {"datadog_before_7241": "{{ datadog_major is defined and datadog_minor is defined and datadog_bugfix is defined and datadog_major | int < 8 and (datadog_minor | int < 24 or (datadog_minor | int == 24 and datadog_bugfix | int < 1)) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set before 6/7.18.0 flag", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.18.0 flag"}, "module_options": {"datadog_before_7180": "{{ datadog_major is defined and datadog_minor is defined and datadog_major | int < 8 and datadog_minor | int < 18 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Add \"{{ datadog_user }}\" user to additional groups", "module": "user", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Add \"{{ datadog_user }}\" user to additional groups", "when": "datadog_additional_groups | default([], true) | length > 0", "notify": "restart datadog-agent"}, "module_options": "name=\"{{ datadog_user }}\" groups=\"{{ datadog_additional_groups }}\" append=yes", "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Create Datadog agent config directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.yaml.j2", "dest": "/etc/datadog-agent/datadog.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "find", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "/etc/datadog-agent/conf.d/", "patterns": ["*.d"], "file_type": "directory"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Delete all default checks", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete all default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.d", "state": "directory", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "template", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "/etc/datadog-agent/checks.d/{{ item }}.py", "mode": 493, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "/etc/datadog-agent/system-probe.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Set system probe installed", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe installed", "when": "not datadog_skip_running_check"}, "module_options": {"datadog_sysprobe_installed": "{{ ansible_facts.services['datadog-agent-sysprobe'] is defined or ansible_facts.services['datadog-agent-sysprobe.service'] is defined }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Set system probe enabled (before 6/7.24.1)", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (before 6/7.24.1)", "when": "not datadog_skip_running_check and datadog_before_7241"}, "module_options": {"datadog_sysprobe_enabled": "{{ system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled'] and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Set system probe enabled (since 6/7.24.1)", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (since 6/7.24.1)", "when": "not datadog_skip_running_check and (not datadog_before_7241)"}, "module_options": {"datadog_sysprobe_enabled": "{{ ((system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled']) or (network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'])) and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "service", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "module": "service", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode and datadog_sysprobe_enabled"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "module": "service", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-agent", "datadog-agent-process", "datadog-agent-trace"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "module": "service", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "when": "not datadog_skip_running_check and (not datadog_enabled or not datadog_sysprobe_enabled) and datadog_before_7180 and datadog_sysprobe_installed"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Ensure datadog-agent-security is not running", "module": "service", "index": 21, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-security is not running", "when": "not datadog_skip_running_check and not datadog_enabled", "ignore_errors": true}, "module_options": {"name": "datadog-agent-security", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Create security-agent configuration file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create security-agent configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "security-agent.yaml.j2", "dest": "/etc/datadog-agent/security-agent.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 23, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "/etc/datadog-agent/install_info", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "when": "(not datadog_ignore_old_centos_python3_error) and (ansible_version.full is version(\"2.11\", operator=\"lt\", strict=True)) and (ansible_pkg_mgr == \"yum\") and (ansible_facts.python.version.major | int >= 3)"}, "module_options": {"msg": "The installation of the Agent on RedHat family systems using yum is not compatible with Python 3 with older Ansible versions. To run this role, use a Python 2 interpreter on hosts running CentOS / RHEL < 8 or upgrade Ansible to version 2.11+"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_yum_repo_gpgcheck": "{{ datadog_yum_repo_gpgcheck if datadog_yum_repo_gpgcheck != '' else (\n  'no' if (\n    ansible_facts.distribution_version.startswith('8.1.') or ansible_facts.distribution_version == '8.1' or\n    datadog_yum_repo != ''\n  ) else 'yes'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download current RPM key"}, "module_options": {"url": "{{ datadog_yum_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2022)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2022)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_yum_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2022)", "module": "rpm_key", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2022)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2024)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2024)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_yum_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2024)", "module": "rpm_key", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2024)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install Datadog Agent 5 yum repo", "module": "yum_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 5 yum repo", "register": "repofile5", "when": "(datadog_agent_major_version|int == 5) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent5_yum_repo }}", "enabled": true, "repo_gpgcheck": false, "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install Datadog Agent 6 yum repo", "module": "yum_repository", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 6 yum repo", "register": "repofile6", "when": "(datadog_agent_major_version|int == 6) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent6_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Install Datadog Agent 7 yum repo", "module": "yum_repository", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 7 yum repo", "register": "repofile7", "when": "(datadog_agent_major_version|int == 7) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent7_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Install Datadog Custom yum repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Custom yum repo", "register": "repofilecustom", "when": "(datadog_yum_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Clean repo metadata if repo changed", "module": "command", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Clean repo metadata if repo changed", "ignore_errors": true, "args": {"warn": false}, "when": "repofile5.changed or repofile6.changed or repofile7.changed or repofilecustom.changed"}, "module_options": "yum clean metadata --disablerepo=\"*\" --enablerepo=datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Remove old yum repo files", "module": "yum_repository", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Remove old yum repo files", "with_items": [5, 6, 7, "custom"]}, "module_options": {"name": "ansible_datadog_{{ item }}", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is defined"}, "module_options": "pkg-redhat/install-pinned.yml", "executable": "pkg-redhat/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is not defined"}, "module_options": "pkg-redhat/install-latest.yml", "executable": "pkg-redhat/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "(Custom) Set agent download filename to latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "(Custom) Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length > 0"}, "module_options": {"dd_download_url": "{{ datadog_windows_download_url }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set agent download filename to latest", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length == 0"}, "module_options": {"dd_download_url": "{% if datadog_agent_major_version|int == 7 %}{{ datadog_windows_agent7_latest_url }} {% else %}{{ datadog_windows_agent6_latest_url }}{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Get Windows Agent version", "module": "win_shell", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml", "options": {"name": "Get Windows Agent version", "register": "datadog_version_check_win", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "$product_name = \"Datadog Agent\"\n$query = \"Select Name,IdentifyingNumber,InstallDate,InstallLocation,ProductID,Version FROM Win32_Product where Name like '$product_name%'\"\n$installs = Get-WmiObject -query $query\n\nif (!$installs -or ($installs.Count -eq 0) -or ($installs.Count -gt 1)) {\n  Write-Host \"\"\n} else {\n  $ddmaj, $ddmin, $ddpatch, $ddbuild = $installs.Version.split(\".\")\n  Write-Host \"$($ddmaj).$($ddmin).$($ddpatch)\"\n}\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible >= 2.10", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible >= 2.10", "when": "ansible_version.major >= 2 and ansible_version.minor >= 10"}, "module_options": "facts-ansible10.yml", "executable": "facts-ansible10.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible < 2.10", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible < 2.10", "when": "ansible_version.major == 2 and ansible_version.minor < 10"}, "module_options": "facts-ansible9.yml", "executable": "facts-ansible9.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Check if OS is supported", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Check if OS is supported"}, "module_options": "os-check.yml", "executable": "os-check.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks"}, "module_options": "sanitize-checks.yml", "executable": "sanitize-checks.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Set Facts for Datadog Agent Major Version", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Set Facts for Datadog Agent Major Version"}, "module_options": "set-parse-version.yml", "executable": "set-parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian Install Tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Debian Install Tasks", "when": "ansible_facts.os_family == \"Debian\" and not datadog_skip_install"}, "module_options": "pkg-debian.yml", "executable": "pkg-debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "RedHat Install Tasks", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "RedHat Install Tasks", "when": "ansible_facts.os_family in [\"RedHat\", \"Rocky\", \"AlmaLinux\"] and not datadog_skip_install"}, "module_options": "pkg-redhat.yml", "executable": "pkg-redhat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Suse Install Tasks", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Suse Install Tasks", "when": "ansible_facts.os_family == \"Suse\" and not datadog_skip_install"}, "module_options": "pkg-suse.yml", "executable": "pkg-suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Windows Install Tasks", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Install Tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "pkg-windows.yml", "executable": "pkg-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Linux Configuration Tasks (Agent 5)", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks (Agent 5)", "when": "datadog_agent_major_version | int == 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent5-linux.yml", "executable": "agent5-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Linux Configuration Tasks", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent-linux.yml", "executable": "agent-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Windows Configuration Tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family == \"Windows\""}, "module_options": "agent-win.yml", "executable": "agent-win.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Integrations Tasks", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Integrations Tasks", "when": "datadog_integration is defined"}, "module_options": "integration.yml", "executable": "integration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}={{ datadog_agent_debian_version }}", "state": "present", "force": "{{ datadog_agent_allow_downgrade }}", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install latest datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml", "options": {"name": "Install latest datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "state": "latest", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent={{ datadog_agent_suse_version }}", "state": "present", "oldpackage": "{{ datadog_agent_allow_downgrade }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure Datadog agent is installed", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml", "options": {"name": "Ensure Datadog agent is installed", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent", "state": "latest"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}.{{ ansible_facts.architecture }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install latest datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, "{\"path\": \"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install latest datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml": {"py/object": "struct4.TaskFile", "name": "pkg-windows-opts.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set DD Username Arg", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set DD Username Arg", "when": "datadog_windows_ddagentuser_name | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_NAME={{ datadog_windows_ddagentuser_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existing config file Directory", "module": "win_reg_stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing config file Directory", "register": "config_root_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "ConfigRoot"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existing installPath Directory", "module": "win_reg_stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing installPath Directory", "register": "install_path_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "InstallPath"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate config path", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ config_root_from_registry.value }} != {{ datadog_windows_config_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validated config path", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ config_root_from_registry.value }} == {{ datadog_windows_config_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate install path", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ install_path_from_registry.value }} != {{ datadog_windows_program_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validated install path", "module": "debug", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ install_path_from_registry.value }} == {{ datadog_windows_program_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Program Files Target Directory", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Program Files Target Directory", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} PROJECTLOCATION=\"{{ datadog_windows_program_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Config Files Target Directory", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Config Files Target Directory", "when": "datadog_windows_config_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} APPLICATIONDATADIRECTORY=\"{{ datadog_windows_config_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set config root for config Files", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config Files", "when": "((datadog_windows_config_files_dir | length > 0) and (not config_root_from_registry.exists))"}, "module_options": {"datadog_windows_config_root": "{{ datadog_windows_config_files_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set config root for config files from current location", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config files from current location", "when": "config_root_from_registry.exists"}, "module_options": {"datadog_windows_config_root": "{{ config_root_from_registry.value | regex_replace('\\\\$','') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Test", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Test"}, "module_options": {"win_install_args": "{{ win_install_args }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Windows NPM flag", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Windows NPM flag", "when": "datadog_sysprobe_enabled"}, "module_options": {"win_install_args": "{{ win_install_args }} ADDLOCAL=MainApplication,NPM"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml": {"py/object": "struct4.TaskFile", "name": "_apt-key-import.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set local variables for processed key {{ item.key }}", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local variables for processed key {{ item.key }}"}, "module_options": {"key_fingerprint": "{{ item.key }}", "keyring_url": "{{ item.value }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find out whether key {{ key_fingerprint }} is already imported", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Find out whether key {{ key_fingerprint }} is already imported", "register": "key_exists_result", "failed_when": false, "changed_when": "key_exists_result.rc != 0", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": "gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --list-keys --with-fingerprint --with-colons | grep {{ key_fingerprint }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "{{ 'false' if key_exists_result.rc == 0 else 'true' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "true"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create temporary directory for key manipulation", "module": "tempfile", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Create temporary directory for key manipulation", "register": "tempdir", "when": "key_needs_import", "changed_when": false}, "module_options": {"state": "directory", "suffix": "keys"}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "when": "key_needs_import", "changed_when": false}, "module_options": {"url": "{{ keyring_url }}", "dest": "{{ tempdir.path }}/{{ key_fingerprint }}", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "when": "key_needs_import", "changed_when": false}, "module_options": "cat {{ tempdir.path }}/{{ key_fingerprint }} | gpg --dearmor > {{ tempdir.path }}/binary.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": "gpg --no-default-keyring --keyring {{ tempdir.path }}/binary.gpg --export {{ key_fingerprint }} > {{ tempdir.path }}/single.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": {"src": "{{ tempdir.path }}/binary.gpg", "dest": "{{ tempdir.path }}/single.gpg", "mode": "0600", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "when": "key_needs_import", "register": "key_import_result", "changed_when": "\"imported: 1\" in key_import_result.stderr"}, "module_options": "cat {{ tempdir.path }}/single.gpg | gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --import --batch", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml": {"py/object": "struct4.TaskFile", "name": "agent-win.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "datadog.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\datadog.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "win_find", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d", "patterns": ["*.d"], "file_type": "directory"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "win_file", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete default checks", "module": "win_file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml.default", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "win_file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "checks.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d\\conf.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "win_file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent-win"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "{{ datadog_windows_config_root }}\\checks.d\\{{ item }}.py"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "module": "win_service", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode", "with_list": ["datadog-trace-agent", "datadog-process-agent"]}, "module_options": {"name": "{{ item }}", "start_mode": "manual"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "win_template", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\system-probe.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "win_service", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadogagent", "state": "started", "start_mode": "delayed"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is disabled", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is disabled", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-trace-agent", "datadog-process-agent", "datadogagent"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "start_mode": "disabled"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "{{ datadog_windows_config_root }}\\install_info", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml": {"py/object": "struct4.TaskFile", "name": "os-check.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail if OS is not supported", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml", "options": {"name": "Fail if OS is not supported", "when": "ansible_facts.os_family not in [\"RedHat\", \"Rocky\", \"AlmaLinux\", \"Debian\", \"Suse\", \"Windows\"]"}, "module_options": {"msg": "The Datadog Ansible role does not support your OS yet. Please email support@datadoghq.com to open a feature request."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml": {"py/object": "struct4.TaskFile", "name": "pkg-windows.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail if Agent 5", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Fail if Agent 5", "when": "datadog_agent_major_version|int == 5"}, "module_options": {"msg": "The Datadog ansible role does not currently support Agent 5"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download windows datadog agent 614 fix script", "module": "win_get_url", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent 614 fix script", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": {"url": "{{ datadog_windows_614_fix_script_url }}", "dest": "%TEMP%\\fix_6_14.ps1"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run 6.14.0/1 PowerShell fix", "module": "win_shell", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Run 6.14.0/1 PowerShell fix", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": "Set-ExecutionPolicy Bypass -Scope Process -Force\n&$env:temp\\fix_6_14.ps1\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is not defined)"}, "module_options": "win_agent_latest.yml", "executable": "win_agent_latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is defined)"}, "module_options": "win_agent_version.yml", "executable": "win_agent_version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "show URL var", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "show URL var", "when": "not datadog_skip_install"}, "module_options": {"var": "dd_download_url"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set windows NPM installed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set windows NPM installed"}, "module_options": {"datadog_sysprobe_enabled": "{{ network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {}, "module_options": "pkg-windows-opts.yml", "executable": "pkg-windows-opts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "pre-Delete temporary msi", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "pre-Delete temporary msi", "when": "not datadog_skip_install"}, "module_options": {"path": "%TEMP%\\ddagent.msi", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download windows datadog agent", "module": "win_get_url", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent", "register": "download_msi_result", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"url": "{{ dd_download_url }}", "dest": "%TEMP%\\ddagent.msi"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Binary directory root (if not default)", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Create Binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default permissions on binary directory root (if not default)", "module": "win_acl", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set default permissions on binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "inherit": "ContainerInherit,ObjectInherit", "user": "BUILTIN\\USERS", "rights": "ReadAndExecute", "type": "allow", "state": "present", "propagation": "None"}, "executable": "win_acl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Show installation flags", "module": "debug", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Show installation flags"}, "module_options": {"msg": "{{ win_install_args }}{% if datadog_windows_ddagentuser_password | default('', true) | length > 0 %} DDAGENTUSER_PASSWORD=<REDACTED>{% endif %}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set DD Password Arg", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set DD Password Arg", "when": "datadog_windows_ddagentuser_password | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_PASSWORD={{ datadog_windows_ddagentuser_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install downloaded agent", "module": "win_package", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Install downloaded agent", "register": "datadog_agent_install", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "arguments": "{{ win_install_args }}"}, "executable": "win_package", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete temporary msi", "module": "win_file", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Delete temporary msi", "when": "(not datadog_skip_install) and (not ansible_check_mode) and (download_msi_result.status_code == 200)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml": {"py/object": "struct4.TaskFile", "name": "agent5-linux.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "(agent5) Create Datadog agent config directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/dd-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Create main Datadog agent configuration file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.conf.j2", "dest": "/etc/dd-agent/datadog.conf", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is running", "module": "service", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is not running", "module": "service", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is not running", "when": "not datadog_skip_running_check and not datadog_enabled"}, "module_options": {"name": "datadog-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files", "when": "datadog_manage_config and datadog_disable_untracked_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files_default", "when": "datadog_manage_config and datadog_disable_default_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml.default"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_files.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete default checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_files_default.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml.default$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Create a configuration file for each Datadog check", "module": "template", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/dd-agent/conf.d/{{ item }}.yaml", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml": {"py/object": "struct4.TaskFile", "name": "set-parse-version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Convert datadog_agent_major_version to string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Convert datadog_agent_major_version to string"}, "module_options": {"datadog_agent_major_version": "{{ datadog_agent_major_version | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize skip install flag to false", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Initialize skip install flag to false"}, "module_options": {"datadog_skip_install": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"when": "datadog_agent_version | default('', true) | length > 0"}, "module_options": "parse-version.yml", "executable": "parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Agent default major version", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Set Agent default major version", "when": "datadog_agent_major_version | length == 0"}, "module_options": {"datadog_agent_major_version": "7"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml": {"py/object": "struct4.TaskFile", "name": "integration.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "tasks": [{"py/object": "struct4.Task", "name": "set agent binary path (windows)", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent binary path (unix)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent user for integration commmand (windows)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent user for integration commmand (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent agent binary path (unix)", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate integrations actions", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Validate integrations actions", "when": "item.value.action != \"install\" and item.value.action != \"remove\"", "loop": "{{ datadog_integration|dict2items }}"}, "module_options": {"msg": "Unkown action '{{ item.value.action }}' for integration command ({{ item.key }}). Valid actions are 'install' and 'remove'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Removing integrations (Unix)", "module": "command", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family != \"Windows\""}, "module_options": {"argv": ["{{ datadog_agent_binary_path }}", "integration", "remove", "{{ item.key }}"]}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Removing integrations (Windows)", "module": "win_command", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Windows)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family == \"Windows\""}, "module_options": "\"{{ datadog_agent_binary_path }}\" integration remove {{ item.key }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Unix)", "module": "command", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "vars": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family != \"Windows\""}, "module_options": "{{ datadog_agent_binary_path }} integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Windows)", "module": "vars", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Windows)", "win_command": "\"{{ datadog_agent_binary_path }}\" integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family == \"Windows\""}, "module_options": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml": {"py/object": "struct4.TaskFile", "name": "facts-ansible10.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "ansible.builtin.setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "ansible.builtin.setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml": {"py/object": "struct4.TaskFile", "name": "parse-version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Parse Agent version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Parse Agent version", "vars": {"regexp": "(?:(?P<epoch>[0-9]+):)?(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<bugfix>[0-9]+)(?P<suffix>(?:~|-)[^0-9\\s-]+[^-\\s]*)?(?:-(?P<release>[0-9]+))?"}}, "module_options": {"agent_version": "{{ datadog_agent_version | regex_search(regexp, '\\g<epoch>', '\\g<major>', '\\g<minor>', '\\g<bugfix>', '\\g<suffix>', '\\g<release>') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set version vars", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set version vars"}, "module_options": {"datadog_epoch": "{{ agent_version.0 | default('', true) | string }}", "datadog_major": "{{ agent_version.1 | default('', true) | string }}", "datadog_minor": "{{ agent_version.2 | default('', true) | string }}", "datadog_bugfix": "{{ agent_version.3 | default('', true) | string }}", "datadog_suffix": "{{ agent_version.4 | default('', true) | string }}", "datadog_release": "{{ agent_version.5 | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fill empty version epoch with default", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version epoch with default", "when": "datadog_epoch | length == 0"}, "module_options": {"datadog_epoch": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fill empty version release with default", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version release with default", "when": "datadog_release | length == 0"}, "module_options": {"datadog_release": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "when": "datadog_agent_major_version | length > 0 and datadog_major != datadog_agent_major_version"}, "module_options": {"msg": "The provided major version {{ datadog_agent_major_version }} is not compatible with the version {{ datadog_major }} deduced from datadog_agent_version ({{ datadog_agent_version }}). Aborting play."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set datadog_agent_major_version to deduced value from datadog_agent_version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set datadog_agent_major_version to deduced value from datadog_agent_version"}, "module_options": {"datadog_agent_major_version": "{{ datadog_major }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set helper variables", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set helper variables"}, "module_options": {"datadog_agent_linux_version": "{{ datadog_epoch }}:{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}-{{ datadog_release }}", "datadog_rpm_version_finding_cmd": "rpm -q --qf '%{EPOCH}:%{VERSION}-%{RELEASE}' {{ datadog_agent_flavor }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set OS-specific versions", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set OS-specific versions"}, "module_options": {"datadog_agent_debian_version": "{{ datadog_agent_linux_version }}", "datadog_agent_redhat_version": "{{ datadog_agent_linux_version }}", "datadog_agent_suse_version": "{{ datadog_agent_linux_version }}", "datadog_agent_windows_version": "{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Construct commands to find Agent version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Construct commands to find Agent version"}, "module_options": {"datadog_version_finding_cmds": {"Debian": "dpkg -s {{ datadog_agent_flavor }} | grep '^Version:' | awk '{print $2}'", "RedHat": "{{ datadog_rpm_version_finding_cmd }}", "Rocky": "{{ datadog_rpm_version_finding_cmd }}", "AlmaLinux": "{{ datadog_rpm_version_finding_cmd }}", "Suse": "{{ datadog_rpm_version_finding_cmd }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create OS-specific version dict", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Create OS-specific version dict"}, "module_options": {"datadog_agent_os2version": {"Debian": "{{ datadog_agent_debian_version }}", "RedHat": "{{ datadog_agent_redhat_version }}", "Rocky": "{{ datadog_agent_redhat_version }}", "AlmaLinux": "{{ datadog_agent_redhat_version }}", "Suse": "{{ datadog_agent_suse_version }}", "Windows": "{{ datadog_agent_windows_version }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Linux Agent version", "module": "shell", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Get Linux Agent version", "register": "datadog_version_check_linux", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": "{{ datadog_version_finding_cmds[ansible_facts.os_family] }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Windows Agent version tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Include Windows Agent version tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "parse-version-windows.yml", "executable": "parse-version-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Linux)", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Linux)", "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_linux.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Windows)", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_win.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml": {"py/object": "struct4.TaskFile", "name": "pkg-suse.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_zypper_repo_gpgcheck": "{{ datadog_zypper_repo_gpgcheck if datadog_zypper_repo_gpgcheck != '' else (\n  'yes' if datadog_zypper_repo == '' and datadog_agent_major_version|int != 5 else 'no'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if current RPM key already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if current RPM key already exists", "register": "ddkeycurrent"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_CURRENT.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key (SLES11)", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key (SLES11)", "when": "not ddkeycurrent.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if RPM key already exists", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if RPM key already exists", "register": "ddkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download RPM key (SLES11)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key (SLES11)", "when": "not ddkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download RPM key", "module": "get_url", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key", "when": "datadog_agent_major_version|int < 7 and ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import RPM key", "module": "rpm_key", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import RPM key", "when": "datadog_agent_major_version|int < 7 and not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "register": "ddnewkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "module": "get_url", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "when": "not ddnewkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key", "module": "get_url", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import E09422B3 key (Expires 2022) RPM key", "module": "rpm_key", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import E09422B3 key (Expires 2022) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "module": "stat", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "register": "ddnewkey_20200908"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "module": "get_url", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "when": "not  ddnewkey_20200908.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key", "module": "get_url", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import 20200908 key (Expires 2024) RPM key", "module": "rpm_key", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import 20200908 key (Expires 2024) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install DataDog zypper repo", "module": "template", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Install DataDog zypper repo", "register": "datadog_zypper_repo"}, "module_options": {"src": "zypper.repo.j2", "dest": "/etc/zypp/repos.d/datadog.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "refresh Datadog zypper_repos", "module": "command", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "refresh Datadog zypper_repos", "when": "datadog_zypper_repo.changed and not ansible_check_mode", "args": {"warn": false}}, "module_options": "zypper refresh datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is defined"}, "module_options": "pkg-suse/install-pinned.yml", "executable": "pkg-suse/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is not defined"}, "module_options": "pkg-suse/install-latest.yml", "executable": "pkg-suse/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml": {"py/object": "struct4.TaskFile", "name": "win_agent_version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check agent pinned version on Windows", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "Check agent pinned version on Windows", "when": "datadog_agent_version == \"6.14.0\" or datadog_agent_version == \"6.14.1\""}, "module_options": {"msg": "The Agent versions you pinned (6.14.0 or 6.14.1) have been blacklisted, please use 6.14.2 instead. See https://dtdg.co/win-614-fix."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent download filename to a specific version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "set agent download filename to a specific version"}, "module_options": {"dd_download_url": "{{ datadog_windows_versioned_url }}-{{ datadog_agent_windows_version }}.msi"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml": {"py/object": "struct4.TaskFile", "name": "pkg-debian.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install apt-transport-https", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt-transport-https", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gnupg", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install gnupg", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "register": "apt_keyring_file"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "when": "not ansible_check_mode and (not apt_keyring_file.stat.exists or not apt_keyring_file.stat.mode == \"0644\")"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}", "owner": "root", "group": "root", "mode": "0644", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt keys from default URLs", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from default URLs", "with_items": "{{ datadog_apt_default_keys }}", "when": "datadog_apt_key_url_new is not defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt keys from custom URL", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from custom URL", "with_items": [{"key": "A2923DFF56EDA6E76E55E492D3A80E30382E94DE", "value": "{{ datadog_apt_key_url_new }}"}, {"key": "D75CEA17048B9ACBF186794B32637D44F14F620E", "value": "{{ datadog_apt_key_url_new }}"}], "when": "datadog_apt_key_url_new is defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "when": "((ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 9) or (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 16)) and not ansible_check_mode"}, "module_options": {"src": "{{ datadog_apt_usr_share_keyring }}", "dest": "{{ datadog_apt_trusted_d_keyring }}", "mode": "0644", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "with_items": ["deb http://apt.datadoghq.com/ stable main", "deb http://apt.datadoghq.com/ stable 6", "deb http://apt.datadoghq.com/ stable 7", "deb https://apt.datadoghq.com/ stable main", "deb https://apt.datadoghq.com/ stable 6", "deb https://apt.datadoghq.com/ stable 7"], "when": "not ansible_check_mode"}, "module_options": {"repo": "{{ item }}", "state": "absent", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog repository is up-to-date", "when": "(not ansible_check_mode)", "with_dict": {"5": "{{ datadog_agent5_apt_repo }}", "6": "{{ datadog_agent6_apt_repo }}", "7": "{{ datadog_agent7_apt_repo }}"}}, "module_options": {"filename": "ansible_datadog_{{ item.key }}", "repo": "{{ item.value }}", "state": "{% if item.key == datadog_agent_major_version|int and datadog_apt_repo | length == 0 %}present{% else %}absent{% endif %}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize custom repo file deletion flag to False", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Initialize custom repo file deletion flag to False"}, "module_options": {"datadog_remove_custom_repo_file": "False"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if custom repository file exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if custom repository file exists", "register": "datadog_custom_repo_file"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch custom repository file", "module": "slurp", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Fetch custom repository file", "register": "datadog_custom_repo_file_contents", "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"src": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flag custom repository file for deletion if different from current repository config", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Flag custom repository file for deletion if different from current repository config", "vars": {"datadog_repo_file_contents": "{{ datadog_custom_repo_file_contents['content'] | b64decode | trim }}"}, "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"datadog_remove_custom_repo_file": "{{ datadog_repo_file_contents != datadog_apt_repo }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Custom) Remove Datadog custom repository file when not set or updated", "module": "file", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Remove Datadog custom repository file when not set or updated", "when": "(datadog_apt_repo | length == 0) or datadog_remove_custom_repo_file and (not ansible_check_mode)"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Custom) Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Ensure Datadog repository is up-to-date", "when": "(datadog_apt_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"filename": "ansible_datadog_custom", "repo": "{{ datadog_apt_repo }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is defined"}, "module_options": "pkg-debian/install-pinned.yml", "executable": "pkg-debian/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is not defined"}, "module_options": "pkg-debian/install-latest.yml", "executable": "pkg-debian/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest datadog-signing-keys package", "module": "apt", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install latest datadog-signing-keys package", "register": "datadog_signing_keys_install", "when": "not ansible_check_mode"}, "module_options": {"name": "datadog-signing-keys", "state": "latest"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml": {"py/object": "struct4.TaskFile", "name": "sanitize-checks.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "tasks": [{"py/object": "struct4.Task", "name": "Defend against defined but null datadog_checks variable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Defend against defined but null datadog_checks variable"}, "module_options": {"datadog_checks": "{{ datadog_checks | default({}, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Resolve datadog_tracked_checks"}, "module_options": {"datadog_tracked_checks": "{{ datadog_checks | list + datadog_additional_checks | default([], true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that datadog_checks is a mapping", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Check that datadog_checks is a mapping"}, "module_options": {"that": ["datadog_checks is mapping"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml": {"py/object": "struct4.TaskFile", "name": "agent-linux.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set before 6/7.24.1 flag", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.24.1 flag"}, "module_options": {"datadog_before_7241": "{{ datadog_major is defined and datadog_minor is defined and datadog_bugfix is defined and datadog_major | int < 8 and (datadog_minor | int < 24 or (datadog_minor | int == 24 and datadog_bugfix | int < 1)) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set before 6/7.18.0 flag", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.18.0 flag"}, "module_options": {"datadog_before_7180": "{{ datadog_major is defined and datadog_minor is defined and datadog_major | int < 8 and datadog_minor | int < 18 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add \"{{ datadog_user }}\" user to additional groups", "module": "user", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Add \"{{ datadog_user }}\" user to additional groups", "when": "datadog_additional_groups | default([], true) | length > 0", "notify": "restart datadog-agent"}, "module_options": "name=\"{{ datadog_user }}\" groups=\"{{ datadog_additional_groups }}\" append=yes", "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Datadog agent config directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.yaml.j2", "dest": "/etc/datadog-agent/datadog.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "find", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "/etc/datadog-agent/conf.d/", "patterns": ["*.d"], "file_type": "directory"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete all default checks", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete all default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.d", "state": "directory", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "template", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "/etc/datadog-agent/checks.d/{{ item }}.py", "mode": 493, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "/etc/datadog-agent/system-probe.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe installed", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe installed", "when": "not datadog_skip_running_check"}, "module_options": {"datadog_sysprobe_installed": "{{ ansible_facts.services['datadog-agent-sysprobe'] is defined or ansible_facts.services['datadog-agent-sysprobe.service'] is defined }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe enabled (before 6/7.24.1)", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (before 6/7.24.1)", "when": "not datadog_skip_running_check and datadog_before_7241"}, "module_options": {"datadog_sysprobe_enabled": "{{ system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled'] and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe enabled (since 6/7.24.1)", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (since 6/7.24.1)", "when": "not datadog_skip_running_check and (not datadog_before_7241)"}, "module_options": {"datadog_sysprobe_enabled": "{{ ((system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled']) or (network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'])) and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "service", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "module": "service", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode and datadog_sysprobe_enabled"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "module": "service", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-agent", "datadog-agent-process", "datadog-agent-trace"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "module": "service", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "when": "not datadog_skip_running_check and (not datadog_enabled or not datadog_sysprobe_enabled) and datadog_before_7180 and datadog_sysprobe_installed"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-security is not running", "module": "service", "index": 21, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-security is not running", "when": "not datadog_skip_running_check and not datadog_enabled", "ignore_errors": true}, "module_options": {"name": "datadog-agent-security", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security-agent configuration file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create security-agent configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "security-agent.yaml.j2", "dest": "/etc/datadog-agent/security-agent.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 23, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "/etc/datadog-agent/install_info", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml": {"py/object": "struct4.TaskFile", "name": "facts-ansible9.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml": {"py/object": "struct4.TaskFile", "name": "pkg-redhat.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "when": "(not datadog_ignore_old_centos_python3_error) and (ansible_version.full is version(\"2.11\", operator=\"lt\", strict=True)) and (ansible_pkg_mgr == \"yum\") and (ansible_facts.python.version.major | int >= 3)"}, "module_options": {"msg": "The installation of the Agent on RedHat family systems using yum is not compatible with Python 3 with older Ansible versions. To run this role, use a Python 2 interpreter on hosts running CentOS / RHEL < 8 or upgrade Ansible to version 2.11+"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_yum_repo_gpgcheck": "{{ datadog_yum_repo_gpgcheck if datadog_yum_repo_gpgcheck != '' else (\n  'no' if (\n    ansible_facts.distribution_version.startswith('8.1.') or ansible_facts.distribution_version == '8.1' or\n    datadog_yum_repo != ''\n  ) else 'yes'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download current RPM key"}, "module_options": {"url": "{{ datadog_yum_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2022)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2022)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_yum_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2022)", "module": "rpm_key", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2022)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2024)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2024)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_yum_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2024)", "module": "rpm_key", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2024)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 5 yum repo", "module": "yum_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 5 yum repo", "register": "repofile5", "when": "(datadog_agent_major_version|int == 5) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent5_yum_repo }}", "enabled": true, "repo_gpgcheck": false, "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 6 yum repo", "module": "yum_repository", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 6 yum repo", "register": "repofile6", "when": "(datadog_agent_major_version|int == 6) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent6_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 7 yum repo", "module": "yum_repository", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 7 yum repo", "register": "repofile7", "when": "(datadog_agent_major_version|int == 7) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent7_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Custom yum repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Custom yum repo", "register": "repofilecustom", "when": "(datadog_yum_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean repo metadata if repo changed", "module": "command", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Clean repo metadata if repo changed", "ignore_errors": true, "args": {"warn": false}, "when": "repofile5.changed or repofile6.changed or repofile7.changed or repofilecustom.changed"}, "module_options": "yum clean metadata --disablerepo=\"*\" --enablerepo=datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old yum repo files", "module": "yum_repository", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Remove old yum repo files", "with_items": [5, 6, 7, "custom"]}, "module_options": {"name": "ansible_datadog_{{ item }}", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is defined"}, "module_options": "pkg-redhat/install-pinned.yml", "executable": "pkg-redhat/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is not defined"}, "module_options": "pkg-redhat/install-latest.yml", "executable": "pkg-redhat/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml": {"py/object": "struct4.TaskFile", "name": "win_agent_latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "(Custom) Set agent download filename to latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "(Custom) Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length > 0"}, "module_options": {"dd_download_url": "{{ datadog_windows_download_url }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set agent download filename to latest", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length == 0"}, "module_options": {"dd_download_url": "{% if datadog_agent_major_version|int == 7 %}{{ datadog_windows_agent7_latest_url }} {% else %}{{ datadog_windows_agent6_latest_url }}{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml": {"py/object": "struct4.TaskFile", "name": "parse-version-windows.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get Windows Agent version", "module": "win_shell", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml", "options": {"name": "Get Windows Agent version", "register": "datadog_version_check_win", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "$product_name = \"Datadog Agent\"\n$query = \"Select Name,IdentifyingNumber,InstallDate,InstallLocation,ProductID,Version FROM Win32_Product where Name like '$product_name%'\"\n$installs = Get-WmiObject -query $query\n\nif (!$installs -or ($installs.Count -eq 0) -or ($installs.Count -gt 1)) {\n  Write-Host \"\"\n} else {\n  $ddmaj, $ddmin, $ddpatch, $ddbuild = $installs.Version.split(\".\")\n  Write-Host \"$($ddmaj).$($ddmin).$($ddpatch)\"\n}\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible >= 2.10", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible >= 2.10", "when": "ansible_version.major >= 2 and ansible_version.minor >= 10"}, "module_options": "facts-ansible10.yml", "executable": "facts-ansible10.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible < 2.10", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible < 2.10", "when": "ansible_version.major == 2 and ansible_version.minor < 10"}, "module_options": "facts-ansible9.yml", "executable": "facts-ansible9.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if OS is supported", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Check if OS is supported"}, "module_options": "os-check.yml", "executable": "os-check.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks"}, "module_options": "sanitize-checks.yml", "executable": "sanitize-checks.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Facts for Datadog Agent Major Version", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Set Facts for Datadog Agent Major Version"}, "module_options": "set-parse-version.yml", "executable": "set-parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian Install Tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Debian Install Tasks", "when": "ansible_facts.os_family == \"Debian\" and not datadog_skip_install"}, "module_options": "pkg-debian.yml", "executable": "pkg-debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat Install Tasks", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "RedHat Install Tasks", "when": "ansible_facts.os_family in [\"RedHat\", \"Rocky\", \"AlmaLinux\"] and not datadog_skip_install"}, "module_options": "pkg-redhat.yml", "executable": "pkg-redhat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse Install Tasks", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Suse Install Tasks", "when": "ansible_facts.os_family == \"Suse\" and not datadog_skip_install"}, "module_options": "pkg-suse.yml", "executable": "pkg-suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows Install Tasks", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Install Tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "pkg-windows.yml", "executable": "pkg-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux Configuration Tasks (Agent 5)", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks (Agent 5)", "when": "datadog_agent_major_version | int == 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent5-linux.yml", "executable": "agent5-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux Configuration Tasks", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent-linux.yml", "executable": "agent-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows Configuration Tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family == \"Windows\""}, "module_options": "agent-win.yml", "executable": "agent-win.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Integrations Tasks", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Integrations Tasks", "when": "datadog_integration is defined"}, "module_options": "integration.yml", "executable": "integration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml": {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}={{ datadog_agent_debian_version }}", "state": "present", "force": "{{ datadog_agent_allow_downgrade }}", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml": {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install latest datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml", "options": {"name": "Install latest datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "state": "latest", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml": {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent={{ datadog_agent_suse_version }}", "state": "present", "oldpackage": "{{ datadog_agent_allow_downgrade }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml": {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Datadog agent is installed", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml", "options": {"name": "Ensure Datadog agent is installed", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent", "state": "latest"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml": {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}.{{ ansible_facts.architecture }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml": {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install latest datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}}, "role_dict": {"DataDog.datadog": {"py/object": "struct4.Role", "name": "DataDog.datadog", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog", "fqcn": "DataDog.datadog", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "pkg-windows-opts.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set DD Username Arg", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set DD Username Arg", "when": "datadog_windows_ddagentuser_name | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_NAME={{ datadog_windows_ddagentuser_name }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existing config file Directory", "module": "win_reg_stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing config file Directory", "register": "config_root_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "ConfigRoot"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existing installPath Directory", "module": "win_reg_stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Check existing installPath Directory", "register": "install_path_from_registry"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Datadog\\Datadog Agent", "name": "InstallPath"}, "executable": "win_reg_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate config path", "module": "fail", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ config_root_from_registry.value }} != {{ datadog_windows_config_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validated config path", "module": "debug", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated config path", "when": "( (config_root_from_registry.exists) and (datadog_windows_config_files_dir | length > 0 ) and (config_root_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_config_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ config_root_from_registry.value }} == {{ datadog_windows_config_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate install path", "module": "fail", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validate install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower != datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Incompatible configuration option {{ install_path_from_registry.value }} != {{ datadog_windows_program_files_dir }}"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validated install path", "module": "debug", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Validated install path", "when": "( (install_path_from_registry.exists) and (datadog_windows_program_files_dir | length > 0 ) and (install_path_from_registry.value | regex_replace('\\\\\\\\$','') | lower == datadog_windows_program_files_dir | lower ) )"}, "module_options": {"msg": "Allowing configuration option {{ install_path_from_registry.value }} == {{ datadog_windows_program_files_dir }}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Program Files Target Directory", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Program Files Target Directory", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} PROJECTLOCATION=\"{{ datadog_windows_program_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Config Files Target Directory", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Config Files Target Directory", "when": "datadog_windows_config_files_dir | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} APPLICATIONDATADIRECTORY=\"{{ datadog_windows_config_files_dir }}\" "}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set config root for config Files", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config Files", "when": "((datadog_windows_config_files_dir | length > 0) and (not config_root_from_registry.exists))"}, "module_options": {"datadog_windows_config_root": "{{ datadog_windows_config_files_dir }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set config root for config files from current location", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set config root for config files from current location", "when": "config_root_from_registry.exists"}, "module_options": {"datadog_windows_config_root": "{{ config_root_from_registry.value | regex_replace('\\\\$','') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Test", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Test"}, "module_options": {"win_install_args": "{{ win_install_args }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Windows NPM flag", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows-opts.yml", "options": {"name": "Set Windows NPM flag", "when": "datadog_sysprobe_enabled"}, "module_options": {"win_install_args": "{{ win_install_args }} ADDLOCAL=MainApplication,NPM"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "_apt-key-import.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set local variables for processed key {{ item.key }}", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local variables for processed key {{ item.key }}"}, "module_options": {"key_fingerprint": "{{ item.key }}", "keyring_url": "{{ item.value }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find out whether key {{ key_fingerprint }} is already imported", "module": "shell", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Find out whether key {{ key_fingerprint }} is already imported", "register": "key_exists_result", "failed_when": false, "changed_when": "key_exists_result.rc != 0", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": "gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --list-keys --with-fingerprint --with-colons | grep {{ key_fingerprint }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "{{ 'false' if key_exists_result.rc == 0 else 'true' }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Set local helper variable for determining key import (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name"}, "module_options": {"key_needs_import": "true"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create temporary directory for key manipulation", "module": "tempfile", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Create temporary directory for key manipulation", "register": "tempdir", "when": "key_needs_import", "changed_when": false}, "module_options": {"state": "directory", "suffix": "keys"}, "executable": "tempfile", "executable_type": "Module", "fqcn": "ansible.builtin.tempfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "module": "get_url", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Download {{ keyring_url }} to import key {{ key_fingerprint }}", "when": "key_needs_import", "changed_when": false}, "module_options": {"url": "{{ keyring_url }}", "dest": "{{ tempdir.path }}/{{ key_fingerprint }}", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "module": "shell", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Ensure downloaded file for {{ key_fingerprint }} is a binary keyring", "when": "key_needs_import", "changed_when": false}, "module_options": "cat {{ tempdir.path }}/{{ key_fingerprint }} | gpg --dearmor > {{ tempdir.path }}/binary.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when not {{ datadog_apt_key_current_name }})", "when": "key_fingerprint != datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": "gpg --no-default-keyring --keyring {{ tempdir.path }}/binary.gpg --export {{ key_fingerprint }} > {{ tempdir.path }}/single.gpg", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "module": "copy", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Extract the required key from the binary keyring (when {{ datadog_apt_key_current_name }})", "when": "key_fingerprint == datadog_apt_key_current_name and key_needs_import", "changed_when": false}, "module_options": {"src": "{{ tempdir.path }}/binary.gpg", "dest": "{{ tempdir.path }}/single.gpg", "mode": "0600", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "module": "shell", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/_apt-key-import.yml", "options": {"name": "Import key {{ key_fingerprint }} to {{ datadog_apt_usr_share_keyring }} keyring", "when": "key_needs_import", "register": "key_import_result", "changed_when": "\"imported: 1\" in key_import_result.stderr"}, "module_options": "cat {{ tempdir.path }}/single.gpg | gpg --no-default-keyring --keyring {{ datadog_apt_usr_share_keyring }} --import --batch", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "agent-win.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "datadog.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\datadog.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "win_find", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d", "patterns": ["*.d"], "file_type": "directory"}, "executable": "win_find", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "win_file", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete default checks", "module": "win_file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('win_basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ ansible_facts.env['ProgramData'] }}\\Datadog\\conf.d\\{{ item }}.d\\conf.yaml.default", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "win_file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "win_template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "checks.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.d\\conf.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "win_file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"path": "{{ datadog_windows_config_root }}\\conf.d\\{{ item }}.yaml", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent-win"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "{{ datadog_windows_config_root }}\\checks.d\\{{ item }}.py"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "module": "win_service", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-trace-agent and datadog-process-agent are not disabled", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode", "with_list": ["datadog-trace-agent", "datadog-process-agent"]}, "module_options": {"name": "{{ item }}", "start_mode": "manual"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "win_template", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent-win"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "{{ datadog_windows_config_root }}\\system-probe.yaml"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "win_service", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadogagent", "state": "started", "start_mode": "delayed"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is disabled", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Ensure datadog-agent is disabled", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-trace-agent", "datadog-process-agent", "datadogagent"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "start_mode": "disabled"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-win.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "{{ datadog_windows_config_root }}\\install_info", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "os-check.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail if OS is not supported", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/os-check.yml", "options": {"name": "Fail if OS is not supported", "when": "ansible_facts.os_family not in [\"RedHat\", \"Rocky\", \"AlmaLinux\", \"Debian\", \"Suse\", \"Windows\"]"}, "module_options": {"msg": "The Datadog Ansible role does not support your OS yet. Please email support@datadoghq.com to open a feature request."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-windows.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail if Agent 5", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Fail if Agent 5", "when": "datadog_agent_major_version|int == 5"}, "module_options": {"msg": "The Datadog ansible role does not currently support Agent 5"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download windows datadog agent 614 fix script", "module": "win_get_url", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent 614 fix script", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": {"url": "{{ datadog_windows_614_fix_script_url }}", "dest": "%TEMP%\\fix_6_14.ps1"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run 6.14.0/1 PowerShell fix", "module": "win_shell", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Run 6.14.0/1 PowerShell fix", "when": "not datadog_skip_install and datadog_apply_windows_614_fix"}, "module_options": "Set-ExecutionPolicy Bypass -Scope Process -Force\n&$env:temp\\fix_6_14.ps1\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is not defined)"}, "module_options": "win_agent_latest.yml", "executable": "win_agent_latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"when": "(not datadog_skip_install) and (datadog_agent_windows_version is defined)"}, "module_options": "win_agent_version.yml", "executable": "win_agent_version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "show URL var", "module": "debug", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "show URL var", "when": "not datadog_skip_install"}, "module_options": {"var": "dd_download_url"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set windows NPM installed", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set windows NPM installed"}, "module_options": {"datadog_sysprobe_enabled": "{{ network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {}, "module_options": "pkg-windows-opts.yml", "executable": "pkg-windows-opts.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "pre-Delete temporary msi", "module": "win_file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "pre-Delete temporary msi", "when": "not datadog_skip_install"}, "module_options": {"path": "%TEMP%\\ddagent.msi", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download windows datadog agent", "module": "win_get_url", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Download windows datadog agent", "register": "download_msi_result", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"url": "{{ dd_download_url }}", "dest": "%TEMP%\\ddagent.msi"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Binary directory root (if not default)", "module": "win_file", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Create Binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set default permissions on binary directory root (if not default)", "module": "win_acl", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set default permissions on binary directory root (if not default)", "when": "datadog_windows_program_files_dir | length > 0"}, "module_options": {"path": "{{ datadog_windows_program_files_dir }}", "inherit": "ContainerInherit,ObjectInherit", "user": "BUILTIN\\USERS", "rights": "ReadAndExecute", "type": "allow", "state": "present", "propagation": "None"}, "executable": "win_acl", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Show installation flags", "module": "debug", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Show installation flags"}, "module_options": {"msg": "{{ win_install_args }}{% if datadog_windows_ddagentuser_password | default('', true) | length > 0 %} DDAGENTUSER_PASSWORD=<REDACTED>{% endif %}"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set DD Password Arg", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Set DD Password Arg", "when": "datadog_windows_ddagentuser_password | default('', true) | length > 0"}, "module_options": {"win_install_args": "{{ win_install_args }} DDAGENTUSER_PASSWORD={{ datadog_windows_ddagentuser_password }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install downloaded agent", "module": "win_package", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Install downloaded agent", "register": "datadog_agent_install", "when": "(not datadog_skip_install) and (not ansible_check_mode)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "arguments": "{{ win_install_args }}"}, "executable": "win_package", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete temporary msi", "module": "win_file", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-windows.yml", "options": {"name": "Delete temporary msi", "when": "(not datadog_skip_install) and (not ansible_check_mode) and (download_msi_result.status_code == 200)"}, "module_options": {"path": "{{ download_msi_result.dest }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "agent5-linux.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "(agent5) Create Datadog agent config directory", "module": "file", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/dd-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Create main Datadog agent configuration file", "module": "template", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.conf.j2", "dest": "/etc/dd-agent/datadog.conf", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is running", "module": "service", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Ensure datadog-agent is not running", "module": "service", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Ensure datadog-agent is not running", "when": "not datadog_skip_running_check and not datadog_enabled"}, "module_options": {"name": "datadog-agent", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files", "when": "datadog_manage_config and datadog_disable_untracked_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks files present in datadog", "module": "find", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Register all checks files present in datadog", "register": "datadog_conf_files_default", "when": "datadog_manage_config and datadog_disable_default_checks"}, "module_options": {"paths": "/etc/dd-agent/conf.d/", "patterns": ["*.yaml.default"], "file_type": "file"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_files.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete default checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "Delete default checks", "loop": "{{ datadog_conf_files_default.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).yaml.default$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/dd-agent/conf.d/{{ item }}.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(agent5) Create a configuration file for each Datadog check", "module": "template", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent5-linux.yml", "options": {"name": "(agent5) Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/dd-agent/conf.d/{{ item }}.yaml", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "set-parse-version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Convert datadog_agent_major_version to string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Convert datadog_agent_major_version to string"}, "module_options": {"datadog_agent_major_version": "{{ datadog_agent_major_version | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize skip install flag to false", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Initialize skip install flag to false"}, "module_options": {"datadog_skip_install": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"when": "datadog_agent_version | default('', true) | length > 0"}, "module_options": "parse-version.yml", "executable": "parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Agent default major version", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/set-parse-version.yml", "options": {"name": "Set Agent default major version", "when": "datadog_agent_major_version | length == 0"}, "module_options": {"datadog_agent_major_version": "7"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "integration.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "tasks": [{"py/object": "struct4.Task", "name": "set agent binary path (windows)", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent binary path (unix)", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"datadog_agent_binary_path": "{{ datadog_agent_binary_path_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent user for integration commmand (windows)", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent user for integration commmand (windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_windows }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent agent binary path (unix)", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "set agent agent binary path (unix)", "when": "ansible_facts.os_family != \"Windows\""}, "module_options": {"integration_command_user": "{{ integration_command_user_linux }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Validate integrations actions", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Validate integrations actions", "when": "item.value.action != \"install\" and item.value.action != \"remove\"", "loop": "{{ datadog_integration|dict2items }}"}, "module_options": {"msg": "Unkown action '{{ item.value.action }}' for integration command ({{ item.key }}). Valid actions are 'install' and 'remove'"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Removing integrations (Unix)", "module": "command", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family != \"Windows\""}, "module_options": {"argv": ["{{ datadog_agent_binary_path }}", "integration", "remove", "{{ item.key }}"]}, "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Removing integrations (Windows)", "module": "win_command", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Removing integrations (Windows)", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"remove\" and ansible_facts.os_family == \"Windows\""}, "module_options": "\"{{ datadog_agent_binary_path }}\" integration remove {{ item.key }}", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Unix)", "module": "command", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Unix)", "become": true, "become_user": "{{ integration_command_user }}", "vars": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family != \"Windows\""}, "module_options": "{{ datadog_agent_binary_path }} integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned version of integrations (Windows)", "module": "vars", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/integration.yml", "options": {"name": "Install pinned version of integrations (Windows)", "win_command": "\"{{ datadog_agent_binary_path }}\" integration install {{ third_party }} {{ item.key }}=={{ item.value.version }}", "become": true, "become_user": "{{ integration_command_user }}", "loop": "{{ datadog_integration|dict2items }}", "when": "item.value.action == \"install\" and ansible_facts.os_family == \"Windows\""}, "module_options": {"third_party": "{% if 'third_party' in item.value and item.value.third_party | bool %}--third-party{% endif %}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "facts-ansible10.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "ansible.builtin.setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible10.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "ansible.builtin.setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "parse-version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Parse Agent version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Parse Agent version", "vars": {"regexp": "(?:(?P<epoch>[0-9]+):)?(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<bugfix>[0-9]+)(?P<suffix>(?:~|-)[^0-9\\s-]+[^-\\s]*)?(?:-(?P<release>[0-9]+))?"}}, "module_options": {"agent_version": "{{ datadog_agent_version | regex_search(regexp, '\\g<epoch>', '\\g<major>', '\\g<minor>', '\\g<bugfix>', '\\g<suffix>', '\\g<release>') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set version vars", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set version vars"}, "module_options": {"datadog_epoch": "{{ agent_version.0 | default('', true) | string }}", "datadog_major": "{{ agent_version.1 | default('', true) | string }}", "datadog_minor": "{{ agent_version.2 | default('', true) | string }}", "datadog_bugfix": "{{ agent_version.3 | default('', true) | string }}", "datadog_suffix": "{{ agent_version.4 | default('', true) | string }}", "datadog_release": "{{ agent_version.5 | default('', true) | string }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fill empty version epoch with default", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version epoch with default", "when": "datadog_epoch | length == 0"}, "module_options": {"datadog_epoch": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fill empty version release with default", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Fill empty version release with default", "when": "datadog_release | length == 0"}, "module_options": {"datadog_release": "1"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Stop play if datadog_agent_version and datadog_agent_major_version are not compatible", "when": "datadog_agent_major_version | length > 0 and datadog_major != datadog_agent_major_version"}, "module_options": {"msg": "The provided major version {{ datadog_agent_major_version }} is not compatible with the version {{ datadog_major }} deduced from datadog_agent_version ({{ datadog_agent_version }}). Aborting play."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set datadog_agent_major_version to deduced value from datadog_agent_version", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set datadog_agent_major_version to deduced value from datadog_agent_version"}, "module_options": {"datadog_agent_major_version": "{{ datadog_major }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set helper variables", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set helper variables"}, "module_options": {"datadog_agent_linux_version": "{{ datadog_epoch }}:{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}-{{ datadog_release }}", "datadog_rpm_version_finding_cmd": "rpm -q --qf '%{EPOCH}:%{VERSION}-%{RELEASE}' {{ datadog_agent_flavor }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set OS-specific versions", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set OS-specific versions"}, "module_options": {"datadog_agent_debian_version": "{{ datadog_agent_linux_version }}", "datadog_agent_redhat_version": "{{ datadog_agent_linux_version }}", "datadog_agent_suse_version": "{{ datadog_agent_linux_version }}", "datadog_agent_windows_version": "{{ datadog_major }}.{{ datadog_minor }}.{{ datadog_bugfix }}{{ datadog_suffix }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Construct commands to find Agent version", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Construct commands to find Agent version"}, "module_options": {"datadog_version_finding_cmds": {"Debian": "dpkg -s {{ datadog_agent_flavor }} | grep '^Version:' | awk '{print $2}'", "RedHat": "{{ datadog_rpm_version_finding_cmd }}", "Rocky": "{{ datadog_rpm_version_finding_cmd }}", "AlmaLinux": "{{ datadog_rpm_version_finding_cmd }}", "Suse": "{{ datadog_rpm_version_finding_cmd }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create OS-specific version dict", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Create OS-specific version dict"}, "module_options": {"datadog_agent_os2version": {"Debian": "{{ datadog_agent_debian_version }}", "RedHat": "{{ datadog_agent_redhat_version }}", "Rocky": "{{ datadog_agent_redhat_version }}", "AlmaLinux": "{{ datadog_agent_redhat_version }}", "Suse": "{{ datadog_agent_suse_version }}", "Windows": "{{ datadog_agent_windows_version }}"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Linux Agent version", "module": "shell", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Get Linux Agent version", "register": "datadog_version_check_linux", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": "{{ datadog_version_finding_cmds[ansible_facts.os_family] }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Windows Agent version tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Include Windows Agent version tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "parse-version-windows.yml", "executable": "parse-version-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Linux)", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Linux)", "when": "ansible_facts.system is defined and ansible_facts.system == \"Linux\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_linux.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set skip install flag if version already installed (Windows)", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version.yml", "options": {"name": "Set skip install flag if version already installed (Windows)", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": {"datadog_skip_install": "{{ datadog_version_check_win.stdout | trim == datadog_agent_os2version[ansible_facts.os_family] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-suse.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_zypper_repo_gpgcheck": "{{ datadog_zypper_repo_gpgcheck if datadog_zypper_repo_gpgcheck != '' else (\n  'yes' if datadog_zypper_repo == '' and datadog_agent_major_version|int != 5 else 'no'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if current RPM key already exists", "module": "stat", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if current RPM key already exists", "register": "ddkeycurrent"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_CURRENT.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key (SLES11)", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key (SLES11)", "when": "not ddkeycurrent.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download current RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if RPM key already exists", "module": "stat", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if RPM key already exists", "register": "ddkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download RPM key (SLES11)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key (SLES11)", "when": "not ddkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download RPM key", "module": "get_url", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download RPM key", "when": "datadog_agent_major_version|int < 7 and ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey }}", "dest": "/tmp/DATADOG_RPM_KEY.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import RPM key", "module": "rpm_key", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import RPM key", "when": "datadog_agent_major_version|int < 7 and not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if E09422B3 key (Expires 2022) RPM key already exists", "register": "ddnewkey"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "module": "get_url", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key (SLES11)", "when": "not ddnewkey.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download E09422B3 key (Expires 2022) RPM key", "module": "get_url", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download E09422B3 key (Expires 2022) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import E09422B3 key (Expires 2022) RPM key", "module": "rpm_key", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import E09422B3 key (Expires 2022) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "module": "stat", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Stat if 20200908 key (Expires 2024) RPM key already exists", "register": "ddnewkey_20200908"}, "module_options": {"path": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "module": "get_url", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key (SLES11)", "when": "not  ddnewkey_20200908.stat.exists"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download 20200908 key (Expires 2024) RPM key", "module": "get_url", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Download 20200908 key (Expires 2024) RPM key", "when": "ansible_distribution_version|int >= 12"}, "module_options": {"url": "{{ datadog_zypper_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_zypper_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import 20200908 key (Expires 2024) RPM key", "module": "rpm_key", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Import 20200908 key (Expires 2024) RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install DataDog zypper repo", "module": "template", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "Install DataDog zypper repo", "register": "datadog_zypper_repo"}, "module_options": {"src": "zypper.repo.j2", "dest": "/etc/zypp/repos.d/datadog.repo", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "refresh Datadog zypper_repos", "module": "command", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"name": "refresh Datadog zypper_repos", "when": "datadog_zypper_repo.changed and not ansible_check_mode", "args": {"warn": false}}, "module_options": "zypper refresh datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is defined"}, "module_options": "pkg-suse/install-pinned.yml", "executable": "pkg-suse/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse.yml", "options": {"when": "datadog_agent_suse_version is not defined"}, "module_options": "pkg-suse/install-latest.yml", "executable": "pkg-suse/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "win_agent_version.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check agent pinned version on Windows", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "Check agent pinned version on Windows", "when": "datadog_agent_version == \"6.14.0\" or datadog_agent_version == \"6.14.1\""}, "module_options": {"msg": "The Agent versions you pinned (6.14.0 or 6.14.1) have been blacklisted, please use 6.14.2 instead. See https://dtdg.co/win-614-fix."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "set agent download filename to a specific version", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_version.yml", "options": {"name": "set agent download filename to a specific version"}, "module_options": {"dd_download_url": "{{ datadog_windows_versioned_url }}-{{ datadog_agent_windows_version }}.msi"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-debian.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install apt-transport-https", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt-transport-https", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "apt-transport-https", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install gnupg", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install gnupg", "when": "not ansible_check_mode"}, "module_options": {"update_cache": true, "name": "gnupg", "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if {{ datadog_apt_usr_share_keyring }} exists with correct mode", "register": "apt_keyring_file"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_usr_share_keyring }} exists", "when": "not ansible_check_mode and (not apt_keyring_file.stat.exists or not apt_keyring_file.stat.mode == \"0644\")"}, "module_options": {"path": "{{ datadog_apt_usr_share_keyring }}", "owner": "root", "group": "root", "mode": "0644", "state": "touch"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt keys from default URLs", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from default URLs", "with_items": "{{ datadog_apt_default_keys }}", "when": "datadog_apt_key_url_new is not defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install apt keys from custom URL", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install apt keys from custom URL", "with_items": [{"key": "A2923DFF56EDA6E76E55E492D3A80E30382E94DE", "value": "{{ datadog_apt_key_url_new }}"}, {"key": "D75CEA17048B9ACBF186794B32637D44F14F620E", "value": "{{ datadog_apt_key_url_new }}"}], "when": "datadog_apt_key_url_new is defined and not ansible_check_mode"}, "module_options": "_apt-key-import.yml", "executable": "_apt-key-import.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "module": "copy", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure {{ datadog_apt_trusted_d_keyring }} exists with same contents as {{ datadog_apt_usr_share_keyring }} for older distro versions", "when": "((ansible_distribution == 'Debian' and ansible_distribution_major_version|int < 9) or (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 16)) and not ansible_check_mode"}, "module_options": {"src": "{{ datadog_apt_usr_share_keyring }}", "dest": "{{ datadog_apt_trusted_d_keyring }}", "mode": "0644", "remote_src": true}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog non-https repositories and repositories not using signed-by option are deprecated", "with_items": ["deb http://apt.datadoghq.com/ stable main", "deb http://apt.datadoghq.com/ stable 6", "deb http://apt.datadoghq.com/ stable 7", "deb https://apt.datadoghq.com/ stable main", "deb https://apt.datadoghq.com/ stable 6", "deb https://apt.datadoghq.com/ stable 7"], "when": "not ansible_check_mode"}, "module_options": {"repo": "{{ item }}", "state": "absent", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Ensure Datadog repository is up-to-date", "when": "(not ansible_check_mode)", "with_dict": {"5": "{{ datadog_agent5_apt_repo }}", "6": "{{ datadog_agent6_apt_repo }}", "7": "{{ datadog_agent7_apt_repo }}"}}, "module_options": {"filename": "ansible_datadog_{{ item.key }}", "repo": "{{ item.value }}", "state": "{% if item.key == datadog_agent_major_version|int and datadog_apt_repo | length == 0 %}present{% else %}absent{% endif %}", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Initialize custom repo file deletion flag to False", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Initialize custom repo file deletion flag to False"}, "module_options": {"datadog_remove_custom_repo_file": "False"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if custom repository file exists", "module": "stat", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Check if custom repository file exists", "register": "datadog_custom_repo_file"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fetch custom repository file", "module": "slurp", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Fetch custom repository file", "register": "datadog_custom_repo_file_contents", "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"src": "/etc/apt/sources.list.d/ansible_datadog_custom.list"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "Flag custom repository file for deletion if different from current repository config", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Flag custom repository file for deletion if different from current repository config", "vars": {"datadog_repo_file_contents": "{{ datadog_custom_repo_file_contents['content'] | b64decode | trim }}"}, "when": "datadog_custom_repo_file.stat.exists"}, "module_options": {"datadog_remove_custom_repo_file": "{{ datadog_repo_file_contents != datadog_apt_repo }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Custom) Remove Datadog custom repository file when not set or updated", "module": "file", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Remove Datadog custom repository file when not set or updated", "when": "(datadog_apt_repo | length == 0) or datadog_remove_custom_repo_file and (not ansible_check_mode)"}, "module_options": {"path": "/etc/apt/sources.list.d/ansible_datadog_custom.list", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "(Custom) Ensure Datadog repository is up-to-date", "module": "apt_repository", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "(Custom) Ensure Datadog repository is up-to-date", "when": "(datadog_apt_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"filename": "ansible_datadog_custom", "repo": "{{ datadog_apt_repo }}", "state": "present", "update_cache": true}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is defined"}, "module_options": "pkg-debian/install-pinned.yml", "executable": "pkg-debian/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"when": "datadog_agent_debian_version is not defined"}, "module_options": "pkg-debian/install-latest.yml", "executable": "pkg-debian/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest datadog-signing-keys package", "module": "apt", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian.yml", "options": {"name": "Install latest datadog-signing-keys package", "register": "datadog_signing_keys_install", "when": "not ansible_check_mode"}, "module_options": {"name": "datadog-signing-keys", "state": "latest"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "sanitize-checks.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "tasks": [{"py/object": "struct4.Task", "name": "Defend against defined but null datadog_checks variable", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Defend against defined but null datadog_checks variable"}, "module_options": {"datadog_checks": "{{ datadog_checks | default({}, true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Resolve datadog_tracked_checks"}, "module_options": {"datadog_tracked_checks": "{{ datadog_checks | list + datadog_additional_checks | default([], true) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check that datadog_checks is a mapping", "module": "assert", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/sanitize-checks.yml", "options": {"name": "Check that datadog_checks is a mapping"}, "module_options": {"that": ["datadog_checks is mapping"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "agent-linux.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Populate service facts", "module": "service_facts", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Populate service facts"}, "module_options": null, "executable": "service_facts", "executable_type": "Module", "fqcn": "ansible.builtin.service_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set before 6/7.24.1 flag", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.24.1 flag"}, "module_options": {"datadog_before_7241": "{{ datadog_major is defined and datadog_minor is defined and datadog_bugfix is defined and datadog_major | int < 8 and (datadog_minor | int < 24 or (datadog_minor | int == 24 and datadog_bugfix | int < 1)) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set before 6/7.18.0 flag", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set before 6/7.18.0 flag"}, "module_options": {"datadog_before_7180": "{{ datadog_major is defined and datadog_minor is defined and datadog_major | int < 8 and datadog_minor | int < 18 }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add \"{{ datadog_user }}\" user to additional groups", "module": "user", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Add \"{{ datadog_user }}\" user to additional groups", "when": "datadog_additional_groups | default([], true) | length > 0", "notify": "restart datadog-agent"}, "module_options": "name=\"{{ datadog_user }}\" groups=\"{{ datadog_additional_groups }}\" append=yes", "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create Datadog agent config directory", "module": "file", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create Datadog agent config directory", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create main Datadog agent configuration file", "module": "template", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create main Datadog agent configuration file", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "datadog.yaml.j2", "dest": "/etc/datadog-agent/datadog.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Register all checks directories present in datadog", "module": "find", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Register all checks directories present in datadog", "register": "datadog_conf_directories", "when": "datadog_manage_config and (datadog_disable_untracked_checks or datadog_disable_default_checks)"}, "module_options": {"paths": "/etc/datadog-agent/conf.d/", "patterns": ["*.d"], "file_type": "directory"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete checks not present in datadog_tracked_checks", "module": "file", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete checks not present in datadog_tracked_checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_untracked_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete all default checks", "module": "file", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Delete all default checks", "loop": "{{ datadog_conf_directories.files | map(attribute='path') | list | map('basename') | list | map('regex_replace', '^(.*).d$', '\\1') | list }}", "when": "datadog_manage_config and datadog_disable_default_checks and item not in datadog_tracked_checks", "notify": "restart datadog-agent"}, "module_options": {"path": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml.default", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure configuration directories are present for each Datadog check", "module": "file", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure configuration directories are present for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.d", "state": "directory", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a configuration file for each Datadog check", "module": "template", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create a configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"src": "checks.yaml.j2", "dest": "/etc/datadog-agent/conf.d/{{ item }}.d/conf.yaml", "mode": 416, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old configuration file for each Datadog check", "module": "file", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Remove old configuration file for each Datadog check", "with_items": "{{ datadog_checks|list }}", "when": "datadog_manage_config", "notify": "restart datadog-agent"}, "module_options": {"dest": "/etc/datadog-agent/conf.d/{{ item }}.yaml", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create custom check file for each custom check", "module": "copy", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create custom check file for each custom check", "with_items": "{{ datadog_custom_checks|list }}", "notify": "restart datadog-agent"}, "module_options": {"src": "{{ datadog_custom_checks[item] }}", "dest": "/etc/datadog-agent/checks.d/{{ item }}.py", "mode": 493, "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create system-probe configuration file", "module": "template", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create system-probe configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "system-probe.yaml.j2", "dest": "/etc/datadog-agent/system-probe.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe installed", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe installed", "when": "not datadog_skip_running_check"}, "module_options": {"datadog_sysprobe_installed": "{{ ansible_facts.services['datadog-agent-sysprobe'] is defined or ansible_facts.services['datadog-agent-sysprobe.service'] is defined }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe enabled (before 6/7.24.1)", "module": "set_fact", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (before 6/7.24.1)", "when": "not datadog_skip_running_check and datadog_before_7241"}, "module_options": {"datadog_sysprobe_enabled": "{{ system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled'] and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set system probe enabled (since 6/7.24.1)", "module": "set_fact", "index": 16, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Set system probe enabled (since 6/7.24.1)", "when": "not datadog_skip_running_check and (not datadog_before_7241)"}, "module_options": {"datadog_sysprobe_enabled": "{{ ((system_probe_config is defined and 'enabled' in (system_probe_config | default({}, true)) and system_probe_config['enabled']) or (network_config is defined and 'enabled' in (network_config | default({}, true)) and network_config['enabled'])) and datadog_sysprobe_installed }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent is running", "module": "service", "index": 17, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent is running", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode"}, "module_options": {"name": "datadog-agent", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "module": "service", "index": 18, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is running if enabled and installed", "when": "not datadog_skip_running_check and datadog_enabled and not ansible_check_mode and datadog_sysprobe_enabled"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "module": "service", "index": 19, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent, datadog-agent-process and datadog-agent-trace are not running", "when": "not datadog_skip_running_check and not datadog_enabled", "with_list": ["datadog-agent", "datadog-agent-process", "datadog-agent-trace"]}, "module_options": {"name": "{{ item }}", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "module": "service", "index": 20, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-sysprobe is stopped if disabled or not installed (before 6/7.18.0)", "when": "not datadog_skip_running_check and (not datadog_enabled or not datadog_sysprobe_enabled) and datadog_before_7180 and datadog_sysprobe_installed"}, "module_options": {"name": "datadog-agent-sysprobe", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure datadog-agent-security is not running", "module": "service", "index": 21, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Ensure datadog-agent-security is not running", "when": "not datadog_skip_running_check and not datadog_enabled", "ignore_errors": true}, "module_options": {"name": "datadog-agent-security", "state": "stopped", "enabled": false}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create security-agent configuration file", "module": "template", "index": 22, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create security-agent configuration file", "when": "datadog_manage_config", "notify": "{% if datadog_before_7180 %}restart datadog-agent-sysprobe{% else %}restart datadog-agent{% endif %}"}, "module_options": {"src": "security-agent.yaml.j2", "dest": "/etc/datadog-agent/security-agent.yaml", "mode": 416, "owner": "root", "group": "{{ datadog_group }}"}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create installation information file", "module": "template", "index": 23, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/agent-linux.yml", "options": {"name": "Create installation information file"}, "module_options": {"src": "install_info.j2", "dest": "/etc/datadog-agent/install_info", "owner": "{{ datadog_user }}", "group": "{{ datadog_group }}", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "facts-ansible9.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml", "tasks": [{"py/object": "struct4.Task", "name": "Gather Ansible Facts", "module": "setup", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/facts-ansible9.yml", "options": {"name": "Gather Ansible Facts"}, "module_options": null, "executable": "setup", "executable_type": "Module", "fqcn": "ansible.builtin.setup", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "pkg-redhat.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Fail early if Python 3 is used on CentOS / RHEL < 8 with old Ansible", "when": "(not datadog_ignore_old_centos_python3_error) and (ansible_version.full is version(\"2.11\", operator=\"lt\", strict=True)) and (ansible_pkg_mgr == \"yum\") and (ansible_facts.python.version.major | int >= 3)"}, "module_options": {"msg": "The installation of the Agent on RedHat family systems using yum is not compatible with Python 3 with older Ansible versions. To run this role, use a Python 2 interpreter on hosts running CentOS / RHEL < 8 or upgrade Ansible to version 2.11+"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Find out whether to set repo_gpgcheck or not", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Find out whether to set repo_gpgcheck or not"}, "module_options": {"do_yum_repo_gpgcheck": "{{ datadog_yum_repo_gpgcheck if datadog_yum_repo_gpgcheck != '' else (\n  'no' if (\n    ansible_facts.distribution_version.startswith('8.1.') or ansible_facts.distribution_version == '8.1' or\n    datadog_yum_repo != ''\n  ) else 'yes'\n) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download current RPM key", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download current RPM key"}, "module_options": {"url": "{{ datadog_yum_gpgkey_current }}", "dest": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "force": true}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import current RPM key", "module": "rpm_key", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import current RPM key", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_CURRENT.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2022)", "module": "get_url", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2022)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_e09422b3 }}", "dest": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "checksum": "sha256:{{ datadog_yum_gpgkey_e09422b3_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2022)", "module": "rpm_key", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2022)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_E09422B3.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download new RPM key (Expires in 2024)", "module": "get_url", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Download new RPM key (Expires in 2024)"}, "module_options": {"url": "{{ datadog_yum_gpgkey_20200908 }}", "dest": "/tmp/DATADOG_RPM_KEY_20200908.public", "checksum": "sha256:{{ datadog_yum_gpgkey_20200908_sha256sum }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Import new RPM key (Expires in 2024)", "module": "rpm_key", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Import new RPM key (Expires in 2024)", "when": "not ansible_check_mode"}, "module_options": {"key": "/tmp/DATADOG_RPM_KEY_20200908.public", "state": "present"}, "executable": "rpm_key", "executable_type": "Module", "fqcn": "ansible.builtin.rpm_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 5 yum repo", "module": "yum_repository", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 5 yum repo", "register": "repofile5", "when": "(datadog_agent_major_version|int == 5) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent5_yum_repo }}", "enabled": true, "repo_gpgcheck": false, "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 6 yum repo", "module": "yum_repository", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 6 yum repo", "register": "repofile6", "when": "(datadog_agent_major_version|int == 6) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent6_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Agent 7 yum repo", "module": "yum_repository", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Agent 7 yum repo", "register": "repofile7", "when": "(datadog_agent_major_version|int == 7) and (datadog_yum_repo | length == 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_agent7_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install Datadog Custom yum repo", "module": "yum_repository", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Install Datadog Custom yum repo", "register": "repofilecustom", "when": "(datadog_yum_repo | length > 0) and (not ansible_check_mode)"}, "module_options": {"name": "datadog", "description": "Datadog, Inc.", "baseurl": "{{ datadog_yum_repo }}", "enabled": true, "repo_gpgcheck": "{{ do_yum_repo_gpgcheck }}", "gpgcheck": "{{ datadog_yum_gpgcheck }}", "gpgkey": ["{{ datadog_yum_gpgkey_current }}", "{{ datadog_yum_gpgkey_20200908 }}", "{{ datadog_yum_gpgkey_e09422b3 }}", "{{ datadog_yum_gpgkey }}"]}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clean repo metadata if repo changed", "module": "command", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Clean repo metadata if repo changed", "ignore_errors": true, "args": {"warn": false}, "when": "repofile5.changed or repofile6.changed or repofile7.changed or repofilecustom.changed"}, "module_options": "yum clean metadata --disablerepo=\"*\" --enablerepo=datadog", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove old yum repo files", "module": "yum_repository", "index": 13, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"name": "Remove old yum repo files", "with_items": [5, 6, 7, "custom"]}, "module_options": {"name": "ansible_datadog_{{ item }}", "state": "absent"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is defined"}, "module_options": "pkg-redhat/install-pinned.yml", "executable": "pkg-redhat/install-pinned.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat.yml", "options": {"when": "datadog_agent_redhat_version is not defined"}, "module_options": "pkg-redhat/install-latest.yml", "executable": "pkg-redhat/install-latest.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "win_agent_latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "(Custom) Set agent download filename to latest", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "(Custom) Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length > 0"}, "module_options": {"dd_download_url": "{{ datadog_windows_download_url }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set agent download filename to latest", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/win_agent_latest.yml", "options": {"name": "Set agent download filename to latest", "when": "datadog_windows_download_url | default('', true) | length == 0"}, "module_options": {"dd_download_url": "{% if datadog_agent_major_version|int == 7 %}{{ datadog_windows_agent7_latest_url }} {% else %}{{ datadog_windows_agent6_latest_url }}{% endif %}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "parse-version-windows.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Get Windows Agent version", "module": "win_shell", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/parse-version-windows.yml", "options": {"name": "Get Windows Agent version", "register": "datadog_version_check_win", "changed_when": false, "failed_when": false, "check_mode": false, "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "$product_name = \"Datadog Agent\"\n$query = \"Select Name,IdentifyingNumber,InstallDate,InstallLocation,ProductID,Version FROM Win32_Product where Name like '$product_name%'\"\n$installs = Get-WmiObject -query $query\n\nif (!$installs -or ($installs.Count -eq 0) -or ($installs.Count -gt 1)) {\n  Write-Host \"\"\n} else {\n  $ddmaj, $ddmin, $ddpatch, $ddbuild = $installs.Version.split(\".\")\n  Write-Host \"$($ddmaj).$($ddmin).$($ddpatch)\"\n}\n", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible >= 2.10", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible >= 2.10", "when": "ansible_version.major >= 2 and ansible_version.minor >= 10"}, "module_options": "facts-ansible10.yml", "executable": "facts-ansible10.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include Gather Ansible Facts task on Ansible < 2.10", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Include Gather Ansible Facts task on Ansible < 2.10", "when": "ansible_version.major == 2 and ansible_version.minor < 10"}, "module_options": "facts-ansible9.yml", "executable": "facts-ansible9.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if OS is supported", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Check if OS is supported"}, "module_options": "os-check.yml", "executable": "os-check.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Resolve datadog_tracked_checks later to defend against variable presidence issues arising from dynamically included null datadog_checks"}, "module_options": "sanitize-checks.yml", "executable": "sanitize-checks.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set Facts for Datadog Agent Major Version", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Set Facts for Datadog Agent Major Version"}, "module_options": "set-parse-version.yml", "executable": "set-parse-version.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian Install Tasks", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Debian Install Tasks", "when": "ansible_facts.os_family == \"Debian\" and not datadog_skip_install"}, "module_options": "pkg-debian.yml", "executable": "pkg-debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat Install Tasks", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "RedHat Install Tasks", "when": "ansible_facts.os_family in [\"RedHat\", \"Rocky\", \"AlmaLinux\"] and not datadog_skip_install"}, "module_options": "pkg-redhat.yml", "executable": "pkg-redhat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse Install Tasks", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Suse Install Tasks", "when": "ansible_facts.os_family == \"Suse\" and not datadog_skip_install"}, "module_options": "pkg-suse.yml", "executable": "pkg-suse.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows Install Tasks", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Install Tasks", "when": "ansible_facts.os_family == \"Windows\""}, "module_options": "pkg-windows.yml", "executable": "pkg-windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux Configuration Tasks (Agent 5)", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks (Agent 5)", "when": "datadog_agent_major_version | int == 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent5-linux.yml", "executable": "agent5-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux Configuration Tasks", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Linux Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family != \"Windows\""}, "module_options": "agent-linux.yml", "executable": "agent-linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows Configuration Tasks", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Windows Configuration Tasks", "when": "datadog_agent_major_version | int > 5 and ansible_facts.os_family == \"Windows\""}, "module_options": "agent-win.yml", "executable": "agent-win.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Integrations Tasks", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/main.yml", "options": {"name": "Integrations Tasks", "when": "datadog_integration is defined"}, "module_options": "integration.yml", "executable": "integration.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}={{ datadog_agent_debian_version }}", "state": "present", "force": "{{ datadog_agent_allow_downgrade }}", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install latest datadog-agent package", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-debian/install-latest.yml", "options": {"name": "Install latest datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "state": "latest", "update_cache": true, "cache_valid_time": "{{ datadog_apt_cache_valid_time }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent={{ datadog_agent_suse_version }}", "state": "present", "oldpackage": "{{ datadog_agent_allow_downgrade }}"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Datadog agent is installed", "module": "zypper", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-suse/install-latest.yml", "options": {"name": "Ensure Datadog agent is installed", "register": "datadog_agent_install", "when": "not ansible_check_mode", "notify": "restart datadog-agent"}, "module_options": {"name": "datadog-agent", "state": "latest"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-pinned.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install pinned datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-pinned.yml", "options": {"name": "Install pinned datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}-{{ datadog_agent_redhat_version }}.{{ ansible_facts.architecture }}", "update_cache": true, "state": "present", "allow_downgrade": "{{ datadog_agent_allow_downgrade }}"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-latest.yml", "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install latest datadog-agent package (dnf)", "module": "dnf", "index": 0, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (dnf)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"dnf\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "dnf", "executable_type": "Module", "fqcn": "ansible.builtin.dnf", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install latest datadog-agent package (yum)", "module": "yum", "index": 1, "defined_in": "./role-test/testdata/DataDog-datadog/DataDog.datadog/tasks/pkg-redhat/install-latest.yml", "options": {"name": "Install latest datadog-agent package (yum)", "register": "datadog_agent_install", "when": "not ansible_check_mode and ansible_pkg_mgr == \"yum\"", "notify": "restart datadog-agent"}, "module_options": {"name": "{{ datadog_agent_flavor }}", "update_cache": true, "state": "latest"}, "executable": "yum", "executable_type": "Module", "fqcn": "ansible.builtin.yum", "annotations": {}}], "role": "DataDog.datadog", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}