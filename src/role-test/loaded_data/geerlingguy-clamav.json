{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-clamav", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.clamav", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav", "fqcn": "geerlingguy.clamav", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "setup-vars.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Define clamav_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_daemon.", "when": "clamav_daemon is not defined"}, "module_options": {"clamav_daemon": "{{ __clamav_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define clamav_freshclam_daemon.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_freshclam_daemon.", "when": "clamav_freshclam_daemon is not defined"}, "module_options": {"clamav_freshclam_daemon": "{{ __clamav_freshclam_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define clamav_packages.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_packages.", "when": "clamav_packages is not defined"}, "module_options": {"clamav_packages": "{{ __clamav_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-Specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Include OS-Specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {}, "module_options": "setup-vars.yml", "executable": "setup-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV packages are installed.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV packages are installed.", "with_items": "{{ clamav_packages }}", "register": "clamav_packages_install"}, "module_options": "name={{ item }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run freshclam after ClamAV packages change.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Run freshclam after ClamAV packages change.", "when": "clamav_packages_install.changed", "register": "freshclam_result", "notify": "restart clamav daemon", "failed_when": ["freshclam_result is failed", "freshclam_result.stderr.find('locked by another process') != -1"], "tags": ["skip_ansible_lint"]}, "module_options": "freshclam", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change configuration for the ClamAV daemon.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Change configuration for the ClamAV daemon.", "with_items": "{{ clamav_daemon_configuration_changes }}"}, "module_options": {"path": "{{ clamav_daemon_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line | default('') }}", "state": "{{ item.state | default('present') }}", "mode": 420, "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV daemon is running (if configured).", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_daemon }}", "state": "{{ clamav_daemon_state }}", "enabled": "{{ clamav_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV freshclam daemon is running (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV freshclam daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_freshclam_daemon }}", "state": "{{ clamav_freshclam_daemon_state }}", "enabled": "{{ clamav_freshclam_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Freshclam service is available.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Ensure Freshclam service is available.", "register": "freshclam_service_template"}, "module_options": {"src": "clamd-freshclam.service.j2", "dest": "/lib/systemd/system/clamd-freshclam.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd after adding service.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Reload systemd after adding service.", "when": "freshclam_service_template.changed"}, "module_options": {"state": "stopped", "daemon_reload": true, "name": "{{ clamav_freshclam_daemon }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Define clamav_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_daemon.", "when": "clamav_daemon is not defined"}, "module_options": {"clamav_daemon": "{{ __clamav_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Define clamav_freshclam_daemon.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_freshclam_daemon.", "when": "clamav_freshclam_daemon is not defined"}, "module_options": {"clamav_freshclam_daemon": "{{ __clamav_freshclam_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Define clamav_packages.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_packages.", "when": "clamav_packages is not defined"}, "module_options": {"clamav_packages": "{{ __clamav_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-Specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Include OS-Specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {}, "module_options": "setup-vars.yml", "executable": "setup-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure ClamAV packages are installed.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV packages are installed.", "with_items": "{{ clamav_packages }}", "register": "clamav_packages_install"}, "module_options": "name={{ item }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Run freshclam after ClamAV packages change.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Run freshclam after ClamAV packages change.", "when": "clamav_packages_install.changed", "register": "freshclam_result", "notify": "restart clamav daemon", "failed_when": ["freshclam_result is failed", "freshclam_result.stderr.find('locked by another process') != -1"], "tags": ["skip_ansible_lint"]}, "module_options": "freshclam", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Change configuration for the ClamAV daemon.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Change configuration for the ClamAV daemon.", "with_items": "{{ clamav_daemon_configuration_changes }}"}, "module_options": {"path": "{{ clamav_daemon_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line | default('') }}", "state": "{{ item.state | default('present') }}", "mode": 420, "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Ensure ClamAV daemon is running (if configured).", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_daemon }}", "state": "{{ clamav_daemon_state }}", "enabled": "{{ clamav_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure ClamAV freshclam daemon is running (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV freshclam daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_freshclam_daemon }}", "state": "{{ clamav_freshclam_daemon_state }}", "enabled": "{{ clamav_freshclam_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure Freshclam service is available.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Ensure Freshclam service is available.", "register": "freshclam_service_template"}, "module_options": {"src": "clamd-freshclam.service.j2", "dest": "/lib/systemd/system/clamd-freshclam.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Reload systemd after adding service.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Reload systemd after adding service.", "when": "freshclam_service_template.changed"}, "module_options": {"state": "stopped", "daemon_reload": true, "name": "{{ clamav_freshclam_daemon }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml": {"py/object": "struct4.TaskFile", "name": "setup-vars.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Define clamav_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_daemon.", "when": "clamav_daemon is not defined"}, "module_options": {"clamav_daemon": "{{ __clamav_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define clamav_freshclam_daemon.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_freshclam_daemon.", "when": "clamav_freshclam_daemon is not defined"}, "module_options": {"clamav_freshclam_daemon": "{{ __clamav_freshclam_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define clamav_packages.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_packages.", "when": "clamav_packages is not defined"}, "module_options": {"clamav_packages": "{{ __clamav_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-Specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Include OS-Specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {}, "module_options": "setup-vars.yml", "executable": "setup-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV packages are installed.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV packages are installed.", "with_items": "{{ clamav_packages }}", "register": "clamav_packages_install"}, "module_options": "name={{ item }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run freshclam after ClamAV packages change.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Run freshclam after ClamAV packages change.", "when": "clamav_packages_install.changed", "register": "freshclam_result", "notify": "restart clamav daemon", "failed_when": ["freshclam_result is failed", "freshclam_result.stderr.find('locked by another process') != -1"], "tags": ["skip_ansible_lint"]}, "module_options": "freshclam", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change configuration for the ClamAV daemon.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Change configuration for the ClamAV daemon.", "with_items": "{{ clamav_daemon_configuration_changes }}"}, "module_options": {"path": "{{ clamav_daemon_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line | default('') }}", "state": "{{ item.state | default('present') }}", "mode": 420, "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV daemon is running (if configured).", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_daemon }}", "state": "{{ clamav_daemon_state }}", "enabled": "{{ clamav_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV freshclam daemon is running (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV freshclam daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_freshclam_daemon }}", "state": "{{ clamav_freshclam_daemon_state }}", "enabled": "{{ clamav_freshclam_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Freshclam service is available.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Ensure Freshclam service is available.", "register": "freshclam_service_template"}, "module_options": {"src": "clamd-freshclam.service.j2", "dest": "/lib/systemd/system/clamd-freshclam.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd after adding service.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Reload systemd after adding service.", "when": "freshclam_service_template.changed"}, "module_options": {"state": "stopped", "daemon_reload": true, "name": "{{ clamav_freshclam_daemon }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.clamav": {"py/object": "struct4.Role", "name": "geerlingguy.clamav", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav", "fqcn": "geerlingguy.clamav", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "setup-vars.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "tasks": [{"py/object": "struct4.Task", "name": "Define clamav_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_daemon.", "when": "clamav_daemon is not defined"}, "module_options": {"clamav_daemon": "{{ __clamav_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define clamav_freshclam_daemon.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_freshclam_daemon.", "when": "clamav_freshclam_daemon is not defined"}, "module_options": {"clamav_freshclam_daemon": "{{ __clamav_freshclam_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define clamav_packages.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-vars.yml", "options": {"name": "Define clamav_packages.", "when": "clamav_packages is not defined"}, "module_options": {"clamav_packages": "{{ __clamav_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-Specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Include OS-Specific variables"}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {}, "module_options": "setup-vars.yml", "executable": "setup-vars.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV packages are installed.", "module": "package", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV packages are installed.", "with_items": "{{ clamav_packages }}", "register": "clamav_packages_install"}, "module_options": "name={{ item }} state=present", "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run freshclam after ClamAV packages change.", "module": "command", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Run freshclam after ClamAV packages change.", "when": "clamav_packages_install.changed", "register": "freshclam_result", "notify": "restart clamav daemon", "failed_when": ["freshclam_result is failed", "freshclam_result.stderr.find('locked by another process') != -1"], "tags": ["skip_ansible_lint"]}, "module_options": "freshclam", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"when": "ansible_os_family == 'RedHat'"}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Change configuration for the ClamAV daemon.", "module": "lineinfile", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Change configuration for the ClamAV daemon.", "with_items": "{{ clamav_daemon_configuration_changes }}"}, "module_options": {"path": "{{ clamav_daemon_config_path }}", "regexp": "{{ item.regexp }}", "line": "{{ item.line | default('') }}", "state": "{{ item.state | default('present') }}", "mode": 420, "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV daemon is running (if configured).", "module": "service", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_daemon }}", "state": "{{ clamav_daemon_state }}", "enabled": "{{ clamav_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure ClamAV freshclam daemon is running (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/main.yml", "options": {"name": "Ensure ClamAV freshclam daemon is running (if configured).", "when": "not ansible_check_mode"}, "module_options": {"name": "{{ clamav_freshclam_daemon }}", "state": "{{ clamav_freshclam_daemon_state }}", "enabled": "{{ clamav_freshclam_daemon_enabled }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure Freshclam service is available.", "module": "template", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Ensure Freshclam service is available.", "register": "freshclam_service_template"}, "module_options": {"src": "clamd-freshclam.service.j2", "dest": "/lib/systemd/system/clamd-freshclam.service", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Reload systemd after adding service.", "module": "systemd", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-clamav/geerlingguy.clamav/tasks/setup-RedHat.yml", "options": {"name": "Reload systemd after adding service.", "when": "freshclam_service_template.changed"}, "module_options": {"state": "stopped", "daemon_reload": true, "name": "{{ clamav_freshclam_daemon }}"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "geerlingguy.clamav", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}