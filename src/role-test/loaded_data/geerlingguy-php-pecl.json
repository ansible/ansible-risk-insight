{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/geerlingguy-php-pecl", "installed_roles": [{"py/object": "struct4.Role", "name": "geerlingguy.php", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php", "fqcn": "geerlingguy.php", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "configure-opcache.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existing OpCache config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Check for existing OpCache config files.", "register": "php_installed_opcache_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "zend_extension(\\s+)?=(\\s+)?opcache\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove any non-role-supplied OpCache config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove any non-role-supplied OpCache config files.", "when": "php_opcache_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_opcache_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure OpCache config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Ensure OpCache config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"src": "opcache.ini.j2", "dest": "{{ item }}/{{ php_opcache_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove OpCache config file if OpCache is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove OpCache config file if OpCache is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-from-source.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": ["autoconf", "automake", "libtool", "bison", "make", "re2c", "sqlite-devel", "oniguruma-devel", "curl-devel", "recode-devel", "aspell-devel", "libxml2-devel", "pkgconfig", "libmcrypt-devel", "t1lib-devel", "libXpm-devel", "libpng-devel", "libjpeg-turbo-devel", "bzip2-devel", "openssl-devel", "freetype-devel", "libicu-devel", "mariadb-devel", "gmp-devel"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt cache (Debian).", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Update apt cache (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (Debian).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": ["build-essential", "autoconf", "automake", "libtool", "bison", "pkg-config", "re2c", "libsqlite3-dev", "libonig-dev", "libxml2-dev", "libcurl4-openssl-dev", "libbz2-dev", "libjpeg-dev", "libpng-dev", "libxpm-dev", "libfreetype6-dev", "libgmp3-dev", "libmcrypt-dev", "libmariadbclient-dev", "libpspell-dev", "librecode-dev", "libssl-dev"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_daemon (if not defined already).", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Define php_fpm_daemon (if not defined already).", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "php-fpm"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if gmp.h is already in a location accessible to gcc.", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if gmp.h is already in a location accessible to gcc.", "register": "gmp_file"}, "module_options": "path=/usr/include/gmp.h", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "when": "not gmp_file.stat.exists"}, "module_options": {"src": "{{ php_source_install_gmp_path }}", "dest": "/usr/include/gmp.h", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PHP is installed.", "module": "command", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if PHP is installed.", "changed_when": false, "failed_when": false, "register": "php_installed"}, "module_options": "which php", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the PHP repository.", "module": "git", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Clone the PHP repository.", "when": "php_installed.rc != 0"}, "module_options": {"repo": "{{ php_source_repo }}", "dest": "{{ php_source_clone_dir }}", "version": "{{ php_source_version }}", "accept_hostkey": true, "depth": "{{ php_source_clone_depth }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PHP installation path exists.", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure PHP installation path exists.", "when": "php_installed.rc != 0"}, "module_options": {"path": "{{ php_source_install_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Build configure script.", "module": "command", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Build configure script.", "when": "php_installed.rc != 0"}, "module_options": "./buildconf --force chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run configure script.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Run configure script.", "when": "php_installed.rc != 0"}, "module_options": "{{ php_source_configure_command }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make and install PHP.", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Make and install PHP.", "with_items": ["{{ php_source_make_command }}", "make install"], "when": "php_installed.rc != 0"}, "module_options": "{{ item }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php executable is symlinked into a standard path.", "module": "file", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php executable is symlinked into a standard path."}, "module_options": {"src": "{{ php_source_install_path }}/bin/php", "dest": "/usr/bin/php", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm executable is symlinked into a standard path.", "module": "file", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm executable is symlinked into a standard path.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"src": "{{ php_source_install_path }}/sbin/php-fpm", "dest": "/usr/sbin/{{ php_fpm_daemon }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm init script is installed.", "module": "template", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm init script is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "fpm-init.j2", "dest": "/etc/init.d/{{ php_fpm_daemon }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm config directory exists.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config directory exists.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"path": "{{ php_fpm_conf_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm config file is installed.", "module": "template", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config file is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ php_fpm_conf_path }}/php-fpm.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure configuration directories exist.", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Ensure configuration directories exist.", "with_flattened": ["{{ php_conf_paths }}", "{{ php_extension_conf_paths }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "follow": true, "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place PHP configuration file in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Place PHP configuration file in place.", "with_items": "{{ php_conf_paths }}", "notify": "restart webserver", "when": "php_use_managed_ini"}, "module_options": {"src": "php.ini.j2", "dest": "{{ item }}/php.ini", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure-fpm.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "tasks": [{"py/object": "struct4.Task", "name": "Define php_fpm_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_daemon.", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "{{ __php_fpm_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_conf_path.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_conf_path.", "when": "php_fpm_pool_conf_path is not defined"}, "module_options": {"php_fpm_pool_conf_path": "{{ __php_fpm_pool_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_user.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_user.", "when": "php_fpm_pool_user is not defined"}, "module_options": {"php_fpm_pool_user": "{{ __php_fpm_pool_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_group.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_group.", "when": "php_fpm_pool_group is not defined"}, "module_options": {"php_fpm_pool_group": "{{ __php_fpm_pool_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat php_fpm_pool_conf_path", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Stat php_fpm_pool_conf_path", "register": "php_fpm_pool_conf_path_dir_stat"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the default pool directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure the default pool directory exists.", "when": "php_fpm_pool_conf_path_dir_stat.stat.islnk is not defined"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create fpm pools.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Create fpm pools.", "loop": "{{ php_fpm_pools | default([], true) }}", "when": "php_enable_php_fpm", "notify": "restart php-fpm"}, "module_options": {"src": "{{ item.pool_template | default('www.conf.j2', true) }}", "dest": "{{ php_fpm_pool_conf_path | dirname }}/{{ item.pool_name }}.conf", "owner": "root", "group": "root", "mode": 420, "force": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm is started and enabled at boot (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure php-fpm is started and enabled at boot (if configured).", "when": "php_enable_php_fpm and ansible_distribution != \"Debian\""}, "module_options": {"name": "{{ php_fpm_daemon }}", "state": "{{ php_fpm_state }}", "enabled": "{{ php_fpm_enabled_on_boot }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Update apt cache."}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Ensure PHP packages are installed.", "register": "php_package_install", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "install_recommends": "{{ php_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete APCu configuration file if this role will provide one.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete APCu configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete OpCache configuration file if this role will provide one.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete OpCache configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure-apcu.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existing APCu config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Check for existing APCu config files.", "register": "php_installed_apc_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "extension(\\s+)?=(\\s+)?apc[u]?\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove any non-role-supplied APCu config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove any non-role-supplied APCu config files.", "when": "php_apc_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_apc_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APCu config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Ensure APCu config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc", "notify": "restart webserver"}, "module_options": {"src": "apc.ini.j2", "dest": "{{ item }}/{{ php_apc_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove APCu config file if APC is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove APCu config file if APC is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_enable_apc", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars.", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the default PHP version for Debian-based OSes.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Set the default PHP version for Debian-based OSes.", "when": "php_default_version_debian is not defined and ansible_os_family == 'Debian'"}, "module_options": {"php_default_version_debian": "{{ __php_default_version_debian }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_packages.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_packages.", "when": "php_packages is not defined"}, "module_options": {"php_packages": "{{ __php_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_webserver_daemon.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_webserver_daemon.", "when": "php_webserver_daemon is not defined"}, "module_options": {"php_webserver_daemon": "{{ __php_webserver_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_conf_paths.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_conf_paths.", "when": "php_conf_paths is not defined"}, "module_options": {"php_conf_paths": "{{ __php_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_extension_conf_paths.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_extension_conf_paths.", "when": "php_extension_conf_paths is not defined"}, "module_options": {"php_extension_conf_paths": "{{ __php_extension_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_apc_conf_filename.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_apc_conf_filename.", "when": "php_apc_conf_filename is not defined"}, "module_options": {"php_apc_conf_filename": "{{ __php_apc_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "when": "php_opcache_conf_filename is not defined and ansible_distribution_version == \"16.04\""}, "module_options": {"php_opcache_conf_filename": "10-opcache.ini"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename.", "when": "php_opcache_conf_filename is not defined"}, "module_options": {"php_opcache_conf_filename": "{{ __php_opcache_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_conf_path.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_fpm_conf_path.", "when": "php_fpm_conf_path is not defined"}, "module_options": {"php_fpm_conf_path": "{{ __php_fpm_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'RedHat'"]}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'Debian'"]}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": "php_install_from_source"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-apcu.yml", "executable": "configure-apcu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-opcache.yml", "executable": "configure-opcache.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-fpm.yml", "executable": "configure-fpm.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml", "options": {"name": "Ensure PHP packages are installed.", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "enablerepo": "{{ php_enablerepo | default(omit, true) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, {"py/object": "struct4.Role", "name": "geerlingguy.php-pecl", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl", "fqcn": "geerlingguy.php-pecl", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-Specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Include OS-Specific variables.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pecl is installed (if configured).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Ensure pecl is installed (if configured).", "when": "php_pecl_install_pecl"}, "module_options": {"name": "{{ php_pecl_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PECL libaries.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Install PECL libaries.", "register": "pecl_result", "changed_when": "pecl_result is succeeded", "failed_when": "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))", "with_items": "{{ php_pecl_extensions }}"}, "module_options": "yes '' | {{ php_pecl_install_command }} {{ item }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.php-pecl", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check for existing OpCache config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Check for existing OpCache config files.", "register": "php_installed_opcache_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "zend_extension(\\s+)?=(\\s+)?opcache\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Remove any non-role-supplied OpCache config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove any non-role-supplied OpCache config files.", "when": "php_opcache_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_opcache_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure OpCache config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Ensure OpCache config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"src": "opcache.ini.j2", "dest": "{{ item }}/{{ php_opcache_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove OpCache config file if OpCache is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove OpCache config file if OpCache is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": ["autoconf", "automake", "libtool", "bison", "make", "re2c", "sqlite-devel", "oniguruma-devel", "curl-devel", "recode-devel", "aspell-devel", "libxml2-devel", "pkgconfig", "libmcrypt-devel", "t1lib-devel", "libXpm-devel", "libpng-devel", "libjpeg-turbo-devel", "bzip2-devel", "openssl-devel", "freetype-devel", "libicu-devel", "mariadb-devel", "gmp-devel"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Update apt cache (Debian).", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Update apt cache (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (Debian).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": ["build-essential", "autoconf", "automake", "libtool", "bison", "pkg-config", "re2c", "libsqlite3-dev", "libonig-dev", "libxml2-dev", "libcurl4-openssl-dev", "libbz2-dev", "libjpeg-dev", "libpng-dev", "libxpm-dev", "libfreetype6-dev", "libgmp3-dev", "libmcrypt-dev", "libmariadbclient-dev", "libpspell-dev", "librecode-dev", "libssl-dev"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Define php_fpm_daemon (if not defined already).", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Define php_fpm_daemon (if not defined already).", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "php-fpm"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Check if gmp.h is already in a location accessible to gcc.", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if gmp.h is already in a location accessible to gcc.", "register": "gmp_file"}, "module_options": "path=/usr/include/gmp.h", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "when": "not gmp_file.stat.exists"}, "module_options": {"src": "{{ php_source_install_gmp_path }}", "dest": "/usr/include/gmp.h", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check if PHP is installed.", "module": "command", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if PHP is installed.", "changed_when": false, "failed_when": false, "register": "php_installed"}, "module_options": "which php", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Clone the PHP repository.", "module": "git", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Clone the PHP repository.", "when": "php_installed.rc != 0"}, "module_options": {"repo": "{{ php_source_repo }}", "dest": "{{ php_source_clone_dir }}", "version": "{{ php_source_version }}", "accept_hostkey": true, "depth": "{{ php_source_clone_depth }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Ensure PHP installation path exists.", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure PHP installation path exists.", "when": "php_installed.rc != 0"}, "module_options": {"path": "{{ php_source_install_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Build configure script.", "module": "command", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Build configure script.", "when": "php_installed.rc != 0"}, "module_options": "./buildconf --force chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Run configure script.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Run configure script.", "when": "php_installed.rc != 0"}, "module_options": "{{ php_source_configure_command }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Make and install PHP.", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Make and install PHP.", "with_items": ["{{ php_source_make_command }}", "make install"], "when": "php_installed.rc != 0"}, "module_options": "{{ item }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Ensure php executable is symlinked into a standard path.", "module": "file", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php executable is symlinked into a standard path."}, "module_options": {"src": "{{ php_source_install_path }}/bin/php", "dest": "/usr/bin/php", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Ensure php-fpm executable is symlinked into a standard path.", "module": "file", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm executable is symlinked into a standard path.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"src": "{{ php_source_install_path }}/sbin/php-fpm", "dest": "/usr/sbin/{{ php_fpm_daemon }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Ensure php-fpm init script is installed.", "module": "template", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm init script is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "fpm-init.j2", "dest": "/etc/init.d/{{ php_fpm_daemon }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Ensure php-fpm config directory exists.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config directory exists.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"path": "{{ php_fpm_conf_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Ensure php-fpm config file is installed.", "module": "template", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config file is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ php_fpm_conf_path }}/php-fpm.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure configuration directories exist.", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Ensure configuration directories exist.", "with_flattened": ["{{ php_conf_paths }}", "{{ php_extension_conf_paths }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "follow": true, "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Place PHP configuration file in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Place PHP configuration file in place.", "with_items": "{{ php_conf_paths }}", "notify": "restart webserver", "when": "php_use_managed_ini"}, "module_options": {"src": "php.ini.j2", "dest": "{{ item }}/php.ini", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Define php_fpm_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_daemon.", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "{{ __php_fpm_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Define php_fpm_pool_conf_path.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_conf_path.", "when": "php_fpm_pool_conf_path is not defined"}, "module_options": {"php_fpm_pool_conf_path": "{{ __php_fpm_pool_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Define php_fpm_pool_user.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_user.", "when": "php_fpm_pool_user is not defined"}, "module_options": {"php_fpm_pool_user": "{{ __php_fpm_pool_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Define php_fpm_pool_group.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_group.", "when": "php_fpm_pool_group is not defined"}, "module_options": {"php_fpm_pool_group": "{{ __php_fpm_pool_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Stat php_fpm_pool_conf_path", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Stat php_fpm_pool_conf_path", "register": "php_fpm_pool_conf_path_dir_stat"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Ensure the default pool directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure the default pool directory exists.", "when": "php_fpm_pool_conf_path_dir_stat.stat.islnk is not defined"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Create fpm pools.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Create fpm pools.", "loop": "{{ php_fpm_pools | default([], true) }}", "when": "php_enable_php_fpm", "notify": "restart php-fpm"}, "module_options": {"src": "{{ item.pool_template | default('www.conf.j2', true) }}", "dest": "{{ php_fpm_pool_conf_path | dirname }}/{{ item.pool_name }}.conf", "owner": "root", "group": "root", "mode": 420, "force": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Ensure php-fpm is started and enabled at boot (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure php-fpm is started and enabled at boot (if configured).", "when": "php_enable_php_fpm and ansible_distribution != \"Debian\""}, "module_options": {"name": "{{ php_fpm_daemon }}", "state": "{{ php_fpm_state }}", "enabled": "{{ php_fpm_enabled_on_boot }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Update apt cache."}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Ensure PHP packages are installed.", "register": "php_package_install", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "install_recommends": "{{ php_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Delete APCu configuration file if this role will provide one.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete APCu configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Delete OpCache configuration file if this role will provide one.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete OpCache configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Check for existing APCu config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Check for existing APCu config files.", "register": "php_installed_apc_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "extension(\\s+)?=(\\s+)?apc[u]?\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Remove any non-role-supplied APCu config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove any non-role-supplied APCu config files.", "when": "php_apc_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_apc_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure APCu config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Ensure APCu config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc", "notify": "restart webserver"}, "module_options": {"src": "apc.ini.j2", "dest": "{{ item }}/{{ php_apc_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Remove APCu config file if APC is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove APCu config file if APC is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_enable_apc", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars.", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set the default PHP version for Debian-based OSes.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Set the default PHP version for Debian-based OSes.", "when": "php_default_version_debian is not defined and ansible_os_family == 'Debian'"}, "module_options": {"php_default_version_debian": "{{ __php_default_version_debian }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Define php_packages.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_packages.", "when": "php_packages is not defined"}, "module_options": {"php_packages": "{{ __php_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Define php_webserver_daemon.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_webserver_daemon.", "when": "php_webserver_daemon is not defined"}, "module_options": {"php_webserver_daemon": "{{ __php_webserver_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Define php_conf_paths.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_conf_paths.", "when": "php_conf_paths is not defined"}, "module_options": {"php_conf_paths": "{{ __php_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Define php_extension_conf_paths.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_extension_conf_paths.", "when": "php_extension_conf_paths is not defined"}, "module_options": {"php_extension_conf_paths": "{{ __php_extension_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Define php_apc_conf_filename.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_apc_conf_filename.", "when": "php_apc_conf_filename is not defined"}, "module_options": {"php_apc_conf_filename": "{{ __php_apc_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "when": "php_opcache_conf_filename is not defined and ansible_distribution_version == \"16.04\""}, "module_options": {"php_opcache_conf_filename": "10-opcache.ini"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename.", "when": "php_opcache_conf_filename is not defined"}, "module_options": {"php_opcache_conf_filename": "{{ __php_opcache_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Define php_fpm_conf_path.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_fpm_conf_path.", "when": "php_fpm_conf_path is not defined"}, "module_options": {"php_fpm_conf_path": "{{ __php_fpm_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'RedHat'"]}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'Debian'"]}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": "php_install_from_source"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-apcu.yml", "executable": "configure-apcu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-opcache.yml", "executable": "configure-opcache.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-fpm.yml", "executable": "configure-fpm.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml", "options": {"name": "Ensure PHP packages are installed.", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "enablerepo": "{{ php_enablerepo | default(omit, true) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include OS-Specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Include OS-Specific variables.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Ensure pecl is installed (if configured).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Ensure pecl is installed (if configured).", "when": "php_pecl_install_pecl"}, "module_options": {"name": "{{ php_pecl_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install PECL libaries.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Install PECL libaries.", "register": "pecl_result", "changed_when": "pecl_result is succeeded", "failed_when": "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))", "with_items": "{{ php_pecl_extensions }}"}, "module_options": "yes '' | {{ php_pecl_install_command }} {{ item }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml": {"py/object": "struct4.TaskFile", "name": "configure-opcache.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existing OpCache config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Check for existing OpCache config files.", "register": "php_installed_opcache_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "zend_extension(\\s+)?=(\\s+)?opcache\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove any non-role-supplied OpCache config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove any non-role-supplied OpCache config files.", "when": "php_opcache_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_opcache_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure OpCache config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Ensure OpCache config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"src": "opcache.ini.j2", "dest": "{{ item }}/{{ php_opcache_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove OpCache config file if OpCache is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove OpCache config file if OpCache is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml": {"py/object": "struct4.TaskFile", "name": "install-from-source.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": ["autoconf", "automake", "libtool", "bison", "make", "re2c", "sqlite-devel", "oniguruma-devel", "curl-devel", "recode-devel", "aspell-devel", "libxml2-devel", "pkgconfig", "libmcrypt-devel", "t1lib-devel", "libXpm-devel", "libpng-devel", "libjpeg-turbo-devel", "bzip2-devel", "openssl-devel", "freetype-devel", "libicu-devel", "mariadb-devel", "gmp-devel"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt cache (Debian).", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Update apt cache (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (Debian).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": ["build-essential", "autoconf", "automake", "libtool", "bison", "pkg-config", "re2c", "libsqlite3-dev", "libonig-dev", "libxml2-dev", "libcurl4-openssl-dev", "libbz2-dev", "libjpeg-dev", "libpng-dev", "libxpm-dev", "libfreetype6-dev", "libgmp3-dev", "libmcrypt-dev", "libmariadbclient-dev", "libpspell-dev", "librecode-dev", "libssl-dev"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_daemon (if not defined already).", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Define php_fpm_daemon (if not defined already).", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "php-fpm"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if gmp.h is already in a location accessible to gcc.", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if gmp.h is already in a location accessible to gcc.", "register": "gmp_file"}, "module_options": "path=/usr/include/gmp.h", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "when": "not gmp_file.stat.exists"}, "module_options": {"src": "{{ php_source_install_gmp_path }}", "dest": "/usr/include/gmp.h", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PHP is installed.", "module": "command", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if PHP is installed.", "changed_when": false, "failed_when": false, "register": "php_installed"}, "module_options": "which php", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the PHP repository.", "module": "git", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Clone the PHP repository.", "when": "php_installed.rc != 0"}, "module_options": {"repo": "{{ php_source_repo }}", "dest": "{{ php_source_clone_dir }}", "version": "{{ php_source_version }}", "accept_hostkey": true, "depth": "{{ php_source_clone_depth }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PHP installation path exists.", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure PHP installation path exists.", "when": "php_installed.rc != 0"}, "module_options": {"path": "{{ php_source_install_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Build configure script.", "module": "command", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Build configure script.", "when": "php_installed.rc != 0"}, "module_options": "./buildconf --force chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run configure script.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Run configure script.", "when": "php_installed.rc != 0"}, "module_options": "{{ php_source_configure_command }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make and install PHP.", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Make and install PHP.", "with_items": ["{{ php_source_make_command }}", "make install"], "when": "php_installed.rc != 0"}, "module_options": "{{ item }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php executable is symlinked into a standard path.", "module": "file", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php executable is symlinked into a standard path."}, "module_options": {"src": "{{ php_source_install_path }}/bin/php", "dest": "/usr/bin/php", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm executable is symlinked into a standard path.", "module": "file", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm executable is symlinked into a standard path.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"src": "{{ php_source_install_path }}/sbin/php-fpm", "dest": "/usr/sbin/{{ php_fpm_daemon }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm init script is installed.", "module": "template", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm init script is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "fpm-init.j2", "dest": "/etc/init.d/{{ php_fpm_daemon }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm config directory exists.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config directory exists.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"path": "{{ php_fpm_conf_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm config file is installed.", "module": "template", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config file is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ php_fpm_conf_path }}/php-fpm.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure configuration directories exist.", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Ensure configuration directories exist.", "with_flattened": ["{{ php_conf_paths }}", "{{ php_extension_conf_paths }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "follow": true, "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place PHP configuration file in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Place PHP configuration file in place.", "with_items": "{{ php_conf_paths }}", "notify": "restart webserver", "when": "php_use_managed_ini"}, "module_options": {"src": "php.ini.j2", "dest": "{{ item }}/php.ini", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml": {"py/object": "struct4.TaskFile", "name": "configure-fpm.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "tasks": [{"py/object": "struct4.Task", "name": "Define php_fpm_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_daemon.", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "{{ __php_fpm_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_conf_path.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_conf_path.", "when": "php_fpm_pool_conf_path is not defined"}, "module_options": {"php_fpm_pool_conf_path": "{{ __php_fpm_pool_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_user.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_user.", "when": "php_fpm_pool_user is not defined"}, "module_options": {"php_fpm_pool_user": "{{ __php_fpm_pool_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_group.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_group.", "when": "php_fpm_pool_group is not defined"}, "module_options": {"php_fpm_pool_group": "{{ __php_fpm_pool_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat php_fpm_pool_conf_path", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Stat php_fpm_pool_conf_path", "register": "php_fpm_pool_conf_path_dir_stat"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the default pool directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure the default pool directory exists.", "when": "php_fpm_pool_conf_path_dir_stat.stat.islnk is not defined"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create fpm pools.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Create fpm pools.", "loop": "{{ php_fpm_pools | default([], true) }}", "when": "php_enable_php_fpm", "notify": "restart php-fpm"}, "module_options": {"src": "{{ item.pool_template | default('www.conf.j2', true) }}", "dest": "{{ php_fpm_pool_conf_path | dirname }}/{{ item.pool_name }}.conf", "owner": "root", "group": "root", "mode": 420, "force": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm is started and enabled at boot (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure php-fpm is started and enabled at boot (if configured).", "when": "php_enable_php_fpm and ansible_distribution != \"Debian\""}, "module_options": {"name": "{{ php_fpm_daemon }}", "state": "{{ php_fpm_state }}", "enabled": "{{ php_fpm_enabled_on_boot }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml": {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Update apt cache."}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Ensure PHP packages are installed.", "register": "php_package_install", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "install_recommends": "{{ php_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete APCu configuration file if this role will provide one.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete APCu configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete OpCache configuration file if this role will provide one.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete OpCache configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml": {"py/object": "struct4.TaskFile", "name": "configure-apcu.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existing APCu config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Check for existing APCu config files.", "register": "php_installed_apc_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "extension(\\s+)?=(\\s+)?apc[u]?\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove any non-role-supplied APCu config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove any non-role-supplied APCu config files.", "when": "php_apc_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_apc_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APCu config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Ensure APCu config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc", "notify": "restart webserver"}, "module_options": {"src": "apc.ini.j2", "dest": "{{ item }}/{{ php_apc_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove APCu config file if APC is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove APCu config file if APC is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_enable_apc", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars.", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the default PHP version for Debian-based OSes.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Set the default PHP version for Debian-based OSes.", "when": "php_default_version_debian is not defined and ansible_os_family == 'Debian'"}, "module_options": {"php_default_version_debian": "{{ __php_default_version_debian }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_packages.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_packages.", "when": "php_packages is not defined"}, "module_options": {"php_packages": "{{ __php_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_webserver_daemon.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_webserver_daemon.", "when": "php_webserver_daemon is not defined"}, "module_options": {"php_webserver_daemon": "{{ __php_webserver_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_conf_paths.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_conf_paths.", "when": "php_conf_paths is not defined"}, "module_options": {"php_conf_paths": "{{ __php_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_extension_conf_paths.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_extension_conf_paths.", "when": "php_extension_conf_paths is not defined"}, "module_options": {"php_extension_conf_paths": "{{ __php_extension_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_apc_conf_filename.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_apc_conf_filename.", "when": "php_apc_conf_filename is not defined"}, "module_options": {"php_apc_conf_filename": "{{ __php_apc_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "when": "php_opcache_conf_filename is not defined and ansible_distribution_version == \"16.04\""}, "module_options": {"php_opcache_conf_filename": "10-opcache.ini"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename.", "when": "php_opcache_conf_filename is not defined"}, "module_options": {"php_opcache_conf_filename": "{{ __php_opcache_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_conf_path.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_fpm_conf_path.", "when": "php_fpm_conf_path is not defined"}, "module_options": {"php_fpm_conf_path": "{{ __php_fpm_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'RedHat'"]}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'Debian'"]}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": "php_install_from_source"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-apcu.yml", "executable": "configure-apcu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-opcache.yml", "executable": "configure-opcache.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-fpm.yml", "executable": "configure-fpm.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml": {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml", "options": {"name": "Ensure PHP packages are installed.", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "enablerepo": "{{ php_enablerepo | default(omit, true) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-Specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Include OS-Specific variables.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pecl is installed (if configured).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Ensure pecl is installed (if configured).", "when": "php_pecl_install_pecl"}, "module_options": {"name": "{{ php_pecl_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PECL libaries.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Install PECL libaries.", "register": "pecl_result", "changed_when": "pecl_result is succeeded", "failed_when": "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))", "with_items": "{{ php_pecl_extensions }}"}, "module_options": "yes '' | {{ php_pecl_install_command }} {{ item }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.php-pecl", "used_in": [], "annotations": {}}}, "role_dict": {"geerlingguy.php": {"py/object": "struct4.Role", "name": "geerlingguy.php", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php", "fqcn": "geerlingguy.php", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "configure-opcache.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existing OpCache config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Check for existing OpCache config files.", "register": "php_installed_opcache_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "zend_extension(\\s+)?=(\\s+)?opcache\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove any non-role-supplied OpCache config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove any non-role-supplied OpCache config files.", "when": "php_opcache_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_opcache_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure OpCache config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Ensure OpCache config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"src": "opcache.ini.j2", "dest": "{{ item }}/{{ php_opcache_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove OpCache config file if OpCache is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-opcache.yml", "options": {"name": "Remove OpCache config file if OpCache is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_opcache_enable | bool", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install-from-source.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (RedHat).", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (RedHat).", "when": "ansible_os_family == 'RedHat'"}, "module_options": {"name": ["autoconf", "automake", "libtool", "bison", "make", "re2c", "sqlite-devel", "oniguruma-devel", "curl-devel", "recode-devel", "aspell-devel", "libxml2-devel", "pkgconfig", "libmcrypt-devel", "t1lib-devel", "libXpm-devel", "libpng-devel", "libjpeg-turbo-devel", "bzip2-devel", "openssl-devel", "freetype-devel", "libicu-devel", "mariadb-devel", "gmp-devel"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Update apt cache (Debian).", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Update apt cache (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure dependencies for building from source are installed (Debian).", "module": "apt", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure dependencies for building from source are installed (Debian).", "when": "ansible_os_family == 'Debian'"}, "module_options": {"name": ["build-essential", "autoconf", "automake", "libtool", "bison", "pkg-config", "re2c", "libsqlite3-dev", "libonig-dev", "libxml2-dev", "libcurl4-openssl-dev", "libbz2-dev", "libjpeg-dev", "libpng-dev", "libxpm-dev", "libfreetype6-dev", "libgmp3-dev", "libmcrypt-dev", "libmariadbclient-dev", "libpspell-dev", "librecode-dev", "libssl-dev"], "state": "present"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_daemon (if not defined already).", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Define php_fpm_daemon (if not defined already).", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "php-fpm"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if gmp.h is already in a location accessible to gcc.", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if gmp.h is already in a location accessible to gcc.", "register": "gmp_file"}, "module_options": "path=/usr/include/gmp.h", "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure gmp.h is symlinked into a location accessible to gcc.", "when": "not gmp_file.stat.exists"}, "module_options": {"src": "{{ php_source_install_gmp_path }}", "dest": "/usr/include/gmp.h", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if PHP is installed.", "module": "command", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Check if PHP is installed.", "changed_when": false, "failed_when": false, "register": "php_installed"}, "module_options": "which php", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Clone the PHP repository.", "module": "git", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Clone the PHP repository.", "when": "php_installed.rc != 0"}, "module_options": {"repo": "{{ php_source_repo }}", "dest": "{{ php_source_clone_dir }}", "version": "{{ php_source_version }}", "accept_hostkey": true, "depth": "{{ php_source_clone_depth }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PHP installation path exists.", "module": "file", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure PHP installation path exists.", "when": "php_installed.rc != 0"}, "module_options": {"path": "{{ php_source_install_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Build configure script.", "module": "command", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Build configure script.", "when": "php_installed.rc != 0"}, "module_options": "./buildconf --force chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Run configure script.", "module": "command", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Run configure script.", "when": "php_installed.rc != 0"}, "module_options": "{{ php_source_configure_command }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make and install PHP.", "module": "command", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Make and install PHP.", "with_items": ["{{ php_source_make_command }}", "make install"], "when": "php_installed.rc != 0"}, "module_options": "{{ item }} chdir={{ php_source_clone_dir }}\n", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php executable is symlinked into a standard path.", "module": "file", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php executable is symlinked into a standard path."}, "module_options": {"src": "{{ php_source_install_path }}/bin/php", "dest": "/usr/bin/php", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm executable is symlinked into a standard path.", "module": "file", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm executable is symlinked into a standard path.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"src": "{{ php_source_install_path }}/sbin/php-fpm", "dest": "/usr/sbin/{{ php_fpm_daemon }}", "state": "link"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm init script is installed.", "module": "template", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm init script is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "fpm-init.j2", "dest": "/etc/init.d/{{ php_fpm_daemon }}", "mode": 493}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm config directory exists.", "module": "file", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config directory exists.", "when": "'--enable-fpm' in php_source_configure_command"}, "module_options": {"path": "{{ php_fpm_conf_path }}", "state": "directory", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm config file is installed.", "module": "template", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/install-from-source.yml", "options": {"name": "Ensure php-fpm config file is installed.", "when": "'--enable-fpm' in php_source_configure_command", "notify": "restart php-fpm"}, "module_options": {"src": "php-fpm.conf.j2", "dest": "{{ php_fpm_conf_path }}/php-fpm.conf", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure configuration directories exist.", "module": "file", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Ensure configuration directories exist.", "with_flattened": ["{{ php_conf_paths }}", "{{ php_extension_conf_paths }}"]}, "module_options": {"path": "{{ item }}", "state": "directory", "follow": true, "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place PHP configuration file in place.", "module": "template", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure.yml", "options": {"name": "Place PHP configuration file in place.", "with_items": "{{ php_conf_paths }}", "notify": "restart webserver", "when": "php_use_managed_ini"}, "module_options": {"src": "php.ini.j2", "dest": "{{ item }}/php.ini", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure-fpm.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "tasks": [{"py/object": "struct4.Task", "name": "Define php_fpm_daemon.", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_daemon.", "when": "php_fpm_daemon is not defined"}, "module_options": {"php_fpm_daemon": "{{ __php_fpm_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_conf_path.", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_conf_path.", "when": "php_fpm_pool_conf_path is not defined"}, "module_options": {"php_fpm_pool_conf_path": "{{ __php_fpm_pool_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_user.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_user.", "when": "php_fpm_pool_user is not defined"}, "module_options": {"php_fpm_pool_user": "{{ __php_fpm_pool_user }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_pool_group.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Define php_fpm_pool_group.", "when": "php_fpm_pool_group is not defined"}, "module_options": {"php_fpm_pool_group": "{{ __php_fpm_pool_group }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Stat php_fpm_pool_conf_path", "module": "stat", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Stat php_fpm_pool_conf_path", "register": "php_fpm_pool_conf_path_dir_stat"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure the default pool directory exists.", "module": "file", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure the default pool directory exists.", "when": "php_fpm_pool_conf_path_dir_stat.stat.islnk is not defined"}, "module_options": {"path": "{{ php_fpm_pool_conf_path | dirname }}", "state": "directory", "owner": "root", "group": "root", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create fpm pools.", "module": "template", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Create fpm pools.", "loop": "{{ php_fpm_pools | default([], true) }}", "when": "php_enable_php_fpm", "notify": "restart php-fpm"}, "module_options": {"src": "{{ item.pool_template | default('www.conf.j2', true) }}", "dest": "{{ php_fpm_pool_conf_path | dirname }}/{{ item.pool_name }}.conf", "owner": "root", "group": "root", "mode": 420, "force": true}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure php-fpm is started and enabled at boot (if configured).", "module": "service", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-fpm.yml", "options": {"name": "Ensure php-fpm is started and enabled at boot (if configured).", "when": "php_enable_php_fpm and ansible_distribution != \"Debian\""}, "module_options": {"name": "{{ php_fpm_daemon }}", "state": "{{ php_fpm_state }}", "enabled": "{{ php_fpm_enabled_on_boot }}"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-Debian.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Update apt cache.", "module": "apt", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Update apt cache."}, "module_options": "update_cache=yes cache_valid_time=86400", "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "apt", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Ensure PHP packages are installed.", "register": "php_package_install", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "install_recommends": "{{ php_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete APCu configuration file if this role will provide one.", "module": "file", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete APCu configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Delete OpCache configuration file if this role will provide one.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-Debian.yml", "options": {"name": "Delete OpCache configuration file if this role will provide one.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_opcache_enable | bool and php_package_install.changed", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_opcache_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure-apcu.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "tasks": [{"py/object": "struct4.Task", "name": "Check for existing APCu config files.", "module": "find", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Check for existing APCu config files.", "register": "php_installed_apc_confs", "with_items": "{{ php_extension_conf_paths }}"}, "module_options": {"paths": "{{ item }}", "contains": "extension(\\s+)?=(\\s+)?apc[u]?\\.so"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove any non-role-supplied APCu config files.", "module": "file", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove any non-role-supplied APCu config files.", "when": "php_apc_conf_filename != (item.1.path.split('/') | last)", "with_subelements": ["{{ php_installed_apc_confs.results }}", "files"], "notify": "restart webserver"}, "module_options": {"path": "{{ item.1.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure APCu config file is present.", "module": "template", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Ensure APCu config file is present.", "with_items": "{{ php_extension_conf_paths }}", "when": "php_enable_apc", "notify": "restart webserver"}, "module_options": {"src": "apc.ini.j2", "dest": "{{ item }}/{{ php_apc_conf_filename }}", "owner": "root", "group": "root", "force": true, "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Remove APCu config file if APC is disabled.", "module": "file", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/configure-apcu.yml", "options": {"name": "Remove APCu config file if APC is disabled.", "with_items": "{{ php_extension_conf_paths }}", "when": "not php_enable_apc", "notify": "restart webserver"}, "module_options": {"path": "{{ item }}/{{ php_apc_conf_filename }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include OS-specific variables."}, "module_options": "{{ ansible_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include distribution and version-specific vars.", "module": "include_vars", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Include distribution and version-specific vars.", "with_first_found": [{"files": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"], "skip": true}]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set the default PHP version for Debian-based OSes.", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Set the default PHP version for Debian-based OSes.", "when": "php_default_version_debian is not defined and ansible_os_family == 'Debian'"}, "module_options": {"php_default_version_debian": "{{ __php_default_version_debian }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_packages.", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_packages.", "when": "php_packages is not defined"}, "module_options": {"php_packages": "{{ __php_packages | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_webserver_daemon.", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_webserver_daemon.", "when": "php_webserver_daemon is not defined"}, "module_options": {"php_webserver_daemon": "{{ __php_webserver_daemon }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_conf_paths.", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_conf_paths.", "when": "php_conf_paths is not defined"}, "module_options": {"php_conf_paths": "{{ __php_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_extension_conf_paths.", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_extension_conf_paths.", "when": "php_extension_conf_paths is not defined"}, "module_options": {"php_extension_conf_paths": "{{ __php_extension_conf_paths }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_apc_conf_filename.", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_apc_conf_filename.", "when": "php_apc_conf_filename is not defined"}, "module_options": {"php_apc_conf_filename": "{{ __php_apc_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename (Ubuntu 16.04).", "when": "php_opcache_conf_filename is not defined and ansible_distribution_version == \"16.04\""}, "module_options": {"php_opcache_conf_filename": "10-opcache.ini"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_opcache_conf_filename.", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_opcache_conf_filename.", "when": "php_opcache_conf_filename is not defined"}, "module_options": {"php_opcache_conf_filename": "{{ __php_opcache_conf_filename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Define php_fpm_conf_path.", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"name": "Define php_fpm_conf_path.", "when": "php_fpm_conf_path is not defined"}, "module_options": {"php_fpm_conf_path": "{{ __php_fpm_conf_path }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'RedHat'"]}, "module_options": "setup-RedHat.yml", "executable": "setup-RedHat.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": ["not php_install_from_source", "ansible_os_family == 'Debian'"]}, "module_options": "setup-Debian.yml", "executable": "setup-Debian.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {"when": "php_install_from_source"}, "module_options": "install-from-source.yml", "executable": "install-from-source.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-apcu.yml", "executable": "configure-apcu.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-opcache.yml", "executable": "configure-opcache.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/main.yml", "options": {}, "module_options": "configure-fpm.yml", "executable": "configure-fpm.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup-RedHat.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "Ensure PHP packages are installed.", "module": "package", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php/tasks/setup-RedHat.yml", "options": {"name": "Ensure PHP packages are installed.", "notify": "restart webserver"}, "module_options": {"name": "{{ php_packages + php_packages_extra }}", "state": "{{ php_packages_state }}", "enablerepo": "{{ php_enablerepo | default(omit, true) }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "geerlingguy.php", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}, "geerlingguy.php-pecl": {"py/object": "struct4.Role", "name": "geerlingguy.php-pecl", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl", "fqcn": "geerlingguy.php-pecl", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include OS-Specific variables.", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Include OS-Specific variables.", "with_first_found": ["{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml", "{{ ansible_distribution }}.yml", "{{ ansible_os_family }}.yml"]}, "module_options": "{{ item }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure pecl is installed (if configured).", "module": "package", "index": 1, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Ensure pecl is installed (if configured).", "when": "php_pecl_install_pecl"}, "module_options": {"name": "{{ php_pecl_package }}", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install PECL libaries.", "module": "shell", "index": 2, "defined_in": "./role-test/testdata/geerlingguy-php-pecl/geerlingguy.php-pecl/tasks/main.yml", "options": {"name": "Install PECL libaries.", "register": "pecl_result", "changed_when": "pecl_result is succeeded", "failed_when": "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))", "with_items": "{{ php_pecl_extensions }}"}, "module_options": "yes '' | {{ php_pecl_install_command }} {{ item }}", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "geerlingguy.php-pecl", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}