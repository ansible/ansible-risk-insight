{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/arillso-users", "installed_roles": [{"py/object": "struct4.Role", "name": "arillso.users", "defined_in": "./role-test/testdata/arillso-users/arillso.users", "fqcn": "arillso.users", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "add host users", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add host users", "when": "users_host_vars is defined"}, "module_options": {"users": "{{ users | union(users_host_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "add group users", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add group users", "when": "users_group_vars is defined"}, "module_options": {"users": "{{ users | union(users_group_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/defaults.yml", "tasks": [], "role": "arillso.users", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows : check username length", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : check username length", "when": "item.username|length>20", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"msg": "The username can be a maximum of 20 characters long."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : adding users", "module": "win_user", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : adding users", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"name": "{{ item.username }}", "fullname": "{{ item.name | default(omit) }}", "description": "{{ item.description | default('Windows User') }}", "password": "{{ item.password | default(omit) }}", "groups": "{{ item.groups | default('Benutzer') }}", "state": "{{ item.state | default('present') }}", "account_disabled": "{{ item.account_disabled | default('false') }}", "groups_action": "{{ item.groups_action | default('replace') }}", "account_locked": "{{ item.account_locked | default('false') }}", "password_never_expires": "{{ item.password_never_expires | default('true') }}", "update_password": "{{ item.update_password | default('on_create') }}", "password_expired": "{{ item.password_expired | default('false') }}", "user_cannot_change_password": "{{ item.user_cannot_change_password | default(false) }}"}, "executable": "win_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : hide user accounts from the login screen", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : hide user accounts from the login screen", "win_regedit": {"path": "{{ path }}\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList", "name": "{{ item.username }}", "type": "dword"}, "with_items": "{{ users }}", "no_log": "{{ true if item.password is defined else false }}", "when": "item.hide"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\Windows NT"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : UAC enable", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : UAC enable", "win_regedit": {"path": "{{ path }}\\Windows\\CurrentVersion\\Policies\\CredUI", "name": "EnumerateAdministrators", "type": "dword", "data": 0}}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Linux : adding users", "module": "user", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users", "become": true, "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit) }}", "home": "{{ item.home | default(users_home ~ '/' ~ item.username ) }}", "comment": "{{ item.name | default(omit) }}", "system": "{{ item.system | default(omit) }}", "generate_ssh_key": "{{ item.ssh_key_generate | default(omit) }}", "group": "{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else omit) }}", "groups": "{{ item.groups|join(',') if item.groups is defined else users_groups|join(',') }}", "append": "{{ item.append | default(omit) }}", "password": "{{ item.password | default(lookup('password')) }}", "ssh_key_file": ".ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}", "ssh_key_passphrase": "{{ item.ssh_key_password | default(omit) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(users_ssh_key_bits) }}", "createhome": "{{ item.home_create | default(omit) }}", "shell": "{{ item.shell | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : setting users home permission", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : setting users home permission", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"dest": "{{ item.home | default(users_home ~ '/' ~ item.username) }}", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "mode": "{{ item.home_mode if item.home_mode is defined else users_home_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : adding users .ssh directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users .ssh directory", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"path": "{{ item.home | default(users_home ~ '/' ~ item.username) }}/.ssh", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : adding users authorized keys", "module": "authorized_key", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users authorized keys", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined\n or item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"key": "{{ item.authorized_keys | default([]) | join('\n') }}", "user": "{{ item.username }}", "exclusive": "{{ item.authorized_keys_exclusive | default(users_authorized_keys_exclusive) }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "add host users", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add host users", "when": "users_host_vars is defined"}, "module_options": {"users": "{{ users | union(users_host_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "add group users", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add group users", "when": "users_group_vars is defined"}, "module_options": {"users": "{{ users | union(users_group_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Windows : check username length", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : check username length", "when": "item.username|length>20", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"msg": "The username can be a maximum of 20 characters long."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows : adding users", "module": "win_user", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : adding users", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"name": "{{ item.username }}", "fullname": "{{ item.name | default(omit) }}", "description": "{{ item.description | default('Windows User') }}", "password": "{{ item.password | default(omit) }}", "groups": "{{ item.groups | default('Benutzer') }}", "state": "{{ item.state | default('present') }}", "account_disabled": "{{ item.account_disabled | default('false') }}", "groups_action": "{{ item.groups_action | default('replace') }}", "account_locked": "{{ item.account_locked | default('false') }}", "password_never_expires": "{{ item.password_never_expires | default('true') }}", "update_password": "{{ item.update_password | default('on_create') }}", "password_expired": "{{ item.password_expired | default('false') }}", "user_cannot_change_password": "{{ item.user_cannot_change_password | default(false) }}"}, "executable": "win_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Windows : hide user accounts from the login screen", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : hide user accounts from the login screen", "win_regedit": {"path": "{{ path }}\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList", "name": "{{ item.username }}", "type": "dword"}, "with_items": "{{ users }}", "no_log": "{{ true if item.password is defined else false }}", "when": "item.hide"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\Windows NT"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Windows : UAC enable", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : UAC enable", "win_regedit": {"path": "{{ path }}\\Windows\\CurrentVersion\\Policies\\CredUI", "name": "EnumerateAdministrators", "type": "dword", "data": 0}}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Linux : adding users", "module": "user", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users", "become": true, "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit) }}", "home": "{{ item.home | default(users_home ~ '/' ~ item.username ) }}", "comment": "{{ item.name | default(omit) }}", "system": "{{ item.system | default(omit) }}", "generate_ssh_key": "{{ item.ssh_key_generate | default(omit) }}", "group": "{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else omit) }}", "groups": "{{ item.groups|join(',') if item.groups is defined else users_groups|join(',') }}", "append": "{{ item.append | default(omit) }}", "password": "{{ item.password | default(lookup('password')) }}", "ssh_key_file": ".ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}", "ssh_key_passphrase": "{{ item.ssh_key_password | default(omit) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(users_ssh_key_bits) }}", "createhome": "{{ item.home_create | default(omit) }}", "shell": "{{ item.shell | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Linux : setting users home permission", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : setting users home permission", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"dest": "{{ item.home | default(users_home ~ '/' ~ item.username) }}", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "mode": "{{ item.home_mode if item.home_mode is defined else users_home_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Linux : adding users .ssh directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users .ssh directory", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"path": "{{ item.home | default(users_home ~ '/' ~ item.username) }}/.ssh", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Linux : adding users authorized keys", "module": "authorized_key", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users authorized keys", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined\n or item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"key": "{{ item.authorized_keys | default([]) | join('\n') }}", "user": "{{ item.username }}", "exclusive": "{{ item.authorized_keys_exclusive | default(users_authorized_keys_exclusive) }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/arillso-users/arillso.users/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "add host users", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add host users", "when": "users_host_vars is defined"}, "module_options": {"users": "{{ users | union(users_host_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "add group users", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add group users", "when": "users_group_vars is defined"}, "module_options": {"users": "{{ users | union(users_group_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/defaults.yml": {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/defaults.yml", "tasks": [], "role": "arillso.users", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows : check username length", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : check username length", "when": "item.username|length>20", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"msg": "The username can be a maximum of 20 characters long."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : adding users", "module": "win_user", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : adding users", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"name": "{{ item.username }}", "fullname": "{{ item.name | default(omit) }}", "description": "{{ item.description | default('Windows User') }}", "password": "{{ item.password | default(omit) }}", "groups": "{{ item.groups | default('Benutzer') }}", "state": "{{ item.state | default('present') }}", "account_disabled": "{{ item.account_disabled | default('false') }}", "groups_action": "{{ item.groups_action | default('replace') }}", "account_locked": "{{ item.account_locked | default('false') }}", "password_never_expires": "{{ item.password_never_expires | default('true') }}", "update_password": "{{ item.update_password | default('on_create') }}", "password_expired": "{{ item.password_expired | default('false') }}", "user_cannot_change_password": "{{ item.user_cannot_change_password | default(false) }}"}, "executable": "win_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : hide user accounts from the login screen", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : hide user accounts from the login screen", "win_regedit": {"path": "{{ path }}\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList", "name": "{{ item.username }}", "type": "dword"}, "with_items": "{{ users }}", "no_log": "{{ true if item.password is defined else false }}", "when": "item.hide"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\Windows NT"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : UAC enable", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : UAC enable", "win_regedit": {"path": "{{ path }}\\Windows\\CurrentVersion\\Policies\\CredUI", "name": "EnumerateAdministrators", "type": "dword", "data": 0}}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}, "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml": {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Linux : adding users", "module": "user", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users", "become": true, "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit) }}", "home": "{{ item.home | default(users_home ~ '/' ~ item.username ) }}", "comment": "{{ item.name | default(omit) }}", "system": "{{ item.system | default(omit) }}", "generate_ssh_key": "{{ item.ssh_key_generate | default(omit) }}", "group": "{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else omit) }}", "groups": "{{ item.groups|join(',') if item.groups is defined else users_groups|join(',') }}", "append": "{{ item.append | default(omit) }}", "password": "{{ item.password | default(lookup('password')) }}", "ssh_key_file": ".ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}", "ssh_key_passphrase": "{{ item.ssh_key_password | default(omit) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(users_ssh_key_bits) }}", "createhome": "{{ item.home_create | default(omit) }}", "shell": "{{ item.shell | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : setting users home permission", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : setting users home permission", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"dest": "{{ item.home | default(users_home ~ '/' ~ item.username) }}", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "mode": "{{ item.home_mode if item.home_mode is defined else users_home_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : adding users .ssh directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users .ssh directory", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"path": "{{ item.home | default(users_home ~ '/' ~ item.username) }}/.ssh", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : adding users authorized keys", "module": "authorized_key", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users authorized keys", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined\n or item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"key": "{{ item.authorized_keys | default([]) | join('\n') }}", "user": "{{ item.username }}", "exclusive": "{{ item.authorized_keys_exclusive | default(users_authorized_keys_exclusive) }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}}, "role_dict": {"arillso.users": {"py/object": "struct4.Role", "name": "arillso.users", "defined_in": "./role-test/testdata/arillso-users/arillso.users", "fqcn": "arillso.users", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "add host users", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add host users", "when": "users_host_vars is defined"}, "module_options": {"users": "{{ users | union(users_host_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "add group users", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "add group users", "when": "users_group_vars is defined"}, "module_options": {"users": "{{ users | union(users_group_vars) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_verion }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_verion": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/defaults.yml", "tasks": [], "role": "arillso.users", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows : check username length", "module": "fail", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : check username length", "when": "item.username|length>20", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"msg": "The username can be a maximum of 20 characters long."}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : adding users", "module": "win_user", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : adding users", "no_log": "{{ true if item.password is defined else false }}", "with_items": "{{ users }}"}, "module_options": {"name": "{{ item.username }}", "fullname": "{{ item.name | default(omit) }}", "description": "{{ item.description | default('Windows User') }}", "password": "{{ item.password | default(omit) }}", "groups": "{{ item.groups | default('Benutzer') }}", "state": "{{ item.state | default('present') }}", "account_disabled": "{{ item.account_disabled | default('false') }}", "groups_action": "{{ item.groups_action | default('replace') }}", "account_locked": "{{ item.account_locked | default('false') }}", "password_never_expires": "{{ item.password_never_expires | default('true') }}", "update_password": "{{ item.update_password | default('on_create') }}", "password_expired": "{{ item.password_expired | default('false') }}", "user_cannot_change_password": "{{ item.user_cannot_change_password | default(false) }}"}, "executable": "win_user", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : hide user accounts from the login screen", "module": "vars", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : hide user accounts from the login screen", "win_regedit": {"path": "{{ path }}\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList", "name": "{{ item.username }}", "type": "dword"}, "with_items": "{{ users }}", "no_log": "{{ true if item.password is defined else false }}", "when": "item.hide"}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft\\Windows NT"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows : UAC enable", "module": "vars", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Windows.yml", "options": {"name": "Windows : UAC enable", "win_regedit": {"path": "{{ path }}\\Windows\\CurrentVersion\\Policies\\CredUI", "name": "EnumerateAdministrators", "type": "dword", "data": 0}}, "module_options": {"path": "HKLM:\\SOFTWARE\\Microsoft"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Linux : adding users", "module": "user", "index": 0, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users", "become": true, "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"name": "{{ item.username }}", "uid": "{{ item.uid | default(omit) }}", "home": "{{ item.home | default(users_home ~ '/' ~ item.username ) }}", "comment": "{{ item.name | default(omit) }}", "system": "{{ item.system | default(omit) }}", "generate_ssh_key": "{{ item.ssh_key_generate | default(omit) }}", "group": "{{ omit if item.group is defined and item.group == item.username else (item.group if item.group is defined else omit) }}", "groups": "{{ item.groups|join(',') if item.groups is defined else users_groups|join(',') }}", "append": "{{ item.append | default(omit) }}", "password": "{{ item.password | default(lookup('password')) }}", "ssh_key_file": ".ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}", "ssh_key_passphrase": "{{ item.ssh_key_password | default(omit) }}", "ssh_key_bits": "{{ item.ssh_key_bits | default(users_ssh_key_bits) }}", "createhome": "{{ item.home_create | default(omit) }}", "shell": "{{ item.shell | default(omit) }}", "update_password": "{{ item.update_password | default(omit) }}"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : setting users home permission", "module": "file", "index": 1, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : setting users home permission", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n  item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"dest": "{{ item.home | default(users_home ~ '/' ~ item.username) }}", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "mode": "{{ item.home_mode if item.home_mode is defined else users_home_mode }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : adding users .ssh directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users .ssh directory", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined or\n item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"path": "{{ item.home | default(users_home ~ '/' ~ item.username) }}/.ssh", "owner": "{{ item.username }}", "group": "{{ item.group if item.group is defined else item.username }}", "state": "directory", "mode": "0700"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Linux : adding users authorized keys", "module": "authorized_key", "index": 3, "defined_in": "./role-test/testdata/arillso-users/arillso.users/tasks/distribution/Linux.yml", "options": {"name": "Linux : adding users authorized keys", "become": true, "when": "item.home_create is not defined or item.home_create", "with_items": "{{ users }}", "no_log": "'{{ true if item.password is defined\n or item.authorized_keys is defined else false }}'\n", "tags": ["configuration"]}, "module_options": {"key": "{{ item.authorized_keys | default([]) | join('\n') }}", "user": "{{ item.username }}", "exclusive": "{{ item.authorized_keys_exclusive | default(users_authorized_keys_exclusive) }}"}, "executable": "authorized_key", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "arillso.users", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}