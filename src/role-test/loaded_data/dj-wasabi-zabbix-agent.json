{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/dj-wasabi-zabbix-agent", "installed_roles": [{"py/object": "struct4.Role", "name": "dj-wasabi.zabbix-agent", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent", "fqcn": "dj-wasabi.zabbix-agent", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}", "{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "package", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and (zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python3-policycoreutils on RHEL8", "module": "package", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and ansible_distribution_major_version == \"8\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux-policy-targeted", "module": "package", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": "zabbix_selinux | bool", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix to run sudo commands (SELinux)", "module": "seboolean", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix 4.0", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix 4.0", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_package": "zabbix_agent-{{ zabbix_version_long }}-windows-amd64.zip", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "win_stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "register": "agent_file_info"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "win_file_version", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_file_version", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Checking Update (Set default)", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update (Set default)", "when": ["agent_file_info.stat.exists"]}, "module_options": {"update_zabbix_agent": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Checking Update", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update", "when": ["agent_file_info.stat.exists", "zabbix_win_exe_info.win_file_version.product_version is version(zabbix_version_long, '<')", "zabbix_agent_package_state == 'latest'"]}, "module_options": {"update_zabbix_agent": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}", "{{ zabbix_agent_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Place TLS-PSK file", "module": "win_copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Place TLS-PSK file", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": "restart win zabbix agent"}, "module_options": {"content": "{{ zabbix_agent_tlspsk_secret }}", "dest": "{{ zabbix_agent_tlspskfile }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix (Update)", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "stopped"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix (Update)", "module": "win_command", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix (Update)", "register": "zabbix_windows_install", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --uninstall", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory (Update)", "module": "win_file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "win_get_url", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "win_template", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "{{ zabbix_win_install_dir }}\\zabbix_agentd.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "register": "zabbix_windows_install", "args": {"creates": "{{ zabbix_win_install_dir }}\\.installed"}}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --install", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": "zabbix_windows_install is changed"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Getting Zabbix Service Recovery Settings", "module": "win_shell", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Getting Zabbix Service Recovery Settings", "register": "svc_recovery", "changed_when": false, "check_mode": false, "when": "zabbix_agent_win_svc_recovery"}, "module_options": "sc.exe qfailure \"Zabbix Agent\" 1100", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Setting Zabbix Service Recovery", "module": "win_shell", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Setting Zabbix Service Recovery", "when": ["'RESTART -- Delay' not in svc_recovery.stdout", "zabbix_agent_win_svc_recovery"]}, "module_options": "sc.exe failure \"Zabbix Agent\" actions= restart/5000/restart/10000/restart/20000 reset= 86400", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "win_firewall_rule", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Firewall rule"}, "module_options": {"name": "Zabbix Agent", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "win_firewall_rule", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "zypper", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-libxml2", "python-xml"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "zypper", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Darwin.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "userparameter.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "macOS.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: zabbix-agent\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": "zabbix_selinux | bool"}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface | bool", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix_agent to start (SELinux)", "module": "selinux_permissive", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Allow zabbix_agent to start (SELinux)", "become": true, "when": ["zabbix_selinux | bool"]}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "selinux_permissive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewall_enable | bool"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewall_enable  | bool) and (zabbix_agent_jmx_listenport | bool)"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_listenport)", "module": "firewalld", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewalld_enable | bool", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_jmx_listenport)", "module": "firewalld", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewalld_enable | bool) and (zabbix_agent_jmx_listenport | bool)", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 24, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Linux", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Linux", "when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Windows", "when": "zabbix_agent_os_family == \"Windows\""}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file", "module": "slurp", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | read existing TLS PSK file", "register": "zabbix_agent_tlspsk_base64", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists and zabbix_agent_tlspsk_read|length >= 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": "not zabbix_agent_tlspskcheck.stat.exists or zabbix_agent_tlspsk_read|length < 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_visible_hostname + '_' + lookup('password', '/dev/null chars=hexdigits length=4') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart win zabbix agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Docker.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "docker_container", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["vars", "zabbix-agent"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "init", "config", "service"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Windows\""]}, "module_options": "Windows.yml", "executable": "Windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Darwin\""]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create hostgroups", "module": "zabbix_group", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create hostgroups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_create_hostgroup }}", "validate_certs": "{{ zabbix_validate_certs|default(omit) }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a new host or update an existing host's info", "module": "zabbix_host", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create a new host or update an existing host's info", "when": ["zabbix_api_create_hosts | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_create_host }}", "force": "{{ zabbix_update_host }}", "proxy": "{{ zabbix_proxy }}", "inventory_mode": "{{ zabbix_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tlsservercertsubject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Updating host configuration with macros", "with_items": "{{ zabbix_macros | default([]) }}", "when": ["zabbix_api_create_hosts | bool", "zabbix_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}", "{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "package", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and (zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Install python3-policycoreutils on RHEL8", "module": "package", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and ansible_distribution_major_version == \"8\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Install selinux-policy-targeted", "module": "package", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": "zabbix_selinux | bool", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Allow zabbix to run sudo commands (SELinux)", "module": "seboolean", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix 4.0", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix 4.0", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_package": "zabbix_agent-{{ zabbix_version_long }}-windows-amd64.zip", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "win_stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "register": "agent_file_info"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "win_file_version", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_file_version", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Windows | Checking Update (Set default)", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update (Set default)", "when": ["agent_file_info.stat.exists"]}, "module_options": {"update_zabbix_agent": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Windows | Checking Update", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update", "when": ["agent_file_info.stat.exists", "zabbix_win_exe_info.win_file_version.product_version is version(zabbix_version_long, '<')", "zabbix_agent_package_state == 'latest'"]}, "module_options": {"update_zabbix_agent": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}", "{{ zabbix_agent_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Windows | Place TLS-PSK file", "module": "win_copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Place TLS-PSK file", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": "restart win zabbix agent"}, "module_options": {"content": "{{ zabbix_agent_tlspsk_secret }}", "dest": "{{ zabbix_agent_tlspskfile }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix (Update)", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "stopped"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix (Update)", "module": "win_command", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix (Update)", "register": "zabbix_windows_install", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --uninstall", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory (Update)", "module": "win_file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "win_get_url", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "win_template", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "{{ zabbix_win_install_dir }}\\zabbix_agentd.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "register": "zabbix_windows_install", "args": {"creates": "{{ zabbix_win_install_dir }}\\.installed"}}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --install", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": "zabbix_windows_install is changed"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Windows | Getting Zabbix Service Recovery Settings", "module": "win_shell", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Getting Zabbix Service Recovery Settings", "register": "svc_recovery", "changed_when": false, "check_mode": false, "when": "zabbix_agent_win_svc_recovery"}, "module_options": "sc.exe qfailure \"Zabbix Agent\" 1100", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Windows | Setting Zabbix Service Recovery", "module": "win_shell", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Setting Zabbix Service Recovery", "when": ["'RESTART -- Delay' not in svc_recovery.stdout", "zabbix_agent_win_svc_recovery"]}, "module_options": "sc.exe failure \"Zabbix Agent\" actions= restart/5000/restart/10000/restart/20000 reset= 86400", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "win_firewall_rule", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Firewall rule"}, "module_options": {"name": "Zabbix Agent", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "win_firewall_rule", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "zypper", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-libxml2", "python-xml"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "zypper", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: zabbix-agent\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": "zabbix_selinux | bool"}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface | bool", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Allow zabbix_agent to start (SELinux)", "module": "selinux_permissive", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Allow zabbix_agent to start (SELinux)", "become": true, "when": ["zabbix_selinux | bool"]}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "selinux_permissive", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 18}": {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 19}": {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 20}": {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewall_enable | bool"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 21}": {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewall_enable  | bool) and (zabbix_agent_jmx_listenport | bool)"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 22}": {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_listenport)", "module": "firewalld", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewalld_enable | bool", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 23}": {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_jmx_listenport)", "module": "firewalld", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewalld_enable | bool) and (zabbix_agent_jmx_listenport | bool)", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml\", \"index\": 24}": {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 24, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Linux", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Linux", "when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Windows", "when": "zabbix_agent_os_family == \"Windows\""}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file", "module": "slurp", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | read existing TLS PSK file", "register": "zabbix_agent_tlspsk_base64", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists and zabbix_agent_tlspsk_read|length >= 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": "not zabbix_agent_tlspskcheck.stat.exists or zabbix_agent_tlspsk_read|length < 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_visible_hostname + '_' + lookup('password', '/dev/null chars=hexdigits length=4') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart win zabbix agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "docker_container", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["vars", "zabbix-agent"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "init", "config", "service"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Windows\""]}, "module_options": "Windows.yml", "executable": "Windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Darwin\""]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Create hostgroups", "module": "zabbix_group", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create hostgroups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_create_hostgroup }}", "validate_certs": "{{ zabbix_validate_certs|default(omit) }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Create a new host or update an existing host's info", "module": "zabbix_host", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create a new host or update an existing host's info", "when": ["zabbix_api_create_hosts | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_create_host }}", "force": "{{ zabbix_update_host }}", "proxy": "{{ zabbix_proxy }}", "inventory_mode": "{{ zabbix_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tlsservercertsubject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Updating host configuration with macros", "with_items": "{{ zabbix_macros | default([]) }}", "when": ["zabbix_api_create_hosts | bool", "zabbix_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml": {"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}", "{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "package", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and (zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python3-policycoreutils on RHEL8", "module": "package", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and ansible_distribution_major_version == \"8\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux-policy-targeted", "module": "package", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": "zabbix_selinux | bool", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix to run sudo commands (SELinux)", "module": "seboolean", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix 4.0", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix 4.0", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_package": "zabbix_agent-{{ zabbix_version_long }}-windows-amd64.zip", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "win_stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "register": "agent_file_info"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "win_file_version", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_file_version", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Checking Update (Set default)", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update (Set default)", "when": ["agent_file_info.stat.exists"]}, "module_options": {"update_zabbix_agent": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Checking Update", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update", "when": ["agent_file_info.stat.exists", "zabbix_win_exe_info.win_file_version.product_version is version(zabbix_version_long, '<')", "zabbix_agent_package_state == 'latest'"]}, "module_options": {"update_zabbix_agent": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}", "{{ zabbix_agent_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Place TLS-PSK file", "module": "win_copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Place TLS-PSK file", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": "restart win zabbix agent"}, "module_options": {"content": "{{ zabbix_agent_tlspsk_secret }}", "dest": "{{ zabbix_agent_tlspskfile }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix (Update)", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "stopped"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix (Update)", "module": "win_command", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix (Update)", "register": "zabbix_windows_install", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --uninstall", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory (Update)", "module": "win_file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "win_get_url", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "win_template", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "{{ zabbix_win_install_dir }}\\zabbix_agentd.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "register": "zabbix_windows_install", "args": {"creates": "{{ zabbix_win_install_dir }}\\.installed"}}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --install", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": "zabbix_windows_install is changed"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Getting Zabbix Service Recovery Settings", "module": "win_shell", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Getting Zabbix Service Recovery Settings", "register": "svc_recovery", "changed_when": false, "check_mode": false, "when": "zabbix_agent_win_svc_recovery"}, "module_options": "sc.exe qfailure \"Zabbix Agent\" 1100", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Setting Zabbix Service Recovery", "module": "win_shell", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Setting Zabbix Service Recovery", "when": ["'RESTART -- Delay' not in svc_recovery.stdout", "zabbix_agent_win_svc_recovery"]}, "module_options": "sc.exe failure \"Zabbix Agent\" actions= restart/5000/restart/10000/restart/20000 reset= 86400", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "win_firewall_rule", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Firewall rule"}, "module_options": {"name": "Zabbix Agent", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "win_firewall_rule", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml": {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "zypper", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-libxml2", "python-xml"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "zypper", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml": {"py/object": "struct4.TaskFile", "name": "Darwin.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml": {"py/object": "struct4.TaskFile", "name": "userparameter.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml": {"py/object": "struct4.TaskFile", "name": "macOS.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml": {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: zabbix-agent\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": "zabbix_selinux | bool"}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml": {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface | bool", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix_agent to start (SELinux)", "module": "selinux_permissive", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Allow zabbix_agent to start (SELinux)", "become": true, "when": ["zabbix_selinux | bool"]}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "selinux_permissive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewall_enable | bool"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewall_enable  | bool) and (zabbix_agent_jmx_listenport | bool)"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_listenport)", "module": "firewalld", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewalld_enable | bool", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_jmx_listenport)", "module": "firewalld", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewalld_enable | bool) and (zabbix_agent_jmx_listenport | bool)", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 24, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml": {"py/object": "struct4.TaskFile", "name": "tlspsk_auto.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Linux", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Linux", "when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Windows", "when": "zabbix_agent_os_family == \"Windows\""}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file", "module": "slurp", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | read existing TLS PSK file", "register": "zabbix_agent_tlspsk_base64", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists and zabbix_agent_tlspsk_read|length >= 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": "not zabbix_agent_tlspskcheck.stat.exists or zabbix_agent_tlspsk_read|length < 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_visible_hostname + '_' + lookup('password', '/dev/null chars=hexdigits length=4') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart win zabbix agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml": {"py/object": "struct4.TaskFile", "name": "Docker.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "docker_container", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["vars", "zabbix-agent"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "init", "config", "service"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Windows\""]}, "module_options": "Windows.yml", "executable": "Windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Darwin\""]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create hostgroups", "module": "zabbix_group", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create hostgroups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_create_hostgroup }}", "validate_certs": "{{ zabbix_validate_certs|default(omit) }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a new host or update an existing host's info", "module": "zabbix_host", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create a new host or update an existing host's info", "when": ["zabbix_api_create_hosts | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_create_host }}", "force": "{{ zabbix_update_host }}", "proxy": "{{ zabbix_proxy }}", "inventory_mode": "{{ zabbix_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tlsservercertsubject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Updating host configuration with macros", "with_items": "{{ zabbix_macros | default([]) }}", "when": ["zabbix_api_create_hosts | bool", "zabbix_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}}, "role_dict": {"dj-wasabi.zabbix-agent": {"py/object": "struct4.Role", "name": "dj-wasabi.zabbix-agent", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent", "fqcn": "dj-wasabi.zabbix-agent", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "RedHat.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "tasks": [{"py/object": "struct4.Task", "name": "RedHat | Use EPEL package name", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Use EPEL package name", "when": ["zabbix_repo == \"epel\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"zabbix_agent_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-agent", "zabbix_sender_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-sender", "zabbix_get_package": "zabbix{{ zabbix_version | regex_replace('\\.', '') }}-get"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Amazon", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"NA\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 6 when Major Version is 2018.03", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2018\""]}, "module_options": {"zabbix_agent_distribution_major_version": 6}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Set zabbix_agent_distribution_major_version to 7 when Amazon 2", "when": ["ansible_distribution == \"Amazon\"", "ansible_distribution_major_version == \"2\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Fedora | Override zabbix_agent_distribution_major_version for Fedora", "when": ["ansible_distribution == \"Fedora\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "XCP-ng | Override zabbix_agent_distribution_major_version for XCP-ng", "when": ["ansible_distribution == \"XCP-ng\""]}, "module_options": {"zabbix_agent_distribution_major_version": 7}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Install basic repo file", "module": "yum_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Install basic repo file", "with_items": "{{ zabbix_repo_yum }}", "register": "yum_repo_installed", "become": true, "when": "zabbix_repo == \"zabbix\"", "tags": ["zabbix-agent"]}, "module_options": {"name": "{{ item.name }}", "description": "{{ item.description }}", "baseurl": "{{ item.baseurl }}", "gpgcheck": "{{ item.gpgcheck }}", "gpgkey": "{{ item.gpgkey }}", "priority": "{{ item.priority | default('99') }}", "state": "{{ item.state | default('present') }}", "proxy": "{{ zabbix_http_proxy | default(omit) }}"}, "executable": "yum_repository", "executable_type": "Module", "fqcn": "ansible.builtin.yum_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Do a yum clean", "module": "shell", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Do a yum clean", "args": {"warn": false}, "when": "yum_repo_installed.changed", "become": true, "tags": ["skip_ansible_lint"]}, "module_options": "yum clean all", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Installing zabbix-agent", "module": "package", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"pkg": ["{{ zabbix_agent_package }}", "{{ zabbix_sender_package }}", "{{ zabbix_get_package }}"], "state": "{{ zabbix_agent_package_state }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "package", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and (zabbix_agent_distribution_major_version == \"6\" or zabbix_agent_distribution_major_version == \"7\")", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "policycoreutils-python", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install python3-policycoreutils on RHEL8", "module": "package", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install python3-policycoreutils on RHEL8", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_policycoreutils_installed is succeeded", "when": "(zabbix_selinux | bool) and ansible_distribution_major_version == \"8\"", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "python3-policycoreutils", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux-policy-targeted", "module": "package", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Install selinux-policy-targeted", "register": "zabbix_agent_selinuxpolicytargeted_installed", "until": "zabbix_agent_selinuxpolicytargeted_installed is succeeded", "when": "zabbix_selinux | bool", "become": true, "tags": ["init", "zabbix-agent"]}, "module_options": {"name": "selinux-policy-targeted", "state": "installed"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "RedHat | Enable the service", "module": "service", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "RedHat | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix to run sudo commands (SELinux)", "module": "seboolean", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/RedHat.yml", "options": {"name": "Allow zabbix to run sudo commands (SELinux)", "when": ["ansible_selinux.status == \"enabled\"", "selinux_allow_zabbix_run_sudo|bool"], "tags": "selinux"}, "module_options": {"name": "zabbix_run_sudo", "persistent": true, "state": true}, "executable": "seboolean", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_ip_addresses' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_ip_addresses'][0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set default architecture", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set default architecture"}, "module_options": {"windows_arch": 32}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Override architecture if 64-bit", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Override architecture if 64-bit", "when": ["ansible_architecture == \"64-bit\""]}, "module_options": {"windows_arch": 64}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set path to zabbix.exe", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set path to zabbix.exe"}, "module_options": {"zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\win{{ windows_arch }}\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set variables specific to Zabbix 4.0", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set variables specific to Zabbix 4.0", "when": ["zabbix_version_long is version('4.0.0', '>=')"]}, "module_options": {"zabbix_win_package": "zabbix_agent-{{ zabbix_version_long }}-windows-amd64.zip", "zabbix_win_exe_path": "{{ zabbix_win_install_dir }}\\bin\\zabbix_agentd.exe"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if Zabbix agent is present", "module": "win_stat", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if Zabbix agent is present", "register": "agent_file_info"}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Get Installed Zabbix Agent Version", "module": "win_file_version", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Get Installed Zabbix Agent Version", "register": "zabbix_win_exe_info", "when": ["agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_exe_path }}"}, "executable": "win_file_version", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Checking Update (Set default)", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update (Set default)", "when": ["agent_file_info.stat.exists"]}, "module_options": {"update_zabbix_agent": false}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Checking Update", "module": "set_fact", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Checking Update", "when": ["agent_file_info.stat.exists", "zabbix_win_exe_info.win_file_version.product_version is version(zabbix_version_long, '<')", "zabbix_agent_package_state == 'latest'"]}, "module_options": {"update_zabbix_agent": true}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create directory structure", "module": "win_file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create directory structure", "with_items": ["{{ zabbix_win_install_dir }}", "{{ zabbix_agent_win_include }}"]}, "module_options": {"path": "{{ item }}", "state": "directory"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Place TLS-PSK file", "module": "win_copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Place TLS-PSK file", "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": "restart win zabbix agent"}, "module_options": {"content": "{{ zabbix_agent_tlspsk_secret }}", "dest": "{{ zabbix_agent_tlspskfile }}"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Stop Zabbix (Update)", "module": "win_service", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Stop Zabbix (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "stopped"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Uninstall Zabbix (Update)", "module": "win_command", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Uninstall Zabbix (Update)", "register": "zabbix_windows_install", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --uninstall", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Removing Zabbix Directory (Update)", "module": "win_file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Removing Zabbix Directory (Update)", "when": ["update_zabbix_agent | default(false)", "agent_file_info.stat.exists"]}, "module_options": {"path": "{{ zabbix_win_install_dir }}", "state": "absent"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Check if file is already downloaded", "module": "win_stat", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Check if file is already downloaded", "register": "file_info"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}"}, "executable": "win_stat", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Download Zabbix Agent Zip file", "module": "win_get_url", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Download Zabbix Agent Zip file", "register": "zabbix_agent_win_download_zip", "until": "zabbix_agent_win_download_zip is succeeded"}, "module_options": {"url": "{{ zabbix_win_download_link }}", "dest": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "force": false, "follow_redirects": "all", "proxy_url": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "executable": "win_get_url", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Unzip file", "module": "win_unzip", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Unzip file"}, "module_options": {"src": "{{ zabbix_win_install_dir }}\\{{ zabbix_win_package }}", "dest": "{{ zabbix_win_install_dir }}", "creates": "{{ zabbix_win_exe_path }}"}, "executable": "win_unzip", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Configure zabbix-agent", "module": "win_template", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Configure zabbix-agent", "notify": "restart win zabbix agent"}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "{{ zabbix_win_install_dir }}\\zabbix_agentd.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Register Service", "module": "win_command", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Register Service", "register": "zabbix_windows_install", "args": {"creates": "{{ zabbix_win_install_dir }}\\.installed"}}, "module_options": "{{ zabbix_win_exe_path }} --config {{ zabbix_win_install_dir }}\\zabbix_agentd.conf --install", "executable": "win_command", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Create done file so it won't register itself again", "module": "win_file", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Create done file so it won't register itself again", "when": "zabbix_windows_install is changed"}, "module_options": {"path": "{{ zabbix_win_install_dir }}\\.installed", "state": "touch"}, "executable": "win_file", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Set service startup mode to auto and ensure it is started", "module": "win_service", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Set service startup mode to auto and ensure it is started"}, "module_options": {"name": "Zabbix Agent", "start_mode": "auto", "state": "started"}, "executable": "win_service", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Getting Zabbix Service Recovery Settings", "module": "win_shell", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Getting Zabbix Service Recovery Settings", "register": "svc_recovery", "changed_when": false, "check_mode": false, "when": "zabbix_agent_win_svc_recovery"}, "module_options": "sc.exe qfailure \"Zabbix Agent\" 1100", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Setting Zabbix Service Recovery", "module": "win_shell", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Setting Zabbix Service Recovery", "when": ["'RESTART -- Delay' not in svc_recovery.stdout", "zabbix_agent_win_svc_recovery"]}, "module_options": "sc.exe failure \"Zabbix Agent\" actions= restart/5000/restart/10000/restart/20000 reset= 86400", "executable": "win_shell", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Firewall rule", "module": "win_firewall_rule", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Windows.yml", "options": {"name": "Windows | Firewall rule"}, "module_options": {"name": "Zabbix Agent", "localport": "{{ zabbix_agent_listenport }}", "action": "allow", "direction": "in", "protocol": "tcp", "state": "present", "enabled": true}, "executable": "win_firewall_rule", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Suse.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install zypper repo dependency", "module": "zypper", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Install zypper repo dependency", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "become": true, "register": "zabbix_agent_package_dependency", "until": "zabbix_agent_package_dependency is succeeded"}, "module_options": {"name": ["python-libxml2", "python-xml"], "state": "present"}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install basic repo file", "module": "zypper_repository", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install basic repo file", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['url'] }}", "name": "{{ suse[ansible_distribution][zabbix_agent_distribution_major_version]['name'] }}", "state": "present"}, "executable": "zypper_repository", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Suse | Install zabbix-agent", "module": "zypper", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Suse.yml", "options": {"name": "Suse | Install zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"name": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "disable_gpg_check": true}, "executable": "zypper", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Darwin.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart mac zabbix agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/usr/local/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "wheel", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create pid file directory for zabbix-agent", "module": "file", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Create pid file directory for zabbix-agent", "become": true}, "module_options": {"path": "/var/run/zabbix", "state": "directory", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if zabbix-agent service is running", "module": "shell", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Check if zabbix-agent service is running", "register": "launchctl_pid", "check_mode": false, "changed_when": false, "failed_when": "launchctl_pid.rc == 2", "become": true, "tags": ["init", "service"]}, "module_options": "set -o pipefail\nlaunchctl list | grep com.zabbix.zabbix_agentd | awk '{print $1}'\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "command", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Darwin.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)", "launchctl_pid.stdout == \"-\""], "tags": ["init", "service"]}, "module_options": "launchctl start com.zabbix.zabbix_agentd", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "userparameter.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "tasks": [{"py/object": "struct4.Task", "name": "Windows | Installing user-defined userparameters", "module": "win_template", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined userparameters", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_win_include }}\\{{ item.name }}.conf"}, "executable": "win_template", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Windows | Installing user-defined scripts", "module": "win_copy", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Windows | Installing user-defined scripts", "notify": ["restart win zabbix agent"], "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "{{ zabbix_win_install_dir }}\\scripts\\"}, "executable": "win_copy", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined userparameters", "module": "template", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined userparameters", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}"}, "module_options": {"src": "{{ zabbix_agent_userparameters_templates_src }}/{{ item.name }}.j2", "dest": "{{ zabbix_agent_include }}/userparameter_{{ item.name }}.conf", "owner": "zabbix", "group": "zabbix", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing user-defined scripts", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/userparameter.yml", "options": {"name": "Installing user-defined scripts", "notify": ["restart zabbix-agent", "restart mac zabbix agent"], "become": true, "with_items": "{{ zabbix_agent_userparameters }}", "when": "item.scripts_dir is defined"}, "module_options": {"src": "{{ zabbix_agent_userparameters_scripts_src }}/{{ item.scripts_dir }}", "dest": "/etc/zabbix/scripts/", "owner": "zabbix", "group": "zabbix", "mode": 493}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "macOS.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "tasks": [{"py/object": "struct4.Task", "name": "macOS | Check installed package version", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Check installed package version", "register": "pkgutil_version", "check_mode": false, "changed_when": false, "failed_when": "pkgutil_version.rc == 2"}, "module_options": "set -o pipefail\npkgutil --pkg-info 'com.zabbix.pkg.ZabbixAgent' | grep 'version:' | cut -d ' ' -f 2\n", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Download the Zabbix package", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Download the Zabbix package", "when": "pkgutil_version.stdout != zabbix_version_long"}, "module_options": {"url": "{{ zabbix_mac_download_link }}", "dest": "/tmp/{{ zabbix_mac_package }}", "mode": 420}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "macOS | Install the Zabbix package", "module": "command", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/macOS.yml", "options": {"name": "macOS | Install the Zabbix package", "become": true, "when": "pkgutil_version.stdout != zabbix_version_long", "tags": ["zabbix-agent"]}, "module_options": "installer -pkg \"/tmp/{{ zabbix_mac_package }}\" -target /", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Debian.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "tasks": [{"py/object": "struct4.Task", "name": "Include Zabbix gpg ids", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Include Zabbix gpg ids"}, "module_options": "zabbix.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set short version name", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Set short version name"}, "module_options": {"zabbix_short_version": "{{ zabbix_version | regex_replace('\\.', '') }}", "zabbix_underscore_version": "{{ zabbix_version | regex_replace('\\.', '_') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Install gpg key", "module": "apt_key", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Install gpg key", "when": ["zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"id": "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}", "url": "http://repo.zabbix.com/zabbix-official-repo.key"}, "executable": "apt_key", "executable_type": "Module", "fqcn": "ansible.builtin.apt_key", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Check for zabbix repositories", "module": "find", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Check for zabbix repositories", "register": "repositories", "become": true, "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\""], "tags": ["zabbix-agent", "init"]}, "module_options": {"paths": "/etc/apt/sources.list.d", "patterns": "repo_zabbix_com_zabbix*.list", "excludes": "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"}, "executable": "find", "executable_type": "Module", "fqcn": "ansible.builtin.find", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Remove unecessary zabbix repositories", "module": "file", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Remove unecessary zabbix repositories", "loop": "{{ repositories.files }}", "when": ["ansible_distribution in ['Ubuntu', 'Debian']", "zabbix_repo == \"zabbix\"", "zabbix_agent_src_reinstall"], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"path": "{{ item.path }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Debian", "module": "apt_repository", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Debian", "module": "apt_repository", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Debian", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Debian\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/debian/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb-src repository Ubuntu", "module": "apt_repository", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb-src repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing deb repository Ubuntu", "module": "apt_repository", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing deb repository Ubuntu", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": ["ansible_distribution == \"Ubuntu\"", "zabbix_repo == \"zabbix\""], "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"repo": "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu/ {{ zabbix_agent_distribution_release }} main", "state": "present"}, "executable": "apt_repository", "executable_type": "Module", "fqcn": "ansible.builtin.apt_repository", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Create /etc/apt/preferences.d/", "module": "file", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Create /etc/apt/preferences.d/", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"path": "/etc/apt/preferences.d/", "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Configuring the weight for APT", "module": "copy", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Configuring the weight for APT", "when": ["zabbix_agent_apt_priority | int"]}, "module_options": {"dest": "/etc/apt/preferences.d/zabbix-agent-{{ zabbix_underscore_version }}", "content": "Package: zabbix-agent\nPin: origin repo.zabbix.com\nPin-Priority: {{ zabbix_agent_apt_priority | int }}\n", "owner": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Installing zabbix-agent", "module": "apt", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "check_mode": false, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "{{ zabbix_agent_packages }}", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Mint | Installing zabbix-agent", "module": "apt", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Mint | Installing zabbix-agent", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "when": "ansible_distribution not in ['Ubuntu', 'Debian']", "register": "zabbix_agent_package_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "tags": ["zabbix-agent", "init"]}, "module_options": {"pkg": "zabbix-agent", "state": "{{ zabbix_agent_package_state }}", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install policycoreutils-python", "module": "apt", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Install policycoreutils-python", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}, "register": "zabbix_agent_policycoreutils_installed", "until": "zabbix_agent_package_installed is succeeded", "become": true, "when": "zabbix_selinux | bool"}, "module_options": {"pkg": "policycoreutils-python-utils", "state": "present", "update_cache": true, "cache_valid_time": 0, "force_apt_get": "{{ zabbix_apt_force_apt_get }}", "install_recommends": "{{ zabbix_apt_install_recommends }}"}, "executable": "apt", "executable_type": "Module", "fqcn": "ansible.builtin.apt", "annotations": {}}, {"py/object": "struct4.Task", "name": "Debian | Enable the service", "module": "service", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Debian.yml", "options": {"name": "Debian | Enable the service", "become": true, "tags": ["zabbix-agent", "init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "enabled": true, "use": "service"}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Set default ip address for zabbix_agent_ip", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set default ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "'ansible_default_ipv4' in hostvars[inventory_hostname]"]}, "module_options": {"zabbix_agent_ip": "{{ hostvars[inventory_hostname]['ansible_default_ipv4'].address }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get Total Private IP Addresses", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get Total Private IP Addresses", "when": ["ansible_all_ipv4_addresses is defined"]}, "module_options": {"total_private_ip_addresses": "{{ ansible_all_ipv4_addresses | ipaddr('private') | length }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first public ip address for zabbix_agent_ip", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first public ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses == '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('public') | first }}", "zabbix_agent_server": "{{ zabbix_agent_server_public_ip | default(zabbix_agent_server) }}", "zabbix_agent_serveractive": "{{ zabbix_agent_serveractive_public_ip | default(zabbix_agent_serveractive) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set first private ip address for zabbix_agent_ip", "module": "set_fact", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set first private ip address for zabbix_agent_ip", "when": ["zabbix_agent_ip is not defined", "total_private_ip_addresses is defined", "total_private_ip_addresses != '0'"]}, "module_options": {"zabbix_agent_ip": "{{ ansible_all_ipv4_addresses | ipaddr('private') | first }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listeninterface", "module": "fail", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listeninterface", "when": ["zabbix_agent_listeninterface | bool", "(zabbix_agent_listeninterface not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The specified network interface does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set network interface", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set network interface", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"]}, "module_options": {"network_interface": "ansible_{{ zabbix_agent_listeninterface }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get IP of agent_listeninterface when no agent_listenip specified", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get IP of agent_listeninterface when no agent_listenip specified", "when": ["zabbix_agent_listeninterface | bool", "not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config", "api"]}, "module_options": {"zabbix_agent_listenip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}", "zabbix_agent_ip": "{{ hostvars[inventory_hostname][network_interface]['ipv4'].address | default('0.0.0.0') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Default agent_listenip to all when not specified", "module": "set_fact", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Default agent_listenip to all when not specified", "when": ["not zabbix_agent_listenip"], "tags": ["zabbix-agent", "config"]}, "module_options": {"zabbix_agent_listenip": "0.0.0.0"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fail invalid specified agent_listenip", "module": "fail", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Fail invalid specified agent_listenip", "when": ["zabbix_agent_listenip != '0.0.0.0'", "zabbix_agent_listenip != '127.0.0.1'", "(zabbix_agent_listenip not in ansible_all_ipv4_addresses)"], "tags": ["zabbix-agent", "config"]}, "module_options": {"msg": "The agent_listenip does not exist"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get getenforce binary", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Get getenforce binary", "register": "getenforce_bin", "become": true}, "module_options": {"path": "/usr/sbin/getenforce"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Collect getenforce output", "module": "command", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Collect getenforce output", "register": "sestatus", "when": "getenforce_bin.stat.exists", "changed_when": false, "become": true, "check_mode": false}, "module_options": "getenforce", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "module": "set_fact", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Set zabbix_selinux to true if getenforce returns Enforcing or Permissive", "when": "getenforce_bin.stat.exists and (\"Enforcing\" in sestatus.stdout or \"Permissive\" in sestatus.stdout)"}, "module_options": {"zabbix_selinux": "{{ true }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow zabbix_agent to start (SELinux)", "module": "selinux_permissive", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Allow zabbix_agent to start (SELinux)", "become": true, "when": ["zabbix_selinux | bool"]}, "module_options": {"name": "zabbix_agent_t", "permissive": true}, "executable": "selinux_permissive", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix group", "module": "group", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix group", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "state": "present", "gid": "{{ zabbix_agent_docker_user_gid | default(omit) }}"}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Adding zabbix user", "module": "user", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Adding zabbix user", "become": true, "when": ["zabbix_agent_docker | bool"]}, "module_options": {"name": "zabbix", "group": "zabbix", "state": "present", "create_home": false, "home": "/etc/zabbix", "uid": "{{ zabbix_agent_docker_user_uid | default(omit) }}", "system": true}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure zabbix-agent", "module": "template", "index": 15, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure zabbix-agent", "notify": ["restart zabbix-agent"], "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "config", "init"]}, "module_options": {"src": "zabbix_agentd.conf.j2", "dest": "/etc/zabbix/{{ zabbix_agent_conf }}", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create directory for PSK file if not exist.", "module": "file", "index": 16, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create directory for PSK file if not exist.", "become": true, "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"path": "{{ zabbix_agent_tlspskfile | dirname }}", "mode": 493, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Place TLS PSK File", "module": "copy", "index": 17, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Place TLS PSK File", "become": true, "when": ["zabbix_agent_tlspskfile is defined", "zabbix_agent_tlspsk_secret is defined"], "notify": ["restart zabbix-agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskfile }}", "content": "{{ zabbix_agent_tlspsk_secret }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create include dir zabbix-agent", "module": "file", "index": 18, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Create include dir zabbix-agent", "become": true, "tags": ["config", "include"]}, "module_options": {"path": "{{ zabbix_agent_include }}", "owner": "root", "group": "zabbix", "mode": 488, "state": "directory"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the Docker container", "module": "include", "index": 19, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Install the Docker container", "when": ["zabbix_agent_docker | bool"]}, "module_options": "Docker.yml", "executable": "include", "executable_type": "Module", "fqcn": "ansible.builtin.include", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_listenport)", "module": "iptables", "index": 20, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewall_enable | bool"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure IPTables (zabbix_agent_jmx_listenport)", "module": "iptables", "index": 21, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure IPTables (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewall_enable  | bool) and (zabbix_agent_jmx_listenport | bool)"}, "module_options": {"action": "{{ zabbix_agent_firewall_action }}", "destination_port": "{{ zabbix_agent_listenport | string }}", "source": "{{ zabbix_agent_firewall_source | default(omit) }}", "protocol": "tcp", "chain": "{{ zabbix_agent_firewall_chain }}", "jump": "ACCEPT"}, "executable": "iptables", "executable_type": "Module", "fqcn": "ansible.builtin.iptables", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_listenport)", "module": "firewalld", "index": 22, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_listenport)", "become": true, "when": "zabbix_agent_firewalld_enable | bool", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Configure firewalld (zabbix_agent_jmx_listenport)", "module": "firewalld", "index": 23, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Configure firewalld (zabbix_agent_jmx_listenport)", "become": true, "when": "(zabbix_agent_firewalld_enable | bool) and (zabbix_agent_jmx_listenport | bool)", "notify": ["firewalld-reload"], "tags": "zabbix_agent_firewalld_enable"}, "module_options": {"rich_rule": "rule family=\"ipv4\" source address=\"{{ zabbix_agent_firewalld_source }}\" port protocol=\"tcp\" port=\"{{ zabbix_agent_jmx_listenport }}\" accept", "zone": "{{ zabbix_agent_firewalld_zone }}", "permanent": true, "state": "enabled"}, "executable": "firewalld", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Make sure the zabbix-agent service is running", "module": "service", "index": 24, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Linux.yml", "options": {"name": "Make sure the zabbix-agent service is running", "become": true, "when": ["not (zabbix_agent_docker | bool)"], "tags": ["init", "service"]}, "module_options": {"name": "{{ zabbix_agent_service }}", "state": "started", "enabled": true}, "executable": "service", "executable_type": "Module", "fqcn": "ansible.builtin.service", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "tlspsk_auto.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "tasks": [{"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Linux", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Linux", "when": "(zabbix_agent_os_family != \"Windows\") or (zabbix_agent_docker | bool)"}, "module_options": {"zabbix_agent_tlspskfile": "/etc/zabbix/tls_psk_auto.secret", "zabbix_agent_tlspskidentity_file": "/etc/zabbix/tls_psk_auto.identity"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Set default path variables for Windows", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Set default path variables for Windows", "when": "zabbix_agent_os_family == \"Windows\""}, "module_options": {"zabbix_agent_tlspskfile": "{{ zabbix_win_install_dir }}\tls_psk_auto.secret.txt", "zabbix_agent_tlspskidentity_file": "{{ zabbix_win_install_dir }}\tls_psk_auto.identity.txt"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK file", "module": "stat", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK file", "register": "zabbix_agent_tlspskcheck"}, "module_options": {"path": "{{ zabbix_agent_tlspskfile }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | read existing TLS PSK file", "module": "slurp", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | read existing TLS PSK file", "register": "zabbix_agent_tlspsk_base64", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskfile }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Save existing TLS PSK secret", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Save existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists"}, "module_options": {"zabbix_agent_tlspsk_read": "{{ zabbix_agent_tlspsk_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK secret", "module": "set_fact", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK secret", "when": "zabbix_agent_tlspskcheck.stat.exists and zabbix_agent_tlspsk_read|length >= 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ zabbix_agent_tlspsk_read }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK secret", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK secret", "when": "not zabbix_agent_tlspskcheck.stat.exists or zabbix_agent_tlspsk_read|length < 32"}, "module_options": {"zabbix_agent_tlspsk_secret": "{{ lookup('password', '/dev/null chars=hexdigits length=64') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Check for existing TLS PSK identity", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Check for existing TLS PSK identity", "register": "zabbix_agent_tlspskidentity_check"}, "module_options": {"path": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Read existing TLS PSK identity file", "module": "slurp", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Read existing TLS PSK identity file", "register": "zabbix_agent_tlspskidentity_base64", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"src": "{{ zabbix_agent_tlspskidentity_file }}"}, "executable": "slurp", "executable_type": "Module", "fqcn": "ansible.builtin.slurp", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Use existing TLS PSK identity", "module": "set_fact", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Use existing TLS PSK identity", "when": "zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_agent_tlspskidentity_base64['content'] | b64decode | trim }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Generate new TLS PSK identity", "module": "set_fact", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Generate new TLS PSK identity", "when": "not zabbix_agent_tlspskidentity_check.stat.exists"}, "module_options": {"zabbix_agent_tlspskidentity": "{{ zabbix_visible_hostname + '_' + lookup('password', '/dev/null chars=hexdigits length=4') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Template TLS PSK identity in file", "module": "copy", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Template TLS PSK identity in file", "when": ["zabbix_agent_tlspskidentity_file is defined", "zabbix_agent_tlspskidentity is defined"], "notify": ["restart zabbix-agent", "restart win zabbix agent", "restart mac zabbix agent"]}, "module_options": {"dest": "{{ zabbix_agent_tlspskidentity_file }}", "content": "{{ zabbix_agent_tlspskidentity }}", "owner": "zabbix", "group": "zabbix", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/tlspsk_auto.yml", "options": {"name": "AutoPSK | Default tlsaccept and tlsconnect to enforce PSK", "when": "zabbix_api_create_hosts"}, "module_options": {"zabbix_agent_tlsaccept": "psk", "zabbix_agent_tlsconnect": "psk"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Docker.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create volume mount string", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Create volume mount string", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"volume_mount": "{{ zabbix_agent_tlspskfile }}:/var/lib/zabbix/enc/tlspskfile", "tls_key": {"ZBX_TLSPSKFILE": "tlspskfile"}}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Add zabbix_agent_tlspskfile to volume mount", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Add zabbix_agent_tlspskfile to volume mount", "when": ["zabbix_agent_tlspskfile is defined"]}, "module_options": {"zabbix_agent_docker_volumes": "{{ zabbix_agent_docker_volumes + [ volume_mount ] }}", "zabbix_agent_docker_env": "{{ zabbix_agent_docker_env | combine(tls_key) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Zabbix Docker container is running", "module": "docker_container", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/Docker.yml", "options": {"name": "Ensure Zabbix Docker container is running", "environment": {"http_proxy": "{{ zabbix_http_proxy | default(None) | default(omit) }}", "https_proxy": "{{ zabbix_https_proxy | default(None) | default(omit) }}"}}, "module_options": {"name": "{{ zabbix_agent_docker_name }}", "image": "{{ zabbix_agent_docker_image }}:{{ zabbix_agent_docker_image_tag }}", "state": "{{ zabbix_agent_docker_state }}", "restart_policy": "{{ zabbix_agent_docker_restart_policy }}", "network_mode": "{{ zabbix_agent_docker_network_mode }}", "published_ports": "{{ zabbix_agent_docker_ports }}", "privileged": "{{ zabbix_agent_docker_privileged }}", "security_opts": "{{ zabbix_agent_docker_security_opts }}", "volumes": "{{ zabbix_agent_docker_volumes }}", "env": "{{ zabbix_agent_docker_env }}"}, "executable": "docker_container", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "Fix facts for linuxmint - distribution release", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - distribution release", "when": ["ansible_os_family == \"Linuxmint\"", "ansible_distribution_release == \"sonya\" or ansible_distribution_release == \"serena\""]}, "module_options": {"zabbix_agent_distribution_release": "xenial"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for linuxmint - family", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for linuxmint - family", "when": ["ansible_os_family == \"Linuxmint\""]}, "module_options": {"zabbix_agent_os_family": "Debian"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Fix facts for XCP-ng - family", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Fix facts for XCP-ng - family", "when": ["ansible_os_family == \"XCP-ng\""]}, "module_options": {"zabbix_agent_os_family": "RedHat"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Include OS-specific variables", "module": "include_vars", "index": 3, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Include OS-specific variables", "tags": ["vars", "zabbix-agent"]}, "module_options": "{{ zabbix_agent_os_family }}.yml", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["not (zabbix_agent_docker | bool)"], "tags": ["zabbix-agent", "init", "config", "service"]}, "module_options": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable": "{{ zabbix_agent_os_family if (zabbix_agent_os_family not in ['Sangoma']) else 'RedHat' }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install local python-netaddr package", "module": "pip", "index": 5, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install local python-netaddr package", "register": "zabbix_python_netaddr_package_installed", "until": "zabbix_python_netaddr_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "ansible_all_ipv4_addresses is defined or (zabbix_agent_ip is not defined and total_private_ip_addresses is defined)"]}, "module_options": {"name": "netaddr", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Encrypt with TLS PSK auto management", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Encrypt with TLS PSK auto management", "when": ["zabbix_agent_tlspsk_auto | bool", "(zabbix_agent_tlspskfile is undefined) or (zabbix_agent_tlspskfile | length == '0')", "(zabbix_agent_tlspsk_secret is undefined) or (zabbix_agent_tlspsk_secret | length == '0')"]}, "module_options": "tlspsk_auto.yml", "executable": "tlspsk_auto.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Windows\""]}, "module_options": "Windows.yml", "executable": "Windows.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["(zabbix_agent_os_family != \"Windows\" and zabbix_agent_os_family != \"Darwin\") or (zabbix_agent_docker | bool)"]}, "module_options": "Linux.yml", "executable": "Linux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install the correct repository", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Install the correct repository", "when": ["zabbix_agent_os_family == \"Darwin\""]}, "module_options": "macOS.yml", "executable": "macOS.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Installing the Zabbix-api package on localhost", "module": "pip", "index": 10, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Installing the Zabbix-api package on localhost", "register": "zabbix_api_package_installed", "until": "zabbix_api_package_installed is succeeded", "delegate_to": "localhost", "run_once": true, "become": "{{ zabbix_agent_become_on_localhost }}", "when": ["zabbix_install_pip_packages | bool", "(zabbix_api_create_hostgroup | bool) or (zabbix_api_create_hosts | bool)"]}, "module_options": {"name": "zabbix-api", "state": "present"}, "executable": "pip", "executable_type": "Module", "fqcn": "ansible.builtin.pip", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create hostgroups", "module": "zabbix_group", "index": 11, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create hostgroups", "when": ["zabbix_api_create_hostgroup | bool"], "register": "zabbix_api_hostgroup_created", "until": "zabbix_api_hostgroup_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_group": "{{ zabbix_host_groups }}", "state": "{{ zabbix_create_hostgroup }}", "validate_certs": "{{ zabbix_validate_certs|default(omit) }}"}, "executable": "zabbix_group", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create a new host or update an existing host's info", "module": "zabbix_host", "index": 12, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Create a new host or update an existing host's info", "when": ["zabbix_api_create_hosts | bool"], "register": "zabbix_api_host_created", "until": "zabbix_api_host_created is succeeded", "delegate_to": "localhost", "become": false, "changed_when": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "host_groups": "{{ zabbix_host_groups }}", "link_templates": "{{ zabbix_link_templates }}", "status": "{{ zabbix_host_status }}", "state": "{{ zabbix_create_host }}", "force": "{{ zabbix_update_host }}", "proxy": "{{ zabbix_proxy }}", "inventory_mode": "{{ zabbix_inventory_mode }}", "interfaces": "{{ zabbix_agent_interfaces }}", "visible_name": "{{ zabbix_visible_hostname | default(zabbix_agent_hostname) }}", "tls_psk": "{{ zabbix_agent_tlspsk_secret | default(omit) }}", "tls_psk_identity": "{{ zabbix_agent_tlspskidentity | default(omit) }}", "tls_issuer": "{{ zabbix_agent_tlsservercertissuer | default(omit) }}", "tls_subject": "{{ zabbix_agent_tlsservercertsubject | default(omit) }}", "tls_accept": "{{ zabbix_agent_tls_config[zabbix_agent_tlsaccept if zabbix_agent_tlsaccept else 'unencrypted'] }}", "tls_connect": "{{ zabbix_agent_tls_config[zabbix_agent_tlsconnect if zabbix_agent_tlsconnect else 'unencrypted'] }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}", "description": "{{ zabbix_agent_description | default(omit) }}", "inventory_zabbix": "{{ zabbix_agent_inventory_zabbix | default({}) }}", "ipmi_authtype": "{{ zabbix_agent_ipmi_authtype | default(omit) }}", "ipmi_password": "{{ zabbix_agent_ipmi_password| default(omit) }}", "ipmi_privilege": "{{ zabbix_agent_ipmi_privilege | default(omit) }}", "ipmi_username": "{{ zabbix_agent_ipmi_username | default(omit) }}"}, "executable": "zabbix_host", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Updating host configuration with macros", "module": "zabbix_hostmacro", "index": 13, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Updating host configuration with macros", "with_items": "{{ zabbix_macros | default([]) }}", "when": ["zabbix_api_create_hosts | bool", "zabbix_macros is defined", "item.macro_key is defined"], "register": "zabbix_api_hostmarcro_created", "until": "zabbix_api_hostmarcro_created is succeeded", "delegate_to": "localhost", "become": false, "tags": ["api"]}, "module_options": {"server_url": "{{ zabbix_url }}", "http_login_user": "{{ zabbix_api_http_user | default(omit) }}", "http_login_password": "{{ zabbix_api_http_password | default(omit) }}", "login_user": "{{ zabbix_api_user }}", "login_password": "{{ zabbix_api_pass }}", "host_name": "{{ zabbix_agent_hostname }}", "macro_name": "{{ item.macro_key }}", "macro_value": "{{ item.macro_value }}", "validate_certs": "{{ zabbix_validate_certs | default(omit) }}"}, "executable": "zabbix_hostmacro", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Including userparameters", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/dj-wasabi-zabbix-agent/dj-wasabi.zabbix-agent/tasks/main.yml", "options": {"name": "Including userparameters", "when": "zabbix_agent_userparameters|length > 0", "tags": ["zabbix-agent", "userparameter"]}, "module_options": "userparameter.yml", "executable": "userparameter.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "dj-wasabi.zabbix-agent", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}