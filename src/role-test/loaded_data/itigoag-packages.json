{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/itigoag-packages", "installed_roles": [{"py/object": "struct4.Role", "name": "itigoag.packages", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages", "fqcn": "itigoag.packages", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "add group packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add group packages", "with_dict": "{{ packages_group | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "add host packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add host packages", "with_dict": "{{ packages_host | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : ensure facts of chocolatey", "module": "win_chocolatey_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : ensure facts of chocolatey", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "win_chocolatey_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : include install tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : include install tasks", "loop": "{{ packages | dict2items }}", "loop_control": {"loop_var": "loop_choco"}, "when": "not ( packages_var_lower | json_query(packages_var_query)) or loop_choco.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ loop_choco.key | lower }}`]", "packages_var_lower": "{{ ansible_chocolatey.packages | lower }}"}, "tags": ["packages"]}, "module_options": "choco/install.yml", "executable": "choco/install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : get the package facts", "module": "package_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : get the package facts", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : install application", "module": "package", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : install application", "with_dict": ["{{ packages }}"], "when": "not ( packages_var_lower | json_query(packages_var_query)) or item.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ item.key | lower }}`]", "packages_var_lower": "{{ ansible_facts.packages | lower }}"}, "tags": ["packages"]}, "module_options": {"name": "{{ item.key }}", "state": "{{ 'latest' if item.value.version == 'latest' else 'present' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : install {{ key }} {{ version }}", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml", "options": {"name": "windows : install {{ key }} {{ version }}", "win_chocolatey": {"name": "{{ key }}", "state": "{{ state | default('latest' if version == 'latest' else 'present') }}", "params": "{{ params }}", "version": "{{ version if version != 'latest' else omit }}", "pinned": "{{ pinned }}", "source": "{{ source }}"}}, "module_options": {"key": "{{ loop_choco.key }}", "version": "{{ loop_choco.value.version }}", "params": "{{ loop_choco.value.params | default(omit) }}", "pkg_pin": "{{ loop_choco.value.pkg_update | default(omit) }}", "pinned": "{{ 'true' if pkg_pin is defined and not pkg_pin else 'false' }}", "source": "{{ loop_choco.value.source | default(omit) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "add group packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add group packages", "with_dict": "{{ packages_group | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "add host packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add host packages", "with_dict": "{{ packages_host | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "windows : ensure facts of chocolatey", "module": "win_chocolatey_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : ensure facts of chocolatey", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "win_chocolatey_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "windows : include install tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : include install tasks", "loop": "{{ packages | dict2items }}", "loop_control": {"loop_var": "loop_choco"}, "when": "not ( packages_var_lower | json_query(packages_var_query)) or loop_choco.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ loop_choco.key | lower }}`]", "packages_var_lower": "{{ ansible_chocolatey.packages | lower }}"}, "tags": ["packages"]}, "module_options": "choco/install.yml", "executable": "choco/install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "linux : get the package facts", "module": "package_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : get the package facts", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "linux : install application", "module": "package", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : install application", "with_dict": ["{{ packages }}"], "when": "not ( packages_var_lower | json_query(packages_var_query)) or item.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ item.key | lower }}`]", "packages_var_lower": "{{ ansible_facts.packages | lower }}"}, "tags": ["packages"]}, "module_options": {"name": "{{ item.key }}", "state": "{{ 'latest' if item.value.version == 'latest' else 'present' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "windows : install {{ key }} {{ version }}", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml", "options": {"name": "windows : install {{ key }} {{ version }}", "win_chocolatey": {"name": "{{ key }}", "state": "{{ state | default('latest' if version == 'latest' else 'present') }}", "params": "{{ params }}", "version": "{{ version if version != 'latest' else omit }}", "pinned": "{{ pinned }}", "source": "{{ source }}"}}, "module_options": {"key": "{{ loop_choco.key }}", "version": "{{ loop_choco.value.version }}", "params": "{{ loop_choco.value.params | default(omit) }}", "pkg_pin": "{{ loop_choco.value.pkg_update | default(omit) }}", "pinned": "{{ 'true' if pkg_pin is defined and not pkg_pin else 'false' }}", "source": "{{ loop_choco.value.source | default(omit) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "add group packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add group packages", "with_dict": "{{ packages_group | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "add host packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add host packages", "with_dict": "{{ packages_host | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml": {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml": {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : ensure facts of chocolatey", "module": "win_chocolatey_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : ensure facts of chocolatey", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "win_chocolatey_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : include install tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : include install tasks", "loop": "{{ packages | dict2items }}", "loop_control": {"loop_var": "loop_choco"}, "when": "not ( packages_var_lower | json_query(packages_var_query)) or loop_choco.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ loop_choco.key | lower }}`]", "packages_var_lower": "{{ ansible_chocolatey.packages | lower }}"}, "tags": ["packages"]}, "module_options": "choco/install.yml", "executable": "choco/install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml": {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : get the package facts", "module": "package_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : get the package facts", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : install application", "module": "package", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : install application", "with_dict": ["{{ packages }}"], "when": "not ( packages_var_lower | json_query(packages_var_query)) or item.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ item.key | lower }}`]", "packages_var_lower": "{{ ansible_facts.packages | lower }}"}, "tags": ["packages"]}, "module_options": {"name": "{{ item.key }}", "state": "{{ 'latest' if item.value.version == 'latest' else 'present' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : install {{ key }} {{ version }}", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml", "options": {"name": "windows : install {{ key }} {{ version }}", "win_chocolatey": {"name": "{{ key }}", "state": "{{ state | default('latest' if version == 'latest' else 'present') }}", "params": "{{ params }}", "version": "{{ version if version != 'latest' else omit }}", "pinned": "{{ pinned }}", "source": "{{ source }}"}}, "module_options": {"key": "{{ loop_choco.key }}", "version": "{{ loop_choco.value.version }}", "params": "{{ loop_choco.value.params | default(omit) }}", "pkg_pin": "{{ loop_choco.value.pkg_update | default(omit) }}", "pinned": "{{ 'true' if pkg_pin is defined and not pkg_pin else 'false' }}", "source": "{{ loop_choco.value.source | default(omit) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}}, "role_dict": {"itigoag.packages": {"py/object": "struct4.Role", "name": "itigoag.packages", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages", "fqcn": "itigoag.packages", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "add OS specific variables", "module": "include_vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add OS specific variables", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["vars"]}], "loop_control": {"loop_var": "loop_vars"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_vars }}", "executable": "include_vars", "executable_type": "Module", "fqcn": "ansible.builtin.include_vars", "annotations": {}}, {"py/object": "struct4.Task", "name": "add group packages", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add group packages", "with_dict": "{{ packages_group | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "add host packages", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "add host packages", "with_dict": "{{ packages_host | default({}) }}"}, "module_options": {"temp_dict": "{ '{{ item.key }}':'{{ item.value }}' }", "packages": "{{ packages | combine( {item.key:item.value} ) }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "include distribution tasks", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/main.yml", "options": {"name": "include distribution tasks", "with_first_found": [{"files": ["{{ distribution }}-{{ distribution_version }}.yml", "{{ distribution }}-{{ distribution_major_version }}.yml", "{{ distribution }}.yml", "{{ ansible_os_family }}.yml", "{{ ansible_system }}.yml", "defaults.yml"], "paths": ["distribution"]}], "loop_control": {"loop_var": "loop_distribution"}, "vars": {"distribution": "{{ ansible_distribution }}", "distribution_version": "{{ ansible_distribution_version }}", "distribution_major_version": "{{ ansible_distribution_major_version }}"}, "tags": ["configuration", "packages"]}, "module_options": "{{ loop_distribution }}", "executable": "{{ loop_distribution }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "defaults.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml", "tasks": [{"py/object": "struct4.Task", "name": "Message", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/defaults.yml", "options": {"name": "Message"}, "module_options": {"msg": "Your {{ ansible_system }} is not supported"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Windows.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : ensure facts of chocolatey", "module": "win_chocolatey_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : ensure facts of chocolatey", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "win_chocolatey_facts", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "windows : include install tasks", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Windows.yml", "options": {"name": "windows : include install tasks", "loop": "{{ packages | dict2items }}", "loop_control": {"loop_var": "loop_choco"}, "when": "not ( packages_var_lower | json_query(packages_var_query)) or loop_choco.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ loop_choco.key | lower }}`]", "packages_var_lower": "{{ ansible_chocolatey.packages | lower }}"}, "tags": ["packages"]}, "module_options": "choco/install.yml", "executable": "choco/install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "Linux.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "tasks": [{"py/object": "struct4.Task", "name": "linux : get the package facts", "module": "package_facts", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : get the package facts", "tags": ["configuration", "packages"]}, "module_options": null, "executable": "package_facts", "executable_type": "Module", "fqcn": "ansible.builtin.package_facts", "annotations": {}}, {"py/object": "struct4.Task", "name": "linux : install application", "module": "package", "index": 1, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/Linux.yml", "options": {"name": "linux : install application", "with_dict": ["{{ packages }}"], "when": "not ( packages_var_lower | json_query(packages_var_query)) or item.value.version != 'latest'\n", "vars": {"packages_var_query": "[?package==`{{ item.key | lower }}`]", "packages_var_lower": "{{ ansible_facts.packages | lower }}"}, "tags": ["packages"]}, "module_options": {"name": "{{ item.key }}", "state": "{{ 'latest' if item.value.version == 'latest' else 'present' }}"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "windows : install {{ key }} {{ version }}", "module": "vars", "index": 0, "defined_in": "./role-test/testdata/itigoag-packages/itigoag.packages/tasks/distribution/choco/install.yml", "options": {"name": "windows : install {{ key }} {{ version }}", "win_chocolatey": {"name": "{{ key }}", "state": "{{ state | default('latest' if version == 'latest' else 'present') }}", "params": "{{ params }}", "version": "{{ version if version != 'latest' else omit }}", "pinned": "{{ pinned }}", "source": "{{ source }}"}}, "module_options": {"key": "{{ loop_choco.key }}", "version": "{{ loop_choco.value.version }}", "params": "{{ loop_choco.value.params | default(omit) }}", "pkg_pin": "{{ loop_choco.value.pkg_update | default(omit) }}", "pinned": "{{ 'true' if pkg_pin is defined and not pkg_pin else 'false' }}", "source": "{{ loop_choco.value.source | default(omit) }}"}, "executable": "vars", "executable_type": "Module", "fqcn": "ansible.builtin.vars", "annotations": {}}], "role": "itigoag.packages", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}