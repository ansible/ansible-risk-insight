{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/ansistrano-deploy", "installed_roles": [{"py/object": "struct4.Role", "name": "ansistrano.deploy", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy", "fqcn": "ansistrano.deploy", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "funding.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "tasks": [{"py/object": "struct4.Task", "name": "Thanks to all our generous sponsors!", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Thanks to all our generous sponsors!"}, "module_options": {"msg": "Ansistrano is funded by: Rigor Guild, Holaluz"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Please consider sponsoring Ansistrano", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Please consider sponsoring Ansistrano"}, "module_options": {"msg": "If Ansistrano is saving money for your company, please visit https://github.com/sponsors/ansistrano and consider a small donation!"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "update-code.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get release version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release version", "run_once": true, "when": "ansistrano_release_version is not defined", "delegate_to": "127.0.0.1"}, "module_options": {"ansistrano_release_version": "{{ lookup('pipe', 'date -u +%Y%m%d%H%M%SZ') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Get release path", "module": "command", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release path", "check_mode": false, "register": "ansistrano_release_path"}, "module_options": "echo \"{{ ansistrano_releases_path }}/{{ ansistrano_release_version }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {}, "module_options": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy release version into REVISION file", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy release version into REVISION file", "when": "ansistrano_git_result is not defined"}, "module_options": {"content": "{{ ansistrano_release_version }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy git released version into REVISION file", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy git released version into REVISION file", "when": "ansistrano_git_result is defined"}, "module_options": {"content": "{{ ansistrano_git_result.after }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "symlink-shared.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths and files", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths and files", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "link", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/../shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure .rsync-filter is absent", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure .rsync-filter is absent", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/.rsync-filter"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"dest": "{{ ansistrano_release_path.stdout }}/.rsync-filter", "line": "- /{{ item }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure deployment base path exists", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure deployment base path exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure releases folder exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure releases folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_releases_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared elements folder exists", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared elements folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared paths exists", "with_items": "{{ ansistrano_shared_paths }}", "when": "ansistrano_ensure_shared_paths_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure basedir shared files exists", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure basedir shared files exists", "with_items": "{{ ansistrano_shared_files }}", "when": "ansistrano_ensure_basedirs_shared_files_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item | dirname }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "anon-stats.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Send anonymous stats", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml", "options": {"name": "ANSISTRANO | Send anonymous stats", "when": "ansistrano_allow_anonymous_stats|bool", "run_once": true, "ignore_errors": true, "delegate_to": "127.0.0.1", "become": false}, "module_options": {"url": "https://ansistrano.com/deploy", "follow_redirects": "all", "method": "POST", "timeout": 5, "body": "deploy_via={{ ansistrano_deploy_via | default('rsync') }}&version={{ ansible_version.string }}", "headers": {"Content-Type": "application/x-www-form-urlencoded"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "empty.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/empty.yml", "tasks": [], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "rsync-deploy.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a symlink", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a symlink", "when": "stat_current_dir.stat.islnk is defined and stat_current_dir.stat.islnk"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure current folder is a directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure current folder is a directory"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Sync release to new current path", "module": "command", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Sync release to new current path"}, "module_options": "rsync -a -F --no-times --delete-after \"{{ ansistrano_release_path.stdout }}/\" \"{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths", "module": "file", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "cleanup.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Clean up releases", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml", "options": {"name": "ANSISTRANO | Clean up releases", "when": "ansistrano_keep_releases | int > 0"}, "module_options": "ls -1dt {{ ansistrano_releases_path }}/* | tail -n +{{ ansistrano_keep_releases | int + 1 }} | xargs rm -rf", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "symlink.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a directory", "when": "stat_current_dir.stat.isdir is defined and stat_current_dir.stat.isdir"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Change softlink to new release", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Change softlink to new release"}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}", "src": "./{{ ansistrano_version_dir }}/{{ ansistrano_release_version }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "setup.yml", "executable": "setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "update-code.yml", "executable": "update-code.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "symlink-shared.yml", "executable": "symlink-shared.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"symlink\""}, "module_options": "symlink.yml", "executable": "symlink.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"rsync\""}, "module_options": "rsync-deploy.yml", "executable": "rsync-deploy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "cleanup.yml", "executable": "cleanup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "anon-stats.yml", "executable": "anon-stats.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "funding.yml", "executable": "funding.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "rsync_direct.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path", "module": "synchronize", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml", "options": {"name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "gcs_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "gcs.yml", "executable": "gcs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | gcs_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {"name": "ANSISTRANO | gcs_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "rsync.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "module": "command", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "check_mode": false, "register": "ansistrano_shared_rsync_copy_path"}, "module_options": "echo \"{{ ansistrano_shared_path }}/.shared-copy\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy", "module": "synchronize", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_shared_rsync_copy_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Deploy existing code to servers", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Deploy existing code to servers"}, "module_options": "cp -a {{ ansistrano_shared_rsync_copy_path.stdout }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "copy.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Deploy existing code to remote servers", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Deploy existing code to remote servers"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group == \"default\""}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "(ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group != \"default\") or (ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group == \"default\")\n"}, "module_options": {"msg": "must set ansistrano_unarchive_group and ansistrano_unarchive_owner"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "module": "unarchive", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "when": "ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group != \"default\"\n"}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "owner": "{{ ansistrano_unarchive_owner }}", "group": "{{ ansistrano_unarchive_group }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Delete archived file", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Delete archived file"}, "module_options": {"path": "{{ ansistrano_archived_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "hg.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Update remote repository", "module": "hg", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Update remote repository", "register": "ansistrano_hg_result"}, "module_options": {"repo": "{{ ansistrano_hg_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_hg_branch }}", "force": true}, "executable": "hg", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Create release folder", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Sync repo to release path", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Sync repo to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}}, "module_options": "hg archive -r {{ ansistrano_hg_branch }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "gcs.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Get object from GC storage", "module": "gc_storage", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Get object from GC storage"}, "module_options": {"bucket": "{{ ansistrano_gcs_bucket }}", "object": "{{ ansistrano_gcs_object }}", "region": "{{ ansistrano_gcs_region }}", "gs_access_key": "{{ ansistrano_gcs_access_key | default(omit) }}", "gs_secret_key": "{{ ansistrano_gcs_secret_key | default(omit) }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}", "mode": "get"}, "executable": "gc_storage", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "s3_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "s3.yml", "executable": "s3.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | s3_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {"name": "ANSISTRANO | s3_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "copy_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "copy.yml", "executable": "copy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | copy_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {"name": "ANSISTRANO | copy_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_deploy_from | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "s3.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from S3", "module": "aws_s3", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from S3", "when": "not ansistrano_s3_rgw"}, "module_options": {"bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "region": "{{ ansistrano_s3_region }}", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from Ceph RGW", "module": "aws_s3", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from Ceph RGW", "when": "ansistrano_s3_rgw"}, "module_options": {"rgw": true, "s3_url": "{{ ansistrano_s3_url }}", "encrypt": "{{ ansistrano_s3_encrypt | default(false) }}", "bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "region": "{{ ansistrano_s3_region | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "download.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | download | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | download | Download artifact", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Download artifact"}, "module_options": {"url": "{{ ansistrano_get_url }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}", "force_basic_auth": "{{ ansistrano_download_force_basic_auth | default(omit) }}", "headers": "{{ ansistrano_download_headers | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "git.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "when": "ansistrano_git_identity_key_path|trim"}, "module_options": {"src": "{{ ansistrano_git_identity_key_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "when": "ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"remote_src": true, "src": "{{ ansistrano_git_identity_key_remote_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository", "module": "git", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository", "register": "ansistrano_git_result_update", "when": "not ansistrano_git_identity_key_path|trim and not ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository using SSH key", "module": "git", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository using SSH key", "register": "ansistrano_git_result_update_ssh", "when": "ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "key_file": "{{ ansistrano_deploy_to }}/git_identity_key", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Register ansistrano_git_result variable", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Register ansistrano_git_result variable"}, "module_options": "ansistrano_git_result={{ ansistrano_git_result_update_ssh if ansistrano_git_result_update is skipped else ansistrano_git_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Shred GIT deployment key", "module": "command", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Shred GIT deployment key", "when": "(ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim) and ansistrano_git_identity_key_shred|bool == true"}, "module_options": "shred -f \"{{ ansistrano_deploy_to }}/git_identity_key\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Set git_real_repo_tree", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Set git_real_repo_tree"}, "module_options": {"ansistrano_git_real_repo_tree": "{{ ansistrano_git_repo_tree | trim | regex_replace('^[/]*', '') | regex_replace('[/]*$', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Create release folder", "module": "file", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}, "environment": {"prefix": "{{ ansistrano_git_real_repo_tree }}"}}, "module_options": "{\n  git ls-files -z --with-tree=\"{{ ansistrano_git_branch }}\" | tr '\\0' '\\n';\n  git submodule foreach --recursive | sed -n -e \"s/^Entering '\\(.*\\)'$/\\1/p\" | while read -r line; do (cd \"$line\"; git ls-files -z | tr \"\\0\" \"\\n\" | sed \"s#^#$line/#\"; cd $OLDPWD); done\n} | grep \"^$prefix\" | sed \"s#^$prefix/##\" | rsync -a --files-from=- \"./$prefix/\" {{ ansistrano_release_path.stdout }}/", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "svn.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Update remote repository", "module": "subversion", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Update remote repository", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_update"}, "module_options": {"repo": "{{ ansistrano_svn_repo }}/{{ ansistrano_svn_branch }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable"}, "module_options": "ansistrano_svn_result={{ ansistrano_svn_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Create release folder", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Copy repo to release path", "module": "subversion", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Copy repo to release path", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_export"}, "module_options": {"repo": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "dest": "{{ ansistrano_release_path.stdout }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "export": true, "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "download_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "download.yml", "executable": "download.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | download_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {"name": "ANSISTRANO | download_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Thanks to all our generous sponsors!", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Thanks to all our generous sponsors!"}, "module_options": {"msg": "Ansistrano is funded by: Rigor Guild, Holaluz"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Please consider sponsoring Ansistrano", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Please consider sponsoring Ansistrano"}, "module_options": {"msg": "If Ansistrano is saving money for your company, please visit https://github.com/sponsors/ansistrano and consider a small donation!"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Get release version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release version", "run_once": true, "when": "ansistrano_release_version is not defined", "delegate_to": "127.0.0.1"}, "module_options": {"ansistrano_release_version": "{{ lookup('pipe', 'date -u +%Y%m%d%H%M%SZ') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Get release path", "module": "command", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release path", "check_mode": false, "register": "ansistrano_release_path"}, "module_options": "echo \"{{ ansistrano_releases_path }}/{{ ansistrano_release_version }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {}, "module_options": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy release version into REVISION file", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy release version into REVISION file", "when": "ansistrano_git_result is not defined"}, "module_options": {"content": "{{ ansistrano_release_version }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy git released version into REVISION file", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy git released version into REVISION file", "when": "ansistrano_git_result is defined"}, "module_options": {"content": "{{ ansistrano_git_result.after }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths and files", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths and files", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "link", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/../shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure .rsync-filter is absent", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure .rsync-filter is absent", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/.rsync-filter"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"dest": "{{ ansistrano_release_path.stdout }}/.rsync-filter", "line": "- /{{ item }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure deployment base path exists", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure deployment base path exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure releases folder exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure releases folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_releases_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared elements folder exists", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared elements folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared paths exists", "with_items": "{{ ansistrano_shared_paths }}", "when": "ansistrano_ensure_shared_paths_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure basedir shared files exists", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure basedir shared files exists", "with_items": "{{ ansistrano_shared_files }}", "when": "ansistrano_ensure_basedirs_shared_files_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item | dirname }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Send anonymous stats", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml", "options": {"name": "ANSISTRANO | Send anonymous stats", "when": "ansistrano_allow_anonymous_stats|bool", "run_once": true, "ignore_errors": true, "delegate_to": "127.0.0.1", "become": false}, "module_options": {"url": "https://ansistrano.com/deploy", "follow_redirects": "all", "method": "POST", "timeout": 5, "body": "deploy_via={{ ansistrano_deploy_via | default('rsync') }}&version={{ ansible_version.string }}", "headers": {"Content-Type": "application/x-www-form-urlencoded"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a symlink", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a symlink", "when": "stat_current_dir.stat.islnk is defined and stat_current_dir.stat.islnk"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure current folder is a directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure current folder is a directory"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Sync release to new current path", "module": "command", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Sync release to new current path"}, "module_options": "rsync -a -F --no-times --delete-after \"{{ ansistrano_release_path.stdout }}/\" \"{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths", "module": "file", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Clean up releases", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml", "options": {"name": "ANSISTRANO | Clean up releases", "when": "ansistrano_keep_releases | int > 0"}, "module_options": "ls -1dt {{ ansistrano_releases_path }}/* | tail -n +{{ ansistrano_keep_releases | int + 1 }} | xargs rm -rf", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a directory", "when": "stat_current_dir.stat.isdir is defined and stat_current_dir.stat.isdir"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Change softlink to new release", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Change softlink to new release"}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}", "src": "./{{ ansistrano_version_dir }}/{{ ansistrano_release_version }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "setup.yml", "executable": "setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "update-code.yml", "executable": "update-code.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "symlink-shared.yml", "executable": "symlink-shared.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"symlink\""}, "module_options": "symlink.yml", "executable": "symlink.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"rsync\""}, "module_options": "rsync-deploy.yml", "executable": "rsync-deploy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "cleanup.yml", "executable": "cleanup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 15}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 16}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "anon-stats.yml", "executable": "anon-stats.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml\", \"index\": 17}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "funding.yml", "executable": "funding.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path", "module": "synchronize", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml", "options": {"name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "gcs.yml", "executable": "gcs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | gcs_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {"name": "ANSISTRANO | gcs_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "module": "command", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "check_mode": false, "register": "ansistrano_shared_rsync_copy_path"}, "module_options": "echo \"{{ ansistrano_shared_path }}/.shared-copy\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy", "module": "synchronize", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_shared_rsync_copy_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Deploy existing code to servers", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Deploy existing code to servers"}, "module_options": "cp -a {{ ansistrano_shared_rsync_copy_path.stdout }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Deploy existing code to remote servers", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Deploy existing code to remote servers"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group == \"default\""}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "(ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group != \"default\") or (ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group == \"default\")\n"}, "module_options": {"msg": "must set ansistrano_unarchive_group and ansistrano_unarchive_owner"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "module": "unarchive", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "when": "ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group != \"default\"\n"}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "owner": "{{ ansistrano_unarchive_owner }}", "group": "{{ ansistrano_unarchive_group }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Delete archived file", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Delete archived file"}, "module_options": {"path": "{{ ansistrano_archived_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Update remote repository", "module": "hg", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Update remote repository", "register": "ansistrano_hg_result"}, "module_options": {"repo": "{{ ansistrano_hg_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_hg_branch }}", "force": true}, "executable": "hg", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Create release folder", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Sync repo to release path", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Sync repo to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}}, "module_options": "hg archive -r {{ ansistrano_hg_branch }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Get object from GC storage", "module": "gc_storage", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Get object from GC storage"}, "module_options": {"bucket": "{{ ansistrano_gcs_bucket }}", "object": "{{ ansistrano_gcs_object }}", "region": "{{ ansistrano_gcs_region }}", "gs_access_key": "{{ ansistrano_gcs_access_key | default(omit) }}", "gs_secret_key": "{{ ansistrano_gcs_secret_key | default(omit) }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}", "mode": "get"}, "executable": "gc_storage", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "s3.yml", "executable": "s3.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | s3_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {"name": "ANSISTRANO | s3_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "copy.yml", "executable": "copy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | copy_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {"name": "ANSISTRANO | copy_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_deploy_from | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from S3", "module": "aws_s3", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from S3", "when": "not ansistrano_s3_rgw"}, "module_options": {"bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "region": "{{ ansistrano_s3_region }}", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from Ceph RGW", "module": "aws_s3", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from Ceph RGW", "when": "ansistrano_s3_rgw"}, "module_options": {"rgw": true, "s3_url": "{{ ansistrano_s3_url }}", "encrypt": "{{ ansistrano_s3_encrypt | default(false) }}", "bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "region": "{{ ansistrano_s3_region | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | download | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | download | Download artifact", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Download artifact"}, "module_options": {"url": "{{ ansistrano_get_url }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}", "force_basic_auth": "{{ ansistrano_download_force_basic_auth | default(omit) }}", "headers": "{{ ansistrano_download_headers | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "when": "ansistrano_git_identity_key_path|trim"}, "module_options": {"src": "{{ ansistrano_git_identity_key_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "when": "ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"remote_src": true, "src": "{{ ansistrano_git_identity_key_remote_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository", "module": "git", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository", "register": "ansistrano_git_result_update", "when": "not ansistrano_git_identity_key_path|trim and not ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository using SSH key", "module": "git", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository using SSH key", "register": "ansistrano_git_result_update_ssh", "when": "ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "key_file": "{{ ansistrano_deploy_to }}/git_identity_key", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Register ansistrano_git_result variable", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Register ansistrano_git_result variable"}, "module_options": "ansistrano_git_result={{ ansistrano_git_result_update_ssh if ansistrano_git_result_update is skipped else ansistrano_git_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Shred GIT deployment key", "module": "command", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Shred GIT deployment key", "when": "(ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim) and ansistrano_git_identity_key_shred|bool == true"}, "module_options": "shred -f \"{{ ansistrano_deploy_to }}/git_identity_key\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Set git_real_repo_tree", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Set git_real_repo_tree"}, "module_options": {"ansistrano_git_real_repo_tree": "{{ ansistrano_git_repo_tree | trim | regex_replace('^[/]*', '') | regex_replace('[/]*$', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Create release folder", "module": "file", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}, "environment": {"prefix": "{{ ansistrano_git_real_repo_tree }}"}}, "module_options": "{\n  git ls-files -z --with-tree=\"{{ ansistrano_git_branch }}\" | tr '\\0' '\\n';\n  git submodule foreach --recursive | sed -n -e \"s/^Entering '\\(.*\\)'$/\\1/p\" | while read -r line; do (cd \"$line\"; git ls-files -z | tr \"\\0\" \"\\n\" | sed \"s#^#$line/#\"; cd $OLDPWD); done\n} | grep \"^$prefix\" | sed \"s#^$prefix/##\" | rsync -a --files-from=- \"./$prefix/\" {{ ansistrano_release_path.stdout }}/", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Update remote repository", "module": "subversion", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Update remote repository", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_update"}, "module_options": {"repo": "{{ ansistrano_svn_repo }}/{{ ansistrano_svn_branch }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable"}, "module_options": "ansistrano_svn_result={{ ansistrano_svn_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Create release folder", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Copy repo to release path", "module": "subversion", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Copy repo to release path", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_export"}, "module_options": {"repo": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "dest": "{{ ansistrano_release_path.stdout }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "export": true, "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "download.yml", "executable": "download.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "ANSISTRANO | download_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {"name": "ANSISTRANO | download_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml": {"py/object": "struct4.TaskFile", "name": "funding.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "tasks": [{"py/object": "struct4.Task", "name": "Thanks to all our generous sponsors!", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Thanks to all our generous sponsors!"}, "module_options": {"msg": "Ansistrano is funded by: Rigor Guild, Holaluz"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Please consider sponsoring Ansistrano", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Please consider sponsoring Ansistrano"}, "module_options": {"msg": "If Ansistrano is saving money for your company, please visit https://github.com/sponsors/ansistrano and consider a small donation!"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml": {"py/object": "struct4.TaskFile", "name": "update-code.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get release version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release version", "run_once": true, "when": "ansistrano_release_version is not defined", "delegate_to": "127.0.0.1"}, "module_options": {"ansistrano_release_version": "{{ lookup('pipe', 'date -u +%Y%m%d%H%M%SZ') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Get release path", "module": "command", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release path", "check_mode": false, "register": "ansistrano_release_path"}, "module_options": "echo \"{{ ansistrano_releases_path }}/{{ ansistrano_release_version }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {}, "module_options": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy release version into REVISION file", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy release version into REVISION file", "when": "ansistrano_git_result is not defined"}, "module_options": {"content": "{{ ansistrano_release_version }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy git released version into REVISION file", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy git released version into REVISION file", "when": "ansistrano_git_result is defined"}, "module_options": {"content": "{{ ansistrano_git_result.after }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml": {"py/object": "struct4.TaskFile", "name": "symlink-shared.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths and files", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths and files", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "link", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/../shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure .rsync-filter is absent", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure .rsync-filter is absent", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/.rsync-filter"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"dest": "{{ ansistrano_release_path.stdout }}/.rsync-filter", "line": "- /{{ item }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml": {"py/object": "struct4.TaskFile", "name": "setup.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure deployment base path exists", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure deployment base path exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure releases folder exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure releases folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_releases_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared elements folder exists", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared elements folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared paths exists", "with_items": "{{ ansistrano_shared_paths }}", "when": "ansistrano_ensure_shared_paths_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure basedir shared files exists", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure basedir shared files exists", "with_items": "{{ ansistrano_shared_files }}", "when": "ansistrano_ensure_basedirs_shared_files_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item | dirname }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml": {"py/object": "struct4.TaskFile", "name": "anon-stats.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Send anonymous stats", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml", "options": {"name": "ANSISTRANO | Send anonymous stats", "when": "ansistrano_allow_anonymous_stats|bool", "run_once": true, "ignore_errors": true, "delegate_to": "127.0.0.1", "become": false}, "module_options": {"url": "https://ansistrano.com/deploy", "follow_redirects": "all", "method": "POST", "timeout": 5, "body": "deploy_via={{ ansistrano_deploy_via | default('rsync') }}&version={{ ansible_version.string }}", "headers": {"Content-Type": "application/x-www-form-urlencoded"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/empty.yml": {"py/object": "struct4.TaskFile", "name": "empty.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/empty.yml", "tasks": [], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml": {"py/object": "struct4.TaskFile", "name": "rsync-deploy.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a symlink", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a symlink", "when": "stat_current_dir.stat.islnk is defined and stat_current_dir.stat.islnk"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure current folder is a directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure current folder is a directory"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Sync release to new current path", "module": "command", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Sync release to new current path"}, "module_options": "rsync -a -F --no-times --delete-after \"{{ ansistrano_release_path.stdout }}/\" \"{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths", "module": "file", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml": {"py/object": "struct4.TaskFile", "name": "cleanup.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Clean up releases", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml", "options": {"name": "ANSISTRANO | Clean up releases", "when": "ansistrano_keep_releases | int > 0"}, "module_options": "ls -1dt {{ ansistrano_releases_path }}/* | tail -n +{{ ansistrano_keep_releases | int + 1 }} | xargs rm -rf", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml": {"py/object": "struct4.TaskFile", "name": "symlink.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a directory", "when": "stat_current_dir.stat.isdir is defined and stat_current_dir.stat.isdir"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Change softlink to new release", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Change softlink to new release"}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}", "src": "./{{ ansistrano_version_dir }}/{{ ansistrano_release_version }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "setup.yml", "executable": "setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "update-code.yml", "executable": "update-code.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "symlink-shared.yml", "executable": "symlink-shared.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"symlink\""}, "module_options": "symlink.yml", "executable": "symlink.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"rsync\""}, "module_options": "rsync-deploy.yml", "executable": "rsync-deploy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "cleanup.yml", "executable": "cleanup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "anon-stats.yml", "executable": "anon-stats.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "funding.yml", "executable": "funding.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml": {"py/object": "struct4.TaskFile", "name": "rsync_direct.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path", "module": "synchronize", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml", "options": {"name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml": {"py/object": "struct4.TaskFile", "name": "gcs_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "gcs.yml", "executable": "gcs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | gcs_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {"name": "ANSISTRANO | gcs_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml": {"py/object": "struct4.TaskFile", "name": "rsync.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "module": "command", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "check_mode": false, "register": "ansistrano_shared_rsync_copy_path"}, "module_options": "echo \"{{ ansistrano_shared_path }}/.shared-copy\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy", "module": "synchronize", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_shared_rsync_copy_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Deploy existing code to servers", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Deploy existing code to servers"}, "module_options": "cp -a {{ ansistrano_shared_rsync_copy_path.stdout }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml": {"py/object": "struct4.TaskFile", "name": "copy.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Deploy existing code to remote servers", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Deploy existing code to remote servers"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml": {"py/object": "struct4.TaskFile", "name": "unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group == \"default\""}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "(ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group != \"default\") or (ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group == \"default\")\n"}, "module_options": {"msg": "must set ansistrano_unarchive_group and ansistrano_unarchive_owner"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "module": "unarchive", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "when": "ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group != \"default\"\n"}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "owner": "{{ ansistrano_unarchive_owner }}", "group": "{{ ansistrano_unarchive_group }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Delete archived file", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Delete archived file"}, "module_options": {"path": "{{ ansistrano_archived_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml": {"py/object": "struct4.TaskFile", "name": "hg.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Update remote repository", "module": "hg", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Update remote repository", "register": "ansistrano_hg_result"}, "module_options": {"repo": "{{ ansistrano_hg_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_hg_branch }}", "force": true}, "executable": "hg", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Create release folder", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Sync repo to release path", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Sync repo to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}}, "module_options": "hg archive -r {{ ansistrano_hg_branch }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml": {"py/object": "struct4.TaskFile", "name": "gcs.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Get object from GC storage", "module": "gc_storage", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Get object from GC storage"}, "module_options": {"bucket": "{{ ansistrano_gcs_bucket }}", "object": "{{ ansistrano_gcs_object }}", "region": "{{ ansistrano_gcs_region }}", "gs_access_key": "{{ ansistrano_gcs_access_key | default(omit) }}", "gs_secret_key": "{{ ansistrano_gcs_secret_key | default(omit) }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}", "mode": "get"}, "executable": "gc_storage", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml": {"py/object": "struct4.TaskFile", "name": "s3_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "s3.yml", "executable": "s3.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | s3_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {"name": "ANSISTRANO | s3_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml": {"py/object": "struct4.TaskFile", "name": "copy_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "copy.yml", "executable": "copy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | copy_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {"name": "ANSISTRANO | copy_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_deploy_from | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml": {"py/object": "struct4.TaskFile", "name": "s3.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from S3", "module": "aws_s3", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from S3", "when": "not ansistrano_s3_rgw"}, "module_options": {"bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "region": "{{ ansistrano_s3_region }}", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from Ceph RGW", "module": "aws_s3", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from Ceph RGW", "when": "ansistrano_s3_rgw"}, "module_options": {"rgw": true, "s3_url": "{{ ansistrano_s3_url }}", "encrypt": "{{ ansistrano_s3_encrypt | default(false) }}", "bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "region": "{{ ansistrano_s3_region | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml": {"py/object": "struct4.TaskFile", "name": "download.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | download | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | download | Download artifact", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Download artifact"}, "module_options": {"url": "{{ ansistrano_get_url }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}", "force_basic_auth": "{{ ansistrano_download_force_basic_auth | default(omit) }}", "headers": "{{ ansistrano_download_headers | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml": {"py/object": "struct4.TaskFile", "name": "git.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "when": "ansistrano_git_identity_key_path|trim"}, "module_options": {"src": "{{ ansistrano_git_identity_key_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "when": "ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"remote_src": true, "src": "{{ ansistrano_git_identity_key_remote_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository", "module": "git", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository", "register": "ansistrano_git_result_update", "when": "not ansistrano_git_identity_key_path|trim and not ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository using SSH key", "module": "git", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository using SSH key", "register": "ansistrano_git_result_update_ssh", "when": "ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "key_file": "{{ ansistrano_deploy_to }}/git_identity_key", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Register ansistrano_git_result variable", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Register ansistrano_git_result variable"}, "module_options": "ansistrano_git_result={{ ansistrano_git_result_update_ssh if ansistrano_git_result_update is skipped else ansistrano_git_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Shred GIT deployment key", "module": "command", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Shred GIT deployment key", "when": "(ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim) and ansistrano_git_identity_key_shred|bool == true"}, "module_options": "shred -f \"{{ ansistrano_deploy_to }}/git_identity_key\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Set git_real_repo_tree", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Set git_real_repo_tree"}, "module_options": {"ansistrano_git_real_repo_tree": "{{ ansistrano_git_repo_tree | trim | regex_replace('^[/]*', '') | regex_replace('[/]*$', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Create release folder", "module": "file", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}, "environment": {"prefix": "{{ ansistrano_git_real_repo_tree }}"}}, "module_options": "{\n  git ls-files -z --with-tree=\"{{ ansistrano_git_branch }}\" | tr '\\0' '\\n';\n  git submodule foreach --recursive | sed -n -e \"s/^Entering '\\(.*\\)'$/\\1/p\" | while read -r line; do (cd \"$line\"; git ls-files -z | tr \"\\0\" \"\\n\" | sed \"s#^#$line/#\"; cd $OLDPWD); done\n} | grep \"^$prefix\" | sed \"s#^$prefix/##\" | rsync -a --files-from=- \"./$prefix/\" {{ ansistrano_release_path.stdout }}/", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml": {"py/object": "struct4.TaskFile", "name": "svn.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Update remote repository", "module": "subversion", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Update remote repository", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_update"}, "module_options": {"repo": "{{ ansistrano_svn_repo }}/{{ ansistrano_svn_branch }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable"}, "module_options": "ansistrano_svn_result={{ ansistrano_svn_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Create release folder", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Copy repo to release path", "module": "subversion", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Copy repo to release path", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_export"}, "module_options": {"repo": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "dest": "{{ ansistrano_release_path.stdout }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "export": true, "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml": {"py/object": "struct4.TaskFile", "name": "download_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "download.yml", "executable": "download.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | download_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {"name": "ANSISTRANO | download_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}}, "role_dict": {"ansistrano.deploy": {"py/object": "struct4.Role", "name": "ansistrano.deploy", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy", "fqcn": "ansistrano.deploy", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "funding.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "tasks": [{"py/object": "struct4.Task", "name": "Thanks to all our generous sponsors!", "module": "debug", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Thanks to all our generous sponsors!"}, "module_options": {"msg": "Ansistrano is funded by: Rigor Guild, Holaluz"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}, {"py/object": "struct4.Task", "name": "Please consider sponsoring Ansistrano", "module": "debug", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/funding.yml", "options": {"name": "Please consider sponsoring Ansistrano"}, "module_options": {"msg": "If Ansistrano is saving money for your company, please visit https://github.com/sponsors/ansistrano and consider a small donation!"}, "executable": "debug", "executable_type": "Module", "fqcn": "ansible.builtin.debug", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "update-code.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get release version", "module": "set_fact", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release version", "run_once": true, "when": "ansistrano_release_version is not defined", "delegate_to": "127.0.0.1"}, "module_options": {"ansistrano_release_version": "{{ lookup('pipe', 'date -u +%Y%m%d%H%M%SZ') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Get release path", "module": "command", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Get release path", "check_mode": false, "register": "ansistrano_release_path"}, "module_options": "echo \"{{ ansistrano_releases_path }}/{{ ansistrano_release_version }}\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {}, "module_options": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable": "update-code/{{ ansistrano_deploy_via | default('rsync') }}.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy release version into REVISION file", "module": "copy", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy release version into REVISION file", "when": "ansistrano_git_result is not defined"}, "module_options": {"content": "{{ ansistrano_release_version }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Copy git released version into REVISION file", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code.yml", "options": {"name": "ANSISTRANO | Copy git released version into REVISION file", "when": "ansistrano_git_result is defined"}, "module_options": {"content": "{{ ansistrano_git_result.after }}", "dest": "{{ ansistrano_release_path.stdout }}/REVISION"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "symlink-shared.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths and files", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths and files", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}"}, "module_options": {"state": "link", "path": "{{ ansistrano_release_path.stdout }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/../shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure .rsync-filter is absent", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Ensure .rsync-filter is absent", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"state": "absent", "path": "{{ ansistrano_release_path.stdout }}/.rsync-filter"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "module": "lineinfile", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink-shared.yml", "options": {"name": "ANSISTRANO | Setup .rsync-filter with shared-folders", "loop": "{{ (ansistrano_shared_paths | flatten ) + (ansistrano_shared_files | flatten) }}", "when": "ansistrano_current_via == \"rsync\""}, "module_options": {"dest": "{{ ansistrano_release_path.stdout }}/.rsync-filter", "line": "- /{{ item }}", "create": true}, "executable": "lineinfile", "executable_type": "Module", "fqcn": "ansible.builtin.lineinfile", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "setup.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure deployment base path exists", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure deployment base path exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure releases folder exists", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure releases folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_releases_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared elements folder exists", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared elements folder exists"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths exists", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure shared paths exists", "with_items": "{{ ansistrano_shared_paths }}", "when": "ansistrano_ensure_shared_paths_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure basedir shared files exists", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/setup.yml", "options": {"name": "ANSISTRANO | Ensure basedir shared files exists", "with_items": "{{ ansistrano_shared_files }}", "when": "ansistrano_ensure_basedirs_shared_files_exist|bool"}, "module_options": {"state": "directory", "path": "{{ ansistrano_shared_path }}/{{ item | dirname }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "anon-stats.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Send anonymous stats", "module": "uri", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/anon-stats.yml", "options": {"name": "ANSISTRANO | Send anonymous stats", "when": "ansistrano_allow_anonymous_stats|bool", "run_once": true, "ignore_errors": true, "delegate_to": "127.0.0.1", "become": false}, "module_options": {"url": "https://ansistrano.com/deploy", "follow_redirects": "all", "method": "POST", "timeout": 5, "body": "deploy_via={{ ansistrano_deploy_via | default('rsync') }}&version={{ ansible_version.string }}", "headers": {"Content-Type": "application/x-www-form-urlencoded"}}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "empty.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/empty.yml", "tasks": [], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "rsync-deploy.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a symlink", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a symlink", "when": "stat_current_dir.stat.islnk is defined and stat_current_dir.stat.islnk"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure current folder is a directory", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure current folder is a directory"}, "module_options": {"state": "directory", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Sync release to new current path", "module": "command", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Sync release to new current path"}, "module_options": "rsync -a -F --no-times --delete-after \"{{ ansistrano_release_path.stdout }}/\" \"{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Ensure shared paths targets are absent", "module": "file", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Ensure shared paths targets are absent", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Create softlinks for shared paths", "module": "file", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/rsync-deploy.yml", "options": {"name": "ANSISTRANO | Create softlinks for shared paths", "with_flattened": ["{{ ansistrano_shared_paths }}", "{{ ansistrano_shared_files }}"]}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}/{{ item }}", "src": "{{ item | regex_replace('[^\\/]+', '..') }}/shared/{{ item }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "cleanup.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Clean up releases", "module": "shell", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/cleanup.yml", "options": {"name": "ANSISTRANO | Clean up releases", "when": "ansistrano_keep_releases | int > 0"}, "module_options": "ls -1dt {{ ansistrano_releases_path }}/* | tail -n +{{ ansistrano_keep_releases | int + 1 }} | xargs rm -rf", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "symlink.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Get current folder", "module": "stat", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Get current folder", "register": "stat_current_dir"}, "module_options": {"path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Remove current folder if it's a directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Remove current folder if it's a directory", "when": "stat_current_dir.stat.isdir is defined and stat_current_dir.stat.isdir"}, "module_options": {"state": "absent", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Change softlink to new release", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/symlink.yml", "options": {"name": "ANSISTRANO | Change softlink to new release"}, "module_options": {"state": "link", "path": "{{ ansistrano_deploy_to }}/{{ ansistrano_current_dir }}", "src": "./{{ ansistrano_version_dir }}/{{ ansistrano_release_version }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "setup.yml", "executable": "setup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_setup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "update-code.yml", "executable": "update-code.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_update_code_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "symlink-shared.yml", "executable": "symlink-shared.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_shared_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 9, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 10, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"symlink\""}, "module_options": "symlink.yml", "executable": "symlink.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 11, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {"when": "ansistrano_current_via == \"rsync\""}, "module_options": "rsync-deploy.yml", "executable": "rsync-deploy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 12, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_symlink_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 13, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_before_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 14, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "cleanup.yml", "executable": "cleanup.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 15, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable": "{{ ansistrano_after_cleanup_tasks_file | default('empty.yml') }}", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 16, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "anon-stats.yml", "executable": "anon-stats.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 17, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/main.yml", "options": {}, "module_options": "funding.yml", "executable": "funding.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "rsync_direct.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path", "module": "synchronize", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync_direct.yml", "options": {"name": "ANSISTRANO | RSYNC DIRECT | Rsync application files directly to remote release path"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "gcs_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "gcs.yml", "executable": "gcs.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | gcs_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {"name": "ANSISTRANO | gcs_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "rsync.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "module": "command", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Get shared path (in rsync case)", "check_mode": false, "register": "ansistrano_shared_rsync_copy_path"}, "module_options": "echo \"{{ ansistrano_shared_path }}/.shared-copy\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy", "module": "synchronize", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Rsync application files to remote shared copy"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_shared_rsync_copy_path.stdout }}", "set_remote_user": "{{ ansistrano_rsync_set_remote_user }}", "recursive": true, "delete": true, "archive": true, "compress": true, "use_ssh_args": "{{ ansistrano_rsync_use_ssh_args | default(omit) }}", "rsync_opts": "{{ ansistrano_rsync_extra_params | default(omit) }}", "rsync_path": "{{ ansistrano_rsync_path | default(omit) }}"}, "executable": "synchronize", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | RSYNC | Deploy existing code to servers", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/rsync.yml", "options": {"name": "ANSISTRANO | RSYNC | Deploy existing code to servers"}, "module_options": "cp -a {{ ansistrano_shared_rsync_copy_path.stdout }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "copy.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SCP | Deploy existing code to remote servers", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy.yml", "options": {"name": "ANSISTRANO | SCP | Deploy existing code to remote servers"}, "module_options": {"src": "{{ ansistrano_deploy_from }}", "dest": "{{ ansistrano_release_path.stdout }}"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "unarchive", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group == \"default\""}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source", "module": "fail", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source", "when": "(ansistrano_unarchive_owner == \"default\" and ansistrano_unarchive_group != \"default\") or (ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group == \"default\")\n"}, "module_options": {"msg": "must set ansistrano_unarchive_group and ansistrano_unarchive_owner"}, "executable": "fail", "executable_type": "Module", "fqcn": "ansible.builtin.fail", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "module": "unarchive", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Unarchive source with owner and group", "when": "ansistrano_unarchive_owner != \"default\" and ansistrano_unarchive_group != \"default\"\n"}, "module_options": {"copy": false, "src": "{{ ansistrano_archived_file }}", "dest": "{{ ansistrano_release_path.stdout }}", "owner": "{{ ansistrano_unarchive_owner }}", "group": "{{ ansistrano_unarchive_group }}", "exclude": "{{ ansistrano_unarchive_exclude }}", "extra_opts": "{{ ansistrano_unarchive_extra_opts }}"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | Unarchive | Delete archived file", "module": "file", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/unarchive.yml", "options": {"name": "ANSISTRANO | Unarchive | Delete archived file"}, "module_options": {"path": "{{ ansistrano_archived_file }}", "state": "absent"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "hg.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Update remote repository", "module": "hg", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Update remote repository", "register": "ansistrano_hg_result"}, "module_options": {"repo": "{{ ansistrano_hg_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_hg_branch }}", "force": true}, "executable": "hg", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Create release folder", "module": "file", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | HG | Sync repo to release path", "module": "command", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/hg.yml", "options": {"name": "ANSISTRANO | HG | Sync repo to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}}, "module_options": "hg archive -r {{ ansistrano_hg_branch }} {{ ansistrano_release_path.stdout }}", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "gcs.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GC storage | Get object from GC storage", "module": "gc_storage", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/gcs.yml", "options": {"name": "ANSISTRANO | GC storage | Get object from GC storage"}, "module_options": {"bucket": "{{ ansistrano_gcs_bucket }}", "object": "{{ ansistrano_gcs_object }}", "region": "{{ ansistrano_gcs_region }}", "gs_access_key": "{{ ansistrano_gcs_access_key | default(omit) }}", "gs_secret_key": "{{ ansistrano_gcs_secret_key | default(omit) }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_gcs_object | basename }}", "mode": "get"}, "executable": "gc_storage", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "s3_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "s3.yml", "executable": "s3.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | s3_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {"name": "ANSISTRANO | s3_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "copy_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "copy.yml", "executable": "copy.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | copy_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {"name": "ANSISTRANO | copy_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_deploy_from | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/copy_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "s3.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from S3", "module": "aws_s3", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from S3", "when": "not ansistrano_s3_rgw"}, "module_options": {"bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "region": "{{ ansistrano_s3_region }}", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | S3 | Get object from Ceph RGW", "module": "aws_s3", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/s3.yml", "options": {"name": "ANSISTRANO | S3 | Get object from Ceph RGW", "when": "ansistrano_s3_rgw"}, "module_options": {"rgw": true, "s3_url": "{{ ansistrano_s3_url }}", "encrypt": "{{ ansistrano_s3_encrypt | default(false) }}", "bucket": "{{ ansistrano_s3_bucket }}", "object": "{{ ansistrano_s3_object }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_s3_object | basename }}", "mode": "get", "aws_access_key": "{{ ansistrano_s3_aws_access_key | default(omit) }}", "aws_secret_key": "{{ ansistrano_s3_aws_secret_key | default(omit) }}", "region": "{{ ansistrano_s3_region | default(omit) }}", "ignore_nonexistent_bucket": "{{ ansistrano_s3_ignore_nonexistent_bucket | default(omit) }}"}, "executable": "aws_s3", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "download.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | download | Create release folder", "module": "file", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | download | Download artifact", "module": "get_url", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download.yml", "options": {"name": "ANSISTRANO | download | Download artifact"}, "module_options": {"url": "{{ ansistrano_get_url }}", "dest": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}", "force_basic_auth": "{{ ansistrano_download_force_basic_auth | default(omit) }}", "headers": "{{ ansistrano_download_headers | default(omit) }}"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "git.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "module": "copy", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (local key file)", "when": "ansistrano_git_identity_key_path|trim"}, "module_options": {"src": "{{ ansistrano_git_identity_key_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "module": "copy", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Ensure GIT deployment key is up to date (remote key file)", "when": "ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"remote_src": true, "src": "{{ ansistrano_git_identity_key_remote_path }}", "dest": "{{ ansistrano_deploy_to }}/git_identity_key", "mode": 256}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository", "module": "git", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository", "register": "ansistrano_git_result_update", "when": "not ansistrano_git_identity_key_path|trim and not ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Update remote repository using SSH key", "module": "git", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Update remote repository using SSH key", "register": "ansistrano_git_result_update_ssh", "when": "ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim"}, "module_options": {"repo": "{{ ansistrano_git_repo }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "version": "{{ ansistrano_git_branch }}", "accept_hostkey": true, "update": true, "force": true, "ssh_opts": "{{ ansistrano_git_ssh_opts | default(omit) }}", "refspec": "{{ ansistrano_git_refspec | default(omit) }}", "depth": "{{ ansistrano_git_depth | default(omit) }}", "key_file": "{{ ansistrano_deploy_to }}/git_identity_key", "executable": "{{ ansistrano_git_executable | default(omit) }}"}, "executable": "git", "executable_type": "Module", "fqcn": "ansible.builtin.git", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Register ansistrano_git_result variable", "module": "set_fact", "index": 4, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Register ansistrano_git_result variable"}, "module_options": "ansistrano_git_result={{ ansistrano_git_result_update_ssh if ansistrano_git_result_update is skipped else ansistrano_git_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Shred GIT deployment key", "module": "command", "index": 5, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Shred GIT deployment key", "when": "(ansistrano_git_identity_key_path|trim or ansistrano_git_identity_key_remote_path|trim) and ansistrano_git_identity_key_shred|bool == true"}, "module_options": "shred -f \"{{ ansistrano_deploy_to }}/git_identity_key\"", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Set git_real_repo_tree", "module": "set_fact", "index": 6, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Set git_real_repo_tree"}, "module_options": {"ansistrano_git_real_repo_tree": "{{ ansistrano_git_repo_tree | trim | regex_replace('^[/]*', '') | regex_replace('[/]*$', '') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Create release folder", "module": "file", "index": 7, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "module": "shell", "index": 8, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/git.yml", "options": {"name": "ANSISTRANO | GIT | Sync repo subtree[\"{{ ansistrano_git_real_repo_tree }}\"] to release path", "args": {"chdir": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}/"}, "environment": {"prefix": "{{ ansistrano_git_real_repo_tree }}"}}, "module_options": "{\n  git ls-files -z --with-tree=\"{{ ansistrano_git_branch }}\" | tr '\\0' '\\n';\n  git submodule foreach --recursive | sed -n -e \"s/^Entering '\\(.*\\)'$/\\1/p\" | while read -r line; do (cd \"$line\"; git ls-files -z | tr \"\\0\" \"\\n\" | sed \"s#^#$line/#\"; cd $OLDPWD); done\n} | grep \"^$prefix\" | sed \"s#^$prefix/##\" | rsync -a --files-from=- \"./$prefix/\" {{ ansistrano_release_path.stdout }}/", "executable": "shell", "executable_type": "Module", "fqcn": "ansible.builtin.shell", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "svn.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "tasks": [{"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Update remote repository", "module": "subversion", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Update remote repository", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_update"}, "module_options": {"repo": "{{ ansistrano_svn_repo }}/{{ ansistrano_svn_branch }}", "dest": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Register ansistrano_svn_result variable"}, "module_options": "ansistrano_svn_result={{ ansistrano_svn_result_update }}", "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Create release folder", "module": "file", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Create release folder"}, "module_options": {"state": "directory", "path": "{{ ansistrano_release_path.stdout }}"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | SVN | Copy repo to release path", "module": "subversion", "index": 3, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/svn.yml", "options": {"name": "ANSISTRANO | SVN | Copy repo to release path", "environment": "{{ ansistrano_svn_environment }}", "register": "ansistrano_svn_result_export"}, "module_options": {"repo": "{{ ansistrano_deploy_to }}/{{ ansistrano_repo_dir }}", "dest": "{{ ansistrano_release_path.stdout }}", "revision": "{{ ansistrano_svn_revision }}", "username": "{{ ansistrano_svn_username }}", "password": "{{ ansistrano_svn_password }}", "export": true, "force": true}, "executable": "subversion", "executable_type": "Module", "fqcn": "ansible.builtin.subversion", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "download_unarchive.yml", "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 0, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "download.yml", "executable": "download.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "ANSISTRANO | download_unarchive | Set archived file", "module": "set_fact", "index": 1, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {"name": "ANSISTRANO | download_unarchive | Set archived file"}, "module_options": {"ansistrano_archived_file": "{{ ansistrano_release_path.stdout }}/{{ ansistrano_get_url | urlsplit('path') | basename }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "include_tasks", "index": 2, "defined_in": "./role-test/testdata/ansistrano-deploy/ansistrano.deploy/tasks/update-code/download_unarchive.yml", "options": {}, "module_options": "unarchive.yml", "executable": "unarchive.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}], "role": "ansistrano.deploy", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}