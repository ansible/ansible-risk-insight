{"py/object": "struct4.Repository", "name": "", "path": "", "my_collection_name": "", "playbooks": [], "roles": [], "installed_collections_path": "", "installed_collections": [], "installed_roles_path": "./role-test/testdata/cloudalchemy-node_exporter", "installed_roles": [{"py/object": "struct4.Role", "name": "cloudalchemy.node_exporter", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter", "fqcn": "cloudalchemy.node_exporter", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "preflight.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "tasks": [{"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This role only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"node_exporter_systemd_version": "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Naive assertion of proper listen address", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Naive assertion of proper listen address"}, "module_options": {"that": ["':' in node_exporter_web_listen_address"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert collectors are not both disabled and enabled at the same time", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert collectors are not both disabled and enabled at the same time", "with_items": "{{ node_exporter_disabled_collectors }}"}, "module_options": {"that": ["item not in node_exporter_enabled_collectors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that TLS key and cert path are set", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert path are set"}, "module_options": {"that": ["node_exporter_tls_server_config.cert_file is defined", "node_exporter_tls_server_config.key_file is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of TLS cert file", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS cert file", "register": "__node_exporter_cert_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.cert_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of TLS key file", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS key file", "register": "__node_exporter_key_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.key_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that TLS key and cert are present", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert are present"}, "module_options": {"that": ["{{ __node_exporter_cert_file.stat.exists }}", "{{ __node_exporter_key_file.stat.exists }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if node_exporter is installed", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check if node_exporter is installed", "register": "__node_exporter_is_installed", "check_mode": false, "tags": ["node_exporter_install"]}, "module_options": {"path": "{{ _node_exporter_binary_install_dir }}/node_exporter"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather currently installed node_exporter version (if any)", "module": "command", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Gather currently installed node_exporter version (if any)", "args": {"warn": false}, "changed_when": false, "register": "__node_exporter_current_version_output", "check_mode": false, "when": "__node_exporter_is_installed.stat.exists", "tags": ["node_exporter_install", "skip_ansible_lint"]}, "module_options": "{{ _node_exporter_binary_install_dir }}/node_exporter --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/node_exporter/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"node_exporter_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum list from github", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum list from github", "run_once": true}, "module_options": {"_checksums": "{{ lookup('url', 'https://github.com/prometheus/node_exporter/releases/download/v' + node_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ _checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"node_exporter_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy the node_exporter systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter systemd service file", "notify": "restart node_exporter"}, "module_options": {"src": "node_exporter.service.j2", "dest": "/etc/systemd/system/node_exporter.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create node_exporter config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create node_exporter config directory"}, "module_options": {"path": "/etc/node_exporter", "state": "directory", "owner": "root", "group": "root", "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the node_exporter config file", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter config file", "notify": "restart node_exporter"}, "module_options": {"src": "config.yaml.j2", "dest": "/etc/node_exporter/config.yaml", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create textfile collector dir", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create textfile collector dir", "when": "node_exporter_textfile_dir | length > 0"}, "module_options": {"path": "{{ node_exporter_textfile_dir }}", "state": "directory", "owner": "{{ _node_exporter_system_user }}", "group": "{{ _node_exporter_system_group }}", "recurse": true, "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow node_exporter port in SELinux on RedHat OS family", "module": "seport", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Allow node_exporter port in SELinux on RedHat OS family", "when": ["ansible_version.full is version_compare('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ node_exporter_web_listen_address.split(':')[-1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install selinux python packages [RHEL]", "module": "package", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [RHEL]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["(ansible_distribution | lower == \"redhat\") or (ansible_distribution | lower == \"centos\")"]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux python packages [Fedora]", "module": "package", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [Fedora]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"fedora\""]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux python packages [clearlinux]", "module": "package", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [clearlinux]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"clearlinux\""]}, "module_options": {"name": "sysadmin-basic", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the node_exporter group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter group", "when": "_node_exporter_system_group != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_group }}", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the node_exporter user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter user", "when": "_node_exporter_system_user != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_user }}", "groups": "{{ _node_exporter_system_group }}", "append": true, "shell": "/usr/sbin/nologin", "system": true, "create_home": false, "home": "/"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download node_exporter binary to local folder", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Download node_exporter binary to local folder", "become": false, "register": "_download_binary", "until": "_download_binary is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ node_exporter_checksum }}", "mode": "0644"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unpack node_exporter binary", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Unpack node_exporter binary", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Propagate node_exporter binaries", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Propagate node_exporter binaries", "notify": "restart node_exporter", "when": "not ansible_check_mode"}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate locally distributed node_exporter binary", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "propagate locally distributed node_exporter binary", "when": "node_exporter_binary_local_dir | length > 0", "notify": "restart node_exporter"}, "module_options": {"src": "{{ node_exporter_binary_local_dir }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"tags": ["node_exporter_install", "node_exporter_configure", "node_exporter_run"]}, "module_options": "preflight.yml", "executable": "preflight.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "( not __node_exporter_is_installed.stat.exists ) or ( __node_exporter_current_version_output.stderr_lines[0].split(\" \")[2] != node_exporter_version ) or ( node_exporter_binary_local_dir | length > 0 )", "tags": ["node_exporter_install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": ["node_exporter_configure"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "tags": ["node_exporter_configure"]}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Node Exporter is enabled on boot", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"name": "Ensure Node Exporter is enabled on boot", "become": true, "when": ["not ansible_check_mode"], "tags": ["node_exporter_run"]}, "module_options": {"daemon_reload": true, "name": "node_exporter", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}], "modules": [], "taskfiles": [], "version": "", "module_dict": {}, "task_dict": {"{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This role only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"node_exporter_systemd_version": "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Naive assertion of proper listen address", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Naive assertion of proper listen address"}, "module_options": {"that": ["':' in node_exporter_web_listen_address"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Assert collectors are not both disabled and enabled at the same time", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert collectors are not both disabled and enabled at the same time", "with_items": "{{ node_exporter_disabled_collectors }}"}, "module_options": {"that": ["item not in node_exporter_enabled_collectors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "Assert that TLS key and cert path are set", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert path are set"}, "module_options": {"that": ["node_exporter_tls_server_config.cert_file is defined", "node_exporter_tls_server_config.key_file is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 6}": {"py/object": "struct4.Task", "name": "Check existence of TLS cert file", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS cert file", "register": "__node_exporter_cert_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.cert_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 7}": {"py/object": "struct4.Task", "name": "Check existence of TLS key file", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS key file", "register": "__node_exporter_key_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.key_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 8}": {"py/object": "struct4.Task", "name": "Assert that TLS key and cert are present", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert are present"}, "module_options": {"that": ["{{ __node_exporter_cert_file.stat.exists }}", "{{ __node_exporter_key_file.stat.exists }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 9}": {"py/object": "struct4.Task", "name": "Check if node_exporter is installed", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check if node_exporter is installed", "register": "__node_exporter_is_installed", "check_mode": false, "tags": ["node_exporter_install"]}, "module_options": {"path": "{{ _node_exporter_binary_install_dir }}/node_exporter"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 10}": {"py/object": "struct4.Task", "name": "Gather currently installed node_exporter version (if any)", "module": "command", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Gather currently installed node_exporter version (if any)", "args": {"warn": false}, "changed_when": false, "register": "__node_exporter_current_version_output", "check_mode": false, "when": "__node_exporter_is_installed.stat.exists", "tags": ["node_exporter_install", "skip_ansible_lint"]}, "module_options": "{{ _node_exporter_binary_install_dir }}/node_exporter --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 11}": {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/node_exporter/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 12}": {"py/object": "struct4.Task", "name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"node_exporter_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 13}": {"py/object": "struct4.Task", "name": "Get checksum list from github", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum list from github", "run_once": true}, "module_options": {"_checksums": "{{ lookup('url', 'https://github.com/prometheus/node_exporter/releases/download/v' + node_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml\", \"index\": 14}": {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ _checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"node_exporter_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Copy the node_exporter systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter systemd service file", "notify": "restart node_exporter"}, "module_options": {"src": "node_exporter.service.j2", "dest": "/etc/systemd/system/node_exporter.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create node_exporter config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create node_exporter config directory"}, "module_options": {"path": "/etc/node_exporter", "state": "directory", "owner": "root", "group": "root", "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Copy the node_exporter config file", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter config file", "notify": "restart node_exporter"}, "module_options": {"src": "config.yaml.j2", "dest": "/etc/node_exporter/config.yaml", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Create textfile collector dir", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create textfile collector dir", "when": "node_exporter_textfile_dir | length > 0"}, "module_options": {"path": "{{ node_exporter_textfile_dir }}", "state": "directory", "owner": "{{ _node_exporter_system_user }}", "group": "{{ _node_exporter_system_group }}", "recurse": true, "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Allow node_exporter port in SELinux on RedHat OS family", "module": "seport", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Allow node_exporter port in SELinux on RedHat OS family", "when": ["ansible_version.full is version_compare('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ node_exporter_web_listen_address.split(':')[-1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Install selinux python packages [RHEL]", "module": "package", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [RHEL]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["(ansible_distribution | lower == \"redhat\") or (ansible_distribution | lower == \"centos\")"]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Install selinux python packages [Fedora]", "module": "package", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [Fedora]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"fedora\""]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Install selinux python packages [clearlinux]", "module": "package", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [clearlinux]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"clearlinux\""]}, "module_options": {"name": "sysadmin-basic", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "Create the node_exporter group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter group", "when": "_node_exporter_system_group != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_group }}", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "Create the node_exporter user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter user", "when": "_node_exporter_system_user != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_user }}", "groups": "{{ _node_exporter_system_group }}", "append": true, "shell": "/usr/sbin/nologin", "system": true, "create_home": false, "home": "/"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "Download node_exporter binary to local folder", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Download node_exporter binary to local folder", "become": false, "register": "_download_binary", "until": "_download_binary is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ node_exporter_checksum }}", "mode": "0644"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "Unpack node_exporter binary", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Unpack node_exporter binary", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Propagate node_exporter binaries", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Propagate node_exporter binaries", "notify": "restart node_exporter", "when": "not ansible_check_mode"}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml\", \"index\": 5}": {"py/object": "struct4.Task", "name": "propagate locally distributed node_exporter binary", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "propagate locally distributed node_exporter binary", "when": "node_exporter_binary_local_dir | length > 0", "notify": "restart node_exporter"}, "module_options": {"src": "{{ node_exporter_binary_local_dir }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml\", \"index\": 0}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"tags": ["node_exporter_install", "node_exporter_configure", "node_exporter_run"]}, "module_options": "preflight.yml", "executable": "preflight.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml\", \"index\": 1}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "( not __node_exporter_is_installed.stat.exists ) or ( __node_exporter_current_version_output.stderr_lines[0].split(\" \")[2] != node_exporter_version ) or ( node_exporter_binary_local_dir | length > 0 )", "tags": ["node_exporter_install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml\", \"index\": 2}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": ["node_exporter_configure"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml\", \"index\": 3}": {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "tags": ["node_exporter_configure"]}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, "{\"path\": \"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml\", \"index\": 4}": {"py/object": "struct4.Task", "name": "Ensure Node Exporter is enabled on boot", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"name": "Ensure Node Exporter is enabled on boot", "become": true, "when": ["not ansible_check_mode"], "tags": ["node_exporter_run"]}, "module_options": {"daemon_reload": true, "name": "node_exporter", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}}, "taskfile_dict": {"./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml": {"py/object": "struct4.TaskFile", "name": "preflight.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "tasks": [{"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This role only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"node_exporter_systemd_version": "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Naive assertion of proper listen address", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Naive assertion of proper listen address"}, "module_options": {"that": ["':' in node_exporter_web_listen_address"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert collectors are not both disabled and enabled at the same time", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert collectors are not both disabled and enabled at the same time", "with_items": "{{ node_exporter_disabled_collectors }}"}, "module_options": {"that": ["item not in node_exporter_enabled_collectors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that TLS key and cert path are set", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert path are set"}, "module_options": {"that": ["node_exporter_tls_server_config.cert_file is defined", "node_exporter_tls_server_config.key_file is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of TLS cert file", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS cert file", "register": "__node_exporter_cert_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.cert_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of TLS key file", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS key file", "register": "__node_exporter_key_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.key_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that TLS key and cert are present", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert are present"}, "module_options": {"that": ["{{ __node_exporter_cert_file.stat.exists }}", "{{ __node_exporter_key_file.stat.exists }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if node_exporter is installed", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check if node_exporter is installed", "register": "__node_exporter_is_installed", "check_mode": false, "tags": ["node_exporter_install"]}, "module_options": {"path": "{{ _node_exporter_binary_install_dir }}/node_exporter"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather currently installed node_exporter version (if any)", "module": "command", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Gather currently installed node_exporter version (if any)", "args": {"warn": false}, "changed_when": false, "register": "__node_exporter_current_version_output", "check_mode": false, "when": "__node_exporter_is_installed.stat.exists", "tags": ["node_exporter_install", "skip_ansible_lint"]}, "module_options": "{{ _node_exporter_binary_install_dir }}/node_exporter --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/node_exporter/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"node_exporter_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum list from github", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum list from github", "run_once": true}, "module_options": {"_checksums": "{{ lookup('url', 'https://github.com/prometheus/node_exporter/releases/download/v' + node_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ _checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"node_exporter_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml": {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy the node_exporter systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter systemd service file", "notify": "restart node_exporter"}, "module_options": {"src": "node_exporter.service.j2", "dest": "/etc/systemd/system/node_exporter.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create node_exporter config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create node_exporter config directory"}, "module_options": {"path": "/etc/node_exporter", "state": "directory", "owner": "root", "group": "root", "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the node_exporter config file", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter config file", "notify": "restart node_exporter"}, "module_options": {"src": "config.yaml.j2", "dest": "/etc/node_exporter/config.yaml", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create textfile collector dir", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create textfile collector dir", "when": "node_exporter_textfile_dir | length > 0"}, "module_options": {"path": "{{ node_exporter_textfile_dir }}", "state": "directory", "owner": "{{ _node_exporter_system_user }}", "group": "{{ _node_exporter_system_group }}", "recurse": true, "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow node_exporter port in SELinux on RedHat OS family", "module": "seport", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Allow node_exporter port in SELinux on RedHat OS family", "when": ["ansible_version.full is version_compare('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ node_exporter_web_listen_address.split(':')[-1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml": {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install selinux python packages [RHEL]", "module": "package", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [RHEL]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["(ansible_distribution | lower == \"redhat\") or (ansible_distribution | lower == \"centos\")"]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux python packages [Fedora]", "module": "package", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [Fedora]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"fedora\""]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux python packages [clearlinux]", "module": "package", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [clearlinux]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"clearlinux\""]}, "module_options": {"name": "sysadmin-basic", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml": {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the node_exporter group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter group", "when": "_node_exporter_system_group != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_group }}", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the node_exporter user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter user", "when": "_node_exporter_system_user != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_user }}", "groups": "{{ _node_exporter_system_group }}", "append": true, "shell": "/usr/sbin/nologin", "system": true, "create_home": false, "home": "/"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download node_exporter binary to local folder", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Download node_exporter binary to local folder", "become": false, "register": "_download_binary", "until": "_download_binary is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ node_exporter_checksum }}", "mode": "0644"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unpack node_exporter binary", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Unpack node_exporter binary", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Propagate node_exporter binaries", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Propagate node_exporter binaries", "notify": "restart node_exporter", "when": "not ansible_check_mode"}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate locally distributed node_exporter binary", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "propagate locally distributed node_exporter binary", "when": "node_exporter_binary_local_dir | length > 0", "notify": "restart node_exporter"}, "module_options": {"src": "{{ node_exporter_binary_local_dir }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml": {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"tags": ["node_exporter_install", "node_exporter_configure", "node_exporter_run"]}, "module_options": "preflight.yml", "executable": "preflight.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "( not __node_exporter_is_installed.stat.exists ) or ( __node_exporter_current_version_output.stderr_lines[0].split(\" \")[2] != node_exporter_version ) or ( node_exporter_binary_local_dir | length > 0 )", "tags": ["node_exporter_install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": ["node_exporter_configure"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "tags": ["node_exporter_configure"]}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Node Exporter is enabled on boot", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"name": "Ensure Node Exporter is enabled on boot", "become": true, "when": ["not ansible_check_mode"], "tags": ["node_exporter_run"]}, "module_options": {"daemon_reload": true, "name": "node_exporter", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}}, "role_dict": {"cloudalchemy.node_exporter": {"py/object": "struct4.Role", "name": "cloudalchemy.node_exporter", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter", "fqcn": "cloudalchemy.node_exporter", "collection": "", "taskfiles": [{"py/object": "struct4.TaskFile", "name": "preflight.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "tasks": [{"py/object": "struct4.Task", "name": "Assert usage of systemd as an init system", "module": "assert", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert usage of systemd as an init system"}, "module_options": {"that": "ansible_service_mgr == 'systemd'", "msg": "This role only works with systemd"}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get systemd version", "module": "command", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get systemd version", "changed_when": false, "check_mode": false, "register": "__systemd_version", "tags": ["skip_ansible_lint"]}, "module_options": "systemctl --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set systemd version fact", "module": "set_fact", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set systemd version fact"}, "module_options": {"node_exporter_systemd_version": "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Naive assertion of proper listen address", "module": "assert", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Naive assertion of proper listen address"}, "module_options": {"that": ["':' in node_exporter_web_listen_address"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert collectors are not both disabled and enabled at the same time", "module": "assert", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert collectors are not both disabled and enabled at the same time", "with_items": "{{ node_exporter_disabled_collectors }}"}, "module_options": {"that": ["item not in node_exporter_enabled_collectors"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that TLS key and cert path are set", "module": "assert", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert path are set"}, "module_options": {"that": ["node_exporter_tls_server_config.cert_file is defined", "node_exporter_tls_server_config.key_file is defined"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of TLS cert file", "module": "stat", "index": 6, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS cert file", "register": "__node_exporter_cert_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.cert_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check existence of TLS key file", "module": "stat", "index": 7, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check existence of TLS key file", "register": "__node_exporter_key_file"}, "module_options": {"path": "{{ node_exporter_tls_server_config.key_file }}"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Assert that TLS key and cert are present", "module": "assert", "index": 8, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Assert that TLS key and cert are present"}, "module_options": {"that": ["{{ __node_exporter_cert_file.stat.exists }}", "{{ __node_exporter_key_file.stat.exists }}"]}, "executable": "assert", "executable_type": "Module", "fqcn": "ansible.builtin.assert", "annotations": {}}, {"py/object": "struct4.Task", "name": "Check if node_exporter is installed", "module": "stat", "index": 9, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Check if node_exporter is installed", "register": "__node_exporter_is_installed", "check_mode": false, "tags": ["node_exporter_install"]}, "module_options": {"path": "{{ _node_exporter_binary_install_dir }}/node_exporter"}, "executable": "stat", "executable_type": "Module", "fqcn": "ansible.builtin.stat", "annotations": {}}, {"py/object": "struct4.Task", "name": "Gather currently installed node_exporter version (if any)", "module": "command", "index": 10, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Gather currently installed node_exporter version (if any)", "args": {"warn": false}, "changed_when": false, "register": "__node_exporter_current_version_output", "check_mode": false, "when": "__node_exporter_is_installed.stat.exists", "tags": ["node_exporter_install", "skip_ansible_lint"]}, "module_options": "{{ _node_exporter_binary_install_dir }}/node_exporter --version", "executable": "command", "executable_type": "Module", "fqcn": "ansible.builtin.command", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get latest release", "module": "uri", "index": 11, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get latest release", "no_log": "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}", "register": "_latest_release", "until": "_latest_release.status == 200", "retries": 5}, "module_options": {"url": "https://api.github.com/repos/prometheus/node_exporter/releases/latest", "method": "GET", "return_content": true, "status_code": 200, "body_format": "json", "user": "{{ lookup('env', 'GH_USER') | default(omit) }}", "password": "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"}, "executable": "uri", "executable_type": "Module", "fqcn": "ansible.builtin.uri", "annotations": {}}, {"py/object": "struct4.Task", "name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}", "module": "set_fact", "index": 12, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Set node_exporter version to {{ _latest_release.json.tag_name[1:] }}"}, "module_options": {"node_exporter_version": "{{ _latest_release.json.tag_name[1:] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum list from github", "module": "set_fact", "index": 13, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum list from github", "run_once": true}, "module_options": {"_checksums": "{{ lookup('url', 'https://github.com/prometheus/node_exporter/releases/download/v' + node_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}, {"py/object": "struct4.Task", "name": "Get checksum for {{ go_arch }} architecture", "module": "set_fact", "index": 14, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/preflight.yml", "options": {"name": "Get checksum for {{ go_arch }} architecture", "with_items": "{{ _checksums }}", "when": ["('linux-' + go_arch + '.tar.gz') in item"]}, "module_options": {"node_exporter_checksum": "{{ item.split(' ')[0] }}"}, "executable": "set_fact", "executable_type": "Module", "fqcn": "ansible.builtin.set_fact", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "configure.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "tasks": [{"py/object": "struct4.Task", "name": "Copy the node_exporter systemd service file", "module": "template", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter systemd service file", "notify": "restart node_exporter"}, "module_options": {"src": "node_exporter.service.j2", "dest": "/etc/systemd/system/node_exporter.service", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create node_exporter config directory", "module": "file", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create node_exporter config directory"}, "module_options": {"path": "/etc/node_exporter", "state": "directory", "owner": "root", "group": "root", "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Copy the node_exporter config file", "module": "template", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Copy the node_exporter config file", "notify": "restart node_exporter"}, "module_options": {"src": "config.yaml.j2", "dest": "/etc/node_exporter/config.yaml", "owner": "root", "group": "root", "mode": 420}, "executable": "template", "executable_type": "Module", "fqcn": "ansible.builtin.template", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create textfile collector dir", "module": "file", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Create textfile collector dir", "when": "node_exporter_textfile_dir | length > 0"}, "module_options": {"path": "{{ node_exporter_textfile_dir }}", "state": "directory", "owner": "{{ _node_exporter_system_user }}", "group": "{{ _node_exporter_system_group }}", "recurse": true, "mode": "u+rwX,g+rwX,o=rX"}, "executable": "file", "executable_type": "Module", "fqcn": "ansible.builtin.file", "annotations": {}}, {"py/object": "struct4.Task", "name": "Allow node_exporter port in SELinux on RedHat OS family", "module": "seport", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/configure.yml", "options": {"name": "Allow node_exporter port in SELinux on RedHat OS family", "when": ["ansible_version.full is version_compare('2.4', '>=')", "ansible_selinux.status == \"enabled\""]}, "module_options": {"ports": "{{ node_exporter_web_listen_address.split(':')[-1] }}", "proto": "tcp", "setype": "http_port_t", "state": "present"}, "executable": "seport", "executable_type": "Module", "fqcn": "", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "selinux.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "tasks": [{"py/object": "struct4.Task", "name": "Install selinux python packages [RHEL]", "module": "package", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [RHEL]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["(ansible_distribution | lower == \"redhat\") or (ansible_distribution | lower == \"centos\")"]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux python packages [Fedora]", "module": "package", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [Fedora]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"fedora\""]}, "module_options": {"name": ["{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('libselinux-python','python3-libselinux') }}", "{{ ( (ansible_facts.distribution_major_version | int) < 29) | ternary('policycoreutils-python','python3-policycoreutils') }}"], "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}, {"py/object": "struct4.Task", "name": "Install selinux python packages [clearlinux]", "module": "package", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/selinux.yml", "options": {"name": "Install selinux python packages [clearlinux]", "register": "_install_selinux_packages", "until": "_install_selinux_packages is success", "retries": 5, "delay": 2, "when": ["ansible_distribution | lower == \"clearlinux\""]}, "module_options": {"name": "sysadmin-basic", "state": "present"}, "executable": "package", "executable_type": "Module", "fqcn": "ansible.builtin.package", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "install.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "tasks": [{"py/object": "struct4.Task", "name": "Create the node_exporter group", "module": "group", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter group", "when": "_node_exporter_system_group != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_group }}", "state": "present", "system": true}, "executable": "group", "executable_type": "Module", "fqcn": "ansible.builtin.group", "annotations": {}}, {"py/object": "struct4.Task", "name": "Create the node_exporter user", "module": "user", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Create the node_exporter user", "when": "_node_exporter_system_user != \"root\""}, "module_options": {"name": "{{ _node_exporter_system_user }}", "groups": "{{ _node_exporter_system_group }}", "append": true, "shell": "/usr/sbin/nologin", "system": true, "create_home": false, "home": "/"}, "executable": "user", "executable_type": "Module", "fqcn": "ansible.builtin.user", "annotations": {}}, {"py/object": "struct4.Task", "name": "Download node_exporter binary to local folder", "module": "get_url", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Download node_exporter binary to local folder", "become": false, "register": "_download_binary", "until": "_download_binary is succeeded", "retries": 5, "delay": 2, "delegate_to": "localhost", "check_mode": false}, "module_options": {"url": "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "checksum": "sha256:{{ node_exporter_checksum }}", "mode": "0644"}, "executable": "get_url", "executable_type": "Module", "fqcn": "ansible.builtin.get_url", "annotations": {}}, {"py/object": "struct4.Task", "name": "Unpack node_exporter binary", "module": "unarchive", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Unpack node_exporter binary", "become": false, "delegate_to": "localhost", "check_mode": false}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz", "dest": "/tmp", "creates": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"}, "executable": "unarchive", "executable_type": "Module", "fqcn": "ansible.builtin.unarchive", "annotations": {}}, {"py/object": "struct4.Task", "name": "Propagate node_exporter binaries", "module": "copy", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "Propagate node_exporter binaries", "notify": "restart node_exporter", "when": "not ansible_check_mode"}, "module_options": {"src": "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}, {"py/object": "struct4.Task", "name": "propagate locally distributed node_exporter binary", "module": "copy", "index": 5, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/install.yml", "options": {"name": "propagate locally distributed node_exporter binary", "when": "node_exporter_binary_local_dir | length > 0", "notify": "restart node_exporter"}, "module_options": {"src": "{{ node_exporter_binary_local_dir }}/node_exporter", "dest": "{{ _node_exporter_binary_install_dir }}/node_exporter", "mode": 493, "owner": "root", "group": "root"}, "executable": "copy", "executable_type": "Module", "fqcn": "ansible.builtin.copy", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}, {"py/object": "struct4.TaskFile", "name": "main.yml", "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "tasks": [{"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 0, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"tags": ["node_exporter_install", "node_exporter_configure", "node_exporter_run"]}, "module_options": "preflight.yml", "executable": "preflight.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 1, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "( not __node_exporter_is_installed.stat.exists ) or ( __node_exporter_current_version_output.stderr_lines[0].split(\" \")[2] != node_exporter_version ) or ( node_exporter_binary_local_dir | length > 0 )", "tags": ["node_exporter_install"]}, "module_options": "install.yml", "executable": "install.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 2, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "when": "ansible_selinux.status == \"enabled\"", "tags": ["node_exporter_configure"]}, "module_options": "selinux.yml", "executable": "selinux.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "", "module": "import_tasks", "index": 3, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"become": true, "tags": ["node_exporter_configure"]}, "module_options": "configure.yml", "executable": "configure.yml", "executable_type": "TaskFile", "fqcn": "", "annotations": {}}, {"py/object": "struct4.Task", "name": "Ensure Node Exporter is enabled on boot", "module": "systemd", "index": 4, "defined_in": "./role-test/testdata/cloudalchemy-node_exporter/cloudalchemy.node_exporter/tasks/main.yml", "options": {"name": "Ensure Node Exporter is enabled on boot", "become": true, "when": ["not ansible_check_mode"], "tags": ["node_exporter_run"]}, "module_options": {"daemon_reload": true, "name": "node_exporter", "enabled": true, "state": "started"}, "executable": "systemd", "executable_type": "Module", "fqcn": "ansible.builtin.systemd", "annotations": {}}], "role": "cloudalchemy.node_exporter", "used_in": [], "annotations": {}}], "modules": [], "source": "", "annotations": {}, "used_in": []}}, "annotations": {}}